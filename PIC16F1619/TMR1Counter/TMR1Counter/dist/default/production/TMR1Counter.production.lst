

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Thu Jun 01 14:57:33 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F1619
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2,group=3
    15                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text8,local,class=CODE,merge=1,delta=2,group=3
    22                           	psect	text9,local,class=CODE,merge=1,delta=2,group=3
    23                           	psect	text10,local,class=CODE,merge=1,delta=2,group=3
    24                           	psect	text11,local,class=CODE,merge=1,delta=2,group=3
    25                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2
    36                           	psect	text23,local,class=CODE,merge=1,delta=2
    37                           	psect	text24,local,class=CODE,merge=1,delta=2
    38                           	psect	text25,local,class=CODE,merge=1,delta=2
    39                           	psect	intentry,global,class=CODE,delta=2
    40                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    41                           	dabs	1,0x7E,2
    42     0000                     
    43                           ; Generated 09/02/2023 GMT
    44                           ; 
    45                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    46                           ; All rights reserved.
    47                           ; 
    48                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    49                           ; 
    50                           ; Redistribution and use in source and binary forms, with or without modification, are
    51                           ; permitted provided that the following conditions are met:
    52                           ; 
    53                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    54                           ;        conditions and the following disclaimer.
    55                           ; 
    56                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    57                           ;        of conditions and the following disclaimer in the documentation and/or other
    58                           ;        materials provided with the distribution. Publication is not required when
    59                           ;        this file is used in an embedded application.
    60                           ; 
    61                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    62                           ;        software without specific prior written permission.
    63                           ; 
    64                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    65                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    66                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    67                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    68                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    69                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    70                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    71                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    72                           ; 
    73                           ; 
    74                           ; Code-generator required, PIC16F1619 Definitions
    75                           ; 
    76                           ; SFR Addresses
    77     0000                     	;# 
    78     0001                     	;# 
    79     0002                     	;# 
    80     0003                     	;# 
    81     0004                     	;# 
    82     0005                     	;# 
    83     0006                     	;# 
    84     0007                     	;# 
    85     0008                     	;# 
    86     0009                     	;# 
    87     000A                     	;# 
    88     000B                     	;# 
    89     000C                     	;# 
    90     000D                     	;# 
    91     000E                     	;# 
    92     0010                     	;# 
    93     0011                     	;# 
    94     0012                     	;# 
    95     0013                     	;# 
    96     0014                     	;# 
    97     0015                     	;# 
    98     0016                     	;# 
    99     0016                     	;# 
   100     0017                     	;# 
   101     0018                     	;# 
   102     0019                     	;# 
   103     001A                     	;# 
   104     001A                     	;# 
   105     001B                     	;# 
   106     001B                     	;# 
   107     001C                     	;# 
   108     001D                     	;# 
   109     001E                     	;# 
   110     001F                     	;# 
   111     008C                     	;# 
   112     008D                     	;# 
   113     008E                     	;# 
   114     0090                     	;# 
   115     0091                     	;# 
   116     0092                     	;# 
   117     0093                     	;# 
   118     0094                     	;# 
   119     0095                     	;# 
   120     0096                     	;# 
   121     0098                     	;# 
   122     0099                     	;# 
   123     009A                     	;# 
   124     009B                     	;# 
   125     009B                     	;# 
   126     009C                     	;# 
   127     009D                     	;# 
   128     009E                     	;# 
   129     009F                     	;# 
   130     010C                     	;# 
   131     010D                     	;# 
   132     010E                     	;# 
   133     0111                     	;# 
   134     0112                     	;# 
   135     0113                     	;# 
   136     0114                     	;# 
   137     0115                     	;# 
   138     0116                     	;# 
   139     0117                     	;# 
   140     0118                     	;# 
   141     0119                     	;# 
   142     011C                     	;# 
   143     018C                     	;# 
   144     018D                     	;# 
   145     018E                     	;# 
   146     0191                     	;# 
   147     0191                     	;# 
   148     0192                     	;# 
   149     0193                     	;# 
   150     0193                     	;# 
   151     0194                     	;# 
   152     0195                     	;# 
   153     0196                     	;# 
   154     0197                     	;# 
   155     0199                     	;# 
   156     0199                     	;# 
   157     0199                     	;# 
   158     019A                     	;# 
   159     019A                     	;# 
   160     019A                     	;# 
   161     019B                     	;# 
   162     019B                     	;# 
   163     019B                     	;# 
   164     019B                     	;# 
   165     019B                     	;# 
   166     019C                     	;# 
   167     019C                     	;# 
   168     019C                     	;# 
   169     019D                     	;# 
   170     019D                     	;# 
   171     019D                     	;# 
   172     019E                     	;# 
   173     019E                     	;# 
   174     019E                     	;# 
   175     019F                     	;# 
   176     019F                     	;# 
   177     019F                     	;# 
   178     019F                     	;# 
   179     019F                     	;# 
   180     020C                     	;# 
   181     020D                     	;# 
   182     020E                     	;# 
   183     0211                     	;# 
   184     0211                     	;# 
   185     0212                     	;# 
   186     0212                     	;# 
   187     0213                     	;# 
   188     0213                     	;# 
   189     0214                     	;# 
   190     0214                     	;# 
   191     0215                     	;# 
   192     0215                     	;# 
   193     0215                     	;# 
   194     0215                     	;# 
   195     0216                     	;# 
   196     0216                     	;# 
   197     0217                     	;# 
   198     0217                     	;# 
   199     028C                     	;# 
   200     028D                     	;# 
   201     028E                     	;# 
   202     0291                     	;# 
   203     0291                     	;# 
   204     0292                     	;# 
   205     0293                     	;# 
   206     0294                     	;# 
   207     0298                     	;# 
   208     0298                     	;# 
   209     0299                     	;# 
   210     029A                     	;# 
   211     029B                     	;# 
   212     029E                     	;# 
   213     030C                     	;# 
   214     030D                     	;# 
   215     030E                     	;# 
   216     038C                     	;# 
   217     038D                     	;# 
   218     038E                     	;# 
   219     0391                     	;# 
   220     0392                     	;# 
   221     0393                     	;# 
   222     0394                     	;# 
   223     0395                     	;# 
   224     0396                     	;# 
   225     0397                     	;# 
   226     0398                     	;# 
   227     0399                     	;# 
   228     040E                     	;# 
   229     0413                     	;# 
   230     0413                     	;# 
   231     0414                     	;# 
   232     0414                     	;# 
   233     0415                     	;# 
   234     0416                     	;# 
   235     0417                     	;# 
   236     0418                     	;# 
   237     041A                     	;# 
   238     041A                     	;# 
   239     041B                     	;# 
   240     041B                     	;# 
   241     041C                     	;# 
   242     041D                     	;# 
   243     041E                     	;# 
   244     041F                     	;# 
   245     0493                     	;# 
   246     0494                     	;# 
   247     0495                     	;# 
   248     0496                     	;# 
   249     049A                     	;# 
   250     049B                     	;# 
   251     049C                     	;# 
   252     049D                     	;# 
   253     058C                     	;# 
   254     058C                     	;# 
   255     058D                     	;# 
   256     058E                     	;# 
   257     058E                     	;# 
   258     058F                     	;# 
   259     0590                     	;# 
   260     0590                     	;# 
   261     0591                     	;# 
   262     0592                     	;# 
   263     0592                     	;# 
   264     0593                     	;# 
   265     0594                     	;# 
   266     0594                     	;# 
   267     0595                     	;# 
   268     0596                     	;# 
   269     0596                     	;# 
   270     0597                     	;# 
   271     0598                     	;# 
   272     0599                     	;# 
   273     059A                     	;# 
   274     059B                     	;# 
   275     059B                     	;# 
   276     059C                     	;# 
   277     059D                     	;# 
   278     060C                     	;# 
   279     060C                     	;# 
   280     060D                     	;# 
   281     060E                     	;# 
   282     060F                     	;# 
   283     060F                     	;# 
   284     0610                     	;# 
   285     0611                     	;# 
   286     0612                     	;# 
   287     0613                     	;# 
   288     0614                     	;# 
   289     0617                     	;# 
   290     0617                     	;# 
   291     0618                     	;# 
   292     0619                     	;# 
   293     061A                     	;# 
   294     061A                     	;# 
   295     061B                     	;# 
   296     061C                     	;# 
   297     0691                     	;# 
   298     0692                     	;# 
   299     0693                     	;# 
   300     0694                     	;# 
   301     0695                     	;# 
   302     0696                     	;# 
   303     0697                     	;# 
   304     0699                     	;# 
   305     069A                     	;# 
   306     0711                     	;# 
   307     0712                     	;# 
   308     0713                     	;# 
   309     0714                     	;# 
   310     0715                     	;# 
   311     0718                     	;# 
   312     0718                     	;# 
   313     0719                     	;# 
   314     071A                     	;# 
   315     071A                     	;# 
   316     071B                     	;# 
   317     071C                     	;# 
   318     071D                     	;# 
   319     0791                     	;# 
   320     0791                     	;# 
   321     0792                     	;# 
   322     0793                     	;# 
   323     0793                     	;# 
   324     0794                     	;# 
   325     0795                     	;# 
   326     0795                     	;# 
   327     0796                     	;# 
   328     0797                     	;# 
   329     0797                     	;# 
   330     0798                     	;# 
   331     0799                     	;# 
   332     079A                     	;# 
   333     080C                     	;# 
   334     080C                     	;# 
   335     080D                     	;# 
   336     080E                     	;# 
   337     080E                     	;# 
   338     080F                     	;# 
   339     0810                     	;# 
   340     0810                     	;# 
   341     0811                     	;# 
   342     0812                     	;# 
   343     0812                     	;# 
   344     0813                     	;# 
   345     0814                     	;# 
   346     0815                     	;# 
   347     0816                     	;# 
   348     0817                     	;# 
   349     0818                     	;# 
   350     0819                     	;# 
   351     081A                     	;# 
   352     081A                     	;# 
   353     081B                     	;# 
   354     081C                     	;# 
   355     081C                     	;# 
   356     081D                     	;# 
   357     088C                     	;# 
   358     088D                     	;# 
   359     088E                     	;# 
   360     088F                     	;# 
   361     088F                     	;# 
   362     0890                     	;# 
   363     0891                     	;# 
   364     0892                     	;# 
   365     0893                     	;# 
   366     0893                     	;# 
   367     0894                     	;# 
   368     0895                     	;# 
   369     0896                     	;# 
   370     0897                     	;# 
   371     0897                     	;# 
   372     0898                     	;# 
   373     0899                     	;# 
   374     0D8C                     	;# 
   375     0D8C                     	;# 
   376     0D8D                     	;# 
   377     0D8E                     	;# 
   378     0D8F                     	;# 
   379     0D8F                     	;# 
   380     0D90                     	;# 
   381     0D91                     	;# 
   382     0D92                     	;# 
   383     0D92                     	;# 
   384     0D93                     	;# 
   385     0D94                     	;# 
   386     0D95                     	;# 
   387     0D95                     	;# 
   388     0D96                     	;# 
   389     0D97                     	;# 
   390     0D98                     	;# 
   391     0D99                     	;# 
   392     0D9A                     	;# 
   393     0D9B                     	;# 
   394     0D9C                     	;# 
   395     0D9D                     	;# 
   396     0D9E                     	;# 
   397     0D9E                     	;# 
   398     0D9F                     	;# 
   399     0DA0                     	;# 
   400     0DA1                     	;# 
   401     0DA1                     	;# 
   402     0DA2                     	;# 
   403     0DA3                     	;# 
   404     0DA4                     	;# 
   405     0DA4                     	;# 
   406     0DA5                     	;# 
   407     0DA6                     	;# 
   408     0DA7                     	;# 
   409     0DA7                     	;# 
   410     0DA8                     	;# 
   411     0DA9                     	;# 
   412     0DAA                     	;# 
   413     0DAB                     	;# 
   414     0DAC                     	;# 
   415     0DAD                     	;# 
   416     0DAE                     	;# 
   417     0DAF                     	;# 
   418     0E0F                     	;# 
   419     0E10                     	;# 
   420     0E11                     	;# 
   421     0E12                     	;# 
   422     0E13                     	;# 
   423     0E14                     	;# 
   424     0E15                     	;# 
   425     0E16                     	;# 
   426     0E17                     	;# 
   427     0E18                     	;# 
   428     0E19                     	;# 
   429     0E1A                     	;# 
   430     0E1B                     	;# 
   431     0E1C                     	;# 
   432     0E1D                     	;# 
   433     0E1E                     	;# 
   434     0E1F                     	;# 
   435     0E20                     	;# 
   436     0E21                     	;# 
   437     0E22                     	;# 
   438     0E23                     	;# 
   439     0E24                     	;# 
   440     0E25                     	;# 
   441     0E26                     	;# 
   442     0E27                     	;# 
   443     0E28                     	;# 
   444     0E29                     	;# 
   445     0E2A                     	;# 
   446     0E2B                     	;# 
   447     0E2C                     	;# 
   448     0E2D                     	;# 
   449     0E2E                     	;# 
   450     0E90                     	;# 
   451     0E91                     	;# 
   452     0E92                     	;# 
   453     0E94                     	;# 
   454     0E95                     	;# 
   455     0E9C                     	;# 
   456     0E9D                     	;# 
   457     0E9E                     	;# 
   458     0E9F                     	;# 
   459     0EA0                     	;# 
   460     0EA1                     	;# 
   461     0EA2                     	;# 
   462     0EA3                     	;# 
   463     0EA4                     	;# 
   464     0EA5                     	;# 
   465     0EA6                     	;# 
   466     0EA7                     	;# 
   467     0F0F                     	;# 
   468     0F10                     	;# 
   469     0F11                     	;# 
   470     0F12                     	;# 
   471     0F13                     	;# 
   472     0F14                     	;# 
   473     0F15                     	;# 
   474     0F16                     	;# 
   475     0F17                     	;# 
   476     0F18                     	;# 
   477     0F19                     	;# 
   478     0F1A                     	;# 
   479     0F1B                     	;# 
   480     0F1C                     	;# 
   481     0F1D                     	;# 
   482     0F1E                     	;# 
   483     0F1F                     	;# 
   484     0F20                     	;# 
   485     0F21                     	;# 
   486     0F22                     	;# 
   487     0F23                     	;# 
   488     0F24                     	;# 
   489     0F25                     	;# 
   490     0F26                     	;# 
   491     0F27                     	;# 
   492     0F28                     	;# 
   493     0F29                     	;# 
   494     0F2A                     	;# 
   495     0F2B                     	;# 
   496     0F2C                     	;# 
   497     0F2D                     	;# 
   498     0F2E                     	;# 
   499     0F2F                     	;# 
   500     0F30                     	;# 
   501     0F31                     	;# 
   502     0F32                     	;# 
   503     0F33                     	;# 
   504     0F34                     	;# 
   505     0F35                     	;# 
   506     0F36                     	;# 
   507     0F37                     	;# 
   508     0FE4                     	;# 
   509     0FE5                     	;# 
   510     0FE6                     	;# 
   511     0FE7                     	;# 
   512     0FE8                     	;# 
   513     0FE9                     	;# 
   514     0FEA                     	;# 
   515     0FEB                     	;# 
   516     0FED                     	;# 
   517     0FEE                     	;# 
   518     0FEF                     	;# 
   519     0000                     	;# 
   520     0001                     	;# 
   521     0002                     	;# 
   522     0003                     	;# 
   523     0004                     	;# 
   524     0005                     	;# 
   525     0006                     	;# 
   526     0007                     	;# 
   527     0008                     	;# 
   528     0009                     	;# 
   529     000A                     	;# 
   530     000B                     	;# 
   531     000C                     	;# 
   532     000D                     	;# 
   533     000E                     	;# 
   534     0010                     	;# 
   535     0011                     	;# 
   536     0012                     	;# 
   537     0013                     	;# 
   538     0014                     	;# 
   539     0015                     	;# 
   540     0016                     	;# 
   541     0016                     	;# 
   542     0017                     	;# 
   543     0018                     	;# 
   544     0019                     	;# 
   545     001A                     	;# 
   546     001A                     	;# 
   547     001B                     	;# 
   548     001B                     	;# 
   549     001C                     	;# 
   550     001D                     	;# 
   551     001E                     	;# 
   552     001F                     	;# 
   553     008C                     	;# 
   554     008D                     	;# 
   555     008E                     	;# 
   556     0090                     	;# 
   557     0091                     	;# 
   558     0092                     	;# 
   559     0093                     	;# 
   560     0094                     	;# 
   561     0095                     	;# 
   562     0096                     	;# 
   563     0098                     	;# 
   564     0099                     	;# 
   565     009A                     	;# 
   566     009B                     	;# 
   567     009B                     	;# 
   568     009C                     	;# 
   569     009D                     	;# 
   570     009E                     	;# 
   571     009F                     	;# 
   572     010C                     	;# 
   573     010D                     	;# 
   574     010E                     	;# 
   575     0111                     	;# 
   576     0112                     	;# 
   577     0113                     	;# 
   578     0114                     	;# 
   579     0115                     	;# 
   580     0116                     	;# 
   581     0117                     	;# 
   582     0118                     	;# 
   583     0119                     	;# 
   584     011C                     	;# 
   585     018C                     	;# 
   586     018D                     	;# 
   587     018E                     	;# 
   588     0191                     	;# 
   589     0191                     	;# 
   590     0192                     	;# 
   591     0193                     	;# 
   592     0193                     	;# 
   593     0194                     	;# 
   594     0195                     	;# 
   595     0196                     	;# 
   596     0197                     	;# 
   597     0199                     	;# 
   598     0199                     	;# 
   599     0199                     	;# 
   600     019A                     	;# 
   601     019A                     	;# 
   602     019A                     	;# 
   603     019B                     	;# 
   604     019B                     	;# 
   605     019B                     	;# 
   606     019B                     	;# 
   607     019B                     	;# 
   608     019C                     	;# 
   609     019C                     	;# 
   610     019C                     	;# 
   611     019D                     	;# 
   612     019D                     	;# 
   613     019D                     	;# 
   614     019E                     	;# 
   615     019E                     	;# 
   616     019E                     	;# 
   617     019F                     	;# 
   618     019F                     	;# 
   619     019F                     	;# 
   620     019F                     	;# 
   621     019F                     	;# 
   622     020C                     	;# 
   623     020D                     	;# 
   624     020E                     	;# 
   625     0211                     	;# 
   626     0211                     	;# 
   627     0212                     	;# 
   628     0212                     	;# 
   629     0213                     	;# 
   630     0213                     	;# 
   631     0214                     	;# 
   632     0214                     	;# 
   633     0215                     	;# 
   634     0215                     	;# 
   635     0215                     	;# 
   636     0215                     	;# 
   637     0216                     	;# 
   638     0216                     	;# 
   639     0217                     	;# 
   640     0217                     	;# 
   641     028C                     	;# 
   642     028D                     	;# 
   643     028E                     	;# 
   644     0291                     	;# 
   645     0291                     	;# 
   646     0292                     	;# 
   647     0293                     	;# 
   648     0294                     	;# 
   649     0298                     	;# 
   650     0298                     	;# 
   651     0299                     	;# 
   652     029A                     	;# 
   653     029B                     	;# 
   654     029E                     	;# 
   655     030C                     	;# 
   656     030D                     	;# 
   657     030E                     	;# 
   658     038C                     	;# 
   659     038D                     	;# 
   660     038E                     	;# 
   661     0391                     	;# 
   662     0392                     	;# 
   663     0393                     	;# 
   664     0394                     	;# 
   665     0395                     	;# 
   666     0396                     	;# 
   667     0397                     	;# 
   668     0398                     	;# 
   669     0399                     	;# 
   670     040E                     	;# 
   671     0413                     	;# 
   672     0413                     	;# 
   673     0414                     	;# 
   674     0414                     	;# 
   675     0415                     	;# 
   676     0416                     	;# 
   677     0417                     	;# 
   678     0418                     	;# 
   679     041A                     	;# 
   680     041A                     	;# 
   681     041B                     	;# 
   682     041B                     	;# 
   683     041C                     	;# 
   684     041D                     	;# 
   685     041E                     	;# 
   686     041F                     	;# 
   687     0493                     	;# 
   688     0494                     	;# 
   689     0495                     	;# 
   690     0496                     	;# 
   691     049A                     	;# 
   692     049B                     	;# 
   693     049C                     	;# 
   694     049D                     	;# 
   695     058C                     	;# 
   696     058C                     	;# 
   697     058D                     	;# 
   698     058E                     	;# 
   699     058E                     	;# 
   700     058F                     	;# 
   701     0590                     	;# 
   702     0590                     	;# 
   703     0591                     	;# 
   704     0592                     	;# 
   705     0592                     	;# 
   706     0593                     	;# 
   707     0594                     	;# 
   708     0594                     	;# 
   709     0595                     	;# 
   710     0596                     	;# 
   711     0596                     	;# 
   712     0597                     	;# 
   713     0598                     	;# 
   714     0599                     	;# 
   715     059A                     	;# 
   716     059B                     	;# 
   717     059B                     	;# 
   718     059C                     	;# 
   719     059D                     	;# 
   720     060C                     	;# 
   721     060C                     	;# 
   722     060D                     	;# 
   723     060E                     	;# 
   724     060F                     	;# 
   725     060F                     	;# 
   726     0610                     	;# 
   727     0611                     	;# 
   728     0612                     	;# 
   729     0613                     	;# 
   730     0614                     	;# 
   731     0617                     	;# 
   732     0617                     	;# 
   733     0618                     	;# 
   734     0619                     	;# 
   735     061A                     	;# 
   736     061A                     	;# 
   737     061B                     	;# 
   738     061C                     	;# 
   739     0691                     	;# 
   740     0692                     	;# 
   741     0693                     	;# 
   742     0694                     	;# 
   743     0695                     	;# 
   744     0696                     	;# 
   745     0697                     	;# 
   746     0699                     	;# 
   747     069A                     	;# 
   748     0711                     	;# 
   749     0712                     	;# 
   750     0713                     	;# 
   751     0714                     	;# 
   752     0715                     	;# 
   753     0718                     	;# 
   754     0718                     	;# 
   755     0719                     	;# 
   756     071A                     	;# 
   757     071A                     	;# 
   758     071B                     	;# 
   759     071C                     	;# 
   760     071D                     	;# 
   761     0791                     	;# 
   762     0791                     	;# 
   763     0792                     	;# 
   764     0793                     	;# 
   765     0793                     	;# 
   766     0794                     	;# 
   767     0795                     	;# 
   768     0795                     	;# 
   769     0796                     	;# 
   770     0797                     	;# 
   771     0797                     	;# 
   772     0798                     	;# 
   773     0799                     	;# 
   774     079A                     	;# 
   775     080C                     	;# 
   776     080C                     	;# 
   777     080D                     	;# 
   778     080E                     	;# 
   779     080E                     	;# 
   780     080F                     	;# 
   781     0810                     	;# 
   782     0810                     	;# 
   783     0811                     	;# 
   784     0812                     	;# 
   785     0812                     	;# 
   786     0813                     	;# 
   787     0814                     	;# 
   788     0815                     	;# 
   789     0816                     	;# 
   790     0817                     	;# 
   791     0818                     	;# 
   792     0819                     	;# 
   793     081A                     	;# 
   794     081A                     	;# 
   795     081B                     	;# 
   796     081C                     	;# 
   797     081C                     	;# 
   798     081D                     	;# 
   799     088C                     	;# 
   800     088D                     	;# 
   801     088E                     	;# 
   802     088F                     	;# 
   803     088F                     	;# 
   804     0890                     	;# 
   805     0891                     	;# 
   806     0892                     	;# 
   807     0893                     	;# 
   808     0893                     	;# 
   809     0894                     	;# 
   810     0895                     	;# 
   811     0896                     	;# 
   812     0897                     	;# 
   813     0897                     	;# 
   814     0898                     	;# 
   815     0899                     	;# 
   816     0D8C                     	;# 
   817     0D8C                     	;# 
   818     0D8D                     	;# 
   819     0D8E                     	;# 
   820     0D8F                     	;# 
   821     0D8F                     	;# 
   822     0D90                     	;# 
   823     0D91                     	;# 
   824     0D92                     	;# 
   825     0D92                     	;# 
   826     0D93                     	;# 
   827     0D94                     	;# 
   828     0D95                     	;# 
   829     0D95                     	;# 
   830     0D96                     	;# 
   831     0D97                     	;# 
   832     0D98                     	;# 
   833     0D99                     	;# 
   834     0D9A                     	;# 
   835     0D9B                     	;# 
   836     0D9C                     	;# 
   837     0D9D                     	;# 
   838     0D9E                     	;# 
   839     0D9E                     	;# 
   840     0D9F                     	;# 
   841     0DA0                     	;# 
   842     0DA1                     	;# 
   843     0DA1                     	;# 
   844     0DA2                     	;# 
   845     0DA3                     	;# 
   846     0DA4                     	;# 
   847     0DA4                     	;# 
   848     0DA5                     	;# 
   849     0DA6                     	;# 
   850     0DA7                     	;# 
   851     0DA7                     	;# 
   852     0DA8                     	;# 
   853     0DA9                     	;# 
   854     0DAA                     	;# 
   855     0DAB                     	;# 
   856     0DAC                     	;# 
   857     0DAD                     	;# 
   858     0DAE                     	;# 
   859     0DAF                     	;# 
   860     0E0F                     	;# 
   861     0E10                     	;# 
   862     0E11                     	;# 
   863     0E12                     	;# 
   864     0E13                     	;# 
   865     0E14                     	;# 
   866     0E15                     	;# 
   867     0E16                     	;# 
   868     0E17                     	;# 
   869     0E18                     	;# 
   870     0E19                     	;# 
   871     0E1A                     	;# 
   872     0E1B                     	;# 
   873     0E1C                     	;# 
   874     0E1D                     	;# 
   875     0E1E                     	;# 
   876     0E1F                     	;# 
   877     0E20                     	;# 
   878     0E21                     	;# 
   879     0E22                     	;# 
   880     0E23                     	;# 
   881     0E24                     	;# 
   882     0E25                     	;# 
   883     0E26                     	;# 
   884     0E27                     	;# 
   885     0E28                     	;# 
   886     0E29                     	;# 
   887     0E2A                     	;# 
   888     0E2B                     	;# 
   889     0E2C                     	;# 
   890     0E2D                     	;# 
   891     0E2E                     	;# 
   892     0E90                     	;# 
   893     0E91                     	;# 
   894     0E92                     	;# 
   895     0E94                     	;# 
   896     0E95                     	;# 
   897     0E9C                     	;# 
   898     0E9D                     	;# 
   899     0E9E                     	;# 
   900     0E9F                     	;# 
   901     0EA0                     	;# 
   902     0EA1                     	;# 
   903     0EA2                     	;# 
   904     0EA3                     	;# 
   905     0EA4                     	;# 
   906     0EA5                     	;# 
   907     0EA6                     	;# 
   908     0EA7                     	;# 
   909     0F0F                     	;# 
   910     0F10                     	;# 
   911     0F11                     	;# 
   912     0F12                     	;# 
   913     0F13                     	;# 
   914     0F14                     	;# 
   915     0F15                     	;# 
   916     0F16                     	;# 
   917     0F17                     	;# 
   918     0F18                     	;# 
   919     0F19                     	;# 
   920     0F1A                     	;# 
   921     0F1B                     	;# 
   922     0F1C                     	;# 
   923     0F1D                     	;# 
   924     0F1E                     	;# 
   925     0F1F                     	;# 
   926     0F20                     	;# 
   927     0F21                     	;# 
   928     0F22                     	;# 
   929     0F23                     	;# 
   930     0F24                     	;# 
   931     0F25                     	;# 
   932     0F26                     	;# 
   933     0F27                     	;# 
   934     0F28                     	;# 
   935     0F29                     	;# 
   936     0F2A                     	;# 
   937     0F2B                     	;# 
   938     0F2C                     	;# 
   939     0F2D                     	;# 
   940     0F2E                     	;# 
   941     0F2F                     	;# 
   942     0F30                     	;# 
   943     0F31                     	;# 
   944     0F32                     	;# 
   945     0F33                     	;# 
   946     0F34                     	;# 
   947     0F35                     	;# 
   948     0F36                     	;# 
   949     0F37                     	;# 
   950     0FE4                     	;# 
   951     0FE5                     	;# 
   952     0FE6                     	;# 
   953     0FE7                     	;# 
   954     0FE8                     	;# 
   955     0FE9                     	;# 
   956     0FEA                     	;# 
   957     0FEB                     	;# 
   958     0FED                     	;# 
   959     0FEE                     	;# 
   960     0FEF                     	;# 
   961     0000                     	;# 
   962     0001                     	;# 
   963     0002                     	;# 
   964     0003                     	;# 
   965     0004                     	;# 
   966     0005                     	;# 
   967     0006                     	;# 
   968     0007                     	;# 
   969     0008                     	;# 
   970     0009                     	;# 
   971     000A                     	;# 
   972     000B                     	;# 
   973     000C                     	;# 
   974     000D                     	;# 
   975     000E                     	;# 
   976     0010                     	;# 
   977     0011                     	;# 
   978     0012                     	;# 
   979     0013                     	;# 
   980     0014                     	;# 
   981     0015                     	;# 
   982     0016                     	;# 
   983     0016                     	;# 
   984     0017                     	;# 
   985     0018                     	;# 
   986     0019                     	;# 
   987     001A                     	;# 
   988     001A                     	;# 
   989     001B                     	;# 
   990     001B                     	;# 
   991     001C                     	;# 
   992     001D                     	;# 
   993     001E                     	;# 
   994     001F                     	;# 
   995     008C                     	;# 
   996     008D                     	;# 
   997     008E                     	;# 
   998     0090                     	;# 
   999     0091                     	;# 
  1000     0092                     	;# 
  1001     0093                     	;# 
  1002     0094                     	;# 
  1003     0095                     	;# 
  1004     0096                     	;# 
  1005     0098                     	;# 
  1006     0099                     	;# 
  1007     009A                     	;# 
  1008     009B                     	;# 
  1009     009B                     	;# 
  1010     009C                     	;# 
  1011     009D                     	;# 
  1012     009E                     	;# 
  1013     009F                     	;# 
  1014     010C                     	;# 
  1015     010D                     	;# 
  1016     010E                     	;# 
  1017     0111                     	;# 
  1018     0112                     	;# 
  1019     0113                     	;# 
  1020     0114                     	;# 
  1021     0115                     	;# 
  1022     0116                     	;# 
  1023     0117                     	;# 
  1024     0118                     	;# 
  1025     0119                     	;# 
  1026     011C                     	;# 
  1027     018C                     	;# 
  1028     018D                     	;# 
  1029     018E                     	;# 
  1030     0191                     	;# 
  1031     0191                     	;# 
  1032     0192                     	;# 
  1033     0193                     	;# 
  1034     0193                     	;# 
  1035     0194                     	;# 
  1036     0195                     	;# 
  1037     0196                     	;# 
  1038     0197                     	;# 
  1039     0199                     	;# 
  1040     0199                     	;# 
  1041     0199                     	;# 
  1042     019A                     	;# 
  1043     019A                     	;# 
  1044     019A                     	;# 
  1045     019B                     	;# 
  1046     019B                     	;# 
  1047     019B                     	;# 
  1048     019B                     	;# 
  1049     019B                     	;# 
  1050     019C                     	;# 
  1051     019C                     	;# 
  1052     019C                     	;# 
  1053     019D                     	;# 
  1054     019D                     	;# 
  1055     019D                     	;# 
  1056     019E                     	;# 
  1057     019E                     	;# 
  1058     019E                     	;# 
  1059     019F                     	;# 
  1060     019F                     	;# 
  1061     019F                     	;# 
  1062     019F                     	;# 
  1063     019F                     	;# 
  1064     020C                     	;# 
  1065     020D                     	;# 
  1066     020E                     	;# 
  1067     0211                     	;# 
  1068     0211                     	;# 
  1069     0212                     	;# 
  1070     0212                     	;# 
  1071     0213                     	;# 
  1072     0213                     	;# 
  1073     0214                     	;# 
  1074     0214                     	;# 
  1075     0215                     	;# 
  1076     0215                     	;# 
  1077     0215                     	;# 
  1078     0215                     	;# 
  1079     0216                     	;# 
  1080     0216                     	;# 
  1081     0217                     	;# 
  1082     0217                     	;# 
  1083     028C                     	;# 
  1084     028D                     	;# 
  1085     028E                     	;# 
  1086     0291                     	;# 
  1087     0291                     	;# 
  1088     0292                     	;# 
  1089     0293                     	;# 
  1090     0294                     	;# 
  1091     0298                     	;# 
  1092     0298                     	;# 
  1093     0299                     	;# 
  1094     029A                     	;# 
  1095     029B                     	;# 
  1096     029E                     	;# 
  1097     030C                     	;# 
  1098     030D                     	;# 
  1099     030E                     	;# 
  1100     038C                     	;# 
  1101     038D                     	;# 
  1102     038E                     	;# 
  1103     0391                     	;# 
  1104     0392                     	;# 
  1105     0393                     	;# 
  1106     0394                     	;# 
  1107     0395                     	;# 
  1108     0396                     	;# 
  1109     0397                     	;# 
  1110     0398                     	;# 
  1111     0399                     	;# 
  1112     040E                     	;# 
  1113     0413                     	;# 
  1114     0413                     	;# 
  1115     0414                     	;# 
  1116     0414                     	;# 
  1117     0415                     	;# 
  1118     0416                     	;# 
  1119     0417                     	;# 
  1120     0418                     	;# 
  1121     041A                     	;# 
  1122     041A                     	;# 
  1123     041B                     	;# 
  1124     041B                     	;# 
  1125     041C                     	;# 
  1126     041D                     	;# 
  1127     041E                     	;# 
  1128     041F                     	;# 
  1129     0493                     	;# 
  1130     0494                     	;# 
  1131     0495                     	;# 
  1132     0496                     	;# 
  1133     049A                     	;# 
  1134     049B                     	;# 
  1135     049C                     	;# 
  1136     049D                     	;# 
  1137     058C                     	;# 
  1138     058C                     	;# 
  1139     058D                     	;# 
  1140     058E                     	;# 
  1141     058E                     	;# 
  1142     058F                     	;# 
  1143     0590                     	;# 
  1144     0590                     	;# 
  1145     0591                     	;# 
  1146     0592                     	;# 
  1147     0592                     	;# 
  1148     0593                     	;# 
  1149     0594                     	;# 
  1150     0594                     	;# 
  1151     0595                     	;# 
  1152     0596                     	;# 
  1153     0596                     	;# 
  1154     0597                     	;# 
  1155     0598                     	;# 
  1156     0599                     	;# 
  1157     059A                     	;# 
  1158     059B                     	;# 
  1159     059B                     	;# 
  1160     059C                     	;# 
  1161     059D                     	;# 
  1162     060C                     	;# 
  1163     060C                     	;# 
  1164     060D                     	;# 
  1165     060E                     	;# 
  1166     060F                     	;# 
  1167     060F                     	;# 
  1168     0610                     	;# 
  1169     0611                     	;# 
  1170     0612                     	;# 
  1171     0613                     	;# 
  1172     0614                     	;# 
  1173     0617                     	;# 
  1174     0617                     	;# 
  1175     0618                     	;# 
  1176     0619                     	;# 
  1177     061A                     	;# 
  1178     061A                     	;# 
  1179     061B                     	;# 
  1180     061C                     	;# 
  1181     0691                     	;# 
  1182     0692                     	;# 
  1183     0693                     	;# 
  1184     0694                     	;# 
  1185     0695                     	;# 
  1186     0696                     	;# 
  1187     0697                     	;# 
  1188     0699                     	;# 
  1189     069A                     	;# 
  1190     0711                     	;# 
  1191     0712                     	;# 
  1192     0713                     	;# 
  1193     0714                     	;# 
  1194     0715                     	;# 
  1195     0718                     	;# 
  1196     0718                     	;# 
  1197     0719                     	;# 
  1198     071A                     	;# 
  1199     071A                     	;# 
  1200     071B                     	;# 
  1201     071C                     	;# 
  1202     071D                     	;# 
  1203     0791                     	;# 
  1204     0791                     	;# 
  1205     0792                     	;# 
  1206     0793                     	;# 
  1207     0793                     	;# 
  1208     0794                     	;# 
  1209     0795                     	;# 
  1210     0795                     	;# 
  1211     0796                     	;# 
  1212     0797                     	;# 
  1213     0797                     	;# 
  1214     0798                     	;# 
  1215     0799                     	;# 
  1216     079A                     	;# 
  1217     080C                     	;# 
  1218     080C                     	;# 
  1219     080D                     	;# 
  1220     080E                     	;# 
  1221     080E                     	;# 
  1222     080F                     	;# 
  1223     0810                     	;# 
  1224     0810                     	;# 
  1225     0811                     	;# 
  1226     0812                     	;# 
  1227     0812                     	;# 
  1228     0813                     	;# 
  1229     0814                     	;# 
  1230     0815                     	;# 
  1231     0816                     	;# 
  1232     0817                     	;# 
  1233     0818                     	;# 
  1234     0819                     	;# 
  1235     081A                     	;# 
  1236     081A                     	;# 
  1237     081B                     	;# 
  1238     081C                     	;# 
  1239     081C                     	;# 
  1240     081D                     	;# 
  1241     088C                     	;# 
  1242     088D                     	;# 
  1243     088E                     	;# 
  1244     088F                     	;# 
  1245     088F                     	;# 
  1246     0890                     	;# 
  1247     0891                     	;# 
  1248     0892                     	;# 
  1249     0893                     	;# 
  1250     0893                     	;# 
  1251     0894                     	;# 
  1252     0895                     	;# 
  1253     0896                     	;# 
  1254     0897                     	;# 
  1255     0897                     	;# 
  1256     0898                     	;# 
  1257     0899                     	;# 
  1258     0D8C                     	;# 
  1259     0D8C                     	;# 
  1260     0D8D                     	;# 
  1261     0D8E                     	;# 
  1262     0D8F                     	;# 
  1263     0D8F                     	;# 
  1264     0D90                     	;# 
  1265     0D91                     	;# 
  1266     0D92                     	;# 
  1267     0D92                     	;# 
  1268     0D93                     	;# 
  1269     0D94                     	;# 
  1270     0D95                     	;# 
  1271     0D95                     	;# 
  1272     0D96                     	;# 
  1273     0D97                     	;# 
  1274     0D98                     	;# 
  1275     0D99                     	;# 
  1276     0D9A                     	;# 
  1277     0D9B                     	;# 
  1278     0D9C                     	;# 
  1279     0D9D                     	;# 
  1280     0D9E                     	;# 
  1281     0D9E                     	;# 
  1282     0D9F                     	;# 
  1283     0DA0                     	;# 
  1284     0DA1                     	;# 
  1285     0DA1                     	;# 
  1286     0DA2                     	;# 
  1287     0DA3                     	;# 
  1288     0DA4                     	;# 
  1289     0DA4                     	;# 
  1290     0DA5                     	;# 
  1291     0DA6                     	;# 
  1292     0DA7                     	;# 
  1293     0DA7                     	;# 
  1294     0DA8                     	;# 
  1295     0DA9                     	;# 
  1296     0DAA                     	;# 
  1297     0DAB                     	;# 
  1298     0DAC                     	;# 
  1299     0DAD                     	;# 
  1300     0DAE                     	;# 
  1301     0DAF                     	;# 
  1302     0E0F                     	;# 
  1303     0E10                     	;# 
  1304     0E11                     	;# 
  1305     0E12                     	;# 
  1306     0E13                     	;# 
  1307     0E14                     	;# 
  1308     0E15                     	;# 
  1309     0E16                     	;# 
  1310     0E17                     	;# 
  1311     0E18                     	;# 
  1312     0E19                     	;# 
  1313     0E1A                     	;# 
  1314     0E1B                     	;# 
  1315     0E1C                     	;# 
  1316     0E1D                     	;# 
  1317     0E1E                     	;# 
  1318     0E1F                     	;# 
  1319     0E20                     	;# 
  1320     0E21                     	;# 
  1321     0E22                     	;# 
  1322     0E23                     	;# 
  1323     0E24                     	;# 
  1324     0E25                     	;# 
  1325     0E26                     	;# 
  1326     0E27                     	;# 
  1327     0E28                     	;# 
  1328     0E29                     	;# 
  1329     0E2A                     	;# 
  1330     0E2B                     	;# 
  1331     0E2C                     	;# 
  1332     0E2D                     	;# 
  1333     0E2E                     	;# 
  1334     0E90                     	;# 
  1335     0E91                     	;# 
  1336     0E92                     	;# 
  1337     0E94                     	;# 
  1338     0E95                     	;# 
  1339     0E9C                     	;# 
  1340     0E9D                     	;# 
  1341     0E9E                     	;# 
  1342     0E9F                     	;# 
  1343     0EA0                     	;# 
  1344     0EA1                     	;# 
  1345     0EA2                     	;# 
  1346     0EA3                     	;# 
  1347     0EA4                     	;# 
  1348     0EA5                     	;# 
  1349     0EA6                     	;# 
  1350     0EA7                     	;# 
  1351     0F0F                     	;# 
  1352     0F10                     	;# 
  1353     0F11                     	;# 
  1354     0F12                     	;# 
  1355     0F13                     	;# 
  1356     0F14                     	;# 
  1357     0F15                     	;# 
  1358     0F16                     	;# 
  1359     0F17                     	;# 
  1360     0F18                     	;# 
  1361     0F19                     	;# 
  1362     0F1A                     	;# 
  1363     0F1B                     	;# 
  1364     0F1C                     	;# 
  1365     0F1D                     	;# 
  1366     0F1E                     	;# 
  1367     0F1F                     	;# 
  1368     0F20                     	;# 
  1369     0F21                     	;# 
  1370     0F22                     	;# 
  1371     0F23                     	;# 
  1372     0F24                     	;# 
  1373     0F25                     	;# 
  1374     0F26                     	;# 
  1375     0F27                     	;# 
  1376     0F28                     	;# 
  1377     0F29                     	;# 
  1378     0F2A                     	;# 
  1379     0F2B                     	;# 
  1380     0F2C                     	;# 
  1381     0F2D                     	;# 
  1382     0F2E                     	;# 
  1383     0F2F                     	;# 
  1384     0F30                     	;# 
  1385     0F31                     	;# 
  1386     0F32                     	;# 
  1387     0F33                     	;# 
  1388     0F34                     	;# 
  1389     0F35                     	;# 
  1390     0F36                     	;# 
  1391     0F37                     	;# 
  1392     0FE4                     	;# 
  1393     0FE5                     	;# 
  1394     0FE6                     	;# 
  1395     0FE7                     	;# 
  1396     0FE8                     	;# 
  1397     0FE9                     	;# 
  1398     0FEA                     	;# 
  1399     0FEB                     	;# 
  1400     0FED                     	;# 
  1401     0FEE                     	;# 
  1402     0FEF                     	;# 
  1403     0000                     	;# 
  1404     0001                     	;# 
  1405     0002                     	;# 
  1406     0003                     	;# 
  1407     0004                     	;# 
  1408     0005                     	;# 
  1409     0006                     	;# 
  1410     0007                     	;# 
  1411     0008                     	;# 
  1412     0009                     	;# 
  1413     000A                     	;# 
  1414     000B                     	;# 
  1415     000C                     	;# 
  1416     000D                     	;# 
  1417     000E                     	;# 
  1418     0010                     	;# 
  1419     0011                     	;# 
  1420     0012                     	;# 
  1421     0013                     	;# 
  1422     0014                     	;# 
  1423     0015                     	;# 
  1424     0016                     	;# 
  1425     0016                     	;# 
  1426     0017                     	;# 
  1427     0018                     	;# 
  1428     0019                     	;# 
  1429     001A                     	;# 
  1430     001A                     	;# 
  1431     001B                     	;# 
  1432     001B                     	;# 
  1433     001C                     	;# 
  1434     001D                     	;# 
  1435     001E                     	;# 
  1436     001F                     	;# 
  1437     008C                     	;# 
  1438     008D                     	;# 
  1439     008E                     	;# 
  1440     0090                     	;# 
  1441     0091                     	;# 
  1442     0092                     	;# 
  1443     0093                     	;# 
  1444     0094                     	;# 
  1445     0095                     	;# 
  1446     0096                     	;# 
  1447     0098                     	;# 
  1448     0099                     	;# 
  1449     009A                     	;# 
  1450     009B                     	;# 
  1451     009B                     	;# 
  1452     009C                     	;# 
  1453     009D                     	;# 
  1454     009E                     	;# 
  1455     009F                     	;# 
  1456     010C                     	;# 
  1457     010D                     	;# 
  1458     010E                     	;# 
  1459     0111                     	;# 
  1460     0112                     	;# 
  1461     0113                     	;# 
  1462     0114                     	;# 
  1463     0115                     	;# 
  1464     0116                     	;# 
  1465     0117                     	;# 
  1466     0118                     	;# 
  1467     0119                     	;# 
  1468     011C                     	;# 
  1469     018C                     	;# 
  1470     018D                     	;# 
  1471     018E                     	;# 
  1472     0191                     	;# 
  1473     0191                     	;# 
  1474     0192                     	;# 
  1475     0193                     	;# 
  1476     0193                     	;# 
  1477     0194                     	;# 
  1478     0195                     	;# 
  1479     0196                     	;# 
  1480     0197                     	;# 
  1481     0199                     	;# 
  1482     0199                     	;# 
  1483     0199                     	;# 
  1484     019A                     	;# 
  1485     019A                     	;# 
  1486     019A                     	;# 
  1487     019B                     	;# 
  1488     019B                     	;# 
  1489     019B                     	;# 
  1490     019B                     	;# 
  1491     019B                     	;# 
  1492     019C                     	;# 
  1493     019C                     	;# 
  1494     019C                     	;# 
  1495     019D                     	;# 
  1496     019D                     	;# 
  1497     019D                     	;# 
  1498     019E                     	;# 
  1499     019E                     	;# 
  1500     019E                     	;# 
  1501     019F                     	;# 
  1502     019F                     	;# 
  1503     019F                     	;# 
  1504     019F                     	;# 
  1505     019F                     	;# 
  1506     020C                     	;# 
  1507     020D                     	;# 
  1508     020E                     	;# 
  1509     0211                     	;# 
  1510     0211                     	;# 
  1511     0212                     	;# 
  1512     0212                     	;# 
  1513     0213                     	;# 
  1514     0213                     	;# 
  1515     0214                     	;# 
  1516     0214                     	;# 
  1517     0215                     	;# 
  1518     0215                     	;# 
  1519     0215                     	;# 
  1520     0215                     	;# 
  1521     0216                     	;# 
  1522     0216                     	;# 
  1523     0217                     	;# 
  1524     0217                     	;# 
  1525     028C                     	;# 
  1526     028D                     	;# 
  1527     028E                     	;# 
  1528     0291                     	;# 
  1529     0291                     	;# 
  1530     0292                     	;# 
  1531     0293                     	;# 
  1532     0294                     	;# 
  1533     0298                     	;# 
  1534     0298                     	;# 
  1535     0299                     	;# 
  1536     029A                     	;# 
  1537     029B                     	;# 
  1538     029E                     	;# 
  1539     030C                     	;# 
  1540     030D                     	;# 
  1541     030E                     	;# 
  1542     038C                     	;# 
  1543     038D                     	;# 
  1544     038E                     	;# 
  1545     0391                     	;# 
  1546     0392                     	;# 
  1547     0393                     	;# 
  1548     0394                     	;# 
  1549     0395                     	;# 
  1550     0396                     	;# 
  1551     0397                     	;# 
  1552     0398                     	;# 
  1553     0399                     	;# 
  1554     040E                     	;# 
  1555     0413                     	;# 
  1556     0413                     	;# 
  1557     0414                     	;# 
  1558     0414                     	;# 
  1559     0415                     	;# 
  1560     0416                     	;# 
  1561     0417                     	;# 
  1562     0418                     	;# 
  1563     041A                     	;# 
  1564     041A                     	;# 
  1565     041B                     	;# 
  1566     041B                     	;# 
  1567     041C                     	;# 
  1568     041D                     	;# 
  1569     041E                     	;# 
  1570     041F                     	;# 
  1571     0493                     	;# 
  1572     0494                     	;# 
  1573     0495                     	;# 
  1574     0496                     	;# 
  1575     049A                     	;# 
  1576     049B                     	;# 
  1577     049C                     	;# 
  1578     049D                     	;# 
  1579     058C                     	;# 
  1580     058C                     	;# 
  1581     058D                     	;# 
  1582     058E                     	;# 
  1583     058E                     	;# 
  1584     058F                     	;# 
  1585     0590                     	;# 
  1586     0590                     	;# 
  1587     0591                     	;# 
  1588     0592                     	;# 
  1589     0592                     	;# 
  1590     0593                     	;# 
  1591     0594                     	;# 
  1592     0594                     	;# 
  1593     0595                     	;# 
  1594     0596                     	;# 
  1595     0596                     	;# 
  1596     0597                     	;# 
  1597     0598                     	;# 
  1598     0599                     	;# 
  1599     059A                     	;# 
  1600     059B                     	;# 
  1601     059B                     	;# 
  1602     059C                     	;# 
  1603     059D                     	;# 
  1604     060C                     	;# 
  1605     060C                     	;# 
  1606     060D                     	;# 
  1607     060E                     	;# 
  1608     060F                     	;# 
  1609     060F                     	;# 
  1610     0610                     	;# 
  1611     0611                     	;# 
  1612     0612                     	;# 
  1613     0613                     	;# 
  1614     0614                     	;# 
  1615     0617                     	;# 
  1616     0617                     	;# 
  1617     0618                     	;# 
  1618     0619                     	;# 
  1619     061A                     	;# 
  1620     061A                     	;# 
  1621     061B                     	;# 
  1622     061C                     	;# 
  1623     0691                     	;# 
  1624     0692                     	;# 
  1625     0693                     	;# 
  1626     0694                     	;# 
  1627     0695                     	;# 
  1628     0696                     	;# 
  1629     0697                     	;# 
  1630     0699                     	;# 
  1631     069A                     	;# 
  1632     0711                     	;# 
  1633     0712                     	;# 
  1634     0713                     	;# 
  1635     0714                     	;# 
  1636     0715                     	;# 
  1637     0718                     	;# 
  1638     0718                     	;# 
  1639     0719                     	;# 
  1640     071A                     	;# 
  1641     071A                     	;# 
  1642     071B                     	;# 
  1643     071C                     	;# 
  1644     071D                     	;# 
  1645     0791                     	;# 
  1646     0791                     	;# 
  1647     0792                     	;# 
  1648     0793                     	;# 
  1649     0793                     	;# 
  1650     0794                     	;# 
  1651     0795                     	;# 
  1652     0795                     	;# 
  1653     0796                     	;# 
  1654     0797                     	;# 
  1655     0797                     	;# 
  1656     0798                     	;# 
  1657     0799                     	;# 
  1658     079A                     	;# 
  1659     080C                     	;# 
  1660     080C                     	;# 
  1661     080D                     	;# 
  1662     080E                     	;# 
  1663     080E                     	;# 
  1664     080F                     	;# 
  1665     0810                     	;# 
  1666     0810                     	;# 
  1667     0811                     	;# 
  1668     0812                     	;# 
  1669     0812                     	;# 
  1670     0813                     	;# 
  1671     0814                     	;# 
  1672     0815                     	;# 
  1673     0816                     	;# 
  1674     0817                     	;# 
  1675     0818                     	;# 
  1676     0819                     	;# 
  1677     081A                     	;# 
  1678     081A                     	;# 
  1679     081B                     	;# 
  1680     081C                     	;# 
  1681     081C                     	;# 
  1682     081D                     	;# 
  1683     088C                     	;# 
  1684     088D                     	;# 
  1685     088E                     	;# 
  1686     088F                     	;# 
  1687     088F                     	;# 
  1688     0890                     	;# 
  1689     0891                     	;# 
  1690     0892                     	;# 
  1691     0893                     	;# 
  1692     0893                     	;# 
  1693     0894                     	;# 
  1694     0895                     	;# 
  1695     0896                     	;# 
  1696     0897                     	;# 
  1697     0897                     	;# 
  1698     0898                     	;# 
  1699     0899                     	;# 
  1700     0D8C                     	;# 
  1701     0D8C                     	;# 
  1702     0D8D                     	;# 
  1703     0D8E                     	;# 
  1704     0D8F                     	;# 
  1705     0D8F                     	;# 
  1706     0D90                     	;# 
  1707     0D91                     	;# 
  1708     0D92                     	;# 
  1709     0D92                     	;# 
  1710     0D93                     	;# 
  1711     0D94                     	;# 
  1712     0D95                     	;# 
  1713     0D95                     	;# 
  1714     0D96                     	;# 
  1715     0D97                     	;# 
  1716     0D98                     	;# 
  1717     0D99                     	;# 
  1718     0D9A                     	;# 
  1719     0D9B                     	;# 
  1720     0D9C                     	;# 
  1721     0D9D                     	;# 
  1722     0D9E                     	;# 
  1723     0D9E                     	;# 
  1724     0D9F                     	;# 
  1725     0DA0                     	;# 
  1726     0DA1                     	;# 
  1727     0DA1                     	;# 
  1728     0DA2                     	;# 
  1729     0DA3                     	;# 
  1730     0DA4                     	;# 
  1731     0DA4                     	;# 
  1732     0DA5                     	;# 
  1733     0DA6                     	;# 
  1734     0DA7                     	;# 
  1735     0DA7                     	;# 
  1736     0DA8                     	;# 
  1737     0DA9                     	;# 
  1738     0DAA                     	;# 
  1739     0DAB                     	;# 
  1740     0DAC                     	;# 
  1741     0DAD                     	;# 
  1742     0DAE                     	;# 
  1743     0DAF                     	;# 
  1744     0E0F                     	;# 
  1745     0E10                     	;# 
  1746     0E11                     	;# 
  1747     0E12                     	;# 
  1748     0E13                     	;# 
  1749     0E14                     	;# 
  1750     0E15                     	;# 
  1751     0E16                     	;# 
  1752     0E17                     	;# 
  1753     0E18                     	;# 
  1754     0E19                     	;# 
  1755     0E1A                     	;# 
  1756     0E1B                     	;# 
  1757     0E1C                     	;# 
  1758     0E1D                     	;# 
  1759     0E1E                     	;# 
  1760     0E1F                     	;# 
  1761     0E20                     	;# 
  1762     0E21                     	;# 
  1763     0E22                     	;# 
  1764     0E23                     	;# 
  1765     0E24                     	;# 
  1766     0E25                     	;# 
  1767     0E26                     	;# 
  1768     0E27                     	;# 
  1769     0E28                     	;# 
  1770     0E29                     	;# 
  1771     0E2A                     	;# 
  1772     0E2B                     	;# 
  1773     0E2C                     	;# 
  1774     0E2D                     	;# 
  1775     0E2E                     	;# 
  1776     0E90                     	;# 
  1777     0E91                     	;# 
  1778     0E92                     	;# 
  1779     0E94                     	;# 
  1780     0E95                     	;# 
  1781     0E9C                     	;# 
  1782     0E9D                     	;# 
  1783     0E9E                     	;# 
  1784     0E9F                     	;# 
  1785     0EA0                     	;# 
  1786     0EA1                     	;# 
  1787     0EA2                     	;# 
  1788     0EA3                     	;# 
  1789     0EA4                     	;# 
  1790     0EA5                     	;# 
  1791     0EA6                     	;# 
  1792     0EA7                     	;# 
  1793     0F0F                     	;# 
  1794     0F10                     	;# 
  1795     0F11                     	;# 
  1796     0F12                     	;# 
  1797     0F13                     	;# 
  1798     0F14                     	;# 
  1799     0F15                     	;# 
  1800     0F16                     	;# 
  1801     0F17                     	;# 
  1802     0F18                     	;# 
  1803     0F19                     	;# 
  1804     0F1A                     	;# 
  1805     0F1B                     	;# 
  1806     0F1C                     	;# 
  1807     0F1D                     	;# 
  1808     0F1E                     	;# 
  1809     0F1F                     	;# 
  1810     0F20                     	;# 
  1811     0F21                     	;# 
  1812     0F22                     	;# 
  1813     0F23                     	;# 
  1814     0F24                     	;# 
  1815     0F25                     	;# 
  1816     0F26                     	;# 
  1817     0F27                     	;# 
  1818     0F28                     	;# 
  1819     0F29                     	;# 
  1820     0F2A                     	;# 
  1821     0F2B                     	;# 
  1822     0F2C                     	;# 
  1823     0F2D                     	;# 
  1824     0F2E                     	;# 
  1825     0F2F                     	;# 
  1826     0F30                     	;# 
  1827     0F31                     	;# 
  1828     0F32                     	;# 
  1829     0F33                     	;# 
  1830     0F34                     	;# 
  1831     0F35                     	;# 
  1832     0F36                     	;# 
  1833     0F37                     	;# 
  1834     0FE4                     	;# 
  1835     0FE5                     	;# 
  1836     0FE6                     	;# 
  1837     0FE7                     	;# 
  1838     0FE8                     	;# 
  1839     0FE9                     	;# 
  1840     0FEA                     	;# 
  1841     0FEB                     	;# 
  1842     0FED                     	;# 
  1843     0FEE                     	;# 
  1844     0FEF                     	;# 
  1845     0000                     	;# 
  1846     0001                     	;# 
  1847     0002                     	;# 
  1848     0003                     	;# 
  1849     0004                     	;# 
  1850     0005                     	;# 
  1851     0006                     	;# 
  1852     0007                     	;# 
  1853     0008                     	;# 
  1854     0009                     	;# 
  1855     000A                     	;# 
  1856     000B                     	;# 
  1857     000C                     	;# 
  1858     000D                     	;# 
  1859     000E                     	;# 
  1860     0010                     	;# 
  1861     0011                     	;# 
  1862     0012                     	;# 
  1863     0013                     	;# 
  1864     0014                     	;# 
  1865     0015                     	;# 
  1866     0016                     	;# 
  1867     0016                     	;# 
  1868     0017                     	;# 
  1869     0018                     	;# 
  1870     0019                     	;# 
  1871     001A                     	;# 
  1872     001A                     	;# 
  1873     001B                     	;# 
  1874     001B                     	;# 
  1875     001C                     	;# 
  1876     001D                     	;# 
  1877     001E                     	;# 
  1878     001F                     	;# 
  1879     008C                     	;# 
  1880     008D                     	;# 
  1881     008E                     	;# 
  1882     0090                     	;# 
  1883     0091                     	;# 
  1884     0092                     	;# 
  1885     0093                     	;# 
  1886     0094                     	;# 
  1887     0095                     	;# 
  1888     0096                     	;# 
  1889     0098                     	;# 
  1890     0099                     	;# 
  1891     009A                     	;# 
  1892     009B                     	;# 
  1893     009B                     	;# 
  1894     009C                     	;# 
  1895     009D                     	;# 
  1896     009E                     	;# 
  1897     009F                     	;# 
  1898     010C                     	;# 
  1899     010D                     	;# 
  1900     010E                     	;# 
  1901     0111                     	;# 
  1902     0112                     	;# 
  1903     0113                     	;# 
  1904     0114                     	;# 
  1905     0115                     	;# 
  1906     0116                     	;# 
  1907     0117                     	;# 
  1908     0118                     	;# 
  1909     0119                     	;# 
  1910     011C                     	;# 
  1911     018C                     	;# 
  1912     018D                     	;# 
  1913     018E                     	;# 
  1914     0191                     	;# 
  1915     0191                     	;# 
  1916     0192                     	;# 
  1917     0193                     	;# 
  1918     0193                     	;# 
  1919     0194                     	;# 
  1920     0195                     	;# 
  1921     0196                     	;# 
  1922     0197                     	;# 
  1923     0199                     	;# 
  1924     0199                     	;# 
  1925     0199                     	;# 
  1926     019A                     	;# 
  1927     019A                     	;# 
  1928     019A                     	;# 
  1929     019B                     	;# 
  1930     019B                     	;# 
  1931     019B                     	;# 
  1932     019B                     	;# 
  1933     019B                     	;# 
  1934     019C                     	;# 
  1935     019C                     	;# 
  1936     019C                     	;# 
  1937     019D                     	;# 
  1938     019D                     	;# 
  1939     019D                     	;# 
  1940     019E                     	;# 
  1941     019E                     	;# 
  1942     019E                     	;# 
  1943     019F                     	;# 
  1944     019F                     	;# 
  1945     019F                     	;# 
  1946     019F                     	;# 
  1947     019F                     	;# 
  1948     020C                     	;# 
  1949     020D                     	;# 
  1950     020E                     	;# 
  1951     0211                     	;# 
  1952     0211                     	;# 
  1953     0212                     	;# 
  1954     0212                     	;# 
  1955     0213                     	;# 
  1956     0213                     	;# 
  1957     0214                     	;# 
  1958     0214                     	;# 
  1959     0215                     	;# 
  1960     0215                     	;# 
  1961     0215                     	;# 
  1962     0215                     	;# 
  1963     0216                     	;# 
  1964     0216                     	;# 
  1965     0217                     	;# 
  1966     0217                     	;# 
  1967     028C                     	;# 
  1968     028D                     	;# 
  1969     028E                     	;# 
  1970     0291                     	;# 
  1971     0291                     	;# 
  1972     0292                     	;# 
  1973     0293                     	;# 
  1974     0294                     	;# 
  1975     0298                     	;# 
  1976     0298                     	;# 
  1977     0299                     	;# 
  1978     029A                     	;# 
  1979     029B                     	;# 
  1980     029E                     	;# 
  1981     030C                     	;# 
  1982     030D                     	;# 
  1983     030E                     	;# 
  1984     038C                     	;# 
  1985     038D                     	;# 
  1986     038E                     	;# 
  1987     0391                     	;# 
  1988     0392                     	;# 
  1989     0393                     	;# 
  1990     0394                     	;# 
  1991     0395                     	;# 
  1992     0396                     	;# 
  1993     0397                     	;# 
  1994     0398                     	;# 
  1995     0399                     	;# 
  1996     040E                     	;# 
  1997     0413                     	;# 
  1998     0413                     	;# 
  1999     0414                     	;# 
  2000     0414                     	;# 
  2001     0415                     	;# 
  2002     0416                     	;# 
  2003     0417                     	;# 
  2004     0418                     	;# 
  2005     041A                     	;# 
  2006     041A                     	;# 
  2007     041B                     	;# 
  2008     041B                     	;# 
  2009     041C                     	;# 
  2010     041D                     	;# 
  2011     041E                     	;# 
  2012     041F                     	;# 
  2013     0493                     	;# 
  2014     0494                     	;# 
  2015     0495                     	;# 
  2016     0496                     	;# 
  2017     049A                     	;# 
  2018     049B                     	;# 
  2019     049C                     	;# 
  2020     049D                     	;# 
  2021     058C                     	;# 
  2022     058C                     	;# 
  2023     058D                     	;# 
  2024     058E                     	;# 
  2025     058E                     	;# 
  2026     058F                     	;# 
  2027     0590                     	;# 
  2028     0590                     	;# 
  2029     0591                     	;# 
  2030     0592                     	;# 
  2031     0592                     	;# 
  2032     0593                     	;# 
  2033     0594                     	;# 
  2034     0594                     	;# 
  2035     0595                     	;# 
  2036     0596                     	;# 
  2037     0596                     	;# 
  2038     0597                     	;# 
  2039     0598                     	;# 
  2040     0599                     	;# 
  2041     059A                     	;# 
  2042     059B                     	;# 
  2043     059B                     	;# 
  2044     059C                     	;# 
  2045     059D                     	;# 
  2046     060C                     	;# 
  2047     060C                     	;# 
  2048     060D                     	;# 
  2049     060E                     	;# 
  2050     060F                     	;# 
  2051     060F                     	;# 
  2052     0610                     	;# 
  2053     0611                     	;# 
  2054     0612                     	;# 
  2055     0613                     	;# 
  2056     0614                     	;# 
  2057     0617                     	;# 
  2058     0617                     	;# 
  2059     0618                     	;# 
  2060     0619                     	;# 
  2061     061A                     	;# 
  2062     061A                     	;# 
  2063     061B                     	;# 
  2064     061C                     	;# 
  2065     0691                     	;# 
  2066     0692                     	;# 
  2067     0693                     	;# 
  2068     0694                     	;# 
  2069     0695                     	;# 
  2070     0696                     	;# 
  2071     0697                     	;# 
  2072     0699                     	;# 
  2073     069A                     	;# 
  2074     0711                     	;# 
  2075     0712                     	;# 
  2076     0713                     	;# 
  2077     0714                     	;# 
  2078     0715                     	;# 
  2079     0718                     	;# 
  2080     0718                     	;# 
  2081     0719                     	;# 
  2082     071A                     	;# 
  2083     071A                     	;# 
  2084     071B                     	;# 
  2085     071C                     	;# 
  2086     071D                     	;# 
  2087     0791                     	;# 
  2088     0791                     	;# 
  2089     0792                     	;# 
  2090     0793                     	;# 
  2091     0793                     	;# 
  2092     0794                     	;# 
  2093     0795                     	;# 
  2094     0795                     	;# 
  2095     0796                     	;# 
  2096     0797                     	;# 
  2097     0797                     	;# 
  2098     0798                     	;# 
  2099     0799                     	;# 
  2100     079A                     	;# 
  2101     080C                     	;# 
  2102     080C                     	;# 
  2103     080D                     	;# 
  2104     080E                     	;# 
  2105     080E                     	;# 
  2106     080F                     	;# 
  2107     0810                     	;# 
  2108     0810                     	;# 
  2109     0811                     	;# 
  2110     0812                     	;# 
  2111     0812                     	;# 
  2112     0813                     	;# 
  2113     0814                     	;# 
  2114     0815                     	;# 
  2115     0816                     	;# 
  2116     0817                     	;# 
  2117     0818                     	;# 
  2118     0819                     	;# 
  2119     081A                     	;# 
  2120     081A                     	;# 
  2121     081B                     	;# 
  2122     081C                     	;# 
  2123     081C                     	;# 
  2124     081D                     	;# 
  2125     088C                     	;# 
  2126     088D                     	;# 
  2127     088E                     	;# 
  2128     088F                     	;# 
  2129     088F                     	;# 
  2130     0890                     	;# 
  2131     0891                     	;# 
  2132     0892                     	;# 
  2133     0893                     	;# 
  2134     0893                     	;# 
  2135     0894                     	;# 
  2136     0895                     	;# 
  2137     0896                     	;# 
  2138     0897                     	;# 
  2139     0897                     	;# 
  2140     0898                     	;# 
  2141     0899                     	;# 
  2142     0D8C                     	;# 
  2143     0D8C                     	;# 
  2144     0D8D                     	;# 
  2145     0D8E                     	;# 
  2146     0D8F                     	;# 
  2147     0D8F                     	;# 
  2148     0D90                     	;# 
  2149     0D91                     	;# 
  2150     0D92                     	;# 
  2151     0D92                     	;# 
  2152     0D93                     	;# 
  2153     0D94                     	;# 
  2154     0D95                     	;# 
  2155     0D95                     	;# 
  2156     0D96                     	;# 
  2157     0D97                     	;# 
  2158     0D98                     	;# 
  2159     0D99                     	;# 
  2160     0D9A                     	;# 
  2161     0D9B                     	;# 
  2162     0D9C                     	;# 
  2163     0D9D                     	;# 
  2164     0D9E                     	;# 
  2165     0D9E                     	;# 
  2166     0D9F                     	;# 
  2167     0DA0                     	;# 
  2168     0DA1                     	;# 
  2169     0DA1                     	;# 
  2170     0DA2                     	;# 
  2171     0DA3                     	;# 
  2172     0DA4                     	;# 
  2173     0DA4                     	;# 
  2174     0DA5                     	;# 
  2175     0DA6                     	;# 
  2176     0DA7                     	;# 
  2177     0DA7                     	;# 
  2178     0DA8                     	;# 
  2179     0DA9                     	;# 
  2180     0DAA                     	;# 
  2181     0DAB                     	;# 
  2182     0DAC                     	;# 
  2183     0DAD                     	;# 
  2184     0DAE                     	;# 
  2185     0DAF                     	;# 
  2186     0E0F                     	;# 
  2187     0E10                     	;# 
  2188     0E11                     	;# 
  2189     0E12                     	;# 
  2190     0E13                     	;# 
  2191     0E14                     	;# 
  2192     0E15                     	;# 
  2193     0E16                     	;# 
  2194     0E17                     	;# 
  2195     0E18                     	;# 
  2196     0E19                     	;# 
  2197     0E1A                     	;# 
  2198     0E1B                     	;# 
  2199     0E1C                     	;# 
  2200     0E1D                     	;# 
  2201     0E1E                     	;# 
  2202     0E1F                     	;# 
  2203     0E20                     	;# 
  2204     0E21                     	;# 
  2205     0E22                     	;# 
  2206     0E23                     	;# 
  2207     0E24                     	;# 
  2208     0E25                     	;# 
  2209     0E26                     	;# 
  2210     0E27                     	;# 
  2211     0E28                     	;# 
  2212     0E29                     	;# 
  2213     0E2A                     	;# 
  2214     0E2B                     	;# 
  2215     0E2C                     	;# 
  2216     0E2D                     	;# 
  2217     0E2E                     	;# 
  2218     0E90                     	;# 
  2219     0E91                     	;# 
  2220     0E92                     	;# 
  2221     0E94                     	;# 
  2222     0E95                     	;# 
  2223     0E9C                     	;# 
  2224     0E9D                     	;# 
  2225     0E9E                     	;# 
  2226     0E9F                     	;# 
  2227     0EA0                     	;# 
  2228     0EA1                     	;# 
  2229     0EA2                     	;# 
  2230     0EA3                     	;# 
  2231     0EA4                     	;# 
  2232     0EA5                     	;# 
  2233     0EA6                     	;# 
  2234     0EA7                     	;# 
  2235     0F0F                     	;# 
  2236     0F10                     	;# 
  2237     0F11                     	;# 
  2238     0F12                     	;# 
  2239     0F13                     	;# 
  2240     0F14                     	;# 
  2241     0F15                     	;# 
  2242     0F16                     	;# 
  2243     0F17                     	;# 
  2244     0F18                     	;# 
  2245     0F19                     	;# 
  2246     0F1A                     	;# 
  2247     0F1B                     	;# 
  2248     0F1C                     	;# 
  2249     0F1D                     	;# 
  2250     0F1E                     	;# 
  2251     0F1F                     	;# 
  2252     0F20                     	;# 
  2253     0F21                     	;# 
  2254     0F22                     	;# 
  2255     0F23                     	;# 
  2256     0F24                     	;# 
  2257     0F25                     	;# 
  2258     0F26                     	;# 
  2259     0F27                     	;# 
  2260     0F28                     	;# 
  2261     0F29                     	;# 
  2262     0F2A                     	;# 
  2263     0F2B                     	;# 
  2264     0F2C                     	;# 
  2265     0F2D                     	;# 
  2266     0F2E                     	;# 
  2267     0F2F                     	;# 
  2268     0F30                     	;# 
  2269     0F31                     	;# 
  2270     0F32                     	;# 
  2271     0F33                     	;# 
  2272     0F34                     	;# 
  2273     0F35                     	;# 
  2274     0F36                     	;# 
  2275     0F37                     	;# 
  2276     0FE4                     	;# 
  2277     0FE5                     	;# 
  2278     0FE6                     	;# 
  2279     0FE7                     	;# 
  2280     0FE8                     	;# 
  2281     0FE9                     	;# 
  2282     0FEA                     	;# 
  2283     0FEB                     	;# 
  2284     0FED                     	;# 
  2285     0FEE                     	;# 
  2286     0FEF                     	;# 
  2287     0016                     _TMR1	set	22
  2288     0018                     _T1CONbits	set	24
  2289     0017                     _TMR1H	set	23
  2290     0016                     _TMR1L	set	22
  2291     000E                     _PORTC	set	14
  2292     000D                     _PORTB	set	13
  2293     000C                     _PORTA	set	12
  2294     0018                     _T1CON	set	24
  2295     000B                     _INTCONbits	set	11
  2296     0015                     _TMR0	set	21
  2297     000E                     _PORTCbits	set	14
  2298     001B                     _PR2	set	27
  2299     001A                     _TMR2	set	26
  2300     001C                     _T2CONbits	set	28
  2301     001F                     _T2RSTbits	set	31
  2302     001D                     _T2HLTbits	set	29
  2303     001C                     _T2CON	set	28
  2304     0010                     _PIR1bits	set	16
  2305     001A                     _T2TMR	set	26
  2306     001B                     _T2PR	set	27
  2307     001F                     _T2RST	set	31
  2308     001D                     _T2HLT	set	29
  2309     001E                     _T2CLKCON	set	30
  2310     0099                     _OSCCONbits	set	153
  2311     0095                     _OPTION_REG	set	149
  2312     008E                     _TRISCbits	set	142
  2313     0095                     _OPTION_REGbits	set	149
  2314     008E                     _TRISC	set	142
  2315     008D                     _TRISB	set	141
  2316     008C                     _TRISA	set	140
  2317     0098                     _OSCTUNE	set	152
  2318     0099                     _OSCCON	set	153
  2319     010D                     _LATBbits	set	269
  2320     010E                     _LATC	set	270
  2321     010D                     _LATB	set	269
  2322     010C                     _LATA	set	268
  2323     0116                     _BORCON	set	278
  2324     018C                     _ANSELA	set	396
  2325     018D                     _ANSELB	set	397
  2326     018E                     _ANSELC	set	398
  2327     020E                     _WPUC	set	526
  2328     020C                     _WPUA	set	524
  2329     020D                     _WPUB	set	525
  2330     028E                     _ODCONC	set	654
  2331     028D                     _ODCONB	set	653
  2332     028C                     _ODCONA	set	652
  2333     029E                     _CCPTMRSbits	set	670
  2334     030E                     _SLRCONC	set	782
  2335     030D                     _SLRCONB	set	781
  2336     030C                     _SLRCONA	set	780
  2337     038E                     _INLVLC	set	910
  2338     038D                     _INLVLB	set	909
  2339     038C                     _INLVLA	set	908
  2340     0617                     _PWM3DCL	set	1559
  2341     0618                     _PWM3DCH	set	1560
  2342     0619                     _PWM3CON	set	1561
  2343     0E11                     _T0CKIPPS	set	3601
  2344     0EA6                     _RC6PPS	set	3750
  2345                           
  2346                           	psect	stringtext1
  2347     06E2                     __pstringtext1:
  2348     06E2                     STR_2:
  2349     06E2  3448               	retlw	72	;'H'
  2350     06E3  343A               	retlw	58	;':'
  2351     06E4  3425               	retlw	37	;'%'
  2352     06E5  3432               	retlw	50	;'2'
  2353     06E6  3464               	retlw	100	;'d'
  2354     06E7  3420               	retlw	32	;' '
  2355     06E8  344C               	retlw	76	;'L'
  2356     06E9  343A               	retlw	58	;':'
  2357     06EA  3425               	retlw	37	;'%'
  2358     06EB  3432               	retlw	50	;'2'
  2359     06EC  3464               	retlw	100	;'d'
  2360     06ED  3400               	retlw	0
  2361                           
  2362                           	psect	stringtext2
  2363     06EE                     __pstringtext2:
  2364     06EE                     STR_1:
  2365     06EE  3443               	retlw	67	;'C'
  2366     06EF  3475               	retlw	117	;'u'
  2367     06F0  3465               	retlw	101	;'e'
  2368     06F1  346E               	retlw	110	;'n'
  2369     06F2  3474               	retlw	116	;'t'
  2370     06F3  3461               	retlw	97	;'a'
  2371     06F4  343A               	retlw	58	;':'
  2372     06F5  3420               	retlw	32	;' '
  2373     06F6  3425               	retlw	37	;'%'
  2374     06F7  3435               	retlw	53	;'5'
  2375     06F8  3464               	retlw	100	;'d'
  2376     06F9  3400               	retlw	0
  2377                           
  2378                           	psect	stringtext3
  2379     0000                     __pstringtext3:
  2380                           
  2381                           	psect	cinit
  2382     002A                     start_initialization:	
  2383                           ; #config settings
  2384                           
  2385     002A                     __initialization:
  2386                           
  2387                           ; Clear objects allocated to BANK0
  2388     002A  3065               	movlw	low __pbssBANK0
  2389     002B  0084               	movwf	4
  2390     002C  3000               	movlw	high __pbssBANK0
  2391     002D  0085               	movwf	5
  2392     002E  300B               	movlw	11
  2393     002F  3187  2723  3180   	fcall	clear_ram0
  2394                           
  2395                           ; Clear objects allocated to BANK1
  2396     0032  30A0               	movlw	low __pbssBANK1
  2397     0033  0084               	movwf	4
  2398     0034  3000               	movlw	high __pbssBANK1
  2399     0035  0085               	movwf	5
  2400     0036  304C               	movlw	76
  2401     0037  3187  2723  3180   	fcall	clear_ram0
  2402     003A                     end_of_initialization:	
  2403                           ;End of C runtime variable initialization code
  2404                           
  2405     003A                     __end_of__initialization:
  2406     003A  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2407     003B  0020               	movlb	0
  2408     003C  3180  283E         	ljmp	_main	;jump to C main() function
  2409                           
  2410                           	psect	bssBANK0
  2411     0065                     __pbssBANK0:
  2412     0065                     _width:
  2413     0065                     	ds	2
  2414     0067                     _prec:
  2415     0067                     	ds	2
  2416     0069                     _TIMER:
  2417     0069                     	ds	2
  2418     006B                     _TMR:
  2419     006B                     	ds	2
  2420     006D                     _i:
  2421     006D                     	ds	2
  2422     006F                     _flags:
  2423     006F                     	ds	1
  2424                           
  2425                           	psect	bssBANK1
  2426     00A0                     __pbssBANK1:
  2427     00A0                     _counter:
  2428     00A0                     	ds	4
  2429     00A4                     _dbuf:
  2430     00A4                     	ds	32
  2431     00C4                     _buffer2:
  2432     00C4                     	ds	20
  2433     00D8                     _buffer1:
  2434     00D8                     	ds	20
  2435                           
  2436                           	psect	clrtext
  2437     0723                     clear_ram0:	
  2438                           ;	Called with FSR0 containing the base address, and
  2439                           ;	WREG with the size to clear
  2440                           
  2441     0723  0064               	clrwdt	;clear the watchdog before getting into this loop
  2442     0724                     clrloop0:
  2443     0724  0180               	clrf	0	;clear RAM location pointed to by FSR
  2444     0725  3101               	addfsr 0,1
  2445     0726  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2446     0727  2F24               	goto	clrloop0	;have we reached the end yet?
  2447     0728  3400               	retlw	0	;all done for this memory range, return
  2448                           
  2449                           	psect	cstackCOMMON
  2450     0070                     __pcstackCOMMON:
  2451     0070                     ?_PIN_MANAGER_Initialize:
  2452     0070                     ??_PIN_MANAGER_Initialize:	
  2453                           ; 1 bytes @ 0x0
  2454                           
  2455     0070                     ?_OSCILLATOR_Initialize:	
  2456                           ; 1 bytes @ 0x0
  2457                           
  2458     0070                     ??_OSCILLATOR_Initialize:	
  2459                           ; 1 bytes @ 0x0
  2460                           
  2461     0070                     ?_Lcd_Cmd:	
  2462                           ; 1 bytes @ 0x0
  2463                           
  2464     0070                     ??_Lcd_Cmd:	
  2465                           ; 1 bytes @ 0x0
  2466                           
  2467     0070                     ?_Lcd_Chr_CP:	
  2468                           ; 1 bytes @ 0x0
  2469                           
  2470     0070                     ??_Lcd_Chr_CP:	
  2471                           ; 1 bytes @ 0x0
  2472                           
  2473     0070                     ?_putch:	
  2474                           ; 1 bytes @ 0x0
  2475                           
  2476     0070                     ??_putch:	
  2477                           ; 1 bytes @ 0x0
  2478                           
  2479     0070                     ?_PWM3_Initialize:	
  2480                           ; 1 bytes @ 0x0
  2481                           
  2482     0070                     ??_PWM3_Initialize:	
  2483                           ; 1 bytes @ 0x0
  2484                           
  2485     0070                     ?_PWM3_LoadDutyValue:	
  2486                           ; 1 bytes @ 0x0
  2487                           
  2488     0070                     ?_TMR2_Initialize:	
  2489                           ; 1 bytes @ 0x0
  2490                           
  2491     0070                     ??_TMR2_Initialize:	
  2492                           ; 1 bytes @ 0x0
  2493                           
  2494     0070                     ?_SYSTEM_Initialize:	
  2495                           ; 1 bytes @ 0x0
  2496                           
  2497     0070                     ??_SYSTEM_Initialize:	
  2498                           ; 1 bytes @ 0x0
  2499                           
  2500     0070                     ?_Lcd_Init:	
  2501                           ; 1 bytes @ 0x0
  2502                           
  2503     0070                     ?_TMR0_Timer:	
  2504                           ; 1 bytes @ 0x0
  2505                           
  2506     0070                     ??_TMR0_Timer:	
  2507                           ; 1 bytes @ 0x0
  2508                           
  2509     0070                     ?_TMR1_Counter:	
  2510                           ; 1 bytes @ 0x0
  2511                           
  2512     0070                     ??_TMR1_Counter:	
  2513                           ; 1 bytes @ 0x0
  2514                           
  2515     0070                     ?_ISR_TIMER0:	
  2516                           ; 1 bytes @ 0x0
  2517                           
  2518     0070                     ??_ISR_TIMER0:	
  2519                           ; 1 bytes @ 0x0
  2520                           
  2521     0070                     ?_main:	
  2522                           ; 1 bytes @ 0x0
  2523                           
  2524     0070                     ?_fputc:	
  2525                           ; 1 bytes @ 0x0
  2526                           
  2527     0070                     ?___wmul:	
  2528                           ; 2 bytes @ 0x0
  2529                           
  2530     0070                     ?___awdiv:	
  2531                           ; 2 bytes @ 0x0
  2532                           
  2533     0070                     ?___awmod:	
  2534                           ; 2 bytes @ 0x0
  2535                           
  2536     0070                     putch@c:	
  2537                           ; 2 bytes @ 0x0
  2538                           
  2539     0070                     PWM3_LoadDutyValue@dutyValue:	
  2540                           ; 1 bytes @ 0x0
  2541                           
  2542     0070                     ___wmul@multiplier:	
  2543                           ; 2 bytes @ 0x0
  2544                           
  2545     0070                     ___awdiv@divisor:	
  2546                           ; 2 bytes @ 0x0
  2547                           
  2548     0070                     ___awmod@divisor:	
  2549                           ; 2 bytes @ 0x0
  2550                           
  2551     0070                     fputc@c:	
  2552                           ; 2 bytes @ 0x0
  2553                           
  2554                           
  2555                           ; 2 bytes @ 0x0
  2556     0070                     	ds	2
  2557     0072                     ??_PWM3_LoadDutyValue:
  2558     0072                     Lcd_Chr_CP@data:	
  2559                           ; 1 bytes @ 0x2
  2560                           
  2561     0072                     Lcd_Cmd@data:	
  2562                           ; 1 bytes @ 0x2
  2563                           
  2564     0072                     fputc@fp:	
  2565                           ; 1 bytes @ 0x2
  2566                           
  2567     0072                     ___wmul@multiplicand:	
  2568                           ; 1 bytes @ 0x2
  2569                           
  2570     0072                     ___awdiv@dividend:	
  2571                           ; 2 bytes @ 0x2
  2572                           
  2573     0072                     ___awmod@dividend:	
  2574                           ; 2 bytes @ 0x2
  2575                           
  2576                           
  2577                           ; 2 bytes @ 0x2
  2578     0072                     	ds	1
  2579     0073                     ??_fputc:
  2580     0073                     ??_Lcd_Init:	
  2581                           ; 1 bytes @ 0x3
  2582                           
  2583     0073                     ?_Lcd_Out2:	
  2584                           ; 1 bytes @ 0x3
  2585                           
  2586     0073                     Lcd_Out2@x:	
  2587                           ; 1 bytes @ 0x3
  2588                           
  2589                           
  2590                           ; 1 bytes @ 0x3
  2591     0073                     	ds	1
  2592     0074                     ??___wmul:
  2593     0074                     ??___awdiv:	
  2594                           ; 1 bytes @ 0x4
  2595                           
  2596     0074                     ??___awmod:	
  2597                           ; 1 bytes @ 0x4
  2598                           
  2599     0074                     Lcd_Init@data:	
  2600                           ; 1 bytes @ 0x4
  2601                           
  2602     0074                     Lcd_Out2@buffer:	
  2603                           ; 1 bytes @ 0x4
  2604                           
  2605     0074                     ___wmul@product:	
  2606                           ; 1 bytes @ 0x4
  2607                           
  2608                           
  2609                           ; 2 bytes @ 0x4
  2610     0074                     	ds	1
  2611     0075                     ??_Lcd_Out2:
  2612     0075                     ___awdiv@counter:	
  2613                           ; 1 bytes @ 0x5
  2614                           
  2615     0075                     ___awmod@counter:	
  2616                           ; 1 bytes @ 0x5
  2617                           
  2618                           
  2619                           ; 1 bytes @ 0x5
  2620     0075                     	ds	1
  2621     0076                     ?_read_prec_or_width:
  2622     0076                     ___awdiv@sign:	
  2623                           ; 2 bytes @ 0x6
  2624                           
  2625     0076                     ___awmod@sign:	
  2626                           ; 1 bytes @ 0x6
  2627                           
  2628     0076                     read_prec_or_width@ap:	
  2629                           ; 1 bytes @ 0x6
  2630                           
  2631                           
  2632                           ; 1 bytes @ 0x6
  2633     0076                     	ds	1
  2634     0077                     ?_abs:
  2635     0077                     Lcd_Out2@y:	
  2636                           ; 2 bytes @ 0x7
  2637                           
  2638     0077                     ___awdiv@quotient:	
  2639                           ; 1 bytes @ 0x7
  2640                           
  2641     0077                     abs@a:	
  2642                           ; 2 bytes @ 0x7
  2643                           
  2644                           
  2645                           ; 2 bytes @ 0x7
  2646     0077                     	ds	1
  2647     0078                     ??_read_prec_or_width:
  2648     0078                     ?_fputs:	
  2649                           ; 1 bytes @ 0x8
  2650                           
  2651     0078                     Lcd_Out2@data:	
  2652                           ; 2 bytes @ 0x8
  2653                           
  2654     0078                     fputs@fp:	
  2655                           ; 1 bytes @ 0x8
  2656                           
  2657                           
  2658                           ; 1 bytes @ 0x8
  2659     0078                     	ds	1
  2660     0079                     ??_fputs:
  2661     0079                     ??_abs:	
  2662                           ; 1 bytes @ 0x9
  2663                           
  2664                           
  2665                           ; 1 bytes @ 0x9
  2666     0079                     	ds	2
  2667     007B                     ?_pad:
  2668     007B                     pad@buf:	
  2669                           ; 1 bytes @ 0xB
  2670                           
  2671                           
  2672                           ; 1 bytes @ 0xB
  2673     007B                     	ds	1
  2674     007C                     pad@p:
  2675                           
  2676                           ; 2 bytes @ 0xC
  2677     007C                     	ds	2
  2678                           
  2679                           	psect	cstackBANK0
  2680     0020                     __pcstackBANK0:
  2681     0020                     read_prec_or_width@c:
  2682     0020                     fputs@c:	
  2683                           ; 1 bytes @ 0x0
  2684                           
  2685                           
  2686                           ; 1 bytes @ 0x0
  2687     0020                     	ds	1
  2688     0021                     read_prec_or_width@n:
  2689     0021                     fputs@i:	
  2690                           ; 2 bytes @ 0x1
  2691                           
  2692                           
  2693                           ; 2 bytes @ 0x1
  2694     0021                     	ds	2
  2695     0023                     read_prec_or_width@fmt:
  2696     0023                     fputs@s:	
  2697                           ; 1 bytes @ 0x3
  2698                           
  2699                           
  2700                           ; 1 bytes @ 0x3
  2701     0023                     	ds	1
  2702     0024                     ??_pad:
  2703                           
  2704                           ; 1 bytes @ 0x4
  2705     0024                     	ds	1
  2706     0025                     pad@i:
  2707                           
  2708                           ; 2 bytes @ 0x5
  2709     0025                     	ds	2
  2710     0027                     pad@w:
  2711                           
  2712                           ; 2 bytes @ 0x7
  2713     0027                     	ds	2
  2714     0029                     pad@fp:
  2715                           
  2716                           ; 1 bytes @ 0x9
  2717     0029                     	ds	1
  2718     002A                     ?_dtoa:
  2719     002A                     dtoa@d:	
  2720                           ; 1 bytes @ 0xA
  2721                           
  2722                           
  2723                           ; 2 bytes @ 0xA
  2724     002A                     	ds	2
  2725     002C                     ??_dtoa:
  2726                           
  2727                           ; 1 bytes @ 0xC
  2728     002C                     	ds	1
  2729     002D                     _dtoa$1067:
  2730                           
  2731                           ; 2 bytes @ 0xD
  2732     002D                     	ds	2
  2733     002F                     dtoa@fp:
  2734                           
  2735                           ; 1 bytes @ 0xF
  2736     002F                     	ds	1
  2737     0030                     dtoa@p:
  2738                           
  2739                           ; 2 bytes @ 0x10
  2740     0030                     	ds	2
  2741     0032                     dtoa@w:
  2742                           
  2743                           ; 2 bytes @ 0x12
  2744     0032                     	ds	2
  2745     0034                     dtoa@i:
  2746                           
  2747                           ; 2 bytes @ 0x14
  2748     0034                     	ds	2
  2749     0036                     dtoa@s:
  2750                           
  2751                           ; 1 bytes @ 0x16
  2752     0036                     	ds	1
  2753     0037                     ?_vfpfcnvrt:
  2754     0037                     vfpfcnvrt@fmt:	
  2755                           ; 1 bytes @ 0x17
  2756                           
  2757                           
  2758                           ; 1 bytes @ 0x17
  2759     0037                     	ds	1
  2760     0038                     vfpfcnvrt@ap:
  2761                           
  2762                           ; 1 bytes @ 0x18
  2763     0038                     	ds	1
  2764     0039                     ??_vfpfcnvrt:
  2765                           
  2766                           ; 1 bytes @ 0x19
  2767     0039                     	ds	4
  2768     003D                     vfpfcnvrt@convarg:
  2769                           
  2770                           ; 4 bytes @ 0x1D
  2771     003D                     	ds	4
  2772     0041                     vfpfcnvrt@fp:
  2773                           
  2774                           ; 1 bytes @ 0x21
  2775     0041                     	ds	1
  2776     0042                     vfpfcnvrt@cp:
  2777                           
  2778                           ; 2 bytes @ 0x22
  2779     0042                     	ds	2
  2780     0044                     ?_vfprintf:
  2781     0044                     vfprintf@fmt:	
  2782                           ; 2 bytes @ 0x24
  2783                           
  2784                           
  2785                           ; 2 bytes @ 0x24
  2786     0044                     	ds	2
  2787     0046                     vfprintf@ap:
  2788                           
  2789                           ; 1 bytes @ 0x26
  2790     0046                     	ds	1
  2791     0047                     ??_vfprintf:
  2792                           
  2793                           ; 1 bytes @ 0x27
  2794     0047                     	ds	1
  2795     0048                     vfprintf@fp:
  2796                           
  2797                           ; 1 bytes @ 0x28
  2798     0048                     	ds	1
  2799     0049                     vfprintf@cfmt:
  2800                           
  2801                           ; 2 bytes @ 0x29
  2802     0049                     	ds	2
  2803     004B                     ?_sprintf:
  2804     004B                     sprintf@fmt:	
  2805                           ; 2 bytes @ 0x2B
  2806                           
  2807                           
  2808                           ; 2 bytes @ 0x2B
  2809     004B                     	ds	6
  2810     0051                     ??_sprintf:
  2811                           
  2812                           ; 1 bytes @ 0x31
  2813     0051                     	ds	1
  2814     0052                     sprintf@ap:
  2815                           
  2816                           ; 1 bytes @ 0x32
  2817     0052                     	ds	1
  2818     0053                     sprintf@s:
  2819                           
  2820                           ; 1 bytes @ 0x33
  2821     0053                     	ds	1
  2822     0054                     sprintf@f:
  2823                           
  2824                           ; 11 bytes @ 0x34
  2825     0054                     	ds	11
  2826     005F                     ??_main:
  2827                           
  2828                           ; 1 bytes @ 0x3F
  2829     005F                     	ds	4
  2830     0063                     main@DC:
  2831                           
  2832                           ; 2 bytes @ 0x43
  2833     0063                     	ds	2
  2834                           
  2835                           	psect	maintext
  2836     003E                     __pmaintext:	
  2837 ;;
  2838 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  2839 ;;
  2840 ;; *************** function _main *****************
  2841 ;; Defined at:
  2842 ;;		line 43 in file "main.c"
  2843 ;; Parameters:    Size  Location     Type
  2844 ;;		None
  2845 ;; Auto vars:     Size  Location     Type
  2846 ;;  DC              2   67[BANK0 ] unsigned short 
  2847 ;; Return value:  Size  Location     Type
  2848 ;;                  1    wreg      void 
  2849 ;; Registers used:
  2850 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2851 ;; Tracked objects:
  2852 ;;		On entry : B1F/0
  2853 ;;		On exit  : 0/0
  2854 ;;		Unchanged: 0/0
  2855 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2856 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2857 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2858 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2859 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2860 ;;Total ram usage:        6 bytes
  2861 ;; Hardware stack levels required when called: 9
  2862 ;; This function calls:
  2863 ;;		_Lcd_Cmd
  2864 ;;		_Lcd_Init
  2865 ;;		_Lcd_Out2
  2866 ;;		_PWM3_LoadDutyValue
  2867 ;;		_SYSTEM_Initialize
  2868 ;;		_TMR0_Timer
  2869 ;;		_TMR1_Counter
  2870 ;;		_sprintf
  2871 ;; This function is called by:
  2872 ;;		Startup code after reset
  2873 ;; This function uses a non-reentrant model
  2874 ;;
  2875                           
  2876     003E                     _main:	
  2877                           ;psect for function _main
  2878                           
  2879     003E                     l2022:	
  2880                           ;incstack = 0
  2881                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2882                           
  2883                           
  2884                           ;main.c: 44: 
  2885     003E  3186  26D5  3180   	fcall	_SYSTEM_Initialize
  2886     0041                     l2024:
  2887                           
  2888                           ;main.c: 46:     PORTB = 0;
  2889     0041  0021               	movlb	1	; select bank1
  2890     0042  0819               	movf	25,w	;volatile
  2891     0043  3987               	andlw	-121
  2892     0044  3868               	iorlw	104
  2893     0045  0099               	movwf	25	;volatile
  2894     0046                     l2026:
  2895                           
  2896                           ;main.c: 47:     PORTC = 0;
  2897     0046  30FC               	movlw	-4
  2898     0047  0599               	andwf	25,f	;volatile
  2899     0048                     l2028:
  2900                           
  2901                           ;main.c: 48: 
  2902     0048  0198               	clrf	24	;volatile
  2903     0049                     l2030:
  2904                           
  2905                           ;main.c: 51:     INTCONbits.T0IF = 0;
  2906     0049  0023               	movlb	3	; select bank3
  2907     004A  018C               	clrf	12	;volatile
  2908     004B                     l2032:
  2909                           
  2910                           ;main.c: 52:     INTCONbits.TMR0IE = 1;
  2911     004B  018D               	clrf	13	;volatile
  2912     004C                     l2034:
  2913                           
  2914                           ;main.c: 53:     TMR0_Timer();
  2915     004C  018E               	clrf	14	;volatile
  2916     004D                     l2036:
  2917                           
  2918                           ;main.c: 54:     TMR1_Counter();
  2919     004D  3024               	movlw	36
  2920     004E  0021               	movlb	1	; select bank1
  2921     004F  008C               	movwf	12	;volatile
  2922     0050                     l2038:
  2923                           
  2924                           ;main.c: 55: 
  2925     0050  018D               	clrf	13	;volatile
  2926     0051                     l2040:
  2927                           
  2928                           ;main.c: 56: 
  2929     0051  018E               	clrf	14	;volatile
  2930     0052                     l2042:
  2931                           
  2932                           ;main.c: 59: 
  2933     0052  0020               	movlb	0	; select bank0
  2934     0053  018C               	clrf	12	;volatile
  2935     0054                     l2044:
  2936                           
  2937                           ;main.c: 60: 
  2938     0054  018D               	clrf	13	;volatile
  2939     0055                     l2046:
  2940                           
  2941                           ;main.c: 61: 
  2942     0055  018E               	clrf	14	;volatile
  2943     0056                     l2048:
  2944                           
  2945                           ;main.c: 64:     Lcd_Cmd(12);
  2946     0056  178B               	bsf	11,7	;volatile
  2947     0057                     l2050:
  2948                           
  2949                           ;main.c: 65:     _delay((unsigned long)((100)*(4000000/4000.0)));
  2950     0057  110B               	bcf	11,2	;volatile
  2951     0058                     l2052:
  2952                           
  2953                           ;main.c: 66: 
  2954     0058  168B               	bsf	11,5	;volatile
  2955     0059                     l2054:
  2956                           
  2957                           ;main.c: 67:     uint16_t DC;
  2958     0059  3186  26FA  3180   	fcall	_TMR0_Timer
  2959     005C                     l2056:
  2960                           
  2961                           ;main.c: 68:     DC = 63;
  2962     005C  3187  2729  3180   	fcall	_TMR1_Counter
  2963     005F                     l2058:
  2964                           
  2965                           ;main.c: 76:         TMR1H = 0;
  2966     005F  3182  2251  3180   	fcall	_Lcd_Init
  2967     0062                     l2060:
  2968                           
  2969                           ;main.c: 77:         T1CONbits.TMR1ON = 1;
  2970     0062  3001               	movlw	1
  2971     0063  3183  2380  3180   	fcall	_Lcd_Cmd
  2972     0066                     l2062:
  2973                           
  2974                           ;main.c: 78:         _delay((unsigned long)((1000)*(4000000/4000.0)));
  2975     0066  300C               	movlw	12
  2976     0067  3183  2380  3180   	fcall	_Lcd_Cmd
  2977     006A                     l2064:
  2978                           
  2979                           ;main.c: 79:         TMR = TMR1H;
  2980     006A  3082               	movlw	130
  2981     006B  0020               	movlb	0	; select bank0
  2982     006C  00DF               	movwf	??_main
  2983     006D  30DD               	movlw	221
  2984     006E                     u1407:
  2985     006E  0B89               	decfsz	9,f
  2986     006F  286E               	goto	u1407
  2987     0070  0BDF               	decfsz	??_main,f
  2988     0071  286E               	goto	u1407
  2989     0072  3200               	nop2
  2990     0073                     l2066:
  2991                           
  2992                           ;main.c: 81:         TMR = TMR + TMR1L;;main.c: 82:         T1CONbits.TMR1ON = 0;
  2993     0073  303F               	movlw	63
  2994     0074  0020               	movlb	0	; select bank0
  2995     0075  00E3               	movwf	main@DC
  2996     0076  3000               	movlw	0
  2997     0077  00E4               	movwf	main@DC+1
  2998     0078                     l2068:
  2999                           
  3000                           ;main.c: 85:         TMR1H = 0;
  3001     0078  0020               	movlb	0	; select bank0
  3002     0079  0864               	movf	main@DC+1,w
  3003     007A  00F1               	movwf	PWM3_LoadDutyValue@dutyValue+1
  3004     007B  0863               	movf	main@DC,w
  3005     007C  00F0               	movwf	PWM3_LoadDutyValue@dutyValue
  3006     007D  3186  26BF  3180   	fcall	_PWM3_LoadDutyValue
  3007     0080                     l2070:
  3008                           
  3009                           ;main.c: 86:         TIMER = TMR;
  3010     0080  0020               	movlb	0	; select bank0
  3011     0081  01E9               	clrf	_TIMER
  3012     0082  01EA               	clrf	_TIMER+1
  3013     0083                     l2072:
  3014                           
  3015                           ;main.c: 87: 
  3016     0083  01EB               	clrf	_TMR
  3017     0084  01EC               	clrf	_TMR+1
  3018     0085                     l2074:
  3019                           
  3020                           ;main.c: 88:         sprintf((char *)buffer1,"Cuenta: %5d", TIMER);
  3021     0085  0196               	clrf	22	;volatile
  3022     0086  0197               	clrf	23	;volatile
  3023     0087                     l2076:
  3024                           
  3025                           ;main.c: 89:         sprintf((char *)buffer2,"H:%2d L:%2d", TMR1H, TMR1L);
  3026     0087  0196               	clrf	22	;volatile
  3027     0088                     l2078:
  3028                           
  3029                           ;main.c: 90:         Lcd_Out2(1,1,(char *)buffer1);
  3030     0088  0197               	clrf	23	;volatile
  3031     0089                     l2080:
  3032                           
  3033                           ;main.c: 91:         Lcd_Out2(2,1,(char *)buffer2);
  3034     0089  1418               	bsf	24,0	;volatile
  3035     008A                     l2082:
  3036                           
  3037                           ;main.c: 92:         _delay((unsigned long)((1000)*(4000000/4000.0)));
  3038     008A  3006               	movlw	6
  3039     008B  0020               	movlb	0	; select bank0
  3040     008C  00E0               	movwf	??_main+1
  3041     008D  3013               	movlw	19
  3042     008E  00DF               	movwf	??_main
  3043     008F  30AD               	movlw	173
  3044     0090                     u1417:
  3045     0090  0B89               	decfsz	9,f
  3046     0091  2890               	goto	u1417
  3047     0092  0BDF               	decfsz	??_main,f
  3048     0093  2890               	goto	u1417
  3049     0094  0BE0               	decfsz	??_main+1,f
  3050     0095  2890               	goto	u1417
  3051     0096  3200               	nop2
  3052     0097                     l2084:
  3053                           
  3054                           ;main.c: 93:     }
  3055     0097  0020               	movlb	0	; select bank0
  3056     0098  0817               	movf	23,w	;volatile
  3057     0099  00DF               	movwf	??_main
  3058     009A  01E0               	clrf	??_main+1
  3059     009B  085F               	movf	??_main,w
  3060     009C  00EB               	movwf	_TMR
  3061     009D  0860               	movf	??_main+1,w
  3062     009E  00EC               	movwf	_TMR+1
  3063     009F                     l2086:
  3064                           
  3065                           ;main.c: 94:  return;
  3066     009F  086B               	movf	_TMR,w
  3067     00A0  00E0               	movwf	??_main+1
  3068     00A1  01DF               	clrf	??_main
  3069     00A2  085F               	movf	??_main,w
  3070     00A3  00EB               	movwf	_TMR
  3071     00A4  0860               	movf	??_main+1,w
  3072     00A5  00EC               	movwf	_TMR+1
  3073     00A6                     l2088:
  3074                           
  3075                           ;main.c: 95: }
  3076     00A6  0816               	movf	22,w	;volatile
  3077     00A7  076B               	addwf	_TMR,w
  3078     00A8  00DF               	movwf	??_main
  3079     00A9  086C               	movf	_TMR+1,w
  3080     00AA  1803               	skipnc
  3081     00AB  0A6C               	incf	_TMR+1,w
  3082     00AC  00E0               	movwf	??_main+1
  3083     00AD  085F               	movf	??_main,w
  3084     00AE  00EB               	movwf	_TMR
  3085     00AF  0860               	movf	??_main+1,w
  3086     00B0  00EC               	movwf	_TMR+1
  3087     00B1                     l2090:
  3088     00B1  1018               	bcf	24,0	;volatile
  3089     00B2                     l2092:
  3090     00B2  0196               	clrf	22	;volatile
  3091     00B3  0197               	clrf	23	;volatile
  3092     00B4                     l2094:
  3093     00B4  0196               	clrf	22	;volatile
  3094     00B5                     l2096:
  3095     00B5  0197               	clrf	23	;volatile
  3096     00B6                     l2098:
  3097     00B6  086C               	movf	_TMR+1,w
  3098     00B7  00EA               	movwf	_TIMER+1
  3099     00B8  086B               	movf	_TMR,w
  3100     00B9  00E9               	movwf	_TIMER
  3101     00BA                     l2100:
  3102     00BA  30EE               	movlw	low (STR_1| (0+32768))
  3103     00BB  00CB               	movwf	sprintf@fmt
  3104     00BC  3086               	movlw	high (STR_1| (0+32768))
  3105     00BD  00CC               	movwf	sprintf@fmt+1
  3106     00BE  086A               	movf	_TIMER+1,w
  3107     00BF  00CE               	movwf	?_sprintf+3
  3108     00C0  0869               	movf	_TIMER,w
  3109     00C1  00CD               	movwf	?_sprintf+2
  3110     00C2  30D8               	movlw	(low (_buffer1| 0))& (0+255)
  3111     00C3  3186  266C  3180   	fcall	_sprintf
  3112     00C6                     l2102:
  3113     00C6  30E2               	movlw	low (STR_2| (0+32768))
  3114     00C7  0020               	movlb	0	; select bank0
  3115     00C8  00CB               	movwf	sprintf@fmt
  3116     00C9  3086               	movlw	high (STR_2| (0+32768))
  3117     00CA  00CC               	movwf	sprintf@fmt+1
  3118     00CB  0817               	movf	23,w	;volatile
  3119     00CC  00DF               	movwf	??_main
  3120     00CD  01E0               	clrf	??_main+1
  3121     00CE  085F               	movf	??_main,w
  3122     00CF  00CD               	movwf	?_sprintf+2
  3123     00D0  0860               	movf	??_main+1,w
  3124     00D1  00CE               	movwf	?_sprintf+3
  3125     00D2  0816               	movf	22,w	;volatile
  3126     00D3  00E1               	movwf	??_main+2
  3127     00D4  01E2               	clrf	??_main+3
  3128     00D5  0861               	movf	??_main+2,w
  3129     00D6  00CF               	movwf	?_sprintf+4
  3130     00D7  0862               	movf	??_main+3,w
  3131     00D8  00D0               	movwf	?_sprintf+5
  3132     00D9  30C4               	movlw	(low (_buffer2| 0))& (0+255)
  3133     00DA  3186  266C  3180   	fcall	_sprintf
  3134     00DD                     l2104:
  3135     00DD  01F3               	clrf	Lcd_Out2@x
  3136     00DE  0AF3               	incf	Lcd_Out2@x,f
  3137     00DF  30D8               	movlw	(low (_buffer1| 0))& (0+255)
  3138     00E0  00F4               	movwf	Lcd_Out2@buffer
  3139     00E1  3001               	movlw	1
  3140     00E2  3185  25BA  3180   	fcall	_Lcd_Out2
  3141     00E5                     l2106:
  3142     00E5  01F3               	clrf	Lcd_Out2@x
  3143     00E6  0AF3               	incf	Lcd_Out2@x,f
  3144     00E7  30C4               	movlw	(low (_buffer2| 0))& (0+255)
  3145     00E8  00F4               	movwf	Lcd_Out2@buffer
  3146     00E9  3002               	movlw	2
  3147     00EA  3185  25BA  3180   	fcall	_Lcd_Out2
  3148     00ED                     l2108:
  3149     00ED  3006               	movlw	6
  3150     00EE  0020               	movlb	0	; select bank0
  3151     00EF  00E0               	movwf	??_main+1
  3152     00F0  3013               	movlw	19
  3153     00F1  00DF               	movwf	??_main
  3154     00F2  30AD               	movlw	173
  3155     00F3                     u1427:
  3156     00F3  0B89               	decfsz	9,f
  3157     00F4  28F3               	goto	u1427
  3158     00F5  0BDF               	decfsz	??_main,f
  3159     00F6  28F3               	goto	u1427
  3160     00F7  0BE0               	decfsz	??_main+1,f
  3161     00F8  28F3               	goto	u1427
  3162     00F9  3200               	nop2
  3163     00FA  2878               	goto	l2068
  3164     00FB  3180  2828         	ljmp	start
  3165     00FD                     __end_of_main:
  3166                           
  3167                           	psect	text1
  3168     066C                     __ptext1:	
  3169 ;; *************** function _sprintf *****************
  3170 ;; Defined at:
  3171 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_sprintf.c"
  3172 ;; Parameters:    Size  Location     Type
  3173 ;;  s               1    wreg     PTR unsigned char 
  3174 ;;		 -> buffer2(20), buffer1(20), 
  3175 ;;  fmt             2   43[BANK0 ] PTR const unsigned char 
  3176 ;;		 -> STR_2(12), STR_1(12), 
  3177 ;; Auto vars:     Size  Location     Type
  3178 ;;  s               1   51[BANK0 ] PTR unsigned char 
  3179 ;;		 -> buffer2(20), buffer1(20), 
  3180 ;;  f              11   52[BANK0 ] struct _IO_FILE
  3181 ;;  ret             2    0        int 
  3182 ;;  ap              1   50[BANK0 ] PTR void [1]
  3183 ;;		 -> ?_sprintf(2), 
  3184 ;; Return value:  Size  Location     Type
  3185 ;;                  2   43[BANK0 ] int 
  3186 ;; Registers used:
  3187 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3188 ;; Tracked objects:
  3189 ;;		On entry : 0/0
  3190 ;;		On exit  : 0/0
  3191 ;;		Unchanged: 0/0
  3192 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3193 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3194 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3195 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3196 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3197 ;;Total ram usage:       20 bytes
  3198 ;; Hardware stack levels used: 1
  3199 ;; Hardware stack levels required when called: 8
  3200 ;; This function calls:
  3201 ;;		_vfprintf
  3202 ;; This function is called by:
  3203 ;;		_main
  3204 ;; This function uses a non-reentrant model
  3205 ;;
  3206                           
  3207     066C                     _sprintf:	
  3208                           ;psect for function _sprintf
  3209                           
  3210                           
  3211                           ;incstack = 0
  3212                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3213                           ;sprintf@s stored from wreg
  3214     066C  0020               	movlb	0	; select bank0
  3215     066D  00D3               	movwf	sprintf@s
  3216     066E                     l1972:
  3217     066E  304D               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  3218     066F  00D2               	movwf	sprintf@ap
  3219     0670  0853               	movf	sprintf@s,w
  3220     0671  00D4               	movwf	sprintf@f
  3221     0672                     l1974:
  3222     0672  01D6               	clrf	sprintf@f+2
  3223     0673  01D7               	clrf	sprintf@f+3
  3224     0674                     l1976:
  3225     0674  01DD               	clrf	sprintf@f+9
  3226     0675  01DE               	clrf	sprintf@f+10
  3227     0676                     l1978:
  3228     0676  084C               	movf	sprintf@fmt+1,w
  3229     0677  00C5               	movwf	vfprintf@fmt+1
  3230     0678  084B               	movf	sprintf@fmt,w
  3231     0679  00C4               	movwf	vfprintf@fmt
  3232     067A  3052               	movlw	(low (sprintf@ap| 0))& (0+255)
  3233     067B  00C6               	movwf	vfprintf@ap
  3234     067C  3054               	movlw	(low (sprintf@f| 0))& (0+255)
  3235     067D  3186  2689  3186   	fcall	_vfprintf
  3236     0680                     l1980:
  3237     0680  0020               	movlb	0	; select bank0
  3238     0681  0856               	movf	sprintf@f+2,w
  3239     0682  0753               	addwf	sprintf@s,w
  3240     0683  00D1               	movwf	??_sprintf
  3241     0684  0851               	movf	??_sprintf,w
  3242     0685  0086               	movwf	6
  3243     0686  0187               	clrf	7
  3244     0687  0181               	clrf	1
  3245     0688                     l811:
  3246     0688  0008               	return
  3247     0689                     __end_of_sprintf:
  3248                           
  3249                           	psect	text2
  3250     0689                     __ptext2:	
  3251 ;; *************** function _vfprintf *****************
  3252 ;; Defined at:
  3253 ;;		line 1546 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  3254 ;; Parameters:    Size  Location     Type
  3255 ;;  fp              1    wreg     PTR struct _IO_FILE
  3256 ;;		 -> sprintf@f(11), 
  3257 ;;  fmt             2   36[BANK0 ] PTR const unsigned char 
  3258 ;;		 -> STR_2(12), STR_1(12), 
  3259 ;;  ap              1   38[BANK0 ] PTR PTR void 
  3260 ;;		 -> sprintf@ap(1), 
  3261 ;; Auto vars:     Size  Location     Type
  3262 ;;  fp              1   40[BANK0 ] PTR struct _IO_FILE
  3263 ;;		 -> sprintf@f(11), 
  3264 ;;  cfmt            2   41[BANK0 ] PTR unsigned char 
  3265 ;;		 -> STR_2(12), STR_1(12), 
  3266 ;; Return value:  Size  Location     Type
  3267 ;;                  2   36[BANK0 ] int 
  3268 ;; Registers used:
  3269 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3270 ;; Tracked objects:
  3271 ;;		On entry : 0/0
  3272 ;;		On exit  : 0/0
  3273 ;;		Unchanged: 0/0
  3274 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3275 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3276 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3277 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3278 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3279 ;;Total ram usage:        7 bytes
  3280 ;; Hardware stack levels used: 1
  3281 ;; Hardware stack levels required when called: 7
  3282 ;; This function calls:
  3283 ;;		_vfpfcnvrt
  3284 ;; This function is called by:
  3285 ;;		_sprintf
  3286 ;; This function uses a non-reentrant model
  3287 ;;
  3288                           
  3289     0689                     _vfprintf:	
  3290                           ;psect for function _vfprintf
  3291                           
  3292                           
  3293                           ;incstack = 0
  3294                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3295                           ;vfprintf@fp stored from wreg
  3296     0689  0020               	movlb	0	; select bank0
  3297     068A  00C8               	movwf	vfprintf@fp
  3298     068B                     l1898:
  3299                           
  3300                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1546: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.41\pic\source
      +                          s\c99\common\doprnt.c: 1547: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\comm
      +                          on\doprnt.c: 1549:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\
      +                          common\doprnt.c: 1551:     cfmt = (char *)fmt;
  3301     068B  0845               	movf	vfprintf@fmt+1,w
  3302     068C  00CA               	movwf	vfprintf@cfmt+1
  3303     068D  0844               	movf	vfprintf@fmt,w
  3304     068E  00C9               	movwf	vfprintf@cfmt
  3305                           
  3306                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1555:     while (
      +                          *cfmt) {
  3307     068F  2E98               	goto	l1902
  3308     0690                     l1900:
  3309                           
  3310                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1559:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  3311     0690  3049               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  3312     0691  00B7               	movwf	vfpfcnvrt@fmt
  3313     0692  0846               	movf	vfprintf@ap,w
  3314     0693  00B8               	movwf	vfpfcnvrt@ap
  3315     0694  0848               	movf	vfprintf@fp,w
  3316     0695  3181  21B6  3186   	fcall	_vfpfcnvrt
  3317     0698                     l1902:
  3318                           
  3319                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1555:     while (
      +                          *cfmt) {
  3320     0698  0020               	movlb	0	; select bank0
  3321     0699  0849               	movf	vfprintf@cfmt,w
  3322     069A  0084               	movwf	4
  3323     069B  084A               	movf	vfprintf@cfmt+1,w
  3324     069C  0085               	movwf	5
  3325     069D  0012               	moviw fsr0++
  3326     069E  1D03               	btfss	3,2
  3327     069F  2EA1               	goto	u1321
  3328     06A0  2EA2               	goto	u1320
  3329     06A1                     u1321:
  3330     06A1  2E90               	goto	l1900
  3331     06A2                     u1320:
  3332     06A2                     l1904:
  3333                           
  3334                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1564:  return 0;
  3335     06A2  01C4               	clrf	?_vfprintf
  3336     06A3  01C5               	clrf	?_vfprintf+1
  3337     06A4                     l880:
  3338     06A4  0008               	return
  3339     06A5                     __end_of_vfprintf:
  3340                           
  3341                           	psect	text3
  3342     01B6                     __ptext3:	
  3343 ;; *************** function _vfpfcnvrt *****************
  3344 ;; Defined at:
  3345 ;;		line 1048 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  3346 ;; Parameters:    Size  Location     Type
  3347 ;;  fp              1    wreg     PTR struct _IO_FILE
  3348 ;;		 -> sprintf@f(11), 
  3349 ;;  fmt             1   23[BANK0 ] PTR PTR unsigned char 
  3350 ;;		 -> vfprintf@cfmt(2), 
  3351 ;;  ap              1   24[BANK0 ] PTR PTR void 
  3352 ;;		 -> sprintf@ap(1), 
  3353 ;; Auto vars:     Size  Location     Type
  3354 ;;  fp              1   33[BANK0 ] PTR struct _IO_FILE
  3355 ;;		 -> sprintf@f(11), 
  3356 ;;  convarg         4   29[BANK0 ] struct .
  3357 ;;  cp              2   34[BANK0 ] PTR unsigned char 
  3358 ;;		 -> STR_2(12), STR_1(12), 
  3359 ;;  i               2    0        int 
  3360 ;;  done            2    0        int 
  3361 ;;  c               1    0        unsigned char 
  3362 ;; Return value:  Size  Location     Type
  3363 ;;                  1    wreg      void 
  3364 ;; Registers used:
  3365 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3366 ;; Tracked objects:
  3367 ;;		On entry : 0/0
  3368 ;;		On exit  : 0/0
  3369 ;;		Unchanged: 0/0
  3370 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3371 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3372 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3373 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3374 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3375 ;;Total ram usage:       13 bytes
  3376 ;; Hardware stack levels used: 1
  3377 ;; Hardware stack levels required when called: 6
  3378 ;; This function calls:
  3379 ;;		_dtoa
  3380 ;;		_fputc
  3381 ;;		_read_prec_or_width
  3382 ;; This function is called by:
  3383 ;;		_vfprintf
  3384 ;; This function uses a non-reentrant model
  3385 ;;
  3386                           
  3387     01B6                     _vfpfcnvrt:	
  3388                           ;psect for function _vfpfcnvrt
  3389                           
  3390                           
  3391                           ;incstack = 0
  3392                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3393                           ;vfpfcnvrt@fp stored from wreg
  3394     01B6  0020               	movlb	0	; select bank0
  3395     01B7  00C1               	movwf	vfpfcnvrt@fp
  3396     01B8                     l1748:
  3397                           
  3398                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1048: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1049: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\dopr
      +                          nt.c: 1050:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common
      +                          \doprnt.c: 1051:     int done, i;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1059:  } convarg;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1062:     if ((*fmt)[0] == '%') {
  3399     01B8  0837               	movf	vfpfcnvrt@fmt,w
  3400     01B9  0086               	movwf	6
  3401     01BA  0187               	clrf	7
  3402     01BB  3F40               	moviw [0]fsr1
  3403     01BC  00B9               	movwf	??_vfpfcnvrt
  3404     01BD  3F41               	moviw [1]fsr1
  3405     01BE  00BA               	movwf	??_vfpfcnvrt+1
  3406     01BF  0839               	movf	??_vfpfcnvrt,w
  3407     01C0  0084               	movwf	4
  3408     01C1  083A               	movf	??_vfpfcnvrt+1,w
  3409     01C2  0085               	movwf	5
  3410     01C3  0012               	moviw fsr0++
  3411     01C4  3A25               	xorlw	37
  3412     01C5  1D03               	btfss	3,2
  3413     01C6  29C8               	goto	u1161
  3414     01C7  29C9               	goto	u1160
  3415     01C8                     u1161:
  3416     01C8  2A38               	goto	l1782
  3417     01C9                     u1160:
  3418     01C9                     l1750:
  3419                           
  3420                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1063:         ++*
      +                          fmt;
  3421     01C9  0837               	movf	vfpfcnvrt@fmt,w
  3422     01CA  0086               	movwf	6
  3423     01CB  0187               	clrf	7
  3424     01CC  3001               	movlw	1
  3425     01CD  0781               	addwf	1,f
  3426     01CE  3141               	addfsr 1,1
  3427     01CF  1803               	skipnc
  3428     01D0  0A81               	incf	1,f
  3429     01D1                     l1752:
  3430                           
  3431                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1065:         fla
      +                          gs = width = 0;
  3432     01D1  01E5               	clrf	_width
  3433     01D2  01E6               	clrf	_width+1
  3434     01D3  1003               	clrc
  3435     01D4  3000               	movlw	0
  3436     01D5  1803               	btfsc	3,0
  3437     01D6  3001               	movlw	1
  3438     01D7  00EF               	movwf	_flags
  3439     01D8                     l1754:
  3440                           
  3441                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1066:         pre
      +                          c = -1;
  3442     01D8  30FF               	movlw	255
  3443     01D9  00E7               	movwf	_prec
  3444     01DA  30FF               	movlw	255
  3445     01DB  00E8               	movwf	_prec+1
  3446     01DC                     l1756:
  3447                           
  3448                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1117:   width = r
      +                          ead_prec_or_width(fmt, ap);
  3449     01DC  0838               	movf	vfpfcnvrt@ap,w
  3450     01DD  00F6               	movwf	read_prec_or_width@ap
  3451     01DE  0837               	movf	vfpfcnvrt@fmt,w
  3452     01DF  3184  2413  3181   	fcall	_read_prec_or_width
  3453     01E2  0877               	movf	?_read_prec_or_width+1,w
  3454     01E3  0020               	movlb	0	; select bank0
  3455     01E4  00E6               	movwf	_width+1
  3456     01E5  0876               	movf	?_read_prec_or_width,w
  3457     01E6  00E5               	movwf	_width
  3458     01E7                     l1758:
  3459                           
  3460                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1118:   if (width
      +                           < 0) {
  3461     01E7  1FE6               	btfss	_width+1,7
  3462     01E8  29EA               	goto	u1171
  3463     01E9  29EB               	goto	u1170
  3464     01EA                     u1171:
  3465     01EA  29F1               	goto	l1764
  3466     01EB                     u1170:
  3467     01EB                     l1760:
  3468                           
  3469                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1119:    flags |=
      +                           (1 << 0);
  3470     01EB  146F               	bsf	_flags,0
  3471     01EC                     l1762:
  3472                           
  3473                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1120:    width = 
      +                          -width;
  3474     01EC  09E5               	comf	_width,f
  3475     01ED  09E6               	comf	_width+1,f
  3476     01EE  0AE5               	incf	_width,f
  3477     01EF  1903               	skipnz
  3478     01F0  0AE6               	incf	_width+1,f
  3479     01F1                     l1764:
  3480                           
  3481                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1143:   cp = *fmt
      +                          ;
  3482     01F1  0837               	movf	vfpfcnvrt@fmt,w
  3483     01F2  0086               	movwf	6
  3484     01F3  0187               	clrf	7
  3485     01F4  3F40               	moviw [0]fsr1
  3486     01F5  00C2               	movwf	vfpfcnvrt@cp
  3487     01F6  3F41               	moviw [1]fsr1
  3488     01F7  00C3               	movwf	vfpfcnvrt@cp+1
  3489     01F8                     l1766:
  3490                           
  3491                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1213:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  3492     01F8  0842               	movf	vfpfcnvrt@cp,w
  3493     01F9  0084               	movwf	4
  3494     01FA  0843               	movf	vfpfcnvrt@cp+1,w
  3495     01FB  0085               	movwf	5
  3496     01FC  0012               	moviw fsr0++
  3497     01FD  3A64               	xorlw	100
  3498     01FE  1903               	btfsc	3,2
  3499     01FF  2A01               	goto	u1181
  3500     0200  2A02               	goto	u1180
  3501     0201                     u1181:
  3502     0201  2A0C               	goto	l1770
  3503     0202                     u1180:
  3504     0202                     l1768:
  3505     0202  0842               	movf	vfpfcnvrt@cp,w
  3506     0203  0084               	movwf	4
  3507     0204  0843               	movf	vfpfcnvrt@cp+1,w
  3508     0205  0085               	movwf	5
  3509     0206  0012               	moviw fsr0++
  3510     0207  3A69               	xorlw	105
  3511     0208  1D03               	btfss	3,2
  3512     0209  2A0B               	goto	u1191
  3513     020A  2A0C               	goto	u1190
  3514     020B                     u1191:
  3515     020B  2A2E               	goto	l1778
  3516     020C                     u1190:
  3517     020C                     l1770:
  3518                           
  3519                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1256:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  3520     020C  0838               	movf	vfpfcnvrt@ap,w
  3521     020D  0086               	movwf	6
  3522     020E  0187               	clrf	7
  3523     020F  0801               	movf	1,w
  3524     0210  0084               	movwf	4
  3525     0211  0185               	clrf	5
  3526     0212  3002               	movlw	2
  3527     0213  0781               	addwf	1,f
  3528     0214  3F00               	moviw [0]fsr0
  3529     0215  00BD               	movwf	vfpfcnvrt@convarg
  3530     0216  3F01               	moviw [1]fsr0
  3531     0217  00BE               	movwf	vfpfcnvrt@convarg+1
  3532     0218                     l1772:
  3533                           
  3534                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1258:    *fmt = c
      +                          p+1;
  3535     0218  0842               	movf	vfpfcnvrt@cp,w
  3536     0219  3E01               	addlw	1
  3537     021A  00B9               	movwf	??_vfpfcnvrt
  3538     021B  3000               	movlw	0
  3539     021C  3D43               	addwfc	vfpfcnvrt@cp+1,w
  3540     021D  00BA               	movwf	??_vfpfcnvrt+1
  3541     021E  0837               	movf	vfpfcnvrt@fmt,w
  3542     021F  0086               	movwf	6
  3543     0220  0187               	clrf	7
  3544     0221  0839               	movf	??_vfpfcnvrt,w
  3545     0222  3FC0               	movwi [0]fsr1
  3546     0223  083A               	movf	??_vfpfcnvrt+1,w
  3547     0224  3FC1               	movwi [1]fsr1
  3548     0225                     l1774:
  3549                           
  3550                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1259:    return (
      +                          void) dtoa(fp, convarg.sint);;	Return value of _vfpfcnvrt is never used
  3551     0225  083E               	movf	vfpfcnvrt@convarg+1,w
  3552     0226  00AB               	movwf	dtoa@d+1
  3553     0227  083D               	movf	vfpfcnvrt@convarg,w
  3554     0228  00AA               	movwf	dtoa@d
  3555     0229  0841               	movf	vfpfcnvrt@fp,w
  3556     022A  3180  20FD  3181   	fcall	_dtoa
  3557     022D  2A50               	goto	l874
  3558     022E                     l1778:
  3559                           
  3560                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1535:         ++*
      +                          fmt;
  3561     022E  0020               	movlb	0	; select bank0
  3562     022F  0837               	movf	vfpfcnvrt@fmt,w
  3563     0230  0086               	movwf	6
  3564     0231  0187               	clrf	7
  3565     0232  3001               	movlw	1
  3566     0233  0781               	addwf	1,f
  3567     0234  3141               	addfsr 1,1
  3568     0235  1803               	skipnc
  3569     0236  0A81               	incf	1,f
  3570     0237  2A50               	goto	l874
  3571     0238                     l1782:
  3572                           
  3573                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1540:     fputc((
      +                          int)(*fmt)[0], fp);
  3574     0238  0837               	movf	vfpfcnvrt@fmt,w
  3575     0239  0086               	movwf	6
  3576     023A  0187               	clrf	7
  3577     023B  3F40               	moviw [0]fsr1
  3578     023C  00B9               	movwf	??_vfpfcnvrt
  3579     023D  3F41               	moviw [1]fsr1
  3580     023E  00BA               	movwf	??_vfpfcnvrt+1
  3581     023F  0839               	movf	??_vfpfcnvrt,w
  3582     0240  0084               	movwf	4
  3583     0241  083A               	movf	??_vfpfcnvrt+1,w
  3584     0242  0085               	movwf	5
  3585     0243  0800               	movf	0,w	;code access
  3586     0244  00BB               	movwf	??_vfpfcnvrt+2
  3587     0245  01BC               	clrf	??_vfpfcnvrt+3
  3588     0246  083B               	movf	??_vfpfcnvrt+2,w
  3589     0247  00F0               	movwf	fputc@c
  3590     0248  083C               	movf	??_vfpfcnvrt+3,w
  3591     0249  00F1               	movwf	fputc@c+1
  3592     024A  0841               	movf	vfpfcnvrt@fp,w
  3593     024B  00F2               	movwf	fputc@fp
  3594     024C  3185  2525  3181   	fcall	_fputc
  3595     024F  2A2E               	goto	l1778
  3596     0250                     l874:
  3597     0250  0008               	return
  3598     0251                     __end_of_vfpfcnvrt:
  3599                           
  3600                           	psect	text4
  3601     0413                     __ptext4:	
  3602 ;; *************** function _read_prec_or_width *****************
  3603 ;; Defined at:
  3604 ;;		line 1029 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  3605 ;; Parameters:    Size  Location     Type
  3606 ;;  fmt             1    wreg     PTR PTR const unsigned c
  3607 ;;		 -> vfprintf@cfmt(2), 
  3608 ;;  ap              1    6[COMMON] PTR PTR void [1]
  3609 ;;		 -> sprintf@ap(1), 
  3610 ;; Auto vars:     Size  Location     Type
  3611 ;;  fmt             1    3[BANK0 ] PTR PTR const unsigned c
  3612 ;;		 -> vfprintf@cfmt(2), 
  3613 ;;  c               1    0[BANK0 ] unsigned char 
  3614 ;;  n               2    1[BANK0 ] int 
  3615 ;; Return value:  Size  Location     Type
  3616 ;;                  2    6[COMMON] int 
  3617 ;; Registers used:
  3618 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3619 ;; Tracked objects:
  3620 ;;		On entry : 0/0
  3621 ;;		On exit  : 0/0
  3622 ;;		Unchanged: 0/0
  3623 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3624 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3625 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3626 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3627 ;;      Totals:         5       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3628 ;;Total ram usage:        9 bytes
  3629 ;; Hardware stack levels used: 1
  3630 ;; Hardware stack levels required when called: 2
  3631 ;; This function calls:
  3632 ;;		___wmul
  3633 ;; This function is called by:
  3634 ;;		_vfpfcnvrt
  3635 ;; This function uses a non-reentrant model
  3636 ;;
  3637                           
  3638     0413                     _read_prec_or_width:	
  3639                           ;psect for function _read_prec_or_width
  3640                           
  3641                           
  3642                           ;incstack = 0
  3643                           ; Regs used in _read_prec_or_width: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3644                           ;read_prec_or_width@fmt stored from wreg
  3645     0413  0020               	movlb	0	; select bank0
  3646     0414  00A3               	movwf	read_prec_or_width@fmt
  3647     0415                     l1730:
  3648                           
  3649                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1030:     int n =
      +                           0;
  3650     0415  01A1               	clrf	read_prec_or_width@n
  3651     0416  01A2               	clrf	read_prec_or_width@n+1
  3652     0417                     l1732:
  3653                           
  3654                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1031:     if ((*f
      +                          mt)[0] == '*') {
  3655     0417  0823               	movf	read_prec_or_width@fmt,w
  3656     0418  0086               	movwf	6
  3657     0419  0187               	clrf	7
  3658     041A  3F40               	moviw [0]fsr1
  3659     041B  00F8               	movwf	??_read_prec_or_width
  3660     041C  3F41               	moviw [1]fsr1
  3661     041D  00F9               	movwf	??_read_prec_or_width+1
  3662     041E  0878               	movf	??_read_prec_or_width,w
  3663     041F  0084               	movwf	4
  3664     0420  0879               	movf	??_read_prec_or_width+1,w
  3665     0421  0085               	movwf	5
  3666     0422  0012               	moviw fsr0++
  3667     0423  3A2A               	xorlw	42
  3668     0424  1D03               	btfss	3,2
  3669     0425  2C27               	goto	u1141
  3670     0426  2C28               	goto	u1140
  3671     0427                     u1141:
  3672     0427  2C5A               	goto	l1742
  3673     0428                     u1140:
  3674     0428                     l1734:
  3675                           
  3676                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1032:         ++*
      +                          fmt;
  3677     0428  0823               	movf	read_prec_or_width@fmt,w
  3678     0429  0086               	movwf	6
  3679     042A  0187               	clrf	7
  3680     042B  3001               	movlw	1
  3681     042C  0781               	addwf	1,f
  3682     042D  3141               	addfsr 1,1
  3683     042E  1803               	skipnc
  3684     042F  0A81               	incf	1,f
  3685     0430                     l1736:
  3686                           
  3687                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1033:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
  3688     0430  0876               	movf	read_prec_or_width@ap,w
  3689     0431  0086               	movwf	6
  3690     0432  0187               	clrf	7
  3691     0433  0801               	movf	1,w
  3692     0434  0084               	movwf	4
  3693     0435  0185               	clrf	5
  3694     0436  3002               	movlw	2
  3695     0437  0781               	addwf	1,f
  3696     0438  3F00               	moviw [0]fsr0
  3697     0439  00A1               	movwf	read_prec_or_width@n
  3698     043A  3F01               	moviw [1]fsr0
  3699     043B  00A2               	movwf	read_prec_or_width@n+1
  3700                           
  3701                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1034:     } else 
      +                          {
  3702     043C  2C6E               	goto	l1744
  3703     043D                     l1738:
  3704                           
  3705                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1037:            
      +                           n = n * 10 + c;
  3706     043D  0820               	movf	read_prec_or_width@c,w
  3707     043E  00F8               	movwf	??_read_prec_or_width
  3708     043F  01F9               	clrf	??_read_prec_or_width+1
  3709     0440  0822               	movf	read_prec_or_width@n+1,w
  3710     0441  00F1               	movwf	___wmul@multiplier+1
  3711     0442  0821               	movf	read_prec_or_width@n,w
  3712     0443  00F0               	movwf	___wmul@multiplier
  3713     0444  300A               	movlw	10
  3714     0445  00F2               	movwf	___wmul@multiplicand
  3715     0446  3000               	movlw	0
  3716     0447  00F3               	movwf	___wmul@multiplicand+1
  3717     0448  3186  264D  3184   	fcall	___wmul
  3718     044B  0878               	movf	??_read_prec_or_width,w
  3719     044C  0770               	addwf	?___wmul,w
  3720     044D  0020               	movlb	0	; select bank0
  3721     044E  00A1               	movwf	read_prec_or_width@n
  3722     044F  0879               	movf	??_read_prec_or_width+1,w
  3723     0450  3D71               	addwfc	?___wmul+1,w
  3724     0451  00A2               	movwf	read_prec_or_width@n+1
  3725     0452                     l1740:
  3726                           
  3727                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1038:            
      +                           ++*fmt;
  3728     0452  0823               	movf	read_prec_or_width@fmt,w
  3729     0453  0086               	movwf	6
  3730     0454  0187               	clrf	7
  3731     0455  3001               	movlw	1
  3732     0456  0781               	addwf	1,f
  3733     0457  3141               	addfsr 1,1
  3734     0458  1803               	skipnc
  3735     0459  0A81               	incf	1,f
  3736     045A                     l1742:
  3737                           
  3738                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1036:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  3739     045A  0823               	movf	read_prec_or_width@fmt,w
  3740     045B  0086               	movwf	6
  3741     045C  0187               	clrf	7
  3742     045D  3F40               	moviw [0]fsr1
  3743     045E  00F8               	movwf	??_read_prec_or_width
  3744     045F  3F41               	moviw [1]fsr1
  3745     0460  00F9               	movwf	??_read_prec_or_width+1
  3746     0461  0878               	movf	??_read_prec_or_width,w
  3747     0462  0084               	movwf	4
  3748     0463  0879               	movf	??_read_prec_or_width+1,w
  3749     0464  0085               	movwf	5
  3750     0465  0800               	movf	0,w	;code access
  3751     0466  3ED0               	addlw	208
  3752     0467  00A0               	movwf	read_prec_or_width@c
  3753     0468  300A               	movlw	10
  3754     0469  0220               	subwf	read_prec_or_width@c,w
  3755     046A  1C03               	skipc
  3756     046B  2C6D               	goto	u1151
  3757     046C  2C6E               	goto	u1150
  3758     046D                     u1151:
  3759     046D  2C3D               	goto	l1738
  3760     046E                     u1150:
  3761     046E                     l1744:
  3762                           
  3763                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1041:     return 
      +                          n;
  3764     046E  0822               	movf	read_prec_or_width@n+1,w
  3765     046F  00F7               	movwf	?_read_prec_or_width+1
  3766     0470  0821               	movf	read_prec_or_width@n,w
  3767     0471  00F6               	movwf	?_read_prec_or_width
  3768     0472                     l866:
  3769     0472  0008               	return
  3770     0473                     __end_of_read_prec_or_width:
  3771                           
  3772                           	psect	text5
  3773     064D                     __ptext5:	
  3774 ;; *************** function ___wmul *****************
  3775 ;; Defined at:
  3776 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\Umul16.c"
  3777 ;; Parameters:    Size  Location     Type
  3778 ;;  multiplier      2    0[COMMON] unsigned int 
  3779 ;;  multiplicand    2    2[COMMON] unsigned int 
  3780 ;; Auto vars:     Size  Location     Type
  3781 ;;  product         2    4[COMMON] unsigned int 
  3782 ;; Return value:  Size  Location     Type
  3783 ;;                  2    0[COMMON] unsigned int 
  3784 ;; Registers used:
  3785 ;;		wreg, status,2, status,0
  3786 ;; Tracked objects:
  3787 ;;		On entry : 0/0
  3788 ;;		On exit  : 0/0
  3789 ;;		Unchanged: 0/0
  3790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3791 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3792 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3793 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3794 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3795 ;;Total ram usage:        6 bytes
  3796 ;; Hardware stack levels used: 1
  3797 ;; Hardware stack levels required when called: 1
  3798 ;; This function calls:
  3799 ;;		Nothing
  3800 ;; This function is called by:
  3801 ;;		_read_prec_or_width
  3802 ;; This function uses a non-reentrant model
  3803 ;;
  3804                           
  3805     064D                     ___wmul:	
  3806                           ;psect for function ___wmul
  3807                           
  3808     064D                     l1562:	
  3809                           ;incstack = 0
  3810                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3811                           
  3812     064D  01F4               	clrf	___wmul@product
  3813     064E  01F5               	clrf	___wmul@product+1
  3814     064F                     l1564:
  3815     064F  1C70               	btfss	___wmul@multiplier,0
  3816     0650  2E52               	goto	u761
  3817     0651  2E53               	goto	u760
  3818     0652                     u761:
  3819     0652  2E57               	goto	l348
  3820     0653                     u760:
  3821     0653                     l1566:
  3822     0653  0872               	movf	___wmul@multiplicand,w
  3823     0654  07F4               	addwf	___wmul@product,f
  3824     0655  0873               	movf	___wmul@multiplicand+1,w
  3825     0656  3DF5               	addwfc	___wmul@product+1,f
  3826     0657                     l348:
  3827     0657  3001               	movlw	1
  3828     0658                     u775:
  3829     0658  35F2               	lslf	___wmul@multiplicand,f
  3830     0659  0DF3               	rlf	___wmul@multiplicand+1,f
  3831     065A  0B89               	decfsz	9,f
  3832     065B  2E58               	goto	u775
  3833     065C                     l1568:
  3834     065C  3001               	movlw	1
  3835     065D                     u785:
  3836     065D  36F1               	lsrf	___wmul@multiplier+1,f
  3837     065E  0CF0               	rrf	___wmul@multiplier,f
  3838     065F  0B89               	decfsz	9,f
  3839     0660  2E5D               	goto	u785
  3840     0661                     l1570:
  3841     0661  0870               	movf	___wmul@multiplier,w
  3842     0662  0471               	iorwf	___wmul@multiplier+1,w
  3843     0663  1D03               	btfss	3,2
  3844     0664  2E66               	goto	u791
  3845     0665  2E67               	goto	u790
  3846     0666                     u791:
  3847     0666  2E4F               	goto	l1564
  3848     0667                     u790:
  3849     0667                     l1572:
  3850     0667  0875               	movf	___wmul@product+1,w
  3851     0668  00F1               	movwf	?___wmul+1
  3852     0669  0874               	movf	___wmul@product,w
  3853     066A  00F0               	movwf	?___wmul
  3854     066B                     l350:
  3855     066B  0008               	return
  3856     066C                     __end_of___wmul:
  3857                           
  3858                           	psect	text6
  3859     00FD                     __ptext6:	
  3860 ;; *************** function _dtoa *****************
  3861 ;; Defined at:
  3862 ;;		line 470 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  3863 ;; Parameters:    Size  Location     Type
  3864 ;;  fp              1    wreg     PTR struct _IO_FILE
  3865 ;;		 -> sprintf@f(11), 
  3866 ;;  d               2   10[BANK0 ] int 
  3867 ;; Auto vars:     Size  Location     Type
  3868 ;;  fp              1   15[BANK0 ] PTR struct _IO_FILE
  3869 ;;		 -> sprintf@f(11), 
  3870 ;;  i               2   20[BANK0 ] int 
  3871 ;;  w               2   18[BANK0 ] int 
  3872 ;;  p               2   16[BANK0 ] int 
  3873 ;;  s               1   22[BANK0 ] unsigned char 
  3874 ;; Return value:  Size  Location     Type
  3875 ;;                  1    wreg      void 
  3876 ;; Registers used:
  3877 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3878 ;; Tracked objects:
  3879 ;;		On entry : 0/0
  3880 ;;		On exit  : 0/0
  3881 ;;		Unchanged: 0/0
  3882 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3883 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3884 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3885 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3886 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3887 ;;Total ram usage:       13 bytes
  3888 ;; Hardware stack levels used: 1
  3889 ;; Hardware stack levels required when called: 5
  3890 ;; This function calls:
  3891 ;;		___awdiv
  3892 ;;		___awmod
  3893 ;;		_abs
  3894 ;;		_pad
  3895 ;; This function is called by:
  3896 ;;		_vfpfcnvrt
  3897 ;; This function uses a non-reentrant model
  3898 ;;
  3899                           
  3900     00FD                     _dtoa:	
  3901                           ;psect for function _dtoa
  3902                           
  3903                           
  3904                           ;incstack = 0
  3905                           ; Regs used in _dtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3906                           ;dtoa@fp stored from wreg
  3907     00FD  0020               	movlb	0	; select bank0
  3908     00FE  00AF               	movwf	dtoa@fp
  3909     00FF                     l1680:
  3910                           
  3911                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 470: static void 
      +                          dtoa(FILE *fp, vfpf_sint_t d);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\commo
      +                          n\doprnt.c: 471: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c:
      +                           472:  char s;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 473
      +                          :     int i, p, w;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c:
      +                           476:     s = d < 0 ? 1 : 0;
  3912     00FF  1BAB               	btfsc	dtoa@d+1,7
  3913     0100  2902               	goto	u1041
  3914     0101  2904               	goto	u1040
  3915     0102                     u1041:
  3916     0102  3001               	movlw	1
  3917     0103  2905               	goto	u1050
  3918     0104                     u1040:
  3919     0104  3000               	movlw	0
  3920     0105                     u1050:
  3921     0105  00B6               	movwf	dtoa@s
  3922     0106                     l1682:
  3923                           
  3924                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 477:     if (s) {
  3925     0106  0836               	movf	dtoa@s,w
  3926     0107  1903               	btfsc	3,2
  3927     0108  290A               	goto	u1061
  3928     0109  290B               	goto	u1060
  3929     010A                     u1061:
  3930     010A  2910               	goto	l1686
  3931     010B                     u1060:
  3932     010B                     l1684:
  3933                           
  3934                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 478:         d = 
      +                          -d;
  3935     010B  09AA               	comf	dtoa@d,f
  3936     010C  09AB               	comf	dtoa@d+1,f
  3937     010D  0AAA               	incf	dtoa@d,f
  3938     010E  1903               	skipnz
  3939     010F  0AAB               	incf	dtoa@d+1,f
  3940     0110                     l1686:
  3941                           
  3942                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 487:     p = (0 <
      +                          = prec) ? prec : 1;
  3943     0110  1FE8               	btfss	_prec+1,7
  3944     0111  2913               	goto	u1071
  3945     0112  2914               	goto	u1070
  3946     0113                     u1071:
  3947     0113  2919               	goto	l1690
  3948     0114                     u1070:
  3949     0114                     l1688:
  3950     0114  3001               	movlw	1
  3951     0115  00B0               	movwf	dtoa@p
  3952     0116  3000               	movlw	0
  3953     0117  00B1               	movwf	dtoa@p+1
  3954     0118  291D               	goto	l846
  3955     0119                     l1690:
  3956     0119  0868               	movf	_prec+1,w
  3957     011A  00B1               	movwf	dtoa@p+1
  3958     011B  0867               	movf	_prec,w
  3959     011C  00B0               	movwf	dtoa@p
  3960     011D                     l846:
  3961                           
  3962                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 488:     w = widt
      +                          h;
  3963     011D  0866               	movf	_width+1,w
  3964     011E  00B3               	movwf	dtoa@w+1
  3965     011F  0865               	movf	_width,w
  3966     0120  00B2               	movwf	dtoa@w
  3967     0121                     l1692:
  3968                           
  3969                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 489:     if (s
  3970     0121  0836               	movf	dtoa@s,w
  3971     0122  1903               	btfsc	3,2
  3972     0123  2925               	goto	u1081
  3973     0124  2926               	goto	u1080
  3974     0125                     u1081:
  3975     0125  293A               	goto	l847
  3976     0126                     u1080:
  3977     0126                     l1694:
  3978                           
  3979                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 493:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 494:         --w;
  3980     0126  30FF               	movlw	255
  3981     0127  07B2               	addwf	dtoa@w,f
  3982     0128  30FF               	movlw	255
  3983     0129  3DB3               	addwfc	dtoa@w+1,f
  3984     012A                     l1696:
  3985                           
  3986                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 495:   s = s ? '-
      +                          ' : '+';
  3987     012A  0836               	movf	dtoa@s,w
  3988     012B  1D03               	btfss	3,2
  3989     012C  292E               	goto	u1091
  3990     012D  292F               	goto	u1090
  3991     012E                     u1091:
  3992     012E  2934               	goto	l1700
  3993     012F                     u1090:
  3994     012F                     l1698:
  3995     012F  302B               	movlw	43
  3996     0130  00AD               	movwf	_dtoa$1067
  3997     0131  3000               	movlw	0
  3998     0132  00AE               	movwf	_dtoa$1067+1
  3999     0133  2938               	goto	l851
  4000     0134                     l1700:
  4001     0134  302D               	movlw	45
  4002     0135  00AD               	movwf	_dtoa$1067
  4003     0136  3000               	movlw	0
  4004     0137  00AE               	movwf	_dtoa$1067+1
  4005     0138                     l851:
  4006     0138  082D               	movf	_dtoa$1067,w
  4007     0139  00B6               	movwf	dtoa@s
  4008     013A                     l847:	
  4009                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 496:     }
  4010                           
  4011                           
  4012                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 505:     i = size
      +                          of(dbuf) - 1;
  4013     013A  301F               	movlw	31
  4014     013B  00B4               	movwf	dtoa@i
  4015     013C  3000               	movlw	0
  4016     013D  00B5               	movwf	dtoa@i+1
  4017     013E                     l1702:
  4018                           
  4019                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 506:     dbuf[i] 
      +                          = '\0';
  4020     013E  0021               	movlb	1	; select bank1
  4021     013F  01C3               	clrf	(_dbuf^(0+128)+31)
  4022                           
  4023                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 507:     while (!
      +                          (i < 1) && (d || (0 < p)
  4024     0140  2978               	goto	l1714
  4025     0141                     l1704:
  4026                           
  4027                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 511:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 512:         --i;
  4028     0141  30FF               	movlw	255
  4029     0142  0020               	movlb	0	; select bank0
  4030     0143  07B4               	addwf	dtoa@i,f
  4031     0144  30FF               	movlw	255
  4032     0145  3DB5               	addwfc	dtoa@i+1,f
  4033     0146                     l1706:
  4034                           
  4035                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 513:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
  4036     0146  0834               	movf	dtoa@i,w
  4037     0147  3EA4               	addlw	(low (_dbuf| 0))& (0+255)
  4038     0148  0086               	movwf	6
  4039     0149  0187               	clrf	7
  4040     014A  300A               	movlw	10
  4041     014B  00F0               	movwf	___awmod@divisor
  4042     014C  3000               	movlw	0
  4043     014D  00F1               	movwf	___awmod@divisor+1
  4044     014E  082B               	movf	dtoa@d+1,w
  4045     014F  00F3               	movwf	___awmod@dividend+1
  4046     0150  082A               	movf	dtoa@d,w
  4047     0151  00F2               	movwf	___awmod@dividend
  4048     0152  3184  24D2  3180   	fcall	___awmod
  4049     0155  0871               	movf	?___awmod+1,w
  4050     0156  00F8               	movwf	abs@a+1
  4051     0157  0870               	movf	?___awmod,w
  4052     0158  00F7               	movwf	abs@a
  4053     0159  3186  26A5  3180   	fcall	_abs
  4054     015C  0877               	movf	?_abs,w
  4055     015D  3E30               	addlw	48
  4056     015E  0081               	movwf	1
  4057     015F                     l1708:
  4058                           
  4059                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 514:         --p;
  4060     015F  30FF               	movlw	255
  4061     0160  0020               	movlb	0	; select bank0
  4062     0161  07B0               	addwf	dtoa@p,f
  4063     0162  30FF               	movlw	255
  4064     0163  3DB1               	addwfc	dtoa@p+1,f
  4065     0164                     l1710:
  4066                           
  4067                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 515:         --w;
  4068     0164  30FF               	movlw	255
  4069     0165  07B2               	addwf	dtoa@w,f
  4070     0166  30FF               	movlw	255
  4071     0167  3DB3               	addwfc	dtoa@w+1,f
  4072     0168                     l1712:
  4073                           
  4074                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 516:         d = 
      +                          d / 10;
  4075     0168  300A               	movlw	10
  4076     0169  00F0               	movwf	___awdiv@divisor
  4077     016A  3000               	movlw	0
  4078     016B  00F1               	movwf	___awdiv@divisor+1
  4079     016C  082B               	movf	dtoa@d+1,w
  4080     016D  00F3               	movwf	___awdiv@dividend+1
  4081     016E  082A               	movf	dtoa@d,w
  4082     016F  00F2               	movwf	___awdiv@dividend
  4083     0170  3184  2473  3180   	fcall	___awdiv
  4084     0173  0871               	movf	?___awdiv+1,w
  4085     0174  0020               	movlb	0	; select bank0
  4086     0175  00AB               	movwf	dtoa@d+1
  4087     0176  0870               	movf	?___awdiv,w
  4088     0177  00AA               	movwf	dtoa@d
  4089     0178                     l1714:
  4090                           
  4091                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 507:     while (!
      +                          (i < 1) && (d || (0 < p)
  4092     0178  0020               	movlb	0	; select bank0
  4093     0179  0835               	movf	dtoa@i+1,w
  4094     017A  3A80               	xorlw	128
  4095     017B  00AC               	movwf	??_dtoa
  4096     017C  3080               	movlw	128
  4097     017D  022C               	subwf	??_dtoa,w
  4098     017E  1D03               	skipz
  4099     017F  2982               	goto	u1105
  4100     0180  3001               	movlw	1
  4101     0181  0234               	subwf	dtoa@i,w
  4102     0182                     u1105:
  4103     0182  1C03               	skipc
  4104     0183  2985               	goto	u1101
  4105     0184  2986               	goto	u1100
  4106     0185                     u1101:
  4107     0185  299A               	goto	l1720
  4108     0186                     u1100:
  4109     0186                     l1716:
  4110     0186  0020               	movlb	0	; select bank0
  4111     0187  082A               	movf	dtoa@d,w
  4112     0188  042B               	iorwf	dtoa@d+1,w
  4113     0189  1D03               	btfss	3,2
  4114     018A  298C               	goto	u1111
  4115     018B  298D               	goto	u1110
  4116     018C                     u1111:
  4117     018C  2941               	goto	l1704
  4118     018D                     u1110:
  4119     018D                     l1718:
  4120     018D  0831               	movf	dtoa@p+1,w
  4121     018E  3A80               	xorlw	128
  4122     018F  00AC               	movwf	??_dtoa
  4123     0190  3080               	movlw	128
  4124     0191  022C               	subwf	??_dtoa,w
  4125     0192  1D03               	skipz
  4126     0193  2996               	goto	u1125
  4127     0194  3001               	movlw	1
  4128     0195  0230               	subwf	dtoa@p,w
  4129     0196                     u1125:
  4130     0196  1803               	skipnc
  4131     0197  2999               	goto	u1121
  4132     0198  299A               	goto	u1120
  4133     0199                     u1121:
  4134     0199  2941               	goto	l1704
  4135     019A                     u1120:
  4136     019A                     l1720:
  4137                           
  4138                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 520:     if (s !=
      +                           0) {
  4139     019A  0020               	movlb	0	; select bank0
  4140     019B  0836               	movf	dtoa@s,w
  4141     019C  1903               	btfsc	3,2
  4142     019D  299F               	goto	u1131
  4143     019E  29A0               	goto	u1130
  4144     019F                     u1131:
  4145     019F  29AA               	goto	l1726
  4146     01A0                     u1130:
  4147     01A0                     l1722:
  4148                           
  4149                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 521:         --i;
  4150     01A0  30FF               	movlw	255
  4151     01A1  07B4               	addwf	dtoa@i,f
  4152     01A2  30FF               	movlw	255
  4153     01A3  3DB5               	addwfc	dtoa@i+1,f
  4154     01A4                     l1724:
  4155                           
  4156                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 522:         dbuf
      +                          [i] = s;
  4157     01A4  0834               	movf	dtoa@i,w
  4158     01A5  3EA4               	addlw	(low (_dbuf| 0))& (0+255)
  4159     01A6  0086               	movwf	6
  4160     01A7  0187               	clrf	7
  4161     01A8  0836               	movf	dtoa@s,w
  4162     01A9  0081               	movwf	1
  4163     01AA                     l1726:
  4164                           
  4165                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 526:     return (
      +                          void) pad(fp, &dbuf[i], w);
  4166     01AA  0834               	movf	dtoa@i,w
  4167     01AB  3EA4               	addlw	(low (_dbuf| 0))& (0+255)
  4168     01AC  00FB               	movwf	pad@buf
  4169     01AD  0833               	movf	dtoa@w+1,w
  4170     01AE  00FD               	movwf	pad@p+1
  4171     01AF  0832               	movf	dtoa@w,w
  4172     01B0  00FC               	movwf	pad@p
  4173     01B1  082F               	movf	dtoa@fp,w
  4174     01B2  3185  2575  3180   	fcall	_pad
  4175     01B5                     l858:
  4176     01B5  0008               	return
  4177     01B6                     __end_of_dtoa:
  4178                           
  4179                           	psect	text7
  4180     0575                     __ptext7:	
  4181 ;; *************** function _pad *****************
  4182 ;; Defined at:
  4183 ;;		line 152 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  4184 ;; Parameters:    Size  Location     Type
  4185 ;;  fp              1    wreg     PTR struct _IO_FILE
  4186 ;;		 -> sprintf@f(11), 
  4187 ;;  buf             1   11[COMMON] PTR unsigned char 
  4188 ;;		 -> dbuf(32), 
  4189 ;;  p               2   12[COMMON] int 
  4190 ;; Auto vars:     Size  Location     Type
  4191 ;;  fp              1    9[BANK0 ] PTR struct _IO_FILE
  4192 ;;		 -> sprintf@f(11), 
  4193 ;;  w               2    7[BANK0 ] int 
  4194 ;;  i               2    5[BANK0 ] int 
  4195 ;; Return value:  Size  Location     Type
  4196 ;;                  1    wreg      void 
  4197 ;; Registers used:
  4198 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4199 ;; Tracked objects:
  4200 ;;		On entry : 0/0
  4201 ;;		On exit  : 0/0
  4202 ;;		Unchanged: 0/0
  4203 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4204 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4205 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4206 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4207 ;;      Totals:         3       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4208 ;;Total ram usage:        9 bytes
  4209 ;; Hardware stack levels used: 1
  4210 ;; Hardware stack levels required when called: 4
  4211 ;; This function calls:
  4212 ;;		_fputc
  4213 ;;		_fputs
  4214 ;; This function is called by:
  4215 ;;		_dtoa
  4216 ;; This function uses a non-reentrant model
  4217 ;;
  4218                           
  4219     0575                     _pad:	
  4220                           ;psect for function _pad
  4221                           
  4222                           
  4223                           ;incstack = 0
  4224                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4225                           ;pad@fp stored from wreg
  4226     0575  0020               	movlb	0	; select bank0
  4227     0576  00A9               	movwf	pad@fp
  4228     0577                     l1658:
  4229                           
  4230                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 152: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\com
      +                          mon\doprnt.c: 153: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.
      +                          c: 154:     int i, w;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt
      +                          .c: 158:     if (flags & (1 << 0)) {
  4231     0577  1C6F               	btfss	_flags,0
  4232     0578  2D7A               	goto	u991
  4233     0579  2D7B               	goto	u990
  4234     057A                     u991:
  4235     057A  2D81               	goto	l1662
  4236     057B                     u990:
  4237     057B                     l1660:
  4238                           
  4239                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 159:         fput
      +                          s((const char *)buf, fp);
  4240     057B  0829               	movf	pad@fp,w
  4241     057C  00F8               	movwf	fputs@fp
  4242     057D  087B               	movf	pad@buf,w
  4243     057E  3186  2629  3185   	fcall	_fputs
  4244     0581                     l1662:
  4245                           
  4246                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 164:     w = (p <
      +                           0) ? 0 : p;
  4247     0581  1BFD               	btfsc	pad@p+1,7
  4248     0582  2D84               	goto	u1001
  4249     0583  2D85               	goto	u1000
  4250     0584                     u1001:
  4251     0584  2D8B               	goto	l1666
  4252     0585                     u1000:
  4253     0585                     l1664:
  4254     0585  087D               	movf	pad@p+1,w
  4255     0586  0020               	movlb	0	; select bank0
  4256     0587  00A8               	movwf	pad@w+1
  4257     0588  087C               	movf	pad@p,w
  4258     0589  00A7               	movwf	pad@w
  4259     058A  2D8E               	goto	l834
  4260     058B                     l1666:
  4261     058B  0020               	movlb	0	; select bank0
  4262     058C  01A7               	clrf	pad@w
  4263     058D  01A8               	clrf	pad@w+1
  4264     058E                     l834:
  4265                           
  4266                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 165:     i = 0;
  4267     058E  01A5               	clrf	pad@i
  4268     058F  01A6               	clrf	pad@i+1
  4269                           
  4270                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 166:     while (i
      +                           < w) {
  4271     0590  2DA0               	goto	l1672
  4272     0591                     l1668:
  4273                           
  4274                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 167:         fput
      +                          c(' ', fp);
  4275     0591  3020               	movlw	32
  4276     0592  00F0               	movwf	fputc@c
  4277     0593  3000               	movlw	0
  4278     0594  00F1               	movwf	fputc@c+1
  4279     0595  0020               	movlb	0	; select bank0
  4280     0596  0829               	movf	pad@fp,w
  4281     0597  00F2               	movwf	fputc@fp
  4282     0598  3185  2525  3185   	fcall	_fputc
  4283     059B                     l1670:
  4284                           
  4285                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 168:         ++i;
  4286     059B  3001               	movlw	1
  4287     059C  0020               	movlb	0	; select bank0
  4288     059D  07A5               	addwf	pad@i,f
  4289     059E  3000               	movlw	0
  4290     059F  3DA6               	addwfc	pad@i+1,f
  4291     05A0                     l1672:
  4292                           
  4293                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 166:     while (i
      +                           < w) {
  4294     05A0  0826               	movf	pad@i+1,w
  4295     05A1  3A80               	xorlw	128
  4296     05A2  00A4               	movwf	??_pad
  4297     05A3  0828               	movf	pad@w+1,w
  4298     05A4  3A80               	xorlw	128
  4299     05A5  0224               	subwf	??_pad,w
  4300     05A6  1D03               	skipz
  4301     05A7  2DAA               	goto	u1015
  4302     05A8  0827               	movf	pad@w,w
  4303     05A9  0225               	subwf	pad@i,w
  4304     05AA                     u1015:
  4305     05AA  1C03               	skipc
  4306     05AB  2DAD               	goto	u1011
  4307     05AC  2DAE               	goto	u1010
  4308     05AD                     u1011:
  4309     05AD  2D91               	goto	l1668
  4310     05AE                     u1010:
  4311     05AE                     l837:
  4312                           
  4313                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 173:     if (!(fl
      +                          ags & (1 << 0))) {
  4314     05AE  0020               	movlb	0	; select bank0
  4315     05AF  186F               	btfsc	_flags,0
  4316     05B0  2DB2               	goto	u1021
  4317     05B1  2DB3               	goto	u1020
  4318     05B2                     u1021:
  4319     05B2  2DB9               	goto	l839
  4320     05B3                     u1020:
  4321     05B3                     l1674:
  4322                           
  4323                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 175:         fput
      +                          s((const char *)buf, fp);
  4324     05B3  0829               	movf	pad@fp,w
  4325     05B4  00F8               	movwf	fputs@fp
  4326     05B5  087B               	movf	pad@buf,w
  4327     05B6  3186  2629  3185   	fcall	_fputs
  4328     05B9                     l839:
  4329     05B9  0008               	return
  4330     05BA                     __end_of_pad:
  4331                           
  4332                           	psect	text8
  4333     0629                     __ptext8:	
  4334 ;; *************** function _fputs *****************
  4335 ;; Defined at:
  4336 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_fputs.c"
  4337 ;; Parameters:    Size  Location     Type
  4338 ;;  s               1    wreg     PTR const unsigned char 
  4339 ;;		 -> dbuf(32), 
  4340 ;;  fp              1    8[COMMON] PTR struct _IO_FILE
  4341 ;;		 -> sprintf@f(11), 
  4342 ;; Auto vars:     Size  Location     Type
  4343 ;;  s               1    3[BANK0 ] PTR const unsigned char 
  4344 ;;		 -> dbuf(32), 
  4345 ;;  i               2    1[BANK0 ] int 
  4346 ;;  c               1    0[BANK0 ] unsigned char 
  4347 ;; Return value:  Size  Location     Type
  4348 ;;                  2    8[COMMON] int 
  4349 ;; Registers used:
  4350 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4351 ;; Tracked objects:
  4352 ;;		On entry : 0/0
  4353 ;;		On exit  : 0/0
  4354 ;;		Unchanged: 0/0
  4355 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4356 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4357 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4358 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4359 ;;      Totals:         3       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4360 ;;Total ram usage:        7 bytes
  4361 ;; Hardware stack levels used: 1
  4362 ;; Hardware stack levels required when called: 3
  4363 ;; This function calls:
  4364 ;;		_fputc
  4365 ;; This function is called by:
  4366 ;;		_pad
  4367 ;; This function uses a non-reentrant model
  4368 ;;
  4369                           
  4370     0629                     _fputs:	
  4371                           ;psect for function _fputs
  4372                           
  4373                           
  4374                           ;incstack = 0
  4375                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4376                           ;fputs@s stored from wreg
  4377     0629  0020               	movlb	0	; select bank0
  4378     062A  00A3               	movwf	fputs@s
  4379     062B                     l1554:
  4380     062B  01A1               	clrf	fputs@i
  4381     062C  01A2               	clrf	fputs@i+1
  4382     062D  2E3F               	goto	l1560
  4383     062E                     l1556:
  4384     062E  0820               	movf	fputs@c,w
  4385     062F  00F9               	movwf	??_fputs
  4386     0630  01FA               	clrf	??_fputs+1
  4387     0631  0879               	movf	??_fputs,w
  4388     0632  00F0               	movwf	fputc@c
  4389     0633  087A               	movf	??_fputs+1,w
  4390     0634  00F1               	movwf	fputc@c+1
  4391     0635  0878               	movf	fputs@fp,w
  4392     0636  00F2               	movwf	fputc@fp
  4393     0637  3185  2525  3186   	fcall	_fputc
  4394     063A                     l1558:
  4395     063A  3001               	movlw	1
  4396     063B  0020               	movlb	0	; select bank0
  4397     063C  07A1               	addwf	fputs@i,f
  4398     063D  3000               	movlw	0
  4399     063E  3DA2               	addwfc	fputs@i+1,f
  4400     063F                     l1560:
  4401     063F  0821               	movf	fputs@i,w
  4402     0640  0723               	addwf	fputs@s,w
  4403     0641  00F9               	movwf	??_fputs
  4404     0642  0879               	movf	??_fputs,w
  4405     0643  0086               	movwf	6
  4406     0644  0187               	clrf	7
  4407     0645  0801               	movf	1,w
  4408     0646  00A0               	movwf	fputs@c
  4409     0647  0820               	movf	fputs@c,w
  4410     0648  1D03               	btfss	3,2
  4411     0649  2E4B               	goto	u751
  4412     064A  2E4C               	goto	u750
  4413     064B                     u751:
  4414     064B  2E2E               	goto	l1556
  4415     064C                     u750:
  4416     064C                     l907:
  4417     064C  0008               	return
  4418     064D                     __end_of_fputs:
  4419                           
  4420                           	psect	text9
  4421     0525                     __ptext9:	
  4422 ;; *************** function _fputc *****************
  4423 ;; Defined at:
  4424 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_fputc.c"
  4425 ;; Parameters:    Size  Location     Type
  4426 ;;  c               2    0[COMMON] int 
  4427 ;;  fp              1    2[COMMON] PTR struct _IO_FILE
  4428 ;;		 -> sprintf@f(11), 
  4429 ;; Auto vars:     Size  Location     Type
  4430 ;;		None
  4431 ;; Return value:  Size  Location     Type
  4432 ;;                  2    0[COMMON] int 
  4433 ;; Registers used:
  4434 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4435 ;; Tracked objects:
  4436 ;;		On entry : 0/0
  4437 ;;		On exit  : 0/0
  4438 ;;		Unchanged: 0/0
  4439 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4440 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4441 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4442 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4443 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4444 ;;Total ram usage:        8 bytes
  4445 ;; Hardware stack levels used: 1
  4446 ;; Hardware stack levels required when called: 2
  4447 ;; This function calls:
  4448 ;;		_putch
  4449 ;; This function is called by:
  4450 ;;		_pad
  4451 ;;		_vfpfcnvrt
  4452 ;;		_fputs
  4453 ;; This function uses a non-reentrant model
  4454 ;;
  4455                           
  4456     0525                     _fputc:	
  4457                           ;psect for function _fputc
  4458                           
  4459     0525                     l1538:	
  4460                           ;incstack = 0
  4461                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4462                           
  4463     0525  0872               	movf	fputc@fp,w
  4464     0526  1903               	btfsc	3,2
  4465     0527  2D29               	goto	u711
  4466     0528  2D2A               	goto	u710
  4467     0529                     u711:
  4468     0529  2D2F               	goto	l1542
  4469     052A                     u710:
  4470     052A                     l1540:
  4471     052A  0872               	movf	fputc@fp,w
  4472     052B  1D03               	btfss	3,2
  4473     052C  2D2E               	goto	u721
  4474     052D  2D2F               	goto	u720
  4475     052E                     u721:
  4476     052E  2D34               	goto	l1544
  4477     052F                     u720:
  4478     052F                     l1542:
  4479     052F  0870               	movf	fputc@c,w
  4480     0530  3187  272D  3185   	fcall	_putch
  4481     0533  2D74               	goto	l899
  4482     0534                     l1544:
  4483     0534  0872               	movf	fputc@fp,w
  4484     0535  3E09               	addlw	9
  4485     0536  0086               	movwf	6
  4486     0537  0187               	clrf	7
  4487     0538  0016               	moviw fsr1++
  4488     0539  0401               	iorwf	1,w
  4489     053A  1903               	btfsc	3,2
  4490     053B  2D3D               	goto	u731
  4491     053C  2D3E               	goto	u730
  4492     053D                     u731:
  4493     053D  2D5C               	goto	l1548
  4494     053E                     u730:
  4495     053E                     l1546:
  4496     053E  0872               	movf	fputc@fp,w
  4497     053F  3E09               	addlw	9
  4498     0540  0086               	movwf	6
  4499     0541  0187               	clrf	7
  4500     0542  3F40               	moviw [0]fsr1
  4501     0543  00F3               	movwf	??_fputc
  4502     0544  3F41               	moviw [1]fsr1
  4503     0545  00F4               	movwf	??_fputc+1
  4504     0546  0872               	movf	fputc@fp,w
  4505     0547  3E02               	addlw	2
  4506     0548  0086               	movwf	6
  4507     0549  0187               	clrf	7
  4508     054A  3F40               	moviw [0]fsr1
  4509     054B  00F5               	movwf	??_fputc+2
  4510     054C  3F41               	moviw [1]fsr1
  4511     054D  00F6               	movwf	??_fputc+3
  4512     054E  0876               	movf	??_fputc+3,w
  4513     054F  3A80               	xorlw	128
  4514     0550  00F7               	movwf	??_fputc+4
  4515     0551  0874               	movf	??_fputc+1,w
  4516     0552  3A80               	xorlw	128
  4517     0553  0277               	subwf	??_fputc+4,w
  4518     0554  1D03               	skipz
  4519     0555  2D58               	goto	u745
  4520     0556  0873               	movf	??_fputc,w
  4521     0557  0275               	subwf	??_fputc+2,w
  4522     0558                     u745:
  4523     0558  1803               	skipnc
  4524     0559  2D5B               	goto	u741
  4525     055A  2D5C               	goto	u740
  4526     055B                     u741:
  4527     055B  2D74               	goto	l899
  4528     055C                     u740:
  4529     055C                     l1548:
  4530     055C  0872               	movf	fputc@fp,w
  4531     055D  0086               	movwf	6
  4532     055E  0187               	clrf	7
  4533     055F  0872               	movf	fputc@fp,w
  4534     0560  3E02               	addlw	2
  4535     0561  0084               	movwf	4
  4536     0562  0185               	clrf	5
  4537     0563  0800               	movf	0,w
  4538     0564  0701               	addwf	1,w
  4539     0565  00F3               	movwf	??_fputc
  4540     0566  0873               	movf	??_fputc,w
  4541     0567  0086               	movwf	6
  4542     0568  0187               	clrf	7
  4543     0569  0870               	movf	fputc@c,w
  4544     056A  0081               	movwf	1
  4545     056B                     l1550:
  4546     056B  0872               	movf	fputc@fp,w
  4547     056C  3E02               	addlw	2
  4548     056D  0086               	movwf	6
  4549     056E  0187               	clrf	7
  4550     056F  3001               	movlw	1
  4551     0570  0781               	addwf	1,f
  4552     0571  3141               	addfsr 1,1
  4553     0572  1803               	skipnc
  4554     0573  0A81               	incf	1,f
  4555     0574                     l899:
  4556     0574  0008               	return
  4557     0575                     __end_of_fputc:
  4558                           
  4559                           	psect	text10
  4560     072D                     __ptext10:	
  4561 ;; *************** function _putch *****************
  4562 ;; Defined at:
  4563 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\putch.c"
  4564 ;; Parameters:    Size  Location     Type
  4565 ;;  c               1    wreg     unsigned char 
  4566 ;; Auto vars:     Size  Location     Type
  4567 ;;  c               1    0[COMMON] unsigned char 
  4568 ;; Return value:  Size  Location     Type
  4569 ;;                  1    wreg      void 
  4570 ;; Registers used:
  4571 ;;		wreg
  4572 ;; Tracked objects:
  4573 ;;		On entry : 0/0
  4574 ;;		On exit  : 0/0
  4575 ;;		Unchanged: 0/0
  4576 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4577 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4578 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4579 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4580 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4581 ;;Total ram usage:        0 bytes
  4582 ;; Hardware stack levels used: 1
  4583 ;; Hardware stack levels required when called: 1
  4584 ;; This function calls:
  4585 ;;		Nothing
  4586 ;; This function is called by:
  4587 ;;		_fputc
  4588 ;; This function uses a non-reentrant model
  4589 ;;
  4590                           
  4591     072D                     _putch:	
  4592                           ;psect for function _putch
  4593                           
  4594     072D                     l910:	
  4595                           ;incstack = 0
  4596                           ; Regs used in _putch: [wreg]
  4597                           
  4598     072D  0008               	return
  4599     072E                     __end_of_putch:
  4600                           
  4601                           	psect	text11
  4602     06A5                     __ptext11:	
  4603 ;; *************** function _abs *****************
  4604 ;; Defined at:
  4605 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\abs.c"
  4606 ;; Parameters:    Size  Location     Type
  4607 ;;  a               2    7[COMMON] int 
  4608 ;; Auto vars:     Size  Location     Type
  4609 ;;		None
  4610 ;; Return value:  Size  Location     Type
  4611 ;;                  2    7[COMMON] int 
  4612 ;; Registers used:
  4613 ;;		wreg, status,2, status,0
  4614 ;; Tracked objects:
  4615 ;;		On entry : 0/0
  4616 ;;		On exit  : 0/0
  4617 ;;		Unchanged: 0/0
  4618 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4619 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4620 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4621 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4622 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4623 ;;Total ram usage:        4 bytes
  4624 ;; Hardware stack levels used: 1
  4625 ;; Hardware stack levels required when called: 1
  4626 ;; This function calls:
  4627 ;;		Nothing
  4628 ;; This function is called by:
  4629 ;;		_dtoa
  4630 ;; This function uses a non-reentrant model
  4631 ;;
  4632                           
  4633     06A5                     _abs:	
  4634                           ;psect for function _abs
  4635                           
  4636     06A5                     l1676:	
  4637                           ;incstack = 0
  4638                           ; Regs used in _abs: [wreg+status,2+status,0]
  4639                           
  4640     06A5  0878               	movf	abs@a+1,w
  4641     06A6  3A80               	xorlw	128
  4642     06A7  00F9               	movwf	??_abs
  4643     06A8  3080               	movlw	128
  4644     06A9  0279               	subwf	??_abs,w
  4645     06AA  1D03               	skipz
  4646     06AB  2EAE               	goto	u1035
  4647     06AC  3001               	movlw	1
  4648     06AD  0277               	subwf	abs@a,w
  4649     06AE                     u1035:
  4650     06AE  1803               	skipnc
  4651     06AF  2EB1               	goto	u1031
  4652     06B0  2EB2               	goto	u1030
  4653     06B1                     u1031:
  4654     06B1  2EBE               	goto	l884
  4655     06B2                     u1030:
  4656     06B2                     l1678:
  4657     06B2  0977               	comf	abs@a,w
  4658     06B3  00F9               	movwf	??_abs
  4659     06B4  0978               	comf	abs@a+1,w
  4660     06B5  00FA               	movwf	??_abs+1
  4661     06B6  0AF9               	incf	??_abs,f
  4662     06B7  1903               	skipnz
  4663     06B8  0AFA               	incf	??_abs+1,f
  4664     06B9  0879               	movf	??_abs,w
  4665     06BA  00F7               	movwf	?_abs
  4666     06BB  087A               	movf	??_abs+1,w
  4667     06BC  00F8               	movwf	?_abs+1
  4668     06BD  2EBE               	goto	l887
  4669     06BE                     l884:
  4670     06BE                     l887:
  4671     06BE  0008               	return
  4672     06BF                     __end_of_abs:
  4673                           
  4674                           	psect	text12
  4675     04D2                     __ptext12:	
  4676 ;; *************** function ___awmod *****************
  4677 ;; Defined at:
  4678 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awmod.c"
  4679 ;; Parameters:    Size  Location     Type
  4680 ;;  divisor         2    0[COMMON] int 
  4681 ;;  dividend        2    2[COMMON] int 
  4682 ;; Auto vars:     Size  Location     Type
  4683 ;;  sign            1    6[COMMON] unsigned char 
  4684 ;;  counter         1    5[COMMON] unsigned char 
  4685 ;; Return value:  Size  Location     Type
  4686 ;;                  2    0[COMMON] int 
  4687 ;; Registers used:
  4688 ;;		wreg, status,2, status,0
  4689 ;; Tracked objects:
  4690 ;;		On entry : 0/0
  4691 ;;		On exit  : 0/0
  4692 ;;		Unchanged: 0/0
  4693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4694 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4695 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4696 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4697 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4698 ;;Total ram usage:        7 bytes
  4699 ;; Hardware stack levels used: 1
  4700 ;; Hardware stack levels required when called: 1
  4701 ;; This function calls:
  4702 ;;		Nothing
  4703 ;; This function is called by:
  4704 ;;		_dtoa
  4705 ;; This function uses a non-reentrant model
  4706 ;;
  4707                           
  4708     04D2                     ___awmod:	
  4709                           ;psect for function ___awmod
  4710                           
  4711     04D2                     l1620:	
  4712                           ;incstack = 0
  4713                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  4714                           
  4715     04D2  01F6               	clrf	___awmod@sign
  4716     04D3                     l1622:
  4717     04D3  1FF3               	btfss	___awmod@dividend+1,7
  4718     04D4  2CD6               	goto	u901
  4719     04D5  2CD7               	goto	u900
  4720     04D6                     u901:
  4721     04D6  2CDE               	goto	l1628
  4722     04D7                     u900:
  4723     04D7                     l1624:
  4724     04D7  09F2               	comf	___awmod@dividend,f
  4725     04D8  09F3               	comf	___awmod@dividend+1,f
  4726     04D9  0AF2               	incf	___awmod@dividend,f
  4727     04DA  1903               	skipnz
  4728     04DB  0AF3               	incf	___awmod@dividend+1,f
  4729     04DC                     l1626:
  4730     04DC  01F6               	clrf	___awmod@sign
  4731     04DD  0AF6               	incf	___awmod@sign,f
  4732     04DE                     l1628:
  4733     04DE  1FF1               	btfss	___awmod@divisor+1,7
  4734     04DF  2CE1               	goto	u911
  4735     04E0  2CE2               	goto	u910
  4736     04E1                     u911:
  4737     04E1  2CE7               	goto	l1632
  4738     04E2                     u910:
  4739     04E2                     l1630:
  4740     04E2  09F0               	comf	___awmod@divisor,f
  4741     04E3  09F1               	comf	___awmod@divisor+1,f
  4742     04E4  0AF0               	incf	___awmod@divisor,f
  4743     04E5  1903               	skipnz
  4744     04E6  0AF1               	incf	___awmod@divisor+1,f
  4745     04E7                     l1632:
  4746     04E7  0870               	movf	___awmod@divisor,w
  4747     04E8  0471               	iorwf	___awmod@divisor+1,w
  4748     04E9  1903               	btfsc	3,2
  4749     04EA  2CEC               	goto	u921
  4750     04EB  2CED               	goto	u920
  4751     04EC                     u921:
  4752     04EC  2D16               	goto	l1650
  4753     04ED                     u920:
  4754     04ED                     l1634:
  4755     04ED  01F5               	clrf	___awmod@counter
  4756     04EE  0AF5               	incf	___awmod@counter,f
  4757     04EF  2CF9               	goto	l1640
  4758     04F0                     l1636:
  4759     04F0  3001               	movlw	1
  4760     04F1                     u935:
  4761     04F1  35F0               	lslf	___awmod@divisor,f
  4762     04F2  0DF1               	rlf	___awmod@divisor+1,f
  4763     04F3  0B89               	decfsz	9,f
  4764     04F4  2CF1               	goto	u935
  4765     04F5                     l1638:
  4766     04F5  3001               	movlw	1
  4767     04F6  00F4               	movwf	??___awmod
  4768     04F7  0874               	movf	??___awmod,w
  4769     04F8  07F5               	addwf	___awmod@counter,f
  4770     04F9                     l1640:
  4771     04F9  1FF1               	btfss	___awmod@divisor+1,7
  4772     04FA  2CFC               	goto	u941
  4773     04FB  2CFD               	goto	u940
  4774     04FC                     u941:
  4775     04FC  2CF0               	goto	l1636
  4776     04FD                     u940:
  4777     04FD                     l1642:
  4778     04FD  0871               	movf	___awmod@divisor+1,w
  4779     04FE  0273               	subwf	___awmod@dividend+1,w
  4780     04FF  1D03               	skipz
  4781     0500  2D03               	goto	u955
  4782     0501  0870               	movf	___awmod@divisor,w
  4783     0502  0272               	subwf	___awmod@dividend,w
  4784     0503                     u955:
  4785     0503  1C03               	skipc
  4786     0504  2D06               	goto	u951
  4787     0505  2D07               	goto	u950
  4788     0506                     u951:
  4789     0506  2D0B               	goto	l1646
  4790     0507                     u950:
  4791     0507                     l1644:
  4792     0507  0870               	movf	___awmod@divisor,w
  4793     0508  02F2               	subwf	___awmod@dividend,f
  4794     0509  0871               	movf	___awmod@divisor+1,w
  4795     050A  3BF3               	subwfb	___awmod@dividend+1,f
  4796     050B                     l1646:
  4797     050B  3001               	movlw	1
  4798     050C                     u965:
  4799     050C  36F1               	lsrf	___awmod@divisor+1,f
  4800     050D  0CF0               	rrf	___awmod@divisor,f
  4801     050E  0B89               	decfsz	9,f
  4802     050F  2D0C               	goto	u965
  4803     0510                     l1648:
  4804     0510  3001               	movlw	1
  4805     0511  02F5               	subwf	___awmod@counter,f
  4806     0512  1D03               	btfss	3,2
  4807     0513  2D15               	goto	u971
  4808     0514  2D16               	goto	u970
  4809     0515                     u971:
  4810     0515  2CFD               	goto	l1642
  4811     0516                     u970:
  4812     0516                     l1650:
  4813     0516  0876               	movf	___awmod@sign,w
  4814     0517  1903               	btfsc	3,2
  4815     0518  2D1A               	goto	u981
  4816     0519  2D1B               	goto	u980
  4817     051A                     u981:
  4818     051A  2D20               	goto	l1654
  4819     051B                     u980:
  4820     051B                     l1652:
  4821     051B  09F2               	comf	___awmod@dividend,f
  4822     051C  09F3               	comf	___awmod@dividend+1,f
  4823     051D  0AF2               	incf	___awmod@dividend,f
  4824     051E  1903               	skipnz
  4825     051F  0AF3               	incf	___awmod@dividend+1,f
  4826     0520                     l1654:
  4827     0520  0873               	movf	___awmod@dividend+1,w
  4828     0521  00F1               	movwf	?___awmod+1
  4829     0522  0872               	movf	___awmod@dividend,w
  4830     0523  00F0               	movwf	?___awmod
  4831     0524                     l514:
  4832     0524  0008               	return
  4833     0525                     __end_of___awmod:
  4834                           
  4835                           	psect	text13
  4836     0473                     __ptext13:	
  4837 ;; *************** function ___awdiv *****************
  4838 ;; Defined at:
  4839 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awdiv.c"
  4840 ;; Parameters:    Size  Location     Type
  4841 ;;  divisor         2    0[COMMON] int 
  4842 ;;  dividend        2    2[COMMON] int 
  4843 ;; Auto vars:     Size  Location     Type
  4844 ;;  quotient        2    7[COMMON] int 
  4845 ;;  sign            1    6[COMMON] unsigned char 
  4846 ;;  counter         1    5[COMMON] unsigned char 
  4847 ;; Return value:  Size  Location     Type
  4848 ;;                  2    0[COMMON] int 
  4849 ;; Registers used:
  4850 ;;		wreg, status,2, status,0
  4851 ;; Tracked objects:
  4852 ;;		On entry : 0/0
  4853 ;;		On exit  : 0/0
  4854 ;;		Unchanged: 0/0
  4855 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4856 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4857 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4858 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4859 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4860 ;;Total ram usage:        9 bytes
  4861 ;; Hardware stack levels used: 1
  4862 ;; Hardware stack levels required when called: 1
  4863 ;; This function calls:
  4864 ;;		Nothing
  4865 ;; This function is called by:
  4866 ;;		_dtoa
  4867 ;; This function uses a non-reentrant model
  4868 ;;
  4869                           
  4870     0473                     ___awdiv:	
  4871                           ;psect for function ___awdiv
  4872                           
  4873     0473                     l1576:	
  4874                           ;incstack = 0
  4875                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4876                           
  4877     0473  01F6               	clrf	___awdiv@sign
  4878     0474                     l1578:
  4879     0474  1FF1               	btfss	___awdiv@divisor+1,7
  4880     0475  2C77               	goto	u801
  4881     0476  2C78               	goto	u800
  4882     0477                     u801:
  4883     0477  2C7F               	goto	l1584
  4884     0478                     u800:
  4885     0478                     l1580:
  4886     0478  09F0               	comf	___awdiv@divisor,f
  4887     0479  09F1               	comf	___awdiv@divisor+1,f
  4888     047A  0AF0               	incf	___awdiv@divisor,f
  4889     047B  1903               	skipnz
  4890     047C  0AF1               	incf	___awdiv@divisor+1,f
  4891     047D                     l1582:
  4892     047D  01F6               	clrf	___awdiv@sign
  4893     047E  0AF6               	incf	___awdiv@sign,f
  4894     047F                     l1584:
  4895     047F  1FF3               	btfss	___awdiv@dividend+1,7
  4896     0480  2C82               	goto	u811
  4897     0481  2C83               	goto	u810
  4898     0482                     u811:
  4899     0482  2C8C               	goto	l1590
  4900     0483                     u810:
  4901     0483                     l1586:
  4902     0483  09F2               	comf	___awdiv@dividend,f
  4903     0484  09F3               	comf	___awdiv@dividend+1,f
  4904     0485  0AF2               	incf	___awdiv@dividend,f
  4905     0486  1903               	skipnz
  4906     0487  0AF3               	incf	___awdiv@dividend+1,f
  4907     0488                     l1588:
  4908     0488  3001               	movlw	1
  4909     0489  00F4               	movwf	??___awdiv
  4910     048A  0874               	movf	??___awdiv,w
  4911     048B  06F6               	xorwf	___awdiv@sign,f
  4912     048C                     l1590:
  4913     048C  01F7               	clrf	___awdiv@quotient
  4914     048D  01F8               	clrf	___awdiv@quotient+1
  4915     048E                     l1592:
  4916     048E  0870               	movf	___awdiv@divisor,w
  4917     048F  0471               	iorwf	___awdiv@divisor+1,w
  4918     0490  1903               	btfsc	3,2
  4919     0491  2C93               	goto	u821
  4920     0492  2C94               	goto	u820
  4921     0493                     u821:
  4922     0493  2CC3               	goto	l1612
  4923     0494                     u820:
  4924     0494                     l1594:
  4925     0494  01F5               	clrf	___awdiv@counter
  4926     0495  0AF5               	incf	___awdiv@counter,f
  4927     0496  2CA0               	goto	l1600
  4928     0497                     l1596:
  4929     0497  3001               	movlw	1
  4930     0498                     u835:
  4931     0498  35F0               	lslf	___awdiv@divisor,f
  4932     0499  0DF1               	rlf	___awdiv@divisor+1,f
  4933     049A  0B89               	decfsz	9,f
  4934     049B  2C98               	goto	u835
  4935     049C                     l1598:
  4936     049C  3001               	movlw	1
  4937     049D  00F4               	movwf	??___awdiv
  4938     049E  0874               	movf	??___awdiv,w
  4939     049F  07F5               	addwf	___awdiv@counter,f
  4940     04A0                     l1600:
  4941     04A0  1FF1               	btfss	___awdiv@divisor+1,7
  4942     04A1  2CA3               	goto	u841
  4943     04A2  2CA4               	goto	u840
  4944     04A3                     u841:
  4945     04A3  2C97               	goto	l1596
  4946     04A4                     u840:
  4947     04A4                     l1602:
  4948     04A4  3001               	movlw	1
  4949     04A5                     u855:
  4950     04A5  35F7               	lslf	___awdiv@quotient,f
  4951     04A6  0DF8               	rlf	___awdiv@quotient+1,f
  4952     04A7  0B89               	decfsz	9,f
  4953     04A8  2CA5               	goto	u855
  4954     04A9  0871               	movf	___awdiv@divisor+1,w
  4955     04AA  0273               	subwf	___awdiv@dividend+1,w
  4956     04AB  1D03               	skipz
  4957     04AC  2CAF               	goto	u865
  4958     04AD  0870               	movf	___awdiv@divisor,w
  4959     04AE  0272               	subwf	___awdiv@dividend,w
  4960     04AF                     u865:
  4961     04AF  1C03               	skipc
  4962     04B0  2CB2               	goto	u861
  4963     04B1  2CB3               	goto	u860
  4964     04B2                     u861:
  4965     04B2  2CB8               	goto	l1608
  4966     04B3                     u860:
  4967     04B3                     l1604:
  4968     04B3  0870               	movf	___awdiv@divisor,w
  4969     04B4  02F2               	subwf	___awdiv@dividend,f
  4970     04B5  0871               	movf	___awdiv@divisor+1,w
  4971     04B6  3BF3               	subwfb	___awdiv@dividend+1,f
  4972     04B7                     l1606:
  4973     04B7  1477               	bsf	___awdiv@quotient,0
  4974     04B8                     l1608:
  4975     04B8  3001               	movlw	1
  4976     04B9                     u875:
  4977     04B9  36F1               	lsrf	___awdiv@divisor+1,f
  4978     04BA  0CF0               	rrf	___awdiv@divisor,f
  4979     04BB  0B89               	decfsz	9,f
  4980     04BC  2CB9               	goto	u875
  4981     04BD                     l1610:
  4982     04BD  3001               	movlw	1
  4983     04BE  02F5               	subwf	___awdiv@counter,f
  4984     04BF  1D03               	btfss	3,2
  4985     04C0  2CC2               	goto	u881
  4986     04C1  2CC3               	goto	u880
  4987     04C2                     u881:
  4988     04C2  2CA4               	goto	l1602
  4989     04C3                     u880:
  4990     04C3                     l1612:
  4991     04C3  0876               	movf	___awdiv@sign,w
  4992     04C4  1903               	btfsc	3,2
  4993     04C5  2CC7               	goto	u891
  4994     04C6  2CC8               	goto	u890
  4995     04C7                     u891:
  4996     04C7  2CCD               	goto	l1616
  4997     04C8                     u890:
  4998     04C8                     l1614:
  4999     04C8  09F7               	comf	___awdiv@quotient,f
  5000     04C9  09F8               	comf	___awdiv@quotient+1,f
  5001     04CA  0AF7               	incf	___awdiv@quotient,f
  5002     04CB  1903               	skipnz
  5003     04CC  0AF8               	incf	___awdiv@quotient+1,f
  5004     04CD                     l1616:
  5005     04CD  0878               	movf	___awdiv@quotient+1,w
  5006     04CE  00F1               	movwf	?___awdiv+1
  5007     04CF  0877               	movf	___awdiv@quotient,w
  5008     04D0  00F0               	movwf	?___awdiv
  5009     04D1                     l501:
  5010     04D1  0008               	return
  5011     04D2                     __end_of___awdiv:
  5012                           
  5013                           	psect	text14
  5014     0729                     __ptext14:	
  5015 ;; *************** function _TMR1_Counter *****************
  5016 ;; Defined at:
  5017 ;;		line 28 in file "main.c"
  5018 ;; Parameters:    Size  Location     Type
  5019 ;;		None
  5020 ;; Auto vars:     Size  Location     Type
  5021 ;;		None
  5022 ;; Return value:  Size  Location     Type
  5023 ;;                  1    wreg      void 
  5024 ;; Registers used:
  5025 ;;		wreg
  5026 ;; Tracked objects:
  5027 ;;		On entry : 0/0
  5028 ;;		On exit  : 0/0
  5029 ;;		Unchanged: 0/0
  5030 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5031 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5032 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5033 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5034 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5035 ;;Total ram usage:        0 bytes
  5036 ;; Hardware stack levels used: 1
  5037 ;; Hardware stack levels required when called: 1
  5038 ;; This function calls:
  5039 ;;		Nothing
  5040 ;; This function is called by:
  5041 ;;		_main
  5042 ;; This function uses a non-reentrant model
  5043 ;;
  5044                           
  5045     0729                     _TMR1_Counter:	
  5046                           ;psect for function _TMR1_Counter
  5047                           
  5048     0729                     l1970:	
  5049                           ;incstack = 0
  5050                           ; Regs used in _TMR1_Counter: [wreg]
  5051                           
  5052                           
  5053                           ;main.c: 29: void main(void) {
  5054     0729  3084               	movlw	132
  5055     072A  0020               	movlb	0	; select bank0
  5056     072B  0098               	movwf	24	;volatile
  5057     072C                     l266:
  5058     072C  0008               	return
  5059     072D                     __end_of_TMR1_Counter:
  5060                           
  5061                           	psect	text15
  5062     06FA                     __ptext15:	
  5063 ;; *************** function _TMR0_Timer *****************
  5064 ;; Defined at:
  5065 ;;		line 20 in file "main.c"
  5066 ;; Parameters:    Size  Location     Type
  5067 ;;		None
  5068 ;; Auto vars:     Size  Location     Type
  5069 ;;		None
  5070 ;; Return value:  Size  Location     Type
  5071 ;;                  1    wreg      void 
  5072 ;; Registers used:
  5073 ;;		wreg
  5074 ;; Tracked objects:
  5075 ;;		On entry : 0/0
  5076 ;;		On exit  : 0/0
  5077 ;;		Unchanged: 0/0
  5078 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5079 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5080 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5081 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5082 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5083 ;;Total ram usage:        0 bytes
  5084 ;; Hardware stack levels used: 1
  5085 ;; Hardware stack levels required when called: 1
  5086 ;; This function calls:
  5087 ;;		Nothing
  5088 ;; This function is called by:
  5089 ;;		_main
  5090 ;; This function uses a non-reentrant model
  5091 ;;
  5092                           
  5093     06FA                     _TMR0_Timer:	
  5094                           ;psect for function _TMR0_Timer
  5095                           
  5096     06FA                     l1964:	
  5097                           ;incstack = 0
  5098                           ; Regs used in _TMR0_Timer: [wreg]
  5099                           
  5100                           
  5101                           ;main.c: 21:         counter = TMR1;
  5102     06FA  3002               	movlw	2
  5103     06FB  003C               	movlb	28	; select bank28
  5104     06FC  0091               	movwf	17	;volatile
  5105                           
  5106                           ;main.c: 22:         TMR0 = 0x7D;
  5107     06FD  3027               	movlw	39
  5108     06FE  0021               	movlb	1	; select bank1
  5109     06FF  0095               	movwf	21	;volatile
  5110                           
  5111                           ;main.c: 23:         TMR1 = 0;
  5112     0700  30E1               	movlw	225
  5113     0701  0020               	movlb	0	; select bank0
  5114     0702  0095               	movwf	21	;volatile
  5115     0703                     l1966:
  5116                           
  5117                           ;main.c: 24:         INTCONbits.TMR0IF = 0;
  5118     0703  110B               	bcf	11,2	;volatile
  5119     0704                     l1968:
  5120                           
  5121                           ;main.c: 25:     }
  5122     0704  168B               	bsf	11,5	;volatile
  5123     0705                     l263:
  5124     0705  0008               	return
  5125     0706                     __end_of_TMR0_Timer:
  5126                           
  5127                           	psect	text16
  5128     06D5                     __ptext16:	
  5129 ;; *************** function _SYSTEM_Initialize *****************
  5130 ;; Defined at:
  5131 ;;		line 50 in file "mcc_generated_files/mcc.c"
  5132 ;; Parameters:    Size  Location     Type
  5133 ;;		None
  5134 ;; Auto vars:     Size  Location     Type
  5135 ;;		None
  5136 ;; Return value:  Size  Location     Type
  5137 ;;                  1    wreg      void 
  5138 ;; Registers used:
  5139 ;;		wreg, status,2, status,0, pclath, cstack
  5140 ;; Tracked objects:
  5141 ;;		On entry : 0/0
  5142 ;;		On exit  : 0/0
  5143 ;;		Unchanged: 0/0
  5144 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5145 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5146 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5147 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5148 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5149 ;;Total ram usage:        0 bytes
  5150 ;; Hardware stack levels used: 1
  5151 ;; Hardware stack levels required when called: 2
  5152 ;; This function calls:
  5153 ;;		_OSCILLATOR_Initialize
  5154 ;;		_PIN_MANAGER_Initialize
  5155 ;;		_PWM3_Initialize
  5156 ;;		_TMR2_Initialize
  5157 ;; This function is called by:
  5158 ;;		_main
  5159 ;; This function uses a non-reentrant model
  5160 ;;
  5161                           
  5162     06D5                     _SYSTEM_Initialize:	
  5163                           ;psect for function _SYSTEM_Initialize
  5164                           
  5165     06D5                     l1910:	
  5166                           ;incstack = 0
  5167                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5168                           
  5169                           
  5170                           ;mcc_generated_files/mcc.c: 52:     PIN_MANAGER_Initialize();
  5171     06D5  3185  25FB  3186   	fcall	_PIN_MANAGER_Initialize
  5172                           
  5173                           ;mcc_generated_files/mcc.c: 53:     OSCILLATOR_Initialize();
  5174     06D8  3187  271C  3186   	fcall	_OSCILLATOR_Initialize
  5175                           
  5176                           ;mcc_generated_files/mcc.c: 54:     PWM3_Initialize();
  5177     06DB  3187  2711  3186   	fcall	_PWM3_Initialize
  5178                           
  5179                           ;mcc_generated_files/mcc.c: 55:     TMR2_Initialize();
  5180     06DE  3187  2706  3186   	fcall	_TMR2_Initialize
  5181     06E1                     l98:
  5182     06E1  0008               	return
  5183     06E2                     __end_of_SYSTEM_Initialize:
  5184                           
  5185                           	psect	text17
  5186     0706                     __ptext17:	
  5187 ;; *************** function _TMR2_Initialize *****************
  5188 ;; Defined at:
  5189 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  5190 ;; Parameters:    Size  Location     Type
  5191 ;;		None
  5192 ;; Auto vars:     Size  Location     Type
  5193 ;;		None
  5194 ;; Return value:  Size  Location     Type
  5195 ;;                  1    wreg      void 
  5196 ;; Registers used:
  5197 ;;		wreg, status,2
  5198 ;; Tracked objects:
  5199 ;;		On entry : 0/0
  5200 ;;		On exit  : 0/0
  5201 ;;		Unchanged: 0/0
  5202 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5203 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5204 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5205 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5206 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5207 ;;Total ram usage:        0 bytes
  5208 ;; Hardware stack levels used: 1
  5209 ;; Hardware stack levels required when called: 1
  5210 ;; This function calls:
  5211 ;;		Nothing
  5212 ;; This function is called by:
  5213 ;;		_SYSTEM_Initialize
  5214 ;; This function uses a non-reentrant model
  5215 ;;
  5216                           
  5217     0706                     _TMR2_Initialize:	
  5218                           ;psect for function _TMR2_Initialize
  5219                           
  5220     0706                     l1792:	
  5221                           ;incstack = 0
  5222                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
  5223                           
  5224                           
  5225                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x00;
  5226     0706  0020               	movlb	0	; select bank0
  5227     0707  019E               	clrf	30	;volatile
  5228                           
  5229                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
  5230     0708  019D               	clrf	29	;volatile
  5231                           
  5232                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
  5233     0709  019F               	clrf	31	;volatile
  5234     070A                     l1794:
  5235                           
  5236                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0x1F;
  5237     070A  301F               	movlw	31
  5238     070B  009B               	movwf	27	;volatile
  5239     070C                     l1796:
  5240                           
  5241                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
  5242     070C  019A               	clrf	26	;volatile
  5243     070D                     l1798:
  5244                           
  5245                           ;mcc_generated_files/tmr2.c: 82:     PIR1bits.TMR2IF = 0;
  5246     070D  1090               	bcf	16,1	;volatile
  5247                           
  5248                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0x80;
  5249     070E  3080               	movlw	128
  5250     070F  009C               	movwf	28	;volatile
  5251     0710                     l41:
  5252     0710  0008               	return
  5253     0711                     __end_of_TMR2_Initialize:
  5254                           
  5255                           	psect	text18
  5256     0711                     __ptext18:	
  5257 ;; *************** function _PWM3_Initialize *****************
  5258 ;; Defined at:
  5259 ;;		line 58 in file "mcc_generated_files/pwm3.c"
  5260 ;; Parameters:    Size  Location     Type
  5261 ;;		None
  5262 ;; Auto vars:     Size  Location     Type
  5263 ;;		None
  5264 ;; Return value:  Size  Location     Type
  5265 ;;                  1    wreg      void 
  5266 ;; Registers used:
  5267 ;;		wreg, status,2, status,0
  5268 ;; Tracked objects:
  5269 ;;		On entry : 0/0
  5270 ;;		On exit  : 0/0
  5271 ;;		Unchanged: 0/0
  5272 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5273 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5274 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5276 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5277 ;;Total ram usage:        0 bytes
  5278 ;; Hardware stack levels used: 1
  5279 ;; Hardware stack levels required when called: 1
  5280 ;; This function calls:
  5281 ;;		Nothing
  5282 ;; This function is called by:
  5283 ;;		_SYSTEM_Initialize
  5284 ;; This function uses a non-reentrant model
  5285 ;;
  5286                           
  5287     0711                     _PWM3_Initialize:	
  5288                           ;psect for function _PWM3_Initialize
  5289                           
  5290     0711                     l1788:	
  5291                           ;incstack = 0
  5292                           ; Regs used in _PWM3_Initialize: [wreg+status,2+status,0]
  5293                           
  5294                           
  5295                           ;mcc_generated_files/pwm3.c: 62:     PWM3CON = 0x80;
  5296     0711  3080               	movlw	128
  5297     0712  002C               	movlb	12	; select bank12
  5298     0713  0099               	movwf	25	;volatile
  5299                           
  5300                           ;mcc_generated_files/pwm3.c: 65:     PWM3DCH = 0x0F;
  5301     0714  300F               	movlw	15
  5302     0715  0098               	movwf	24	;volatile
  5303                           
  5304                           ;mcc_generated_files/pwm3.c: 68:     PWM3DCL = 0xC0;
  5305     0716  30C0               	movlw	192
  5306     0717  0097               	movwf	23	;volatile
  5307     0718                     l1790:
  5308                           
  5309                           ;mcc_generated_files/pwm3.c: 71:     CCPTMRSbits.P3TSEL = 0;
  5310     0718  30CF               	movlw	-49
  5311     0719  0025               	movlb	5	; select bank5
  5312     071A  059E               	andwf	30,f	;volatile
  5313     071B                     l11:
  5314     071B  0008               	return
  5315     071C                     __end_of_PWM3_Initialize:
  5316                           
  5317                           	psect	text19
  5318     05FB                     __ptext19:	
  5319 ;; *************** function _PIN_MANAGER_Initialize *****************
  5320 ;; Defined at:
  5321 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  5322 ;; Parameters:    Size  Location     Type
  5323 ;;		None
  5324 ;; Auto vars:     Size  Location     Type
  5325 ;;		None
  5326 ;; Return value:  Size  Location     Type
  5327 ;;                  1    wreg      void 
  5328 ;; Registers used:
  5329 ;;		wreg, status,2
  5330 ;; Tracked objects:
  5331 ;;		On entry : 0/0
  5332 ;;		On exit  : 0/0
  5333 ;;		Unchanged: 0/0
  5334 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5335 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5336 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5337 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5338 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5339 ;;Total ram usage:        0 bytes
  5340 ;; Hardware stack levels used: 1
  5341 ;; Hardware stack levels required when called: 1
  5342 ;; This function calls:
  5343 ;;		Nothing
  5344 ;; This function is called by:
  5345 ;;		_SYSTEM_Initialize
  5346 ;; This function uses a non-reentrant model
  5347 ;;
  5348                           
  5349     05FB                     _PIN_MANAGER_Initialize:	
  5350                           ;psect for function _PIN_MANAGER_Initialize
  5351                           
  5352     05FB                     l1800:	
  5353                           ;incstack = 0
  5354                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  5355                           
  5356                           
  5357                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  5358     05FB  0022               	movlb	2	; select bank2
  5359     05FC  018C               	clrf	12	;volatile
  5360                           
  5361                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  5362     05FD  018D               	clrf	13	;volatile
  5363                           
  5364                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  5365     05FE  018E               	clrf	14	;volatile
  5366     05FF                     l1802:
  5367                           
  5368                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0x37;
  5369     05FF  3037               	movlw	55
  5370     0600  0021               	movlb	1	; select bank1
  5371     0601  008C               	movwf	12	;volatile
  5372     0602                     l1804:
  5373                           
  5374                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xF0;
  5375     0602  30F0               	movlw	240
  5376     0603  008D               	movwf	13	;volatile
  5377     0604                     l1806:
  5378                           
  5379                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xBF;
  5380     0604  30BF               	movlw	191
  5381     0605  008E               	movwf	14	;volatile
  5382     0606                     l1808:
  5383                           
  5384                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0xCF;
  5385     0606  30CF               	movlw	207
  5386     0607  0023               	movlb	3	; select bank3
  5387     0608  008E               	movwf	14	;volatile
  5388     0609                     l1810:
  5389                           
  5390                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0xF0;
  5391     0609  30F0               	movlw	240
  5392     060A  008D               	movwf	13	;volatile
  5393     060B                     l1812:
  5394                           
  5395                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x17;
  5396     060B  3017               	movlw	23
  5397     060C  008C               	movwf	12	;volatile
  5398                           
  5399                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  5400     060D  0024               	movlb	4	; select bank4
  5401     060E  018D               	clrf	13	;volatile
  5402                           
  5403                           ;mcc_generated_files/pin_manager.c: 82:     WPUA = 0x00;
  5404     060F  018C               	clrf	12	;volatile
  5405                           
  5406                           ;mcc_generated_files/pin_manager.c: 83:     WPUC = 0x00;
  5407     0610  018E               	clrf	14	;volatile
  5408     0611                     l1814:
  5409                           
  5410                           ;mcc_generated_files/pin_manager.c: 84:     OPTION_REGbits.nWPUEN = 1;
  5411     0611  0021               	movlb	1	; select bank1
  5412     0612  1795               	bsf	21,7	;volatile
  5413                           
  5414                           ;mcc_generated_files/pin_manager.c: 89:     ODCONA = 0x00;
  5415     0613  0025               	movlb	5	; select bank5
  5416     0614  018C               	clrf	12	;volatile
  5417                           
  5418                           ;mcc_generated_files/pin_manager.c: 90:     ODCONB = 0x00;
  5419     0615  018D               	clrf	13	;volatile
  5420                           
  5421                           ;mcc_generated_files/pin_manager.c: 91:     ODCONC = 0x00;
  5422     0616  018E               	clrf	14	;volatile
  5423     0617                     l1816:
  5424                           
  5425                           ;mcc_generated_files/pin_manager.c: 96:     SLRCONA = 0x37;
  5426     0617  3037               	movlw	55
  5427     0618  0026               	movlb	6	; select bank6
  5428     0619  008C               	movwf	12	;volatile
  5429     061A                     l1818:
  5430                           
  5431                           ;mcc_generated_files/pin_manager.c: 97:     SLRCONB = 0xF0;
  5432     061A  30F0               	movlw	240
  5433     061B  008D               	movwf	13	;volatile
  5434     061C                     l1820:
  5435                           
  5436                           ;mcc_generated_files/pin_manager.c: 98:     SLRCONC = 0xFF;
  5437     061C  30FF               	movlw	255
  5438     061D  008E               	movwf	14	;volatile
  5439     061E                     l1822:
  5440                           
  5441                           ;mcc_generated_files/pin_manager.c: 103:     INLVLA = 0x3F;
  5442     061E  303F               	movlw	63
  5443     061F  0027               	movlb	7	; select bank7
  5444     0620  008C               	movwf	12	;volatile
  5445     0621                     l1824:
  5446                           
  5447                           ;mcc_generated_files/pin_manager.c: 104:     INLVLB = 0xF0;
  5448     0621  30F0               	movlw	240
  5449     0622  008D               	movwf	13	;volatile
  5450     0623                     l1826:
  5451                           
  5452                           ;mcc_generated_files/pin_manager.c: 105:     INLVLC = 0xFF;
  5453     0623  30FF               	movlw	255
  5454     0624  008E               	movwf	14	;volatile
  5455     0625                     l1828:
  5456                           
  5457                           ;mcc_generated_files/pin_manager.c: 114:     RC6PPS = 0x0E;
  5458     0625  300E               	movlw	14
  5459     0626  003D               	movlb	29	; select bank29
  5460     0627  00A6               	movwf	38	;volatile
  5461     0628                     l150:
  5462     0628  0008               	return
  5463     0629                     __end_of_PIN_MANAGER_Initialize:
  5464                           
  5465                           	psect	text20
  5466     071C                     __ptext20:	
  5467 ;; *************** function _OSCILLATOR_Initialize *****************
  5468 ;; Defined at:
  5469 ;;		line 58 in file "mcc_generated_files/mcc.c"
  5470 ;; Parameters:    Size  Location     Type
  5471 ;;		None
  5472 ;; Auto vars:     Size  Location     Type
  5473 ;;		None
  5474 ;; Return value:  Size  Location     Type
  5475 ;;                  1    wreg      void 
  5476 ;; Registers used:
  5477 ;;		wreg, status,2
  5478 ;; Tracked objects:
  5479 ;;		On entry : 0/0
  5480 ;;		On exit  : 0/0
  5481 ;;		Unchanged: 0/0
  5482 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5483 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5484 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5485 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5486 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5487 ;;Total ram usage:        0 bytes
  5488 ;; Hardware stack levels used: 1
  5489 ;; Hardware stack levels required when called: 1
  5490 ;; This function calls:
  5491 ;;		Nothing
  5492 ;; This function is called by:
  5493 ;;		_SYSTEM_Initialize
  5494 ;; This function uses a non-reentrant model
  5495 ;;
  5496                           
  5497     071C                     _OSCILLATOR_Initialize:	
  5498                           ;psect for function _OSCILLATOR_Initialize
  5499                           
  5500     071C                     l1830:	
  5501                           ;incstack = 0
  5502                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  5503                           
  5504                           
  5505                           ;mcc_generated_files/mcc.c: 61:     OSCCON = 0x68;
  5506     071C  3068               	movlw	104
  5507     071D  0021               	movlb	1	; select bank1
  5508     071E  0099               	movwf	25	;volatile
  5509     071F                     l1832:
  5510                           
  5511                           ;mcc_generated_files/mcc.c: 63:     OSCTUNE = 0x00;
  5512     071F  0198               	clrf	24	;volatile
  5513     0720                     l1834:
  5514                           
  5515                           ;mcc_generated_files/mcc.c: 65:     BORCON = 0x00;
  5516     0720  0022               	movlb	2	; select bank2
  5517     0721  0196               	clrf	22	;volatile
  5518     0722                     l101:
  5519     0722  0008               	return
  5520     0723                     __end_of_OSCILLATOR_Initialize:
  5521                           
  5522                           	psect	text21
  5523     06BF                     __ptext21:	
  5524 ;; *************** function _PWM3_LoadDutyValue *****************
  5525 ;; Defined at:
  5526 ;;		line 74 in file "mcc_generated_files/pwm3.c"
  5527 ;; Parameters:    Size  Location     Type
  5528 ;;  dutyValue       2    0[COMMON] unsigned short 
  5529 ;; Auto vars:     Size  Location     Type
  5530 ;;		None
  5531 ;; Return value:  Size  Location     Type
  5532 ;;                  1    wreg      void 
  5533 ;; Registers used:
  5534 ;;		wreg, status,2, status,0
  5535 ;; Tracked objects:
  5536 ;;		On entry : 0/0
  5537 ;;		On exit  : 0/0
  5538 ;;		Unchanged: 0/0
  5539 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5540 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5541 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5542 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5543 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5544 ;;Total ram usage:        4 bytes
  5545 ;; Hardware stack levels used: 1
  5546 ;; Hardware stack levels required when called: 1
  5547 ;; This function calls:
  5548 ;;		Nothing
  5549 ;; This function is called by:
  5550 ;;		_main
  5551 ;; This function uses a non-reentrant model
  5552 ;;
  5553                           
  5554     06BF                     _PWM3_LoadDutyValue:	
  5555                           ;psect for function _PWM3_LoadDutyValue
  5556                           
  5557     06BF                     l1908:	
  5558                           ;incstack = 0
  5559                           ; Regs used in _PWM3_LoadDutyValue: [wreg+status,2+status,0]
  5560                           
  5561                           
  5562                           ;mcc_generated_files/pwm3.c: 74:  void PWM3_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm3.c: 75:  {;mcc_generated_files/pwm3.c: 77:      PWM3DCH = (dutyValue & 0x0
      +                          3FC)>>2;
  5563     06BF  0871               	movf	PWM3_LoadDutyValue@dutyValue+1,w
  5564     06C0  00F3               	movwf	??_PWM3_LoadDutyValue+1
  5565     06C1  0870               	movf	PWM3_LoadDutyValue@dutyValue,w
  5566     06C2  00F2               	movwf	??_PWM3_LoadDutyValue
  5567     06C3  36F3               	lsrf	??_PWM3_LoadDutyValue+1,f
  5568     06C4  0CF2               	rrf	??_PWM3_LoadDutyValue,f
  5569     06C5  36F3               	lsrf	??_PWM3_LoadDutyValue+1,f
  5570     06C6  0CF2               	rrf	??_PWM3_LoadDutyValue,f
  5571     06C7  0872               	movf	??_PWM3_LoadDutyValue,w
  5572     06C8  002C               	movlb	12	; select bank12
  5573     06C9  0098               	movwf	24	;volatile
  5574                           
  5575                           ;mcc_generated_files/pwm3.c: 80:      PWM3DCL = (dutyValue & 0x0003)<<6;
  5576     06CA  0870               	movf	PWM3_LoadDutyValue@dutyValue,w
  5577     06CB  3903               	andlw	3
  5578     06CC  00F2               	movwf	??_PWM3_LoadDutyValue
  5579     06CD  3005               	movlw	5
  5580     06CE                     u1335:
  5581     06CE  35F2               	lslf	??_PWM3_LoadDutyValue,f
  5582     06CF  3EFF               	addlw	-1
  5583     06D0  1D03               	skipz
  5584     06D1  2ECE               	goto	u1335
  5585     06D2  3572               	lslf	??_PWM3_LoadDutyValue,w
  5586     06D3  0097               	movwf	23	;volatile
  5587     06D4                     l14:
  5588     06D4  0008               	return
  5589     06D5                     __end_of_PWM3_LoadDutyValue:
  5590                           
  5591                           	psect	text22
  5592     05BA                     __ptext22:	
  5593 ;; *************** function _Lcd_Out2 *****************
  5594 ;; Defined at:
  5595 ;;		line 115 in file "./flex_lcd.h"
  5596 ;; Parameters:    Size  Location     Type
  5597 ;;  y               1    wreg     unsigned char 
  5598 ;;  x               1    3[COMMON] unsigned char 
  5599 ;;  buffer          1    4[COMMON] PTR unsigned char 
  5600 ;;		 -> buffer2(20), buffer1(20), 
  5601 ;; Auto vars:     Size  Location     Type
  5602 ;;  y               1    7[COMMON] unsigned char 
  5603 ;;  data            1    8[COMMON] unsigned char 
  5604 ;; Return value:  Size  Location     Type
  5605 ;;                  1    wreg      void 
  5606 ;; Registers used:
  5607 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5608 ;; Tracked objects:
  5609 ;;		On entry : 0/0
  5610 ;;		On exit  : 0/0
  5611 ;;		Unchanged: 0/0
  5612 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5613 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5614 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5615 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5616 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5617 ;;Total ram usage:        6 bytes
  5618 ;; Hardware stack levels used: 1
  5619 ;; Hardware stack levels required when called: 2
  5620 ;; This function calls:
  5621 ;;		_Lcd_Chr_CP
  5622 ;;		_Lcd_Cmd
  5623 ;; This function is called by:
  5624 ;;		_main
  5625 ;; This function uses a non-reentrant model
  5626 ;;
  5627                           
  5628     05BA                     _Lcd_Out2:	
  5629                           ;psect for function _Lcd_Out2
  5630                           
  5631                           
  5632                           ;incstack = 0
  5633                           ; Regs used in _Lcd_Out2: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5634                           ;Lcd_Out2@y stored from wreg
  5635     05BA  00F7               	movwf	Lcd_Out2@y
  5636     05BB                     l1938:
  5637                           
  5638                           ;./flex_lcd.h: 115: void Lcd_Out2(unsigned char y, unsigned char x, char *buffer);./flex
      +                          _lcd.h: 116: {;./flex_lcd.h: 117: unsigned char data;;./flex_lcd.h: 118: switch (y)
  5639     05BB  2DCC               	goto	l1950
  5640     05BC                     l1940:
  5641     05BC  0873               	movf	Lcd_Out2@x,w
  5642     05BD  3E80               	addlw	128
  5643     05BE  00F8               	movwf	Lcd_Out2@data
  5644     05BF  2DE2               	goto	l1952
  5645     05C0                     l1942:
  5646     05C0  0873               	movf	Lcd_Out2@x,w
  5647     05C1  3EC0               	addlw	192
  5648     05C2  00F8               	movwf	Lcd_Out2@data
  5649     05C3  2DE2               	goto	l1952
  5650     05C4                     l1944:
  5651     05C4  0873               	movf	Lcd_Out2@x,w
  5652     05C5  3E94               	addlw	148
  5653     05C6  00F8               	movwf	Lcd_Out2@data
  5654     05C7  2DE2               	goto	l1952
  5655     05C8                     l1946:
  5656     05C8  0873               	movf	Lcd_Out2@x,w
  5657     05C9  3ED4               	addlw	212
  5658     05CA  00F8               	movwf	Lcd_Out2@data
  5659     05CB  2DE2               	goto	l1952
  5660     05CC                     l1950:
  5661     05CC  0877               	movf	Lcd_Out2@y,w
  5662     05CD  00F5               	movwf	??_Lcd_Out2
  5663     05CE  01F6               	clrf	??_Lcd_Out2+1
  5664                           
  5665                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5666                           ; Switch size 1, requested type "simple"
  5667                           ; Number of cases is 1, Range of values is 0 to 0
  5668                           ; switch strategies available:
  5669                           ; Name         Instructions Cycles
  5670                           ; simple_byte            4     3 (average)
  5671                           ; direct_byte            8     6 (fixed)
  5672                           ; jumptable            260     6 (fixed)
  5673                           ;	Chosen strategy is simple_byte
  5674     05CF  0876               	movf	??_Lcd_Out2+1,w
  5675     05D0  3A00               	xorlw	0	; case 0
  5676     05D1  1903               	skipnz
  5677     05D2  2DD4               	goto	l2130
  5678     05D3  2DE2               	goto	l1952
  5679     05D4                     l2130:
  5680                           
  5681                           ; Switch size 1, requested type "simple"
  5682                           ; Number of cases is 4, Range of values is 1 to 4
  5683                           ; switch strategies available:
  5684                           ; Name         Instructions Cycles
  5685                           ; simple_byte           13     7 (average)
  5686                           ; direct_byte           17     9 (fixed)
  5687                           ; jumptable            263     9 (fixed)
  5688                           ;	Chosen strategy is simple_byte
  5689     05D4  0875               	movf	??_Lcd_Out2,w
  5690     05D5  3A01               	xorlw	1	; case 1
  5691     05D6  1903               	skipnz
  5692     05D7  2DBC               	goto	l1940
  5693     05D8  3A03               	xorlw	3	; case 2
  5694     05D9  1903               	skipnz
  5695     05DA  2DC0               	goto	l1942
  5696     05DB  3A01               	xorlw	1	; case 3
  5697     05DC  1903               	skipnz
  5698     05DD  2DC4               	goto	l1944
  5699     05DE  3A07               	xorlw	7	; case 4
  5700     05DF  1903               	skipnz
  5701     05E0  2DC8               	goto	l1946
  5702     05E1  2DE2               	goto	l1952
  5703     05E2                     l1952:
  5704                           
  5705                           ;./flex_lcd.h: 126: Lcd_Cmd(data);
  5706     05E2  0878               	movf	Lcd_Out2@data,w
  5707     05E3  3183  2380  3185   	fcall	_Lcd_Cmd
  5708                           
  5709                           ;./flex_lcd.h: 127: while(*buffer)
  5710     05E6  2DF2               	goto	l1958
  5711     05E7                     l1954:
  5712                           
  5713                           ;./flex_lcd.h: 128: {;./flex_lcd.h: 129:     Lcd_Chr_CP(*buffer);
  5714     05E7  0874               	movf	Lcd_Out2@buffer,w
  5715     05E8  0086               	movwf	6
  5716     05E9  0187               	clrf	7
  5717     05EA  0801               	movf	1,w
  5718     05EB  3182  22EA  3185   	fcall	_Lcd_Chr_CP
  5719     05EE                     l1956:
  5720                           
  5721                           ;./flex_lcd.h: 130:     buffer++;
  5722     05EE  3001               	movlw	1
  5723     05EF  00F5               	movwf	??_Lcd_Out2
  5724     05F0  0875               	movf	??_Lcd_Out2,w
  5725     05F1  07F4               	addwf	Lcd_Out2@buffer,f
  5726     05F2                     l1958:
  5727                           
  5728                           ;./flex_lcd.h: 127: while(*buffer)
  5729     05F2  0874               	movf	Lcd_Out2@buffer,w
  5730     05F3  0086               	movwf	6
  5731     05F4  0187               	clrf	7
  5732     05F5  0801               	movf	1,w
  5733     05F6  1D03               	btfss	3,2
  5734     05F7  2DF9               	goto	u1351
  5735     05F8  2DFA               	goto	u1350
  5736     05F9                     u1351:
  5737     05F9  2DE7               	goto	l1954
  5738     05FA                     u1350:
  5739     05FA                     l242:
  5740     05FA  0008               	return
  5741     05FB                     __end_of_Lcd_Out2:
  5742                           
  5743                           	psect	text23
  5744     02EA                     __ptext23:	
  5745 ;; *************** function _Lcd_Chr_CP *****************
  5746 ;; Defined at:
  5747 ;;		line 136 in file "./flex_lcd.h"
  5748 ;; Parameters:    Size  Location     Type
  5749 ;;  data            1    wreg     unsigned char 
  5750 ;; Auto vars:     Size  Location     Type
  5751 ;;  data            1    2[COMMON] unsigned char 
  5752 ;; Return value:  Size  Location     Type
  5753 ;;                  1    wreg      void 
  5754 ;; Registers used:
  5755 ;;		wreg, status,2, status,0
  5756 ;; Tracked objects:
  5757 ;;		On entry : 0/0
  5758 ;;		On exit  : 0/0
  5759 ;;		Unchanged: 0/0
  5760 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5761 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5762 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5763 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5764 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5765 ;;Total ram usage:        3 bytes
  5766 ;; Hardware stack levels used: 1
  5767 ;; Hardware stack levels required when called: 1
  5768 ;; This function calls:
  5769 ;;		Nothing
  5770 ;; This function is called by:
  5771 ;;		_Lcd_Out2
  5772 ;;		_Lcd_Out
  5773 ;; This function uses a non-reentrant model
  5774 ;;
  5775                           
  5776     02EA                     _Lcd_Chr_CP:	
  5777                           ;psect for function _Lcd_Chr_CP
  5778                           
  5779                           
  5780                           ;incstack = 0
  5781                           ; Regs used in _Lcd_Chr_CP: [wreg+status,2+status,0]
  5782                           ;Lcd_Chr_CP@data stored from wreg
  5783     02EA  00F2               	movwf	Lcd_Chr_CP@data
  5784     02EB                     l1866:
  5785                           
  5786                           ;./flex_lcd.h: 137: PORTCbits.RC4 = 0; PORTCbits.RC5 = 1;
  5787     02EB  0020               	movlb	0	; select bank0
  5788     02EC  120E               	bcf	14,4	;volatile
  5789     02ED  168E               	bsf	14,5	;volatile
  5790     02EE                     l1868:
  5791                           
  5792                           ;./flex_lcd.h: 138: PORTCbits.RC0 = (data & 0b10000000)>>7; PORTCbits.RC1 = (data & 0b01
      +                          000000)>>6;
  5793     02EE  0872               	movf	Lcd_Chr_CP@data,w
  5794     02EF  00F0               	movwf	??_Lcd_Chr_CP
  5795     02F0  3007               	movlw	7
  5796     02F1                     u1265:
  5797     02F1  36F0               	lsrf	??_Lcd_Chr_CP,f
  5798     02F2  0B89               	decfsz	9,f
  5799     02F3  2AF1               	goto	u1265
  5800     02F4  3001               	movlw	1
  5801     02F5  0570               	andwf	??_Lcd_Chr_CP,w
  5802     02F6  00F1               	movwf	??_Lcd_Chr_CP+1
  5803     02F7  080E               	movf	14,w	;volatile
  5804     02F8  0671               	xorwf	??_Lcd_Chr_CP+1,w
  5805     02F9  39FE               	andlw	-2
  5806     02FA  0671               	xorwf	??_Lcd_Chr_CP+1,w
  5807     02FB  008E               	movwf	14	;volatile
  5808     02FC  0872               	movf	Lcd_Chr_CP@data,w
  5809     02FD  00F0               	movwf	??_Lcd_Chr_CP
  5810     02FE  3006               	movlw	6
  5811     02FF                     u1275:
  5812     02FF  36F0               	lsrf	??_Lcd_Chr_CP,f
  5813     0300  0B89               	decfsz	9,f
  5814     0301  2AFF               	goto	u1275
  5815     0302  0870               	movf	??_Lcd_Chr_CP,w
  5816     0303  3901               	andlw	1
  5817     0304  00F1               	movwf	??_Lcd_Chr_CP+1
  5818     0305  0DF1               	rlf	??_Lcd_Chr_CP+1,f
  5819     0306  080E               	movf	14,w	;volatile
  5820     0307  0671               	xorwf	??_Lcd_Chr_CP+1,w
  5821     0308  39FD               	andlw	-3
  5822     0309  0671               	xorwf	??_Lcd_Chr_CP+1,w
  5823     030A  008E               	movwf	14	;volatile
  5824                           
  5825                           ;./flex_lcd.h: 139: PORTCbits.RC2 = (data & 0b00100000)>>5; PORTCbits.RC3 = (data & 0b00
      +                          010000)>>4;
  5826     030B  0872               	movf	Lcd_Chr_CP@data,w
  5827     030C  00F0               	movwf	??_Lcd_Chr_CP
  5828     030D  3005               	movlw	5
  5829     030E                     u1285:
  5830     030E  36F0               	lsrf	??_Lcd_Chr_CP,f
  5831     030F  0B89               	decfsz	9,f
  5832     0310  2B0E               	goto	u1285
  5833     0311  0870               	movf	??_Lcd_Chr_CP,w
  5834     0312  3901               	andlw	1
  5835     0313  00F1               	movwf	??_Lcd_Chr_CP+1
  5836     0314  0DF1               	rlf	??_Lcd_Chr_CP+1,f
  5837     0315  0DF1               	rlf	??_Lcd_Chr_CP+1,f
  5838     0316  080E               	movf	14,w	;volatile
  5839     0317  0671               	xorwf	??_Lcd_Chr_CP+1,w
  5840     0318  39FB               	andlw	-5
  5841     0319  0671               	xorwf	??_Lcd_Chr_CP+1,w
  5842     031A  008E               	movwf	14	;volatile
  5843     031B  0872               	movf	Lcd_Chr_CP@data,w
  5844     031C  00F0               	movwf	??_Lcd_Chr_CP
  5845     031D  3004               	movlw	4
  5846     031E                     u1295:
  5847     031E  36F0               	lsrf	??_Lcd_Chr_CP,f
  5848     031F  0B89               	decfsz	9,f
  5849     0320  2B1E               	goto	u1295
  5850     0321  0870               	movf	??_Lcd_Chr_CP,w
  5851     0322  3901               	andlw	1
  5852     0323  00F1               	movwf	??_Lcd_Chr_CP+1
  5853     0324  0DF1               	rlf	??_Lcd_Chr_CP+1,f
  5854     0325  0DF1               	rlf	??_Lcd_Chr_CP+1,f
  5855     0326  0DF1               	rlf	??_Lcd_Chr_CP+1,f
  5856     0327  080E               	movf	14,w	;volatile
  5857     0328  0671               	xorwf	??_Lcd_Chr_CP+1,w
  5858     0329  39F7               	andlw	-9
  5859     032A  0671               	xorwf	??_Lcd_Chr_CP+1,w
  5860     032B  008E               	movwf	14	;volatile
  5861     032C                     l1870:
  5862                           
  5863                           ;./flex_lcd.h: 140: _delay(10);
  5864     032C  3003               	movlw	3
  5865     032D                     u1437:
  5866     032D  0B89               	decfsz	9,f
  5867     032E  2B2D               	goto	u1437
  5868     032F  0000               	nop
  5869     0330                     l1872:
  5870                           
  5871                           ;./flex_lcd.h: 141: PORTCbits.RC4 = 1; _delay((unsigned long)((5)*(4000000/4000000.0)));
      +                           PORTCbits.RC4 = 0;
  5872     0330  0020               	movlb	0	; select bank0
  5873     0331  160E               	bsf	14,4	;volatile
  5874     0332                     l1874:
  5875     0332  3200               	nop2	;2 cycle nop
  5876     0333  3200               	nop2	;2 cycle nop
  5877     0334  0000               	nop
  5878     0335                     l1876:
  5879     0335  0020               	movlb	0	; select bank0
  5880     0336  120E               	bcf	14,4	;volatile
  5881     0337                     l1878:
  5882                           
  5883                           ;./flex_lcd.h: 142: PORTCbits.RC0 = (data & 0b00001000)>>3; PORTCbits.RC1 = (data & 0b00
      +                          000100)>>2;
  5884     0337  0872               	movf	Lcd_Chr_CP@data,w
  5885     0338  00F0               	movwf	??_Lcd_Chr_CP
  5886     0339  3003               	movlw	3
  5887     033A                     u1305:
  5888     033A  36F0               	lsrf	??_Lcd_Chr_CP,f
  5889     033B  0B89               	decfsz	9,f
  5890     033C  2B3A               	goto	u1305
  5891     033D  3001               	movlw	1
  5892     033E  0570               	andwf	??_Lcd_Chr_CP,w
  5893     033F  00F1               	movwf	??_Lcd_Chr_CP+1
  5894     0340  080E               	movf	14,w	;volatile
  5895     0341  0671               	xorwf	??_Lcd_Chr_CP+1,w
  5896     0342  39FE               	andlw	-2
  5897     0343  0671               	xorwf	??_Lcd_Chr_CP+1,w
  5898     0344  008E               	movwf	14	;volatile
  5899     0345                     l1880:
  5900     0345  0872               	movf	Lcd_Chr_CP@data,w
  5901     0346  00F0               	movwf	??_Lcd_Chr_CP
  5902     0347  3002               	movlw	2
  5903     0348                     u1315:
  5904     0348  36F0               	lsrf	??_Lcd_Chr_CP,f
  5905     0349  0B89               	decfsz	9,f
  5906     034A  2B48               	goto	u1315
  5907     034B  0870               	movf	??_Lcd_Chr_CP,w
  5908     034C  3901               	andlw	1
  5909     034D  00F1               	movwf	??_Lcd_Chr_CP+1
  5910     034E  0DF1               	rlf	??_Lcd_Chr_CP+1,f
  5911     034F  080E               	movf	14,w	;volatile
  5912     0350  0671               	xorwf	??_Lcd_Chr_CP+1,w
  5913     0351  39FD               	andlw	-3
  5914     0352  0671               	xorwf	??_Lcd_Chr_CP+1,w
  5915     0353  008E               	movwf	14	;volatile
  5916     0354                     l1882:
  5917                           
  5918                           ;./flex_lcd.h: 143: PORTCbits.RC2 = (data & 0b00000010)>>1; PORTCbits.RC3 = (data & 0b00
      +                          000001);
  5919     0354  3672               	lsrf	Lcd_Chr_CP@data,w
  5920     0355  3901               	andlw	1
  5921     0356  00F0               	movwf	??_Lcd_Chr_CP
  5922     0357  0DF0               	rlf	??_Lcd_Chr_CP,f
  5923     0358  0DF0               	rlf	??_Lcd_Chr_CP,f
  5924     0359  080E               	movf	14,w	;volatile
  5925     035A  0670               	xorwf	??_Lcd_Chr_CP,w
  5926     035B  39FB               	andlw	-5
  5927     035C  0670               	xorwf	??_Lcd_Chr_CP,w
  5928     035D  008E               	movwf	14	;volatile
  5929     035E                     l1884:
  5930     035E  0872               	movf	Lcd_Chr_CP@data,w
  5931     035F  3901               	andlw	1
  5932     0360  00F0               	movwf	??_Lcd_Chr_CP
  5933     0361  0DF0               	rlf	??_Lcd_Chr_CP,f
  5934     0362  0DF0               	rlf	??_Lcd_Chr_CP,f
  5935     0363  0DF0               	rlf	??_Lcd_Chr_CP,f
  5936     0364  080E               	movf	14,w	;volatile
  5937     0365  0670               	xorwf	??_Lcd_Chr_CP,w
  5938     0366  39F7               	andlw	-9
  5939     0367  0670               	xorwf	??_Lcd_Chr_CP,w
  5940     0368  008E               	movwf	14	;volatile
  5941     0369                     l1886:
  5942                           
  5943                           ;./flex_lcd.h: 144: _delay(10);
  5944     0369  3003               	movlw	3
  5945     036A                     u1447:
  5946     036A  0B89               	decfsz	9,f
  5947     036B  2B6A               	goto	u1447
  5948     036C  0000               	nop
  5949     036D                     l1888:
  5950                           
  5951                           ;./flex_lcd.h: 145: PORTCbits.RC4 = 1; _delay((unsigned long)((5)*(4000000/4000000.0)));
      +                           PORTCbits.RC4 = 0;
  5952     036D  0020               	movlb	0	; select bank0
  5953     036E  160E               	bsf	14,4	;volatile
  5954     036F                     l1890:
  5955     036F  3200               	nop2	;2 cycle nop
  5956     0370  3200               	nop2	;2 cycle nop
  5957     0371  0000               	nop
  5958     0372                     l1892:
  5959     0372  0020               	movlb	0	; select bank0
  5960     0373  120E               	bcf	14,4	;volatile
  5961     0374                     l1894:
  5962                           
  5963                           ;./flex_lcd.h: 146: _delay((unsigned long)((5)*(4000000/4000000.0))); _delay((unsigned l
      +                          ong)((5500)*(4000000/4000000.0)));
  5964     0374  3200               	nop2	;2 cycle nop
  5965     0375  3200               	nop2	;2 cycle nop
  5966     0376  0000               	nop
  5967     0377                     l1896:
  5968     0377  3008               	movlw	8
  5969     0378  00F0               	movwf	??_Lcd_Chr_CP
  5970     0379  3023               	movlw	35
  5971     037A                     u1457:
  5972     037A  0B89               	decfsz	9,f
  5973     037B  2B7A               	goto	u1457
  5974     037C  0BF0               	decfsz	??_Lcd_Chr_CP,f
  5975     037D  2B7A               	goto	u1457
  5976     037E  0000               	nop
  5977     037F                     l245:
  5978     037F  0008               	return
  5979     0380                     __end_of_Lcd_Chr_CP:
  5980                           
  5981                           	psect	text24
  5982     0251                     __ptext24:	
  5983 ;; *************** function _Lcd_Init *****************
  5984 ;; Defined at:
  5985 ;;		line 52 in file "./flex_lcd.h"
  5986 ;; Parameters:    Size  Location     Type
  5987 ;;		None
  5988 ;; Auto vars:     Size  Location     Type
  5989 ;;  data            1    4[COMMON] unsigned char 
  5990 ;; Return value:  Size  Location     Type
  5991 ;;                  1    wreg      void 
  5992 ;; Registers used:
  5993 ;;		wreg, status,2, status,0, pclath, cstack
  5994 ;; Tracked objects:
  5995 ;;		On entry : 0/0
  5996 ;;		On exit  : 0/0
  5997 ;;		Unchanged: 0/0
  5998 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5999 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6000 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6001 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6002 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6003 ;;Total ram usage:        2 bytes
  6004 ;; Hardware stack levels used: 1
  6005 ;; Hardware stack levels required when called: 2
  6006 ;; This function calls:
  6007 ;;		_Lcd_Cmd
  6008 ;; This function is called by:
  6009 ;;		_main
  6010 ;; This function uses a non-reentrant model
  6011 ;;
  6012                           
  6013     0251                     _Lcd_Init:	
  6014                           ;psect for function _Lcd_Init
  6015                           
  6016     0251                     l1912:	
  6017                           ;incstack = 0
  6018                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  6019                           
  6020                           
  6021                           ;./flex_lcd.h: 53: unsigned char data;;./flex_lcd.h: 54: TRISCbits.TRISC0 = 0;
  6022     0251  0021               	movlb	1	; select bank1
  6023     0252  100E               	bcf	14,0	;volatile
  6024                           
  6025                           ;./flex_lcd.h: 55: TRISCbits.TRISC1 = 0;
  6026     0253  108E               	bcf	14,1	;volatile
  6027                           
  6028                           ;./flex_lcd.h: 56: TRISCbits.TRISC2 = 0;
  6029     0254  110E               	bcf	14,2	;volatile
  6030                           
  6031                           ;./flex_lcd.h: 57: TRISCbits.TRISC3 = 0;
  6032     0255  118E               	bcf	14,3	;volatile
  6033                           
  6034                           ;./flex_lcd.h: 58: TRISCbits.TRISC4 = 0;
  6035     0256  120E               	bcf	14,4	;volatile
  6036                           
  6037                           ;./flex_lcd.h: 59: TRISCbits.TRISC5 = 0;
  6038     0257  128E               	bcf	14,5	;volatile
  6039                           
  6040                           ;./flex_lcd.h: 60: PORTCbits.RC0 = 0;
  6041     0258  0020               	movlb	0	; select bank0
  6042     0259  100E               	bcf	14,0	;volatile
  6043                           
  6044                           ;./flex_lcd.h: 61: PORTCbits.RC1 = 0;
  6045     025A  108E               	bcf	14,1	;volatile
  6046                           
  6047                           ;./flex_lcd.h: 62: PORTCbits.RC2 = 0;
  6048     025B  110E               	bcf	14,2	;volatile
  6049                           
  6050                           ;./flex_lcd.h: 63: PORTCbits.RC3 = 0;
  6051     025C  118E               	bcf	14,3	;volatile
  6052                           
  6053                           ;./flex_lcd.h: 64: PORTCbits.RC4 = 0;
  6054     025D  120E               	bcf	14,4	;volatile
  6055                           
  6056                           ;./flex_lcd.h: 65: PORTCbits.RC5 = 0;
  6057     025E  128E               	bcf	14,5	;volatile
  6058     025F                     l1914:
  6059                           
  6060                           ;./flex_lcd.h: 66: _delay((unsigned long)((5500)*(4000000/4000000.0)));
  6061     025F  3008               	movlw	8
  6062     0260  00F3               	movwf	??_Lcd_Init
  6063     0261  3023               	movlw	35
  6064     0262                     u1467:
  6065     0262  0B89               	decfsz	9,f
  6066     0263  2A62               	goto	u1467
  6067     0264  0BF3               	decfsz	??_Lcd_Init,f
  6068     0265  2A62               	goto	u1467
  6069     0266  0000               	nop
  6070                           
  6071                           ;./flex_lcd.h: 67: _delay((unsigned long)((5500)*(4000000/4000000.0)));
  6072     0267  3008               	movlw	8
  6073     0268  00F3               	movwf	??_Lcd_Init
  6074     0269  3023               	movlw	35
  6075     026A                     u1477:
  6076     026A  0B89               	decfsz	9,f
  6077     026B  2A6A               	goto	u1477
  6078     026C  0BF3               	decfsz	??_Lcd_Init,f
  6079     026D  2A6A               	goto	u1477
  6080     026E  0000               	nop
  6081                           
  6082                           ;./flex_lcd.h: 68: _delay((unsigned long)((5500)*(4000000/4000000.0)));
  6083     026F  3008               	movlw	8
  6084     0270  00F3               	movwf	??_Lcd_Init
  6085     0271  3023               	movlw	35
  6086     0272                     u1487:
  6087     0272  0B89               	decfsz	9,f
  6088     0273  2A72               	goto	u1487
  6089     0274  0BF3               	decfsz	??_Lcd_Init,f
  6090     0275  2A72               	goto	u1487
  6091     0276  0000               	nop
  6092                           
  6093                           ;./flex_lcd.h: 69: _delay((unsigned long)((5500)*(4000000/4000000.0)));
  6094     0277  3008               	movlw	8
  6095     0278  00F3               	movwf	??_Lcd_Init
  6096     0279  3023               	movlw	35
  6097     027A                     u1497:
  6098     027A  0B89               	decfsz	9,f
  6099     027B  2A7A               	goto	u1497
  6100     027C  0BF3               	decfsz	??_Lcd_Init,f
  6101     027D  2A7A               	goto	u1497
  6102     027E  0000               	nop
  6103                           
  6104                           ;./flex_lcd.h: 70: _delay((unsigned long)((5500)*(4000000/4000000.0)));
  6105     027F  3008               	movlw	8
  6106     0280  00F3               	movwf	??_Lcd_Init
  6107     0281  3023               	movlw	35
  6108     0282                     u1507:
  6109     0282  0B89               	decfsz	9,f
  6110     0283  2A82               	goto	u1507
  6111     0284  0BF3               	decfsz	??_Lcd_Init,f
  6112     0285  2A82               	goto	u1507
  6113     0286  0000               	nop
  6114                           
  6115                           ;./flex_lcd.h: 71: _delay((unsigned long)((5500)*(4000000/4000000.0)));
  6116     0287  3008               	movlw	8
  6117     0288  00F3               	movwf	??_Lcd_Init
  6118     0289  3023               	movlw	35
  6119     028A                     u1517:
  6120     028A  0B89               	decfsz	9,f
  6121     028B  2A8A               	goto	u1517
  6122     028C  0BF3               	decfsz	??_Lcd_Init,f
  6123     028D  2A8A               	goto	u1517
  6124     028E  0000               	nop
  6125     028F                     l1916:
  6126                           
  6127                           ;./flex_lcd.h: 72: for(data = 1; data < 4; data ++)
  6128     028F  01F4               	clrf	Lcd_Init@data
  6129     0290  0AF4               	incf	Lcd_Init@data,f
  6130     0291                     l214:
  6131                           
  6132                           ;./flex_lcd.h: 73: {;./flex_lcd.h: 74:     PORTCbits.RC0 = 0; PORTCbits.RC1 = 0; PORTCbi
      +                          ts.RC2 = 1; PORTCbits.RC3 = 1; PORTCbits.RC4 = 0;
  6133     0291  0020               	movlb	0	; select bank0
  6134     0292  100E               	bcf	14,0	;volatile
  6135     0293  108E               	bcf	14,1	;volatile
  6136     0294  150E               	bsf	14,2	;volatile
  6137     0295  158E               	bsf	14,3	;volatile
  6138     0296  120E               	bcf	14,4	;volatile
  6139                           
  6140                           ;./flex_lcd.h: 75:     PORTCbits.RC5 = 0; PORTCbits.RC0 = 0; PORTCbits.RC1 = 0; PORTCbit
      +                          s.RC2 = 1; PORTCbits.RC3 = 1;
  6141     0297  128E               	bcf	14,5	;volatile
  6142     0298  100E               	bcf	14,0	;volatile
  6143     0299  108E               	bcf	14,1	;volatile
  6144     029A  150E               	bsf	14,2	;volatile
  6145     029B  158E               	bsf	14,3	;volatile
  6146                           
  6147                           ;./flex_lcd.h: 76:     PORTCbits.RC4 = 1; PORTCbits.RC5 = 0;
  6148     029C  160E               	bsf	14,4	;volatile
  6149     029D  128E               	bcf	14,5	;volatile
  6150                           
  6151                           ;./flex_lcd.h: 77:     _delay((unsigned long)((5)*(4000000/4000000.0)));
  6152     029E  3200               	nop2	;2 cycle nop
  6153     029F  3200               	nop2	;2 cycle nop
  6154     02A0  0000               	nop
  6155                           
  6156                           ;./flex_lcd.h: 78:     PORTCbits.RC0 = 0; PORTCbits.RC1 = 0; PORTCbits.RC2 = 1; PORTCbit
      +                          s.RC3 = 1; PORTCbits.RC4 = 0;
  6157     02A1  0020               	movlb	0	; select bank0
  6158     02A2  100E               	bcf	14,0	;volatile
  6159     02A3  108E               	bcf	14,1	;volatile
  6160     02A4  150E               	bsf	14,2	;volatile
  6161     02A5  158E               	bsf	14,3	;volatile
  6162     02A6  120E               	bcf	14,4	;volatile
  6163                           
  6164                           ;./flex_lcd.h: 79:     PORTCbits.RC5 = 0;
  6165     02A7  128E               	bcf	14,5	;volatile
  6166     02A8                     l1920:
  6167                           
  6168                           ;./flex_lcd.h: 80:     _delay((unsigned long)((5500)*(4000000/4000000.0)));
  6169     02A8  3008               	movlw	8
  6170     02A9  00F3               	movwf	??_Lcd_Init
  6171     02AA  3023               	movlw	35
  6172     02AB                     u1527:
  6173     02AB  0B89               	decfsz	9,f
  6174     02AC  2AAB               	goto	u1527
  6175     02AD  0BF3               	decfsz	??_Lcd_Init,f
  6176     02AE  2AAB               	goto	u1527
  6177     02AF  0000               	nop
  6178     02B0                     l1922:
  6179                           
  6180                           ;./flex_lcd.h: 81: }
  6181     02B0  3001               	movlw	1
  6182     02B1  00F3               	movwf	??_Lcd_Init
  6183     02B2  0873               	movf	??_Lcd_Init,w
  6184     02B3  07F4               	addwf	Lcd_Init@data,f
  6185     02B4                     l1924:
  6186     02B4  3004               	movlw	4
  6187     02B5  0274               	subwf	Lcd_Init@data,w
  6188     02B6  1C03               	skipc
  6189     02B7  2AB9               	goto	u1341
  6190     02B8  2ABA               	goto	u1340
  6191     02B9                     u1341:
  6192     02B9  2A91               	goto	l214
  6193     02BA                     u1340:
  6194     02BA                     l215:
  6195                           
  6196                           ;./flex_lcd.h: 82: PORTCbits.RC0 = 0; PORTCbits.RC1 = 0; PORTCbits.RC2 = 1; PORTCbits.RC
      +                          3 = 0; PORTCbits.RC4 = 0; PORTCbits.RC5 = 0;
  6197     02BA  0020               	movlb	0	; select bank0
  6198     02BB  100E               	bcf	14,0	;volatile
  6199     02BC  108E               	bcf	14,1	;volatile
  6200     02BD  150E               	bsf	14,2	;volatile
  6201     02BE  118E               	bcf	14,3	;volatile
  6202     02BF  120E               	bcf	14,4	;volatile
  6203     02C0  128E               	bcf	14,5	;volatile
  6204                           
  6205                           ;./flex_lcd.h: 83: PORTCbits.RC0 = 0; PORTCbits.RC1 = 0; PORTCbits.RC2 = 1; PORTCbits.RC
      +                          3 = 0; PORTCbits.RC4 = 1; PORTCbits.RC5 = 0;
  6206     02C1  100E               	bcf	14,0	;volatile
  6207     02C2  108E               	bcf	14,1	;volatile
  6208     02C3  150E               	bsf	14,2	;volatile
  6209     02C4  118E               	bcf	14,3	;volatile
  6210     02C5  160E               	bsf	14,4	;volatile
  6211     02C6  128E               	bcf	14,5	;volatile
  6212                           
  6213                           ;./flex_lcd.h: 84: _delay((unsigned long)((5)*(4000000/4000000.0)));
  6214     02C7  3200               	nop2	;2 cycle nop
  6215     02C8  3200               	nop2	;2 cycle nop
  6216     02C9  0000               	nop
  6217                           
  6218                           ;./flex_lcd.h: 85: PORTCbits.RC0 = 0; PORTCbits.RC1 = 0; PORTCbits.RC2 = 1; PORTCbits.RC
      +                          3 = 0; PORTCbits.RC4 = 0; PORTCbits.RC5 = 0;
  6219     02CA  0020               	movlb	0	; select bank0
  6220     02CB  100E               	bcf	14,0	;volatile
  6221     02CC  108E               	bcf	14,1	;volatile
  6222     02CD  150E               	bsf	14,2	;volatile
  6223     02CE  118E               	bcf	14,3	;volatile
  6224     02CF  120E               	bcf	14,4	;volatile
  6225     02D0  128E               	bcf	14,5	;volatile
  6226     02D1                     l1926:
  6227                           
  6228                           ;./flex_lcd.h: 86: _delay((unsigned long)((5500)*(4000000/4000000.0)));
  6229     02D1  3008               	movlw	8
  6230     02D2  00F3               	movwf	??_Lcd_Init
  6231     02D3  3023               	movlw	35
  6232     02D4                     u1537:
  6233     02D4  0B89               	decfsz	9,f
  6234     02D5  2AD4               	goto	u1537
  6235     02D6  0BF3               	decfsz	??_Lcd_Init,f
  6236     02D7  2AD4               	goto	u1537
  6237     02D8  0000               	nop
  6238     02D9                     l1928:
  6239     02D9  3028               	movlw	40
  6240     02DA  3183  2380  3182   	fcall	_Lcd_Cmd
  6241     02DD                     l1930:
  6242     02DD  3010               	movlw	16
  6243     02DE  3183  2380  3182   	fcall	_Lcd_Cmd
  6244     02E1                     l1932:
  6245     02E1  3001               	movlw	1
  6246     02E2  3183  2380  3182   	fcall	_Lcd_Cmd
  6247     02E5                     l1934:
  6248     02E5                     l1936:
  6249     02E5  300F               	movlw	15
  6250     02E6  3183  2380  3182   	fcall	_Lcd_Cmd
  6251     02E9                     l216:
  6252     02E9  0008               	return
  6253     02EA                     __end_of_Lcd_Init:
  6254                           
  6255                           	psect	text25
  6256     0380                     __ptext25:	
  6257 ;; *************** function _Lcd_Cmd *****************
  6258 ;; Defined at:
  6259 ;;		line 150 in file "./flex_lcd.h"
  6260 ;; Parameters:    Size  Location     Type
  6261 ;;  data            1    wreg     unsigned char 
  6262 ;; Auto vars:     Size  Location     Type
  6263 ;;  data            1    2[COMMON] unsigned char 
  6264 ;; Return value:  Size  Location     Type
  6265 ;;                  1    wreg      void 
  6266 ;; Registers used:
  6267 ;;		wreg, status,2, status,0
  6268 ;; Tracked objects:
  6269 ;;		On entry : 0/0
  6270 ;;		On exit  : 0/0
  6271 ;;		Unchanged: 0/0
  6272 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6273 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6274 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6275 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6276 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6277 ;;Total ram usage:        3 bytes
  6278 ;; Hardware stack levels used: 1
  6279 ;; Hardware stack levels required when called: 1
  6280 ;; This function calls:
  6281 ;;		Nothing
  6282 ;; This function is called by:
  6283 ;;		_Lcd_Init
  6284 ;;		_Lcd_Out2
  6285 ;;		_main
  6286 ;;		_Lcd_Out
  6287 ;; This function uses a non-reentrant model
  6288 ;;
  6289                           
  6290     0380                     _Lcd_Cmd:	
  6291                           ;psect for function _Lcd_Cmd
  6292                           
  6293                           
  6294                           ;incstack = 0
  6295                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0]
  6296                           ;Lcd_Cmd@data stored from wreg
  6297     0380  00F2               	movwf	Lcd_Cmd@data
  6298     0381                     l1836:
  6299                           
  6300                           ;./flex_lcd.h: 151: PORTCbits.RC4 = 0; PORTCbits.RC5 = 0;
  6301     0381  0020               	movlb	0	; select bank0
  6302     0382  120E               	bcf	14,4	;volatile
  6303     0383  128E               	bcf	14,5	;volatile
  6304     0384                     l1838:
  6305                           
  6306                           ;./flex_lcd.h: 152: PORTCbits.RC0 = (data & 0b10000000)>>7; PORTCbits.RC1 = (data & 0b01
      +                          000000)>>6;
  6307     0384  0872               	movf	Lcd_Cmd@data,w
  6308     0385  00F0               	movwf	??_Lcd_Cmd
  6309     0386  3007               	movlw	7
  6310     0387                     u1205:
  6311     0387  36F0               	lsrf	??_Lcd_Cmd,f
  6312     0388  0B89               	decfsz	9,f
  6313     0389  2B87               	goto	u1205
  6314     038A  3001               	movlw	1
  6315     038B  0570               	andwf	??_Lcd_Cmd,w
  6316     038C  00F1               	movwf	??_Lcd_Cmd+1
  6317     038D  080E               	movf	14,w	;volatile
  6318     038E  0671               	xorwf	??_Lcd_Cmd+1,w
  6319     038F  39FE               	andlw	-2
  6320     0390  0671               	xorwf	??_Lcd_Cmd+1,w
  6321     0391  008E               	movwf	14	;volatile
  6322     0392  0872               	movf	Lcd_Cmd@data,w
  6323     0393  00F0               	movwf	??_Lcd_Cmd
  6324     0394  3006               	movlw	6
  6325     0395                     u1215:
  6326     0395  36F0               	lsrf	??_Lcd_Cmd,f
  6327     0396  0B89               	decfsz	9,f
  6328     0397  2B95               	goto	u1215
  6329     0398  0870               	movf	??_Lcd_Cmd,w
  6330     0399  3901               	andlw	1
  6331     039A  00F1               	movwf	??_Lcd_Cmd+1
  6332     039B  0DF1               	rlf	??_Lcd_Cmd+1,f
  6333     039C  080E               	movf	14,w	;volatile
  6334     039D  0671               	xorwf	??_Lcd_Cmd+1,w
  6335     039E  39FD               	andlw	-3
  6336     039F  0671               	xorwf	??_Lcd_Cmd+1,w
  6337     03A0  008E               	movwf	14	;volatile
  6338                           
  6339                           ;./flex_lcd.h: 153: PORTCbits.RC2 = (data & 0b00100000)>>5; PORTCbits.RC3 = (data & 0b00
      +                          010000)>>4;
  6340     03A1  0872               	movf	Lcd_Cmd@data,w
  6341     03A2  00F0               	movwf	??_Lcd_Cmd
  6342     03A3  3005               	movlw	5
  6343     03A4                     u1225:
  6344     03A4  36F0               	lsrf	??_Lcd_Cmd,f
  6345     03A5  0B89               	decfsz	9,f
  6346     03A6  2BA4               	goto	u1225
  6347     03A7  0870               	movf	??_Lcd_Cmd,w
  6348     03A8  3901               	andlw	1
  6349     03A9  00F1               	movwf	??_Lcd_Cmd+1
  6350     03AA  0DF1               	rlf	??_Lcd_Cmd+1,f
  6351     03AB  0DF1               	rlf	??_Lcd_Cmd+1,f
  6352     03AC  080E               	movf	14,w	;volatile
  6353     03AD  0671               	xorwf	??_Lcd_Cmd+1,w
  6354     03AE  39FB               	andlw	-5
  6355     03AF  0671               	xorwf	??_Lcd_Cmd+1,w
  6356     03B0  008E               	movwf	14	;volatile
  6357     03B1  0872               	movf	Lcd_Cmd@data,w
  6358     03B2  00F0               	movwf	??_Lcd_Cmd
  6359     03B3  3004               	movlw	4
  6360     03B4                     u1235:
  6361     03B4  36F0               	lsrf	??_Lcd_Cmd,f
  6362     03B5  0B89               	decfsz	9,f
  6363     03B6  2BB4               	goto	u1235
  6364     03B7  0870               	movf	??_Lcd_Cmd,w
  6365     03B8  3901               	andlw	1
  6366     03B9  00F1               	movwf	??_Lcd_Cmd+1
  6367     03BA  0DF1               	rlf	??_Lcd_Cmd+1,f
  6368     03BB  0DF1               	rlf	??_Lcd_Cmd+1,f
  6369     03BC  0DF1               	rlf	??_Lcd_Cmd+1,f
  6370     03BD  080E               	movf	14,w	;volatile
  6371     03BE  0671               	xorwf	??_Lcd_Cmd+1,w
  6372     03BF  39F7               	andlw	-9
  6373     03C0  0671               	xorwf	??_Lcd_Cmd+1,w
  6374     03C1  008E               	movwf	14	;volatile
  6375     03C2                     l1840:
  6376                           
  6377                           ;./flex_lcd.h: 154: _delay(10);
  6378     03C2  3003               	movlw	3
  6379     03C3                     u1547:
  6380     03C3  0B89               	decfsz	9,f
  6381     03C4  2BC3               	goto	u1547
  6382     03C5  0000               	nop
  6383     03C6                     l1842:
  6384                           
  6385                           ;./flex_lcd.h: 155: PORTCbits.RC4 = 1; _delay((unsigned long)((5)*(4000000/4000000.0)));
      +                           PORTCbits.RC4 = 0;
  6386     03C6  0020               	movlb	0	; select bank0
  6387     03C7  160E               	bsf	14,4	;volatile
  6388     03C8                     l1844:
  6389     03C8  3200               	nop2	;2 cycle nop
  6390     03C9  3200               	nop2	;2 cycle nop
  6391     03CA  0000               	nop
  6392     03CB                     l1846:
  6393     03CB  0020               	movlb	0	; select bank0
  6394     03CC  120E               	bcf	14,4	;volatile
  6395     03CD                     l1848:
  6396                           
  6397                           ;./flex_lcd.h: 156: PORTCbits.RC0 = (data & 0b00001000)>>3; PORTCbits.RC1 = (data & 0b00
      +                          000100)>>2;
  6398     03CD  0872               	movf	Lcd_Cmd@data,w
  6399     03CE  00F0               	movwf	??_Lcd_Cmd
  6400     03CF  3003               	movlw	3
  6401     03D0                     u1245:
  6402     03D0  36F0               	lsrf	??_Lcd_Cmd,f
  6403     03D1  0B89               	decfsz	9,f
  6404     03D2  2BD0               	goto	u1245
  6405     03D3  3001               	movlw	1
  6406     03D4  0570               	andwf	??_Lcd_Cmd,w
  6407     03D5  00F1               	movwf	??_Lcd_Cmd+1
  6408     03D6  080E               	movf	14,w	;volatile
  6409     03D7  0671               	xorwf	??_Lcd_Cmd+1,w
  6410     03D8  39FE               	andlw	-2
  6411     03D9  0671               	xorwf	??_Lcd_Cmd+1,w
  6412     03DA  008E               	movwf	14	;volatile
  6413     03DB                     l1850:
  6414     03DB  0872               	movf	Lcd_Cmd@data,w
  6415     03DC  00F0               	movwf	??_Lcd_Cmd
  6416     03DD  3002               	movlw	2
  6417     03DE                     u1255:
  6418     03DE  36F0               	lsrf	??_Lcd_Cmd,f
  6419     03DF  0B89               	decfsz	9,f
  6420     03E0  2BDE               	goto	u1255
  6421     03E1  0870               	movf	??_Lcd_Cmd,w
  6422     03E2  3901               	andlw	1
  6423     03E3  00F1               	movwf	??_Lcd_Cmd+1
  6424     03E4  0DF1               	rlf	??_Lcd_Cmd+1,f
  6425     03E5  080E               	movf	14,w	;volatile
  6426     03E6  0671               	xorwf	??_Lcd_Cmd+1,w
  6427     03E7  39FD               	andlw	-3
  6428     03E8  0671               	xorwf	??_Lcd_Cmd+1,w
  6429     03E9  008E               	movwf	14	;volatile
  6430     03EA                     l1852:
  6431                           
  6432                           ;./flex_lcd.h: 157: PORTCbits.RC2 = (data & 0b00000010)>>1; PORTCbits.RC3 = (data & 0b00
      +                          000001);
  6433     03EA  3672               	lsrf	Lcd_Cmd@data,w
  6434     03EB  3901               	andlw	1
  6435     03EC  00F0               	movwf	??_Lcd_Cmd
  6436     03ED  0DF0               	rlf	??_Lcd_Cmd,f
  6437     03EE  0DF0               	rlf	??_Lcd_Cmd,f
  6438     03EF  080E               	movf	14,w	;volatile
  6439     03F0  0670               	xorwf	??_Lcd_Cmd,w
  6440     03F1  39FB               	andlw	-5
  6441     03F2  0670               	xorwf	??_Lcd_Cmd,w
  6442     03F3  008E               	movwf	14	;volatile
  6443     03F4                     l1854:
  6444     03F4  0872               	movf	Lcd_Cmd@data,w
  6445     03F5  3901               	andlw	1
  6446     03F6  00F0               	movwf	??_Lcd_Cmd
  6447     03F7  0DF0               	rlf	??_Lcd_Cmd,f
  6448     03F8  0DF0               	rlf	??_Lcd_Cmd,f
  6449     03F9  0DF0               	rlf	??_Lcd_Cmd,f
  6450     03FA  080E               	movf	14,w	;volatile
  6451     03FB  0670               	xorwf	??_Lcd_Cmd,w
  6452     03FC  39F7               	andlw	-9
  6453     03FD  0670               	xorwf	??_Lcd_Cmd,w
  6454     03FE  008E               	movwf	14	;volatile
  6455     03FF                     l1856:
  6456                           
  6457                           ;./flex_lcd.h: 158: _delay(10);
  6458     03FF  3003               	movlw	3
  6459     0400                     u1557:
  6460     0400  0B89               	decfsz	9,f
  6461     0401  2C00               	goto	u1557
  6462     0402  0000               	nop
  6463     0403                     l1858:
  6464                           
  6465                           ;./flex_lcd.h: 159: PORTCbits.RC4 = 1; _delay((unsigned long)((5)*(4000000/4000000.0)));
      +                           PORTCbits.RC4 = 0;
  6466     0403  0020               	movlb	0	; select bank0
  6467     0404  160E               	bsf	14,4	;volatile
  6468     0405                     l1860:
  6469     0405  3200               	nop2	;2 cycle nop
  6470     0406  3200               	nop2	;2 cycle nop
  6471     0407  0000               	nop
  6472     0408                     l1862:
  6473     0408  0020               	movlb	0	; select bank0
  6474     0409  120E               	bcf	14,4	;volatile
  6475     040A                     l1864:
  6476                           
  6477                           ;./flex_lcd.h: 160: _delay((unsigned long)((5500)*(4000000/4000000.0)));
  6478     040A  3008               	movlw	8
  6479     040B  00F0               	movwf	??_Lcd_Cmd
  6480     040C  3023               	movlw	35
  6481     040D                     u1567:
  6482     040D  0B89               	decfsz	9,f
  6483     040E  2C0D               	goto	u1567
  6484     040F  0BF0               	decfsz	??_Lcd_Cmd,f
  6485     0410  2C0D               	goto	u1567
  6486     0411  0000               	nop
  6487     0412                     l248:
  6488     0412  0008               	return
  6489     0413                     __end_of_Lcd_Cmd:
  6490                           
  6491                           	psect	intentry
  6492     0004                     __pintentry:	
  6493 ;; *************** function _ISR_TIMER0 *****************
  6494 ;; Defined at:
  6495 ;;		line 32 in file "main.c"
  6496 ;; Parameters:    Size  Location     Type
  6497 ;;		None
  6498 ;; Auto vars:     Size  Location     Type
  6499 ;;		None
  6500 ;; Return value:  Size  Location     Type
  6501 ;;                  1    wreg      void 
  6502 ;; Registers used:
  6503 ;;		wreg, status,2, status,0
  6504 ;; Tracked objects:
  6505 ;;		On entry : 0/0
  6506 ;;		On exit  : 0/0
  6507 ;;		Unchanged: 0/0
  6508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6509 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6510 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6511 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6512 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6513 ;;Total ram usage:        0 bytes
  6514 ;; Hardware stack levels used: 1
  6515 ;; This function calls:
  6516 ;;		Nothing
  6517 ;; This function is called by:
  6518 ;;		Interrupt level 1
  6519 ;; This function uses a non-reentrant model
  6520 ;;
  6521                           
  6522     0004                     _ISR_TIMER0:
  6523                           
  6524                           ;incstack = 0
  6525     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  6526                           
  6527                           ; Regs used in _ISR_TIMER0: [wreg+status,2+status,0]
  6528     0005  3180               	pagesel	$
  6529     0006                     i1l2010:
  6530                           
  6531                           ;main.c: 33:     OSCCONbits.SCS = 0b00;
  6532     0006  1D0B               	btfss	11,2	;volatile
  6533     0007  2809               	goto	u137_21
  6534     0008  280A               	goto	u137_20
  6535     0009                     u137_21:
  6536     0009  2826               	goto	i1l272
  6537     000A                     u137_20:
  6538     000A                     i1l2012:
  6539                           
  6540                           ;main.c: 34:     OSCTUNE = 0;
  6541     000A  1003               	clrc
  6542     000B  0022               	movlb	2	; select bank2
  6543     000C  1E0D               	btfss	13,4	;volatile
  6544     000D  1403               	setc
  6545     000E  1803               	btfsc	3,0
  6546     000F  2811               	goto	u138_21
  6547     0010  2814               	goto	u138_20
  6548     0011                     u138_21:
  6549     0011  0022               	movlb	2	; select bank2
  6550     0012  160D               	bsf	13,4	;volatile
  6551     0013  2816               	goto	u139_24
  6552     0014                     u138_20:
  6553     0014  0022               	movlb	2	; select bank2
  6554     0015  120D               	bcf	13,4	;volatile
  6555     0016                     u139_24:
  6556     0016                     i1l2014:
  6557                           
  6558                           ;main.c: 35: 
  6559     0016  0020               	movlb	0	; select bank0
  6560     0017  0816               	movf	22,w	;volatile
  6561     0018  0021               	movlb	1	; select bank1
  6562     0019  00A0               	movwf	_counter^(0+128)
  6563     001A  0020               	movlb	0	; select bank0
  6564     001B  0817               	movf	23,w	;volatile
  6565     001C  0021               	movlb	1	; select bank1
  6566     001D  00A1               	movwf	(_counter^(0+128)+1)
  6567     001E  01A2               	clrf	(_counter^(0+128)+2)
  6568     001F  01A3               	clrf	(_counter^(0+128)+3)
  6569     0020                     i1l2016:
  6570                           
  6571                           ;main.c: 36: 
  6572     0020  307D               	movlw	125
  6573     0021  0020               	movlb	0	; select bank0
  6574     0022  0095               	movwf	21	;volatile
  6575     0023                     i1l2018:
  6576                           
  6577                           ;main.c: 37:     ANSELA = 0b00000000;
  6578     0023  0196               	clrf	22	;volatile
  6579     0024  0197               	clrf	23	;volatile
  6580     0025                     i1l2020:
  6581                           
  6582                           ;main.c: 38:     ANSELB = 0b00000000;
  6583     0025  110B               	bcf	11,2	;volatile
  6584     0026                     i1l272:
  6585     0026  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  6586     0027  0009               	retfie
  6587     0028                     __end_of_ISR_TIMER0:
  6588     007E                     btemp	set	126	;btemp
  6589     007E                     int$flags	set	126
  6590     007E                     wtemp0	set	126
  6591                           
  6592                           	psect	config
  6593                           
  6594                           ;Config register CONFIG1 @ 0x8007
  6595                           ;	Oscillator Selection Bits
  6596                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  6597                           ;	Power-up Timer Enable
  6598                           ;	PWRTE = ON, PWRT enabled
  6599                           ;	MCLR Pin Function Select
  6600                           ;	MCLRE = OFF, MCLR/VPP pin function is digital input
  6601                           ;	Flash Program Memory Code Protection
  6602                           ;	CP = OFF, Program memory code protection is disabled
  6603                           ;	Brown-out Reset Enable
  6604                           ;	BOREN = ON, Brown-out Reset enabled
  6605                           ;	Clock Out Enable
  6606                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  6607                           ;	Internal/External Switch Over
  6608                           ;	IESO = ON, Internal External Switch Over mode is enabled
  6609                           ;	Fail-Safe Clock Monitor Enable
  6610                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  6611     8007                     	org	32775
  6612     8007  3F9C               	dw	16284
  6613                           
  6614                           ;Config register CONFIG2 @ 0x8008
  6615                           ;	Flash Memory Self-Write Protection
  6616                           ;	WRT = OFF, Write protection off
  6617                           ;	Peripheral Pin Select one-way control
  6618                           ;	PPS1WAY = ON, The PPSLOCK bit cannot be cleared once it is set by software
  6619                           ;	Zero Cross Detect Disable Bit
  6620                           ;	ZCD = OFF, ZCD disable.  ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
  6621                           ;	PLL Enable Bit
  6622                           ;	PLLEN = OFF, 4x PLL is enabled when software sets the SPLLEN bit
  6623                           ;	Stack Overflow/Underflow Reset Enable
  6624                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  6625                           ;	Brown-out Reset Voltage Selection
  6626                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  6627                           ;	Low-Power Brown Out Reset
  6628                           ;	LPBOR = OFF, Low-Power BOR is disabled
  6629                           ;	Low-Voltage Programming Enable
  6630                           ;	LVP = ON, Low-voltage programming enabled
  6631     8008                     	org	32776
  6632     8008  3EFF               	dw	16127
  6633                           
  6634                           ;Config register CONFIG3 @ 0x8009
  6635                           ;	WDT Period Select
  6636                           ;	WDTCPS = WDTCPS1F, Software Control (WDTPS)
  6637                           ;	Watchdog Timer Enable
  6638                           ;	WDTE = OFF, WDT disabled
  6639                           ;	WDT Window Select
  6640                           ;	WDTCWS = WDTCWSSW, Software WDT window size control (WDTWS bits)
  6641                           ;	WDT Input Clock Selector
  6642                           ;	WDTCCS = SWC, Software control, controlled by WDTCS bits
  6643     8009                     	org	32777
  6644     8009  3F9F               	dw	16287

Data Sizes:
    Strings     24
    Constant    0
    Data        0
    BSS         87
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     69      80
    BANK1            80      0      76
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_2(CODE[12]), STR_1(CODE[12]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 12
		 -> STR_2(CODE[12]), STR_1(CODE[12]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 12
		 -> STR_2(CODE[12]), STR_1(CODE[12]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    S1045$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_2(CODE[12]), STR_1(CODE[12]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 20
		 -> buffer2(BANK1[20]), buffer1(BANK1[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S986$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S986$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    Lcd_Out2@buffer	PTR unsigned char  size(1) Largest target is 20
		 -> buffer2(BANK1[20]), buffer1(BANK1[20]), 


Critical Paths under _main in COMMON

    _read_prec_or_width->___wmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___awmod
    _Lcd_Out2->_Lcd_Chr_CP
    _Lcd_Out2->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd

Critical Paths under _ISR_TIMER0 in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs

Critical Paths under _ISR_TIMER0 in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR_TIMER0 in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_TIMER0 in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR_TIMER0 in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR_TIMER0 in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR_TIMER0 in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR_TIMER0 in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR_TIMER0 in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR_TIMER0 in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR_TIMER0 in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR_TIMER0 in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR_TIMER0 in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR_TIMER0 in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0    7606
                                             63 BANK0      6     6      0
                            _Lcd_Cmd
                           _Lcd_Init
                           _Lcd_Out2
                 _PWM3_LoadDutyValue
                  _SYSTEM_Initialize
                         _TMR0_Timer
                       _TMR1_Counter
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             22    16      6    6136
                                             43 BANK0     20    14      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             7     4      3    5717
                                             36 BANK0      7     4      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           18    16      2    5404
                                             23 BANK0     13    11      2
                               _dtoa
                              _fputc
                 _read_prec_or_width
 ---------------------------------------------------------------------------------
 (4) _read_prec_or_width                                   9     7      2     533
                                              6 COMMON     5     3      2
                                              0 BANK0      4     4      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     244
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                13    11      2    3650
                                             10 BANK0     13    11      2
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                  9     6      3    2066
                                             11 COMMON     3     0      3
                                              4 BANK0      6     6      0
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     6      1     997
                                              8 COMMON     3     2      1
                                              0 BANK0      4     4      0
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3     682
                                              0 COMMON     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                              7 COMMON     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              7     3      4     448
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              9     5      4     452
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _TMR1_Counter                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR0_Timer                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _PWM3_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM3_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM3_LoadDutyValue                                   4     2      2     120
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _Lcd_Out2                                             6     4      2     837
                                              3 COMMON     6     4      2
                         _Lcd_Chr_CP
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Chr_CP                                           3     3      0     176
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     314
                                              3 COMMON     2     2      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     176
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _ISR_TIMER0                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Cmd
   _Lcd_Init
     _Lcd_Cmd
   _Lcd_Out2
     _Lcd_Chr_CP
     _Lcd_Cmd
   _PWM3_LoadDutyValue
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM3_Initialize
     _TMR2_Initialize
   _TMR0_Timer
   _TMR1_Counter
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___awdiv
           ___awmod
           _abs
             ___awmod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
         _fputc
         _read_prec_or_width
           ___wmul

 _ISR_TIMER0 (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     45      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      4C       7       95.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      AA      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      AA      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Thu Jun 01 14:57:33 2023

                             _i 006D                              l11 071B                              l14 06D4  
                            l41 0710                              l98 06E1                    ___awdiv@sign 0076  
           ___wmul@multiplicand 0072                             l101 0722                             l214 0291  
                           l150 0628                             l215 02BA                             l216 02E9  
                           l242 05FA                             l245 037F                             l501 04D1  
                           l350 066B                             l263 0705                             l248 0412  
                           l266 072C                             l514 0524                             l348 0657  
                           l811 0688                             l910 072D                             l834 058E  
                           l907 064C                             l851 0138                             l837 05AE  
                           l846 011D                             l839 05B9                             l847 013A  
                           l880 06A4                             l858 01B5                             l866 0472  
                           l874 0250                             l884 06BE                             l887 06BE  
                           l899 0574                             _PR2 001B                             u710 052A  
                           u711 0529                             u800 0478                             u720 052F  
                           u801 0477                             u721 052E                             u810 0483  
                           u730 053E                             u811 0482                             u731 053D  
                           u820 0494                             u900 04D7                             u740 055C  
                           u821 0493                             u901 04D6                             u741 055B  
                           u910 04E2                             u750 064C                             u911 04E1  
                           u751 064B                             u840 04A4                             u920 04ED  
                           u760 0653                             u841 04A3                             u921 04EC  
                           u745 0558                             u761 0652                             u835 0498  
                           u860 04B3                             u940 04FD                             u861 04B2  
                           u941 04FC                             u950 0507                             u790 0667  
                           u855 04A5                             u951 0506                             u935 04F1  
                           u791 0666                             u775 0658                             u880 04C3  
                           u881 04C2                             u865 04AF                             u785 065D  
                           u890 04C8                             u970 0516                             u891 04C7  
                           u875 04B9                             u971 0515                             u955 0503  
                           u980 051B                             u981 051A                             u965 050C  
                           u990 057B                             u991 057A                             _TMR 006B  
                           _abs 06A5                             _pad 0575                    ___awmod@sign 0076  
               _TMR2_Initialize 0706                             wreg 0009                            ?_abs 0077  
                          l2100 00BA                            l2102 00C6                            l2030 0049  
                          l2022 003E                            l2104 00DD                            l2040 0051  
                          l2032 004B                            l2024 0041                            l2130 05D4  
                          l2106 00E5                            l2050 0057                            l2042 0052  
                          l2034 004C                            l2026 0046                            l2108 00ED  
                          l2060 0062                            l2052 0058                            l2044 0054  
                          l2036 004D                            l2028 0048                            l2070 0080  
                          l2062 0066                            l2054 0059                            l2046 0055  
                          l2038 0050                            l1600 04A0                            l2080 0089  
                          l2072 0083                            l2064 006A                            l2056 005C  
                          l2048 0056                            l1610 04BD                            l1602 04A4  
                          l2090 00B1                            l2082 008A                            l2074 0085  
                          l2066 0073                            l2058 005F                            l1604 04B3  
                          l1612 04C3                            l1620 04D2                            l1540 052A  
                          l1700 0134                            l2092 00B2                            l2084 0097  
                          l2076 0087                            l2068 0078                            l1614 04C8  
                          l1606 04B7                            l1630 04E2                            l1622 04D3  
                          l1550 056B                            l1542 052F                            l1710 0164  
                          l1702 013E                            l2094 00B4                            l2086 009F  
                          l2078 0088                            l1800 05FB                            l1616 04CD  
                          l1608 04B8                            l1640 04F9                            l1632 04E7  
                          l1624 04D7                            l1544 0534                            l1560 063F  
                          l1720 019A                            l1712 0168                            l1704 0141  
                          l2096 00B5                            l2088 00A6                            l1810 0609  
                          l1802 05FF                            l1642 04FD                            l1634 04ED  
                          l1650 0516                            l1626 04DC                            l1546 053E  
                          l1538 0525                            l1554 062B                            l1722 01A0  
                          l1706 0146                            l1714 0178                            l1570 0661  
                          l1562 064D                            l1730 0415                            l2098 00B6  
                          l1820 061C                            l1812 060B                            l1804 0602  
                          l1580 0478                            l1652 051B                            l1644 0507  
                          l1636 04F0                            l1628 04DE                            l1548 055C  
                          l1556 062E                            l1660 057B                            l1724 01A4  
                          l1716 0186                            l1708 015F                            l1572 0667  
                          l1564 064F                            l1740 0452                            l1732 0417  
                          l1900 0690                            l1830 071C                            l1822 061E  
                          l1814 0611                            l1806 0604                            l1910 06D5  
                          l1590 048C                            l1582 047D                            l1654 0520  
                          l1646 050B                            l1638 04F5                            l1558 063A  
                          l1670 059B                            l1662 0581                            l1726 01AA  
                          l1718 018D                            l1566 0653                            l1734 0428  
                          l1742 045A                            l1750 01C9                            l1902 0698  
                          l1840 03C2                            l1920 02A8                            l1912 0251  
                          l1832 071F                            l1824 0621                            l1816 0617  
                          l1808 0606                            l1592 048E                            l1584 047F  
                          l1576 0473                            l1648 0510                            l1672 05A0  
                          l1664 0585                            l1680 00FF                            l1568 065C  
                          l1744 046E                            l1736 0430                            l1760 01EB  
                          l1752 01D1                            l1904 06A2                            l1850 03DB  
                          l1842 03C6                            l1930 02DD                            l1922 02B0  
                          l1914 025F                            l1834 0720                            l1826 0623  
                          l1818 061A                            l1594 0494                            l1586 0483  
                          l1578 0474                            l1674 05B3                            l1666 058B  
                          l1658 0577                            l1690 0119                            l1682 0106  
                          l1738 043D                            l1770 020C                            l1762 01EC  
                          l1754 01D8                            l1860 0405                            l1852 03EA  
                          l1844 03C8                            l1836 0381                            l1932 02E1  
                          l1924 02B4                            l1916 028F                            l1940 05BC  
                          l1908 06BF                            l1828 0625                            l1596 0497  
                          l1588 0488                            l1676 06A5                            l1668 0591  
                          l1692 0121                            l1684 010B                            l1772 0218  
                          l1764 01F1                            l1756 01DC                            l1748 01B8  
                          l1862 0408                            l1854 03F4                            l1846 03CB  
                          l1838 0384                            l1934 02E5                            l1926 02D1  
                          l1870 032C                            l1942 05C0                            l1950 05CC  
                          l1790 0718                            l1598 049C                            l1678 06B2  
                          l1694 0126                            l1686 0110                            l1774 0225  
                          l1766 01F8                            l1758 01E7                            l1782 0238  
                          l1864 040A                            l1856 03FF                            l1848 03CD  
                          l1936 02E5                            l1928 02D9                            l1880 0345  
                          l1872 0330                            l1944 05C4                            l1952 05E2  
                          l1792 0706                            l1696 012A                            l1688 0114  
                          l1768 0202                            l1858 0403                            l1890 036F  
                          l1882 0354                            l1874 0332                            l1866 02EB  
                          l1954 05E7                            l1946 05C8                            l1938 05BB  
                          l1794 070A                            l1970 0729                            l1698 012F  
                          l1778 022E                            l1892 0372                            l1884 035E  
                          l1876 0335                            l1868 02EE                            l1956 05EE  
                          l1788 0711                            l1796 070C                            l1964 06FA  
                          l1980 0680                            l1972 066E                            l1894 0374  
                          l1886 0369                            l1878 0337                            l1958 05F2  
                          l1798 070D                            l1966 0703                            l1974 0672  
                          ?_pad 007B                            l1896 0377                            l1888 036D  
                          l1968 0704                            l1976 0674                            l1898 068B  
                          l1978 0676                            STR_1 06EE                            STR_2 06E2  
                          u1000 0585                            u1001 0584                            u1010 05AE  
                          u1011 05AD                            u1020 05B3                            u1100 0186  
                          u1021 05B2                            u1101 0185                            u1030 06B2  
                          u1110 018D                            u1031 06B1                            u1015 05AA  
                          u1111 018C                            u1120 019A                            u1040 0104  
                          u1121 0199                            u1105 0182                            u1041 0102  
                          u1130 01A0                            u1050 0105                            u1035 06AE  
                          u1131 019F                            u1060 010B                            u1140 0428  
                          u1205 0387                            u1125 0196                            u1061 010A  
                          u1141 0427                            u1070 0114                            u1150 046E  
                          u1215 0395                            u1071 0113                            u1151 046D  
                          u1080 0126                            u1160 01C9                            u1320 06A2  
                          u1225 03A4                            u1305 033A                            u1081 0125  
                          u1161 01C8                            u1321 06A1                            u1090 012F  
                          u1170 01EB                            u1235 03B4                            u1315 0348  
                          u1091 012E                            u1171 01EA                            u1340 02BA  
                          u1180 0202                            u1245 03D0                            u1341 02B9  
                          u1181 0201                            _LATA 010C                            u1350 05FA  
                          u1190 020C                            _LATB 010D                            u1255 03DE  
                          u1351 05F9                            u1335 06CE                            u1191 020B  
                          u1407 006E                            _LATC 010E                            u1265 02F1  
                          u1417 0090                            u1507 0282                            u1275 02FF  
                          u1427 00F3                            u1517 028A                            u1437 032D  
                          u1285 030E                            u1527 02AB                            u1447 036A  
                          u1295 031E                            u1537 02D4                            u1457 037A  
                          _T2PR 001B                            u1547 03C3                            u1467 0262  
                          u1557 0400                            u1477 026A                            u1567 040D  
                          u1487 0272                            u1497 027A                            _TMR0 0015  
                          _TMR1 0016                            _TMR2 001A                            _WPUA 020C  
                          _WPUB 020D                            _WPUC 020E                            abs@a 0077  
                          _dbuf 00A4                            _main 003E                            _dtoa 00FD  
                          _prec 0067                            pad@i 0025                            pad@p 007C  
                          fsr0h 0005                            fsr1h 0007                            indf0 0000  
                          fsr0l 0004                            indf1 0001                            fsr1l 0006  
                          pad@w 0027                            btemp 007E                            start 0028  
               __end_of_Lcd_Cmd 0413                     ?_ISR_TIMER0 0070                      _Lcd_Chr_CP 02EA  
                         ??_abs 0079                           ??_pad 0024                  Lcd_Out2@buffer 0074  
 __end_of_OSCILLATOR_Initialize 0723                           ?_main 0070                           ?_dtoa 002A  
               __end_of___awdiv 04D2                 __end_of___awmod 0525                 ___awdiv@divisor 0070  
                         _T1CON 0018                           _T2CON 001C                           _T2HLT 001D  
                         _T2TMR 001A                           _T2RST 001F                           i1l272 0026  
               ___awdiv@counter 0075                    vfpfcnvrt@fmt 0037                           _TIMER 0069  
                         _TMR1H 0017                           _TMR1L 0016                           _PORTA 000C  
                         _PORTB 000D                           _PORTC 000E                           _TRISA 008C  
                         _TRISB 008D                           _TRISC 008E                     ?_TMR0_Timer 0070  
                         _flags 006F             read_prec_or_width@c 0020             read_prec_or_width@n 0021  
                         _fputc 0525                           _fputs 0629                           pad@fp 0029  
                         _width 0065                           _putch 072D                           dtoa@d 002A  
                         dtoa@i 0034                           dtoa@p 0030                           dtoa@s 0036  
                         dtoa@w 0032         __end_of_PWM3_Initialize 071C                           status 0003  
                         wtemp0 007E                 __end_of_sprintf 0689                __end_of_Lcd_Init 02EA  
              __end_of_Lcd_Out2 05FB                 __initialization 002A                    __end_of_main 00FD  
                  __end_of_dtoa 01B6         __end_of_TMR2_Initialize 0711                          ??_main 005F  
                        ??_dtoa 002C      __end_of_read_prec_or_width 0473                          ?_fputc 0070  
                        ?_fputs 0078                ___awdiv@dividend 0072                          _ANSELA 018C  
                        ?_putch 0070                          _ANSELB 018D                          _ANSELC 018E  
                        _BORCON 0116                          i1l2010 0006                          i1l2020 0025  
                        i1l2012 000A                          i1l2014 0016                          i1l2016 0020  
                        i1l2018 0023                          _ODCONA 028C                          _ODCONB 028D  
                        _RC6PPS 0EA6                          _ODCONC 028E                          _INLVLA 038C  
                        _INLVLB 038D                          _INLVLC 038E                          u137_20 000A  
                        u137_21 0009                          u138_20 0014                          u138_21 0011  
                        u139_24 0016                          _OSCCON 0099                       ??_Lcd_Cmd 0070  
                  vfprintf@cfmt 0049                     ?_Lcd_Chr_CP 0070                          ___wmul 064D  
                     ??___awdiv 0074                       ??___awmod 0074            read_prec_or_width@ap 0076  
              ___awdiv@quotient 0077                 ___awmod@divisor 0070                 ___awmod@counter 0075  
                        main@DC 0063                          pad@buf 007B                          dtoa@fp 002F  
                        fputc@c 0070                          fputs@c 0020                          fputs@i 0021  
                        fputs@s 0023                          putch@c 0070                __end_of_vfprintf 06A5  
                     ??_sprintf 0051                ?_PWM3_Initialize 0070               _SYSTEM_Initialize 06D5  
       __end_of__initialization 003A              ?_SYSTEM_Initialize 0070                  __pcstackCOMMON 0070  
           ??_SYSTEM_Initialize 0070                   __end_of_fputc 0575                   __end_of_fputs 064D  
                 __end_of_putch 072E                ?_TMR2_Initialize 0070                  _OPTION_REGbits 0095  
                     ?_Lcd_Init 0070                       ?_Lcd_Out2 0073                         ??_fputc 0073  
     __end_of_SYSTEM_Initialize 06E2                         ??_fputs 0079                         ??_putch 0070  
                    __pbssBANK0 0065                      __pbssBANK1 00A0                    ??_ISR_TIMER0 0070  
                    __pmaintext 003E                         ?___wmul 0070                      __pintentry 0004  
                  ??_TMR0_Timer 0070                         _OSCTUNE 0098                         _PWM3DCH 0618  
                       _PWM3DCL 0617                         _PWM3CON 0619                      ??_Lcd_Init 0073  
                    ??_Lcd_Out2 0075                         _SLRCONA 030C                         _SLRCONB 030D  
                       _SLRCONC 030E              __end_of_ISR_TIMER0 0028                         _Lcd_Cmd 0380  
                 ?_TMR1_Counter 0070                         ___awdiv 0473                         ___awmod 04D2  
                     ?_vfprintf 0044              __end_of_TMR0_Timer 0706                         __ptext1 066C  
                       __ptext2 0689                         __ptext3 01B6                         __ptext4 0413  
                       __ptext5 064D                         __ptext6 00FD                         __ptext7 0575  
                       __ptext8 0629                         __ptext9 0525                         _buffer1 00D8  
                       _buffer2 00C4                       _T1CONbits 0018                         _counter 00A0  
         _OSCILLATOR_Initialize 071C                       _T2CONbits 001C           read_prec_or_width@fmt 0023  
              ___awmod@dividend 0072        ??_PIN_MANAGER_Initialize 0070                       _T2HLTbits 001D  
                       _sprintf 066C                         clrloop0 0724            end_of_initialization 003A  
                     _T2RSTbits 001F                         fputc@fp 0072                         fputs@fp 0078  
            _read_prec_or_width 0413                  ??_TMR1_Counter 0070               __end_of_vfpfcnvrt 0251  
                  ??_Lcd_Chr_CP 0070                       Lcd_Out2@x 0073                       Lcd_Out2@y 0077  
           ?_read_prec_or_width 0076                vfpfcnvrt@convarg 003D                      ??_vfprintf 0047  
                     _PORTCbits 000E                       _TRISCbits 008E            ??_read_prec_or_width 0078  
            __end_of_Lcd_Chr_CP 0380      __end_of_PWM3_LoadDutyValue 06D5                     vfpfcnvrt@ap 0038  
                   vfpfcnvrt@cp 0042                     vfpfcnvrt@fp 0041                  __end_of___wmul 066C  
        ?_OSCILLATOR_Initialize 0070             start_initialization 002A                     __end_of_abs 06BF  
                   __end_of_pad 05BA                     vfprintf@fmt 0044                        ??___wmul 0074  
                   _CCPTMRSbits 029E                       ___latbits 0002                   __pcstackBANK0 0020  
          __end_of_TMR1_Counter 072D                        ?_Lcd_Cmd 0070          _PIN_MANAGER_Initialize 05FB  
                     _dtoa$1067 002D                        ?___awdiv 0070                        ?___awmod 0070  
                      _T0CKIPPS 0E11                        ?_sprintf 004B                        _T2CLKCON 001E  
                ___wmul@product 0074                        _LATBbits 010D                       clear_ram0 0723  
                      _PIR1bits 0010                       _vfpfcnvrt 01B6               ??_PWM3_Initialize 0070  
                  Lcd_Init@data 0074               ___wmul@multiplier 0070                    Lcd_Out2@data 0078  
                      _Lcd_Init 0251                        _Lcd_Out2 05BA               ??_TMR2_Initialize 0070  
                    vfprintf@ap 0046                      vfprintf@fp 0048         ??_OSCILLATOR_Initialize 0070  
                    ?_vfpfcnvrt 0037              _PWM3_LoadDutyValue 06BF                      sprintf@fmt 004B  
                Lcd_Chr_CP@data 0072                        __ptext10 072D                        __ptext11 06A5  
                      __ptext20 071C                        __ptext12 04D2                        __ptext21 06BF  
                      __ptext13 0473                        __ptext22 05BA                        __ptext14 0729  
                      __ptext23 02EA                        __ptext15 06FA                        __ptext24 0251  
                      __ptext16 06D5                        __ptext25 0380                        __ptext17 0706  
                      __ptext18 0711                        __ptext19 05FB             ?_PWM3_LoadDutyValue 0070  
                   Lcd_Cmd@data 0072            ??_PWM3_LoadDutyValue 0072                    _TMR1_Counter 0729  
                      int$flags 007E                        _vfprintf 0689                      _INTCONbits 000B  
                      intlevel1 0000                       sprintf@ap 0052         ?_PIN_MANAGER_Initialize 0070  
                    _OSCCONbits 0099                      _ISR_TIMER0 0004     PWM3_LoadDutyValue@dutyValue 0070  
                   ??_vfpfcnvrt 0039                   __pstringtext1 06E2                   __pstringtext2 06EE  
                 __pstringtext3 0000                      _OPTION_REG 0095                        sprintf@f 0054  
                      sprintf@s 0053                      _TMR0_Timer 06FA  __end_of_PIN_MANAGER_Initialize 0629  
               _PWM3_Initialize 0711  
