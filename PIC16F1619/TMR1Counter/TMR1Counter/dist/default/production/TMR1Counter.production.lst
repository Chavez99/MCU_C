

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Thu Jun 01 14:47:23 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F1619
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2,group=3
    15                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text8,local,class=CODE,merge=1,delta=2,group=3
    22                           	psect	text9,local,class=CODE,merge=1,delta=2,group=3
    23                           	psect	text10,local,class=CODE,merge=1,delta=2,group=3
    24                           	psect	text11,local,class=CODE,merge=1,delta=2,group=3
    25                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2
    36                           	psect	text23,local,class=CODE,merge=1,delta=2
    37                           	psect	text24,local,class=CODE,merge=1,delta=2
    38                           	psect	text25,local,class=CODE,merge=1,delta=2
    39                           	psect	intentry,global,class=CODE,delta=2
    40                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    41                           	dabs	1,0x7E,2
    42     0000                     
    43                           ; Generated 09/02/2023 GMT
    44                           ; 
    45                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    46                           ; All rights reserved.
    47                           ; 
    48                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    49                           ; 
    50                           ; Redistribution and use in source and binary forms, with or without modification, are
    51                           ; permitted provided that the following conditions are met:
    52                           ; 
    53                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    54                           ;        conditions and the following disclaimer.
    55                           ; 
    56                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    57                           ;        of conditions and the following disclaimer in the documentation and/or other
    58                           ;        materials provided with the distribution. Publication is not required when
    59                           ;        this file is used in an embedded application.
    60                           ; 
    61                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    62                           ;        software without specific prior written permission.
    63                           ; 
    64                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    65                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    66                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    67                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    68                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    69                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    70                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    71                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    72                           ; 
    73                           ; 
    74                           ; Code-generator required, PIC16F1619 Definitions
    75                           ; 
    76                           ; SFR Addresses
    77     0000                     	;# 
    78     0001                     	;# 
    79     0002                     	;# 
    80     0003                     	;# 
    81     0004                     	;# 
    82     0005                     	;# 
    83     0006                     	;# 
    84     0007                     	;# 
    85     0008                     	;# 
    86     0009                     	;# 
    87     000A                     	;# 
    88     000B                     	;# 
    89     000C                     	;# 
    90     000D                     	;# 
    91     000E                     	;# 
    92     0010                     	;# 
    93     0011                     	;# 
    94     0012                     	;# 
    95     0013                     	;# 
    96     0014                     	;# 
    97     0015                     	;# 
    98     0016                     	;# 
    99     0016                     	;# 
   100     0017                     	;# 
   101     0018                     	;# 
   102     0019                     	;# 
   103     001A                     	;# 
   104     001A                     	;# 
   105     001B                     	;# 
   106     001B                     	;# 
   107     001C                     	;# 
   108     001D                     	;# 
   109     001E                     	;# 
   110     001F                     	;# 
   111     008C                     	;# 
   112     008D                     	;# 
   113     008E                     	;# 
   114     0090                     	;# 
   115     0091                     	;# 
   116     0092                     	;# 
   117     0093                     	;# 
   118     0094                     	;# 
   119     0095                     	;# 
   120     0096                     	;# 
   121     0098                     	;# 
   122     0099                     	;# 
   123     009A                     	;# 
   124     009B                     	;# 
   125     009B                     	;# 
   126     009C                     	;# 
   127     009D                     	;# 
   128     009E                     	;# 
   129     009F                     	;# 
   130     010C                     	;# 
   131     010D                     	;# 
   132     010E                     	;# 
   133     0111                     	;# 
   134     0112                     	;# 
   135     0113                     	;# 
   136     0114                     	;# 
   137     0115                     	;# 
   138     0116                     	;# 
   139     0117                     	;# 
   140     0118                     	;# 
   141     0119                     	;# 
   142     011C                     	;# 
   143     018C                     	;# 
   144     018D                     	;# 
   145     018E                     	;# 
   146     0191                     	;# 
   147     0191                     	;# 
   148     0192                     	;# 
   149     0193                     	;# 
   150     0193                     	;# 
   151     0194                     	;# 
   152     0195                     	;# 
   153     0196                     	;# 
   154     0197                     	;# 
   155     0199                     	;# 
   156     0199                     	;# 
   157     0199                     	;# 
   158     019A                     	;# 
   159     019A                     	;# 
   160     019A                     	;# 
   161     019B                     	;# 
   162     019B                     	;# 
   163     019B                     	;# 
   164     019B                     	;# 
   165     019B                     	;# 
   166     019C                     	;# 
   167     019C                     	;# 
   168     019C                     	;# 
   169     019D                     	;# 
   170     019D                     	;# 
   171     019D                     	;# 
   172     019E                     	;# 
   173     019E                     	;# 
   174     019E                     	;# 
   175     019F                     	;# 
   176     019F                     	;# 
   177     019F                     	;# 
   178     019F                     	;# 
   179     019F                     	;# 
   180     020C                     	;# 
   181     020D                     	;# 
   182     020E                     	;# 
   183     0211                     	;# 
   184     0211                     	;# 
   185     0212                     	;# 
   186     0212                     	;# 
   187     0213                     	;# 
   188     0213                     	;# 
   189     0214                     	;# 
   190     0214                     	;# 
   191     0215                     	;# 
   192     0215                     	;# 
   193     0215                     	;# 
   194     0215                     	;# 
   195     0216                     	;# 
   196     0216                     	;# 
   197     0217                     	;# 
   198     0217                     	;# 
   199     028C                     	;# 
   200     028D                     	;# 
   201     028E                     	;# 
   202     0291                     	;# 
   203     0291                     	;# 
   204     0292                     	;# 
   205     0293                     	;# 
   206     0294                     	;# 
   207     0298                     	;# 
   208     0298                     	;# 
   209     0299                     	;# 
   210     029A                     	;# 
   211     029B                     	;# 
   212     029E                     	;# 
   213     030C                     	;# 
   214     030D                     	;# 
   215     030E                     	;# 
   216     038C                     	;# 
   217     038D                     	;# 
   218     038E                     	;# 
   219     0391                     	;# 
   220     0392                     	;# 
   221     0393                     	;# 
   222     0394                     	;# 
   223     0395                     	;# 
   224     0396                     	;# 
   225     0397                     	;# 
   226     0398                     	;# 
   227     0399                     	;# 
   228     040E                     	;# 
   229     0413                     	;# 
   230     0413                     	;# 
   231     0414                     	;# 
   232     0414                     	;# 
   233     0415                     	;# 
   234     0416                     	;# 
   235     0417                     	;# 
   236     0418                     	;# 
   237     041A                     	;# 
   238     041A                     	;# 
   239     041B                     	;# 
   240     041B                     	;# 
   241     041C                     	;# 
   242     041D                     	;# 
   243     041E                     	;# 
   244     041F                     	;# 
   245     0493                     	;# 
   246     0494                     	;# 
   247     0495                     	;# 
   248     0496                     	;# 
   249     049A                     	;# 
   250     049B                     	;# 
   251     049C                     	;# 
   252     049D                     	;# 
   253     058C                     	;# 
   254     058C                     	;# 
   255     058D                     	;# 
   256     058E                     	;# 
   257     058E                     	;# 
   258     058F                     	;# 
   259     0590                     	;# 
   260     0590                     	;# 
   261     0591                     	;# 
   262     0592                     	;# 
   263     0592                     	;# 
   264     0593                     	;# 
   265     0594                     	;# 
   266     0594                     	;# 
   267     0595                     	;# 
   268     0596                     	;# 
   269     0596                     	;# 
   270     0597                     	;# 
   271     0598                     	;# 
   272     0599                     	;# 
   273     059A                     	;# 
   274     059B                     	;# 
   275     059B                     	;# 
   276     059C                     	;# 
   277     059D                     	;# 
   278     060C                     	;# 
   279     060C                     	;# 
   280     060D                     	;# 
   281     060E                     	;# 
   282     060F                     	;# 
   283     060F                     	;# 
   284     0610                     	;# 
   285     0611                     	;# 
   286     0612                     	;# 
   287     0613                     	;# 
   288     0614                     	;# 
   289     0617                     	;# 
   290     0617                     	;# 
   291     0618                     	;# 
   292     0619                     	;# 
   293     061A                     	;# 
   294     061A                     	;# 
   295     061B                     	;# 
   296     061C                     	;# 
   297     0691                     	;# 
   298     0692                     	;# 
   299     0693                     	;# 
   300     0694                     	;# 
   301     0695                     	;# 
   302     0696                     	;# 
   303     0697                     	;# 
   304     0699                     	;# 
   305     069A                     	;# 
   306     0711                     	;# 
   307     0712                     	;# 
   308     0713                     	;# 
   309     0714                     	;# 
   310     0715                     	;# 
   311     0718                     	;# 
   312     0718                     	;# 
   313     0719                     	;# 
   314     071A                     	;# 
   315     071A                     	;# 
   316     071B                     	;# 
   317     071C                     	;# 
   318     071D                     	;# 
   319     0791                     	;# 
   320     0791                     	;# 
   321     0792                     	;# 
   322     0793                     	;# 
   323     0793                     	;# 
   324     0794                     	;# 
   325     0795                     	;# 
   326     0795                     	;# 
   327     0796                     	;# 
   328     0797                     	;# 
   329     0797                     	;# 
   330     0798                     	;# 
   331     0799                     	;# 
   332     079A                     	;# 
   333     080C                     	;# 
   334     080C                     	;# 
   335     080D                     	;# 
   336     080E                     	;# 
   337     080E                     	;# 
   338     080F                     	;# 
   339     0810                     	;# 
   340     0810                     	;# 
   341     0811                     	;# 
   342     0812                     	;# 
   343     0812                     	;# 
   344     0813                     	;# 
   345     0814                     	;# 
   346     0815                     	;# 
   347     0816                     	;# 
   348     0817                     	;# 
   349     0818                     	;# 
   350     0819                     	;# 
   351     081A                     	;# 
   352     081A                     	;# 
   353     081B                     	;# 
   354     081C                     	;# 
   355     081C                     	;# 
   356     081D                     	;# 
   357     088C                     	;# 
   358     088D                     	;# 
   359     088E                     	;# 
   360     088F                     	;# 
   361     088F                     	;# 
   362     0890                     	;# 
   363     0891                     	;# 
   364     0892                     	;# 
   365     0893                     	;# 
   366     0893                     	;# 
   367     0894                     	;# 
   368     0895                     	;# 
   369     0896                     	;# 
   370     0897                     	;# 
   371     0897                     	;# 
   372     0898                     	;# 
   373     0899                     	;# 
   374     0D8C                     	;# 
   375     0D8C                     	;# 
   376     0D8D                     	;# 
   377     0D8E                     	;# 
   378     0D8F                     	;# 
   379     0D8F                     	;# 
   380     0D90                     	;# 
   381     0D91                     	;# 
   382     0D92                     	;# 
   383     0D92                     	;# 
   384     0D93                     	;# 
   385     0D94                     	;# 
   386     0D95                     	;# 
   387     0D95                     	;# 
   388     0D96                     	;# 
   389     0D97                     	;# 
   390     0D98                     	;# 
   391     0D99                     	;# 
   392     0D9A                     	;# 
   393     0D9B                     	;# 
   394     0D9C                     	;# 
   395     0D9D                     	;# 
   396     0D9E                     	;# 
   397     0D9E                     	;# 
   398     0D9F                     	;# 
   399     0DA0                     	;# 
   400     0DA1                     	;# 
   401     0DA1                     	;# 
   402     0DA2                     	;# 
   403     0DA3                     	;# 
   404     0DA4                     	;# 
   405     0DA4                     	;# 
   406     0DA5                     	;# 
   407     0DA6                     	;# 
   408     0DA7                     	;# 
   409     0DA7                     	;# 
   410     0DA8                     	;# 
   411     0DA9                     	;# 
   412     0DAA                     	;# 
   413     0DAB                     	;# 
   414     0DAC                     	;# 
   415     0DAD                     	;# 
   416     0DAE                     	;# 
   417     0DAF                     	;# 
   418     0E0F                     	;# 
   419     0E10                     	;# 
   420     0E11                     	;# 
   421     0E12                     	;# 
   422     0E13                     	;# 
   423     0E14                     	;# 
   424     0E15                     	;# 
   425     0E16                     	;# 
   426     0E17                     	;# 
   427     0E18                     	;# 
   428     0E19                     	;# 
   429     0E1A                     	;# 
   430     0E1B                     	;# 
   431     0E1C                     	;# 
   432     0E1D                     	;# 
   433     0E1E                     	;# 
   434     0E1F                     	;# 
   435     0E20                     	;# 
   436     0E21                     	;# 
   437     0E22                     	;# 
   438     0E23                     	;# 
   439     0E24                     	;# 
   440     0E25                     	;# 
   441     0E26                     	;# 
   442     0E27                     	;# 
   443     0E28                     	;# 
   444     0E29                     	;# 
   445     0E2A                     	;# 
   446     0E2B                     	;# 
   447     0E2C                     	;# 
   448     0E2D                     	;# 
   449     0E2E                     	;# 
   450     0E90                     	;# 
   451     0E91                     	;# 
   452     0E92                     	;# 
   453     0E94                     	;# 
   454     0E95                     	;# 
   455     0E9C                     	;# 
   456     0E9D                     	;# 
   457     0E9E                     	;# 
   458     0E9F                     	;# 
   459     0EA0                     	;# 
   460     0EA1                     	;# 
   461     0EA2                     	;# 
   462     0EA3                     	;# 
   463     0EA4                     	;# 
   464     0EA5                     	;# 
   465     0EA6                     	;# 
   466     0EA7                     	;# 
   467     0F0F                     	;# 
   468     0F10                     	;# 
   469     0F11                     	;# 
   470     0F12                     	;# 
   471     0F13                     	;# 
   472     0F14                     	;# 
   473     0F15                     	;# 
   474     0F16                     	;# 
   475     0F17                     	;# 
   476     0F18                     	;# 
   477     0F19                     	;# 
   478     0F1A                     	;# 
   479     0F1B                     	;# 
   480     0F1C                     	;# 
   481     0F1D                     	;# 
   482     0F1E                     	;# 
   483     0F1F                     	;# 
   484     0F20                     	;# 
   485     0F21                     	;# 
   486     0F22                     	;# 
   487     0F23                     	;# 
   488     0F24                     	;# 
   489     0F25                     	;# 
   490     0F26                     	;# 
   491     0F27                     	;# 
   492     0F28                     	;# 
   493     0F29                     	;# 
   494     0F2A                     	;# 
   495     0F2B                     	;# 
   496     0F2C                     	;# 
   497     0F2D                     	;# 
   498     0F2E                     	;# 
   499     0F2F                     	;# 
   500     0F30                     	;# 
   501     0F31                     	;# 
   502     0F32                     	;# 
   503     0F33                     	;# 
   504     0F34                     	;# 
   505     0F35                     	;# 
   506     0F36                     	;# 
   507     0F37                     	;# 
   508     0FE4                     	;# 
   509     0FE5                     	;# 
   510     0FE6                     	;# 
   511     0FE7                     	;# 
   512     0FE8                     	;# 
   513     0FE9                     	;# 
   514     0FEA                     	;# 
   515     0FEB                     	;# 
   516     0FED                     	;# 
   517     0FEE                     	;# 
   518     0FEF                     	;# 
   519     0000                     	;# 
   520     0001                     	;# 
   521     0002                     	;# 
   522     0003                     	;# 
   523     0004                     	;# 
   524     0005                     	;# 
   525     0006                     	;# 
   526     0007                     	;# 
   527     0008                     	;# 
   528     0009                     	;# 
   529     000A                     	;# 
   530     000B                     	;# 
   531     000C                     	;# 
   532     000D                     	;# 
   533     000E                     	;# 
   534     0010                     	;# 
   535     0011                     	;# 
   536     0012                     	;# 
   537     0013                     	;# 
   538     0014                     	;# 
   539     0015                     	;# 
   540     0016                     	;# 
   541     0016                     	;# 
   542     0017                     	;# 
   543     0018                     	;# 
   544     0019                     	;# 
   545     001A                     	;# 
   546     001A                     	;# 
   547     001B                     	;# 
   548     001B                     	;# 
   549     001C                     	;# 
   550     001D                     	;# 
   551     001E                     	;# 
   552     001F                     	;# 
   553     008C                     	;# 
   554     008D                     	;# 
   555     008E                     	;# 
   556     0090                     	;# 
   557     0091                     	;# 
   558     0092                     	;# 
   559     0093                     	;# 
   560     0094                     	;# 
   561     0095                     	;# 
   562     0096                     	;# 
   563     0098                     	;# 
   564     0099                     	;# 
   565     009A                     	;# 
   566     009B                     	;# 
   567     009B                     	;# 
   568     009C                     	;# 
   569     009D                     	;# 
   570     009E                     	;# 
   571     009F                     	;# 
   572     010C                     	;# 
   573     010D                     	;# 
   574     010E                     	;# 
   575     0111                     	;# 
   576     0112                     	;# 
   577     0113                     	;# 
   578     0114                     	;# 
   579     0115                     	;# 
   580     0116                     	;# 
   581     0117                     	;# 
   582     0118                     	;# 
   583     0119                     	;# 
   584     011C                     	;# 
   585     018C                     	;# 
   586     018D                     	;# 
   587     018E                     	;# 
   588     0191                     	;# 
   589     0191                     	;# 
   590     0192                     	;# 
   591     0193                     	;# 
   592     0193                     	;# 
   593     0194                     	;# 
   594     0195                     	;# 
   595     0196                     	;# 
   596     0197                     	;# 
   597     0199                     	;# 
   598     0199                     	;# 
   599     0199                     	;# 
   600     019A                     	;# 
   601     019A                     	;# 
   602     019A                     	;# 
   603     019B                     	;# 
   604     019B                     	;# 
   605     019B                     	;# 
   606     019B                     	;# 
   607     019B                     	;# 
   608     019C                     	;# 
   609     019C                     	;# 
   610     019C                     	;# 
   611     019D                     	;# 
   612     019D                     	;# 
   613     019D                     	;# 
   614     019E                     	;# 
   615     019E                     	;# 
   616     019E                     	;# 
   617     019F                     	;# 
   618     019F                     	;# 
   619     019F                     	;# 
   620     019F                     	;# 
   621     019F                     	;# 
   622     020C                     	;# 
   623     020D                     	;# 
   624     020E                     	;# 
   625     0211                     	;# 
   626     0211                     	;# 
   627     0212                     	;# 
   628     0212                     	;# 
   629     0213                     	;# 
   630     0213                     	;# 
   631     0214                     	;# 
   632     0214                     	;# 
   633     0215                     	;# 
   634     0215                     	;# 
   635     0215                     	;# 
   636     0215                     	;# 
   637     0216                     	;# 
   638     0216                     	;# 
   639     0217                     	;# 
   640     0217                     	;# 
   641     028C                     	;# 
   642     028D                     	;# 
   643     028E                     	;# 
   644     0291                     	;# 
   645     0291                     	;# 
   646     0292                     	;# 
   647     0293                     	;# 
   648     0294                     	;# 
   649     0298                     	;# 
   650     0298                     	;# 
   651     0299                     	;# 
   652     029A                     	;# 
   653     029B                     	;# 
   654     029E                     	;# 
   655     030C                     	;# 
   656     030D                     	;# 
   657     030E                     	;# 
   658     038C                     	;# 
   659     038D                     	;# 
   660     038E                     	;# 
   661     0391                     	;# 
   662     0392                     	;# 
   663     0393                     	;# 
   664     0394                     	;# 
   665     0395                     	;# 
   666     0396                     	;# 
   667     0397                     	;# 
   668     0398                     	;# 
   669     0399                     	;# 
   670     040E                     	;# 
   671     0413                     	;# 
   672     0413                     	;# 
   673     0414                     	;# 
   674     0414                     	;# 
   675     0415                     	;# 
   676     0416                     	;# 
   677     0417                     	;# 
   678     0418                     	;# 
   679     041A                     	;# 
   680     041A                     	;# 
   681     041B                     	;# 
   682     041B                     	;# 
   683     041C                     	;# 
   684     041D                     	;# 
   685     041E                     	;# 
   686     041F                     	;# 
   687     0493                     	;# 
   688     0494                     	;# 
   689     0495                     	;# 
   690     0496                     	;# 
   691     049A                     	;# 
   692     049B                     	;# 
   693     049C                     	;# 
   694     049D                     	;# 
   695     058C                     	;# 
   696     058C                     	;# 
   697     058D                     	;# 
   698     058E                     	;# 
   699     058E                     	;# 
   700     058F                     	;# 
   701     0590                     	;# 
   702     0590                     	;# 
   703     0591                     	;# 
   704     0592                     	;# 
   705     0592                     	;# 
   706     0593                     	;# 
   707     0594                     	;# 
   708     0594                     	;# 
   709     0595                     	;# 
   710     0596                     	;# 
   711     0596                     	;# 
   712     0597                     	;# 
   713     0598                     	;# 
   714     0599                     	;# 
   715     059A                     	;# 
   716     059B                     	;# 
   717     059B                     	;# 
   718     059C                     	;# 
   719     059D                     	;# 
   720     060C                     	;# 
   721     060C                     	;# 
   722     060D                     	;# 
   723     060E                     	;# 
   724     060F                     	;# 
   725     060F                     	;# 
   726     0610                     	;# 
   727     0611                     	;# 
   728     0612                     	;# 
   729     0613                     	;# 
   730     0614                     	;# 
   731     0617                     	;# 
   732     0617                     	;# 
   733     0618                     	;# 
   734     0619                     	;# 
   735     061A                     	;# 
   736     061A                     	;# 
   737     061B                     	;# 
   738     061C                     	;# 
   739     0691                     	;# 
   740     0692                     	;# 
   741     0693                     	;# 
   742     0694                     	;# 
   743     0695                     	;# 
   744     0696                     	;# 
   745     0697                     	;# 
   746     0699                     	;# 
   747     069A                     	;# 
   748     0711                     	;# 
   749     0712                     	;# 
   750     0713                     	;# 
   751     0714                     	;# 
   752     0715                     	;# 
   753     0718                     	;# 
   754     0718                     	;# 
   755     0719                     	;# 
   756     071A                     	;# 
   757     071A                     	;# 
   758     071B                     	;# 
   759     071C                     	;# 
   760     071D                     	;# 
   761     0791                     	;# 
   762     0791                     	;# 
   763     0792                     	;# 
   764     0793                     	;# 
   765     0793                     	;# 
   766     0794                     	;# 
   767     0795                     	;# 
   768     0795                     	;# 
   769     0796                     	;# 
   770     0797                     	;# 
   771     0797                     	;# 
   772     0798                     	;# 
   773     0799                     	;# 
   774     079A                     	;# 
   775     080C                     	;# 
   776     080C                     	;# 
   777     080D                     	;# 
   778     080E                     	;# 
   779     080E                     	;# 
   780     080F                     	;# 
   781     0810                     	;# 
   782     0810                     	;# 
   783     0811                     	;# 
   784     0812                     	;# 
   785     0812                     	;# 
   786     0813                     	;# 
   787     0814                     	;# 
   788     0815                     	;# 
   789     0816                     	;# 
   790     0817                     	;# 
   791     0818                     	;# 
   792     0819                     	;# 
   793     081A                     	;# 
   794     081A                     	;# 
   795     081B                     	;# 
   796     081C                     	;# 
   797     081C                     	;# 
   798     081D                     	;# 
   799     088C                     	;# 
   800     088D                     	;# 
   801     088E                     	;# 
   802     088F                     	;# 
   803     088F                     	;# 
   804     0890                     	;# 
   805     0891                     	;# 
   806     0892                     	;# 
   807     0893                     	;# 
   808     0893                     	;# 
   809     0894                     	;# 
   810     0895                     	;# 
   811     0896                     	;# 
   812     0897                     	;# 
   813     0897                     	;# 
   814     0898                     	;# 
   815     0899                     	;# 
   816     0D8C                     	;# 
   817     0D8C                     	;# 
   818     0D8D                     	;# 
   819     0D8E                     	;# 
   820     0D8F                     	;# 
   821     0D8F                     	;# 
   822     0D90                     	;# 
   823     0D91                     	;# 
   824     0D92                     	;# 
   825     0D92                     	;# 
   826     0D93                     	;# 
   827     0D94                     	;# 
   828     0D95                     	;# 
   829     0D95                     	;# 
   830     0D96                     	;# 
   831     0D97                     	;# 
   832     0D98                     	;# 
   833     0D99                     	;# 
   834     0D9A                     	;# 
   835     0D9B                     	;# 
   836     0D9C                     	;# 
   837     0D9D                     	;# 
   838     0D9E                     	;# 
   839     0D9E                     	;# 
   840     0D9F                     	;# 
   841     0DA0                     	;# 
   842     0DA1                     	;# 
   843     0DA1                     	;# 
   844     0DA2                     	;# 
   845     0DA3                     	;# 
   846     0DA4                     	;# 
   847     0DA4                     	;# 
   848     0DA5                     	;# 
   849     0DA6                     	;# 
   850     0DA7                     	;# 
   851     0DA7                     	;# 
   852     0DA8                     	;# 
   853     0DA9                     	;# 
   854     0DAA                     	;# 
   855     0DAB                     	;# 
   856     0DAC                     	;# 
   857     0DAD                     	;# 
   858     0DAE                     	;# 
   859     0DAF                     	;# 
   860     0E0F                     	;# 
   861     0E10                     	;# 
   862     0E11                     	;# 
   863     0E12                     	;# 
   864     0E13                     	;# 
   865     0E14                     	;# 
   866     0E15                     	;# 
   867     0E16                     	;# 
   868     0E17                     	;# 
   869     0E18                     	;# 
   870     0E19                     	;# 
   871     0E1A                     	;# 
   872     0E1B                     	;# 
   873     0E1C                     	;# 
   874     0E1D                     	;# 
   875     0E1E                     	;# 
   876     0E1F                     	;# 
   877     0E20                     	;# 
   878     0E21                     	;# 
   879     0E22                     	;# 
   880     0E23                     	;# 
   881     0E24                     	;# 
   882     0E25                     	;# 
   883     0E26                     	;# 
   884     0E27                     	;# 
   885     0E28                     	;# 
   886     0E29                     	;# 
   887     0E2A                     	;# 
   888     0E2B                     	;# 
   889     0E2C                     	;# 
   890     0E2D                     	;# 
   891     0E2E                     	;# 
   892     0E90                     	;# 
   893     0E91                     	;# 
   894     0E92                     	;# 
   895     0E94                     	;# 
   896     0E95                     	;# 
   897     0E9C                     	;# 
   898     0E9D                     	;# 
   899     0E9E                     	;# 
   900     0E9F                     	;# 
   901     0EA0                     	;# 
   902     0EA1                     	;# 
   903     0EA2                     	;# 
   904     0EA3                     	;# 
   905     0EA4                     	;# 
   906     0EA5                     	;# 
   907     0EA6                     	;# 
   908     0EA7                     	;# 
   909     0F0F                     	;# 
   910     0F10                     	;# 
   911     0F11                     	;# 
   912     0F12                     	;# 
   913     0F13                     	;# 
   914     0F14                     	;# 
   915     0F15                     	;# 
   916     0F16                     	;# 
   917     0F17                     	;# 
   918     0F18                     	;# 
   919     0F19                     	;# 
   920     0F1A                     	;# 
   921     0F1B                     	;# 
   922     0F1C                     	;# 
   923     0F1D                     	;# 
   924     0F1E                     	;# 
   925     0F1F                     	;# 
   926     0F20                     	;# 
   927     0F21                     	;# 
   928     0F22                     	;# 
   929     0F23                     	;# 
   930     0F24                     	;# 
   931     0F25                     	;# 
   932     0F26                     	;# 
   933     0F27                     	;# 
   934     0F28                     	;# 
   935     0F29                     	;# 
   936     0F2A                     	;# 
   937     0F2B                     	;# 
   938     0F2C                     	;# 
   939     0F2D                     	;# 
   940     0F2E                     	;# 
   941     0F2F                     	;# 
   942     0F30                     	;# 
   943     0F31                     	;# 
   944     0F32                     	;# 
   945     0F33                     	;# 
   946     0F34                     	;# 
   947     0F35                     	;# 
   948     0F36                     	;# 
   949     0F37                     	;# 
   950     0FE4                     	;# 
   951     0FE5                     	;# 
   952     0FE6                     	;# 
   953     0FE7                     	;# 
   954     0FE8                     	;# 
   955     0FE9                     	;# 
   956     0FEA                     	;# 
   957     0FEB                     	;# 
   958     0FED                     	;# 
   959     0FEE                     	;# 
   960     0FEF                     	;# 
   961     0000                     	;# 
   962     0001                     	;# 
   963     0002                     	;# 
   964     0003                     	;# 
   965     0004                     	;# 
   966     0005                     	;# 
   967     0006                     	;# 
   968     0007                     	;# 
   969     0008                     	;# 
   970     0009                     	;# 
   971     000A                     	;# 
   972     000B                     	;# 
   973     000C                     	;# 
   974     000D                     	;# 
   975     000E                     	;# 
   976     0010                     	;# 
   977     0011                     	;# 
   978     0012                     	;# 
   979     0013                     	;# 
   980     0014                     	;# 
   981     0015                     	;# 
   982     0016                     	;# 
   983     0016                     	;# 
   984     0017                     	;# 
   985     0018                     	;# 
   986     0019                     	;# 
   987     001A                     	;# 
   988     001A                     	;# 
   989     001B                     	;# 
   990     001B                     	;# 
   991     001C                     	;# 
   992     001D                     	;# 
   993     001E                     	;# 
   994     001F                     	;# 
   995     008C                     	;# 
   996     008D                     	;# 
   997     008E                     	;# 
   998     0090                     	;# 
   999     0091                     	;# 
  1000     0092                     	;# 
  1001     0093                     	;# 
  1002     0094                     	;# 
  1003     0095                     	;# 
  1004     0096                     	;# 
  1005     0098                     	;# 
  1006     0099                     	;# 
  1007     009A                     	;# 
  1008     009B                     	;# 
  1009     009B                     	;# 
  1010     009C                     	;# 
  1011     009D                     	;# 
  1012     009E                     	;# 
  1013     009F                     	;# 
  1014     010C                     	;# 
  1015     010D                     	;# 
  1016     010E                     	;# 
  1017     0111                     	;# 
  1018     0112                     	;# 
  1019     0113                     	;# 
  1020     0114                     	;# 
  1021     0115                     	;# 
  1022     0116                     	;# 
  1023     0117                     	;# 
  1024     0118                     	;# 
  1025     0119                     	;# 
  1026     011C                     	;# 
  1027     018C                     	;# 
  1028     018D                     	;# 
  1029     018E                     	;# 
  1030     0191                     	;# 
  1031     0191                     	;# 
  1032     0192                     	;# 
  1033     0193                     	;# 
  1034     0193                     	;# 
  1035     0194                     	;# 
  1036     0195                     	;# 
  1037     0196                     	;# 
  1038     0197                     	;# 
  1039     0199                     	;# 
  1040     0199                     	;# 
  1041     0199                     	;# 
  1042     019A                     	;# 
  1043     019A                     	;# 
  1044     019A                     	;# 
  1045     019B                     	;# 
  1046     019B                     	;# 
  1047     019B                     	;# 
  1048     019B                     	;# 
  1049     019B                     	;# 
  1050     019C                     	;# 
  1051     019C                     	;# 
  1052     019C                     	;# 
  1053     019D                     	;# 
  1054     019D                     	;# 
  1055     019D                     	;# 
  1056     019E                     	;# 
  1057     019E                     	;# 
  1058     019E                     	;# 
  1059     019F                     	;# 
  1060     019F                     	;# 
  1061     019F                     	;# 
  1062     019F                     	;# 
  1063     019F                     	;# 
  1064     020C                     	;# 
  1065     020D                     	;# 
  1066     020E                     	;# 
  1067     0211                     	;# 
  1068     0211                     	;# 
  1069     0212                     	;# 
  1070     0212                     	;# 
  1071     0213                     	;# 
  1072     0213                     	;# 
  1073     0214                     	;# 
  1074     0214                     	;# 
  1075     0215                     	;# 
  1076     0215                     	;# 
  1077     0215                     	;# 
  1078     0215                     	;# 
  1079     0216                     	;# 
  1080     0216                     	;# 
  1081     0217                     	;# 
  1082     0217                     	;# 
  1083     028C                     	;# 
  1084     028D                     	;# 
  1085     028E                     	;# 
  1086     0291                     	;# 
  1087     0291                     	;# 
  1088     0292                     	;# 
  1089     0293                     	;# 
  1090     0294                     	;# 
  1091     0298                     	;# 
  1092     0298                     	;# 
  1093     0299                     	;# 
  1094     029A                     	;# 
  1095     029B                     	;# 
  1096     029E                     	;# 
  1097     030C                     	;# 
  1098     030D                     	;# 
  1099     030E                     	;# 
  1100     038C                     	;# 
  1101     038D                     	;# 
  1102     038E                     	;# 
  1103     0391                     	;# 
  1104     0392                     	;# 
  1105     0393                     	;# 
  1106     0394                     	;# 
  1107     0395                     	;# 
  1108     0396                     	;# 
  1109     0397                     	;# 
  1110     0398                     	;# 
  1111     0399                     	;# 
  1112     040E                     	;# 
  1113     0413                     	;# 
  1114     0413                     	;# 
  1115     0414                     	;# 
  1116     0414                     	;# 
  1117     0415                     	;# 
  1118     0416                     	;# 
  1119     0417                     	;# 
  1120     0418                     	;# 
  1121     041A                     	;# 
  1122     041A                     	;# 
  1123     041B                     	;# 
  1124     041B                     	;# 
  1125     041C                     	;# 
  1126     041D                     	;# 
  1127     041E                     	;# 
  1128     041F                     	;# 
  1129     0493                     	;# 
  1130     0494                     	;# 
  1131     0495                     	;# 
  1132     0496                     	;# 
  1133     049A                     	;# 
  1134     049B                     	;# 
  1135     049C                     	;# 
  1136     049D                     	;# 
  1137     058C                     	;# 
  1138     058C                     	;# 
  1139     058D                     	;# 
  1140     058E                     	;# 
  1141     058E                     	;# 
  1142     058F                     	;# 
  1143     0590                     	;# 
  1144     0590                     	;# 
  1145     0591                     	;# 
  1146     0592                     	;# 
  1147     0592                     	;# 
  1148     0593                     	;# 
  1149     0594                     	;# 
  1150     0594                     	;# 
  1151     0595                     	;# 
  1152     0596                     	;# 
  1153     0596                     	;# 
  1154     0597                     	;# 
  1155     0598                     	;# 
  1156     0599                     	;# 
  1157     059A                     	;# 
  1158     059B                     	;# 
  1159     059B                     	;# 
  1160     059C                     	;# 
  1161     059D                     	;# 
  1162     060C                     	;# 
  1163     060C                     	;# 
  1164     060D                     	;# 
  1165     060E                     	;# 
  1166     060F                     	;# 
  1167     060F                     	;# 
  1168     0610                     	;# 
  1169     0611                     	;# 
  1170     0612                     	;# 
  1171     0613                     	;# 
  1172     0614                     	;# 
  1173     0617                     	;# 
  1174     0617                     	;# 
  1175     0618                     	;# 
  1176     0619                     	;# 
  1177     061A                     	;# 
  1178     061A                     	;# 
  1179     061B                     	;# 
  1180     061C                     	;# 
  1181     0691                     	;# 
  1182     0692                     	;# 
  1183     0693                     	;# 
  1184     0694                     	;# 
  1185     0695                     	;# 
  1186     0696                     	;# 
  1187     0697                     	;# 
  1188     0699                     	;# 
  1189     069A                     	;# 
  1190     0711                     	;# 
  1191     0712                     	;# 
  1192     0713                     	;# 
  1193     0714                     	;# 
  1194     0715                     	;# 
  1195     0718                     	;# 
  1196     0718                     	;# 
  1197     0719                     	;# 
  1198     071A                     	;# 
  1199     071A                     	;# 
  1200     071B                     	;# 
  1201     071C                     	;# 
  1202     071D                     	;# 
  1203     0791                     	;# 
  1204     0791                     	;# 
  1205     0792                     	;# 
  1206     0793                     	;# 
  1207     0793                     	;# 
  1208     0794                     	;# 
  1209     0795                     	;# 
  1210     0795                     	;# 
  1211     0796                     	;# 
  1212     0797                     	;# 
  1213     0797                     	;# 
  1214     0798                     	;# 
  1215     0799                     	;# 
  1216     079A                     	;# 
  1217     080C                     	;# 
  1218     080C                     	;# 
  1219     080D                     	;# 
  1220     080E                     	;# 
  1221     080E                     	;# 
  1222     080F                     	;# 
  1223     0810                     	;# 
  1224     0810                     	;# 
  1225     0811                     	;# 
  1226     0812                     	;# 
  1227     0812                     	;# 
  1228     0813                     	;# 
  1229     0814                     	;# 
  1230     0815                     	;# 
  1231     0816                     	;# 
  1232     0817                     	;# 
  1233     0818                     	;# 
  1234     0819                     	;# 
  1235     081A                     	;# 
  1236     081A                     	;# 
  1237     081B                     	;# 
  1238     081C                     	;# 
  1239     081C                     	;# 
  1240     081D                     	;# 
  1241     088C                     	;# 
  1242     088D                     	;# 
  1243     088E                     	;# 
  1244     088F                     	;# 
  1245     088F                     	;# 
  1246     0890                     	;# 
  1247     0891                     	;# 
  1248     0892                     	;# 
  1249     0893                     	;# 
  1250     0893                     	;# 
  1251     0894                     	;# 
  1252     0895                     	;# 
  1253     0896                     	;# 
  1254     0897                     	;# 
  1255     0897                     	;# 
  1256     0898                     	;# 
  1257     0899                     	;# 
  1258     0D8C                     	;# 
  1259     0D8C                     	;# 
  1260     0D8D                     	;# 
  1261     0D8E                     	;# 
  1262     0D8F                     	;# 
  1263     0D8F                     	;# 
  1264     0D90                     	;# 
  1265     0D91                     	;# 
  1266     0D92                     	;# 
  1267     0D92                     	;# 
  1268     0D93                     	;# 
  1269     0D94                     	;# 
  1270     0D95                     	;# 
  1271     0D95                     	;# 
  1272     0D96                     	;# 
  1273     0D97                     	;# 
  1274     0D98                     	;# 
  1275     0D99                     	;# 
  1276     0D9A                     	;# 
  1277     0D9B                     	;# 
  1278     0D9C                     	;# 
  1279     0D9D                     	;# 
  1280     0D9E                     	;# 
  1281     0D9E                     	;# 
  1282     0D9F                     	;# 
  1283     0DA0                     	;# 
  1284     0DA1                     	;# 
  1285     0DA1                     	;# 
  1286     0DA2                     	;# 
  1287     0DA3                     	;# 
  1288     0DA4                     	;# 
  1289     0DA4                     	;# 
  1290     0DA5                     	;# 
  1291     0DA6                     	;# 
  1292     0DA7                     	;# 
  1293     0DA7                     	;# 
  1294     0DA8                     	;# 
  1295     0DA9                     	;# 
  1296     0DAA                     	;# 
  1297     0DAB                     	;# 
  1298     0DAC                     	;# 
  1299     0DAD                     	;# 
  1300     0DAE                     	;# 
  1301     0DAF                     	;# 
  1302     0E0F                     	;# 
  1303     0E10                     	;# 
  1304     0E11                     	;# 
  1305     0E12                     	;# 
  1306     0E13                     	;# 
  1307     0E14                     	;# 
  1308     0E15                     	;# 
  1309     0E16                     	;# 
  1310     0E17                     	;# 
  1311     0E18                     	;# 
  1312     0E19                     	;# 
  1313     0E1A                     	;# 
  1314     0E1B                     	;# 
  1315     0E1C                     	;# 
  1316     0E1D                     	;# 
  1317     0E1E                     	;# 
  1318     0E1F                     	;# 
  1319     0E20                     	;# 
  1320     0E21                     	;# 
  1321     0E22                     	;# 
  1322     0E23                     	;# 
  1323     0E24                     	;# 
  1324     0E25                     	;# 
  1325     0E26                     	;# 
  1326     0E27                     	;# 
  1327     0E28                     	;# 
  1328     0E29                     	;# 
  1329     0E2A                     	;# 
  1330     0E2B                     	;# 
  1331     0E2C                     	;# 
  1332     0E2D                     	;# 
  1333     0E2E                     	;# 
  1334     0E90                     	;# 
  1335     0E91                     	;# 
  1336     0E92                     	;# 
  1337     0E94                     	;# 
  1338     0E95                     	;# 
  1339     0E9C                     	;# 
  1340     0E9D                     	;# 
  1341     0E9E                     	;# 
  1342     0E9F                     	;# 
  1343     0EA0                     	;# 
  1344     0EA1                     	;# 
  1345     0EA2                     	;# 
  1346     0EA3                     	;# 
  1347     0EA4                     	;# 
  1348     0EA5                     	;# 
  1349     0EA6                     	;# 
  1350     0EA7                     	;# 
  1351     0F0F                     	;# 
  1352     0F10                     	;# 
  1353     0F11                     	;# 
  1354     0F12                     	;# 
  1355     0F13                     	;# 
  1356     0F14                     	;# 
  1357     0F15                     	;# 
  1358     0F16                     	;# 
  1359     0F17                     	;# 
  1360     0F18                     	;# 
  1361     0F19                     	;# 
  1362     0F1A                     	;# 
  1363     0F1B                     	;# 
  1364     0F1C                     	;# 
  1365     0F1D                     	;# 
  1366     0F1E                     	;# 
  1367     0F1F                     	;# 
  1368     0F20                     	;# 
  1369     0F21                     	;# 
  1370     0F22                     	;# 
  1371     0F23                     	;# 
  1372     0F24                     	;# 
  1373     0F25                     	;# 
  1374     0F26                     	;# 
  1375     0F27                     	;# 
  1376     0F28                     	;# 
  1377     0F29                     	;# 
  1378     0F2A                     	;# 
  1379     0F2B                     	;# 
  1380     0F2C                     	;# 
  1381     0F2D                     	;# 
  1382     0F2E                     	;# 
  1383     0F2F                     	;# 
  1384     0F30                     	;# 
  1385     0F31                     	;# 
  1386     0F32                     	;# 
  1387     0F33                     	;# 
  1388     0F34                     	;# 
  1389     0F35                     	;# 
  1390     0F36                     	;# 
  1391     0F37                     	;# 
  1392     0FE4                     	;# 
  1393     0FE5                     	;# 
  1394     0FE6                     	;# 
  1395     0FE7                     	;# 
  1396     0FE8                     	;# 
  1397     0FE9                     	;# 
  1398     0FEA                     	;# 
  1399     0FEB                     	;# 
  1400     0FED                     	;# 
  1401     0FEE                     	;# 
  1402     0FEF                     	;# 
  1403     0000                     	;# 
  1404     0001                     	;# 
  1405     0002                     	;# 
  1406     0003                     	;# 
  1407     0004                     	;# 
  1408     0005                     	;# 
  1409     0006                     	;# 
  1410     0007                     	;# 
  1411     0008                     	;# 
  1412     0009                     	;# 
  1413     000A                     	;# 
  1414     000B                     	;# 
  1415     000C                     	;# 
  1416     000D                     	;# 
  1417     000E                     	;# 
  1418     0010                     	;# 
  1419     0011                     	;# 
  1420     0012                     	;# 
  1421     0013                     	;# 
  1422     0014                     	;# 
  1423     0015                     	;# 
  1424     0016                     	;# 
  1425     0016                     	;# 
  1426     0017                     	;# 
  1427     0018                     	;# 
  1428     0019                     	;# 
  1429     001A                     	;# 
  1430     001A                     	;# 
  1431     001B                     	;# 
  1432     001B                     	;# 
  1433     001C                     	;# 
  1434     001D                     	;# 
  1435     001E                     	;# 
  1436     001F                     	;# 
  1437     008C                     	;# 
  1438     008D                     	;# 
  1439     008E                     	;# 
  1440     0090                     	;# 
  1441     0091                     	;# 
  1442     0092                     	;# 
  1443     0093                     	;# 
  1444     0094                     	;# 
  1445     0095                     	;# 
  1446     0096                     	;# 
  1447     0098                     	;# 
  1448     0099                     	;# 
  1449     009A                     	;# 
  1450     009B                     	;# 
  1451     009B                     	;# 
  1452     009C                     	;# 
  1453     009D                     	;# 
  1454     009E                     	;# 
  1455     009F                     	;# 
  1456     010C                     	;# 
  1457     010D                     	;# 
  1458     010E                     	;# 
  1459     0111                     	;# 
  1460     0112                     	;# 
  1461     0113                     	;# 
  1462     0114                     	;# 
  1463     0115                     	;# 
  1464     0116                     	;# 
  1465     0117                     	;# 
  1466     0118                     	;# 
  1467     0119                     	;# 
  1468     011C                     	;# 
  1469     018C                     	;# 
  1470     018D                     	;# 
  1471     018E                     	;# 
  1472     0191                     	;# 
  1473     0191                     	;# 
  1474     0192                     	;# 
  1475     0193                     	;# 
  1476     0193                     	;# 
  1477     0194                     	;# 
  1478     0195                     	;# 
  1479     0196                     	;# 
  1480     0197                     	;# 
  1481     0199                     	;# 
  1482     0199                     	;# 
  1483     0199                     	;# 
  1484     019A                     	;# 
  1485     019A                     	;# 
  1486     019A                     	;# 
  1487     019B                     	;# 
  1488     019B                     	;# 
  1489     019B                     	;# 
  1490     019B                     	;# 
  1491     019B                     	;# 
  1492     019C                     	;# 
  1493     019C                     	;# 
  1494     019C                     	;# 
  1495     019D                     	;# 
  1496     019D                     	;# 
  1497     019D                     	;# 
  1498     019E                     	;# 
  1499     019E                     	;# 
  1500     019E                     	;# 
  1501     019F                     	;# 
  1502     019F                     	;# 
  1503     019F                     	;# 
  1504     019F                     	;# 
  1505     019F                     	;# 
  1506     020C                     	;# 
  1507     020D                     	;# 
  1508     020E                     	;# 
  1509     0211                     	;# 
  1510     0211                     	;# 
  1511     0212                     	;# 
  1512     0212                     	;# 
  1513     0213                     	;# 
  1514     0213                     	;# 
  1515     0214                     	;# 
  1516     0214                     	;# 
  1517     0215                     	;# 
  1518     0215                     	;# 
  1519     0215                     	;# 
  1520     0215                     	;# 
  1521     0216                     	;# 
  1522     0216                     	;# 
  1523     0217                     	;# 
  1524     0217                     	;# 
  1525     028C                     	;# 
  1526     028D                     	;# 
  1527     028E                     	;# 
  1528     0291                     	;# 
  1529     0291                     	;# 
  1530     0292                     	;# 
  1531     0293                     	;# 
  1532     0294                     	;# 
  1533     0298                     	;# 
  1534     0298                     	;# 
  1535     0299                     	;# 
  1536     029A                     	;# 
  1537     029B                     	;# 
  1538     029E                     	;# 
  1539     030C                     	;# 
  1540     030D                     	;# 
  1541     030E                     	;# 
  1542     038C                     	;# 
  1543     038D                     	;# 
  1544     038E                     	;# 
  1545     0391                     	;# 
  1546     0392                     	;# 
  1547     0393                     	;# 
  1548     0394                     	;# 
  1549     0395                     	;# 
  1550     0396                     	;# 
  1551     0397                     	;# 
  1552     0398                     	;# 
  1553     0399                     	;# 
  1554     040E                     	;# 
  1555     0413                     	;# 
  1556     0413                     	;# 
  1557     0414                     	;# 
  1558     0414                     	;# 
  1559     0415                     	;# 
  1560     0416                     	;# 
  1561     0417                     	;# 
  1562     0418                     	;# 
  1563     041A                     	;# 
  1564     041A                     	;# 
  1565     041B                     	;# 
  1566     041B                     	;# 
  1567     041C                     	;# 
  1568     041D                     	;# 
  1569     041E                     	;# 
  1570     041F                     	;# 
  1571     0493                     	;# 
  1572     0494                     	;# 
  1573     0495                     	;# 
  1574     0496                     	;# 
  1575     049A                     	;# 
  1576     049B                     	;# 
  1577     049C                     	;# 
  1578     049D                     	;# 
  1579     058C                     	;# 
  1580     058C                     	;# 
  1581     058D                     	;# 
  1582     058E                     	;# 
  1583     058E                     	;# 
  1584     058F                     	;# 
  1585     0590                     	;# 
  1586     0590                     	;# 
  1587     0591                     	;# 
  1588     0592                     	;# 
  1589     0592                     	;# 
  1590     0593                     	;# 
  1591     0594                     	;# 
  1592     0594                     	;# 
  1593     0595                     	;# 
  1594     0596                     	;# 
  1595     0596                     	;# 
  1596     0597                     	;# 
  1597     0598                     	;# 
  1598     0599                     	;# 
  1599     059A                     	;# 
  1600     059B                     	;# 
  1601     059B                     	;# 
  1602     059C                     	;# 
  1603     059D                     	;# 
  1604     060C                     	;# 
  1605     060C                     	;# 
  1606     060D                     	;# 
  1607     060E                     	;# 
  1608     060F                     	;# 
  1609     060F                     	;# 
  1610     0610                     	;# 
  1611     0611                     	;# 
  1612     0612                     	;# 
  1613     0613                     	;# 
  1614     0614                     	;# 
  1615     0617                     	;# 
  1616     0617                     	;# 
  1617     0618                     	;# 
  1618     0619                     	;# 
  1619     061A                     	;# 
  1620     061A                     	;# 
  1621     061B                     	;# 
  1622     061C                     	;# 
  1623     0691                     	;# 
  1624     0692                     	;# 
  1625     0693                     	;# 
  1626     0694                     	;# 
  1627     0695                     	;# 
  1628     0696                     	;# 
  1629     0697                     	;# 
  1630     0699                     	;# 
  1631     069A                     	;# 
  1632     0711                     	;# 
  1633     0712                     	;# 
  1634     0713                     	;# 
  1635     0714                     	;# 
  1636     0715                     	;# 
  1637     0718                     	;# 
  1638     0718                     	;# 
  1639     0719                     	;# 
  1640     071A                     	;# 
  1641     071A                     	;# 
  1642     071B                     	;# 
  1643     071C                     	;# 
  1644     071D                     	;# 
  1645     0791                     	;# 
  1646     0791                     	;# 
  1647     0792                     	;# 
  1648     0793                     	;# 
  1649     0793                     	;# 
  1650     0794                     	;# 
  1651     0795                     	;# 
  1652     0795                     	;# 
  1653     0796                     	;# 
  1654     0797                     	;# 
  1655     0797                     	;# 
  1656     0798                     	;# 
  1657     0799                     	;# 
  1658     079A                     	;# 
  1659     080C                     	;# 
  1660     080C                     	;# 
  1661     080D                     	;# 
  1662     080E                     	;# 
  1663     080E                     	;# 
  1664     080F                     	;# 
  1665     0810                     	;# 
  1666     0810                     	;# 
  1667     0811                     	;# 
  1668     0812                     	;# 
  1669     0812                     	;# 
  1670     0813                     	;# 
  1671     0814                     	;# 
  1672     0815                     	;# 
  1673     0816                     	;# 
  1674     0817                     	;# 
  1675     0818                     	;# 
  1676     0819                     	;# 
  1677     081A                     	;# 
  1678     081A                     	;# 
  1679     081B                     	;# 
  1680     081C                     	;# 
  1681     081C                     	;# 
  1682     081D                     	;# 
  1683     088C                     	;# 
  1684     088D                     	;# 
  1685     088E                     	;# 
  1686     088F                     	;# 
  1687     088F                     	;# 
  1688     0890                     	;# 
  1689     0891                     	;# 
  1690     0892                     	;# 
  1691     0893                     	;# 
  1692     0893                     	;# 
  1693     0894                     	;# 
  1694     0895                     	;# 
  1695     0896                     	;# 
  1696     0897                     	;# 
  1697     0897                     	;# 
  1698     0898                     	;# 
  1699     0899                     	;# 
  1700     0D8C                     	;# 
  1701     0D8C                     	;# 
  1702     0D8D                     	;# 
  1703     0D8E                     	;# 
  1704     0D8F                     	;# 
  1705     0D8F                     	;# 
  1706     0D90                     	;# 
  1707     0D91                     	;# 
  1708     0D92                     	;# 
  1709     0D92                     	;# 
  1710     0D93                     	;# 
  1711     0D94                     	;# 
  1712     0D95                     	;# 
  1713     0D95                     	;# 
  1714     0D96                     	;# 
  1715     0D97                     	;# 
  1716     0D98                     	;# 
  1717     0D99                     	;# 
  1718     0D9A                     	;# 
  1719     0D9B                     	;# 
  1720     0D9C                     	;# 
  1721     0D9D                     	;# 
  1722     0D9E                     	;# 
  1723     0D9E                     	;# 
  1724     0D9F                     	;# 
  1725     0DA0                     	;# 
  1726     0DA1                     	;# 
  1727     0DA1                     	;# 
  1728     0DA2                     	;# 
  1729     0DA3                     	;# 
  1730     0DA4                     	;# 
  1731     0DA4                     	;# 
  1732     0DA5                     	;# 
  1733     0DA6                     	;# 
  1734     0DA7                     	;# 
  1735     0DA7                     	;# 
  1736     0DA8                     	;# 
  1737     0DA9                     	;# 
  1738     0DAA                     	;# 
  1739     0DAB                     	;# 
  1740     0DAC                     	;# 
  1741     0DAD                     	;# 
  1742     0DAE                     	;# 
  1743     0DAF                     	;# 
  1744     0E0F                     	;# 
  1745     0E10                     	;# 
  1746     0E11                     	;# 
  1747     0E12                     	;# 
  1748     0E13                     	;# 
  1749     0E14                     	;# 
  1750     0E15                     	;# 
  1751     0E16                     	;# 
  1752     0E17                     	;# 
  1753     0E18                     	;# 
  1754     0E19                     	;# 
  1755     0E1A                     	;# 
  1756     0E1B                     	;# 
  1757     0E1C                     	;# 
  1758     0E1D                     	;# 
  1759     0E1E                     	;# 
  1760     0E1F                     	;# 
  1761     0E20                     	;# 
  1762     0E21                     	;# 
  1763     0E22                     	;# 
  1764     0E23                     	;# 
  1765     0E24                     	;# 
  1766     0E25                     	;# 
  1767     0E26                     	;# 
  1768     0E27                     	;# 
  1769     0E28                     	;# 
  1770     0E29                     	;# 
  1771     0E2A                     	;# 
  1772     0E2B                     	;# 
  1773     0E2C                     	;# 
  1774     0E2D                     	;# 
  1775     0E2E                     	;# 
  1776     0E90                     	;# 
  1777     0E91                     	;# 
  1778     0E92                     	;# 
  1779     0E94                     	;# 
  1780     0E95                     	;# 
  1781     0E9C                     	;# 
  1782     0E9D                     	;# 
  1783     0E9E                     	;# 
  1784     0E9F                     	;# 
  1785     0EA0                     	;# 
  1786     0EA1                     	;# 
  1787     0EA2                     	;# 
  1788     0EA3                     	;# 
  1789     0EA4                     	;# 
  1790     0EA5                     	;# 
  1791     0EA6                     	;# 
  1792     0EA7                     	;# 
  1793     0F0F                     	;# 
  1794     0F10                     	;# 
  1795     0F11                     	;# 
  1796     0F12                     	;# 
  1797     0F13                     	;# 
  1798     0F14                     	;# 
  1799     0F15                     	;# 
  1800     0F16                     	;# 
  1801     0F17                     	;# 
  1802     0F18                     	;# 
  1803     0F19                     	;# 
  1804     0F1A                     	;# 
  1805     0F1B                     	;# 
  1806     0F1C                     	;# 
  1807     0F1D                     	;# 
  1808     0F1E                     	;# 
  1809     0F1F                     	;# 
  1810     0F20                     	;# 
  1811     0F21                     	;# 
  1812     0F22                     	;# 
  1813     0F23                     	;# 
  1814     0F24                     	;# 
  1815     0F25                     	;# 
  1816     0F26                     	;# 
  1817     0F27                     	;# 
  1818     0F28                     	;# 
  1819     0F29                     	;# 
  1820     0F2A                     	;# 
  1821     0F2B                     	;# 
  1822     0F2C                     	;# 
  1823     0F2D                     	;# 
  1824     0F2E                     	;# 
  1825     0F2F                     	;# 
  1826     0F30                     	;# 
  1827     0F31                     	;# 
  1828     0F32                     	;# 
  1829     0F33                     	;# 
  1830     0F34                     	;# 
  1831     0F35                     	;# 
  1832     0F36                     	;# 
  1833     0F37                     	;# 
  1834     0FE4                     	;# 
  1835     0FE5                     	;# 
  1836     0FE6                     	;# 
  1837     0FE7                     	;# 
  1838     0FE8                     	;# 
  1839     0FE9                     	;# 
  1840     0FEA                     	;# 
  1841     0FEB                     	;# 
  1842     0FED                     	;# 
  1843     0FEE                     	;# 
  1844     0FEF                     	;# 
  1845     0000                     	;# 
  1846     0001                     	;# 
  1847     0002                     	;# 
  1848     0003                     	;# 
  1849     0004                     	;# 
  1850     0005                     	;# 
  1851     0006                     	;# 
  1852     0007                     	;# 
  1853     0008                     	;# 
  1854     0009                     	;# 
  1855     000A                     	;# 
  1856     000B                     	;# 
  1857     000C                     	;# 
  1858     000D                     	;# 
  1859     000E                     	;# 
  1860     0010                     	;# 
  1861     0011                     	;# 
  1862     0012                     	;# 
  1863     0013                     	;# 
  1864     0014                     	;# 
  1865     0015                     	;# 
  1866     0016                     	;# 
  1867     0016                     	;# 
  1868     0017                     	;# 
  1869     0018                     	;# 
  1870     0019                     	;# 
  1871     001A                     	;# 
  1872     001A                     	;# 
  1873     001B                     	;# 
  1874     001B                     	;# 
  1875     001C                     	;# 
  1876     001D                     	;# 
  1877     001E                     	;# 
  1878     001F                     	;# 
  1879     008C                     	;# 
  1880     008D                     	;# 
  1881     008E                     	;# 
  1882     0090                     	;# 
  1883     0091                     	;# 
  1884     0092                     	;# 
  1885     0093                     	;# 
  1886     0094                     	;# 
  1887     0095                     	;# 
  1888     0096                     	;# 
  1889     0098                     	;# 
  1890     0099                     	;# 
  1891     009A                     	;# 
  1892     009B                     	;# 
  1893     009B                     	;# 
  1894     009C                     	;# 
  1895     009D                     	;# 
  1896     009E                     	;# 
  1897     009F                     	;# 
  1898     010C                     	;# 
  1899     010D                     	;# 
  1900     010E                     	;# 
  1901     0111                     	;# 
  1902     0112                     	;# 
  1903     0113                     	;# 
  1904     0114                     	;# 
  1905     0115                     	;# 
  1906     0116                     	;# 
  1907     0117                     	;# 
  1908     0118                     	;# 
  1909     0119                     	;# 
  1910     011C                     	;# 
  1911     018C                     	;# 
  1912     018D                     	;# 
  1913     018E                     	;# 
  1914     0191                     	;# 
  1915     0191                     	;# 
  1916     0192                     	;# 
  1917     0193                     	;# 
  1918     0193                     	;# 
  1919     0194                     	;# 
  1920     0195                     	;# 
  1921     0196                     	;# 
  1922     0197                     	;# 
  1923     0199                     	;# 
  1924     0199                     	;# 
  1925     0199                     	;# 
  1926     019A                     	;# 
  1927     019A                     	;# 
  1928     019A                     	;# 
  1929     019B                     	;# 
  1930     019B                     	;# 
  1931     019B                     	;# 
  1932     019B                     	;# 
  1933     019B                     	;# 
  1934     019C                     	;# 
  1935     019C                     	;# 
  1936     019C                     	;# 
  1937     019D                     	;# 
  1938     019D                     	;# 
  1939     019D                     	;# 
  1940     019E                     	;# 
  1941     019E                     	;# 
  1942     019E                     	;# 
  1943     019F                     	;# 
  1944     019F                     	;# 
  1945     019F                     	;# 
  1946     019F                     	;# 
  1947     019F                     	;# 
  1948     020C                     	;# 
  1949     020D                     	;# 
  1950     020E                     	;# 
  1951     0211                     	;# 
  1952     0211                     	;# 
  1953     0212                     	;# 
  1954     0212                     	;# 
  1955     0213                     	;# 
  1956     0213                     	;# 
  1957     0214                     	;# 
  1958     0214                     	;# 
  1959     0215                     	;# 
  1960     0215                     	;# 
  1961     0215                     	;# 
  1962     0215                     	;# 
  1963     0216                     	;# 
  1964     0216                     	;# 
  1965     0217                     	;# 
  1966     0217                     	;# 
  1967     028C                     	;# 
  1968     028D                     	;# 
  1969     028E                     	;# 
  1970     0291                     	;# 
  1971     0291                     	;# 
  1972     0292                     	;# 
  1973     0293                     	;# 
  1974     0294                     	;# 
  1975     0298                     	;# 
  1976     0298                     	;# 
  1977     0299                     	;# 
  1978     029A                     	;# 
  1979     029B                     	;# 
  1980     029E                     	;# 
  1981     030C                     	;# 
  1982     030D                     	;# 
  1983     030E                     	;# 
  1984     038C                     	;# 
  1985     038D                     	;# 
  1986     038E                     	;# 
  1987     0391                     	;# 
  1988     0392                     	;# 
  1989     0393                     	;# 
  1990     0394                     	;# 
  1991     0395                     	;# 
  1992     0396                     	;# 
  1993     0397                     	;# 
  1994     0398                     	;# 
  1995     0399                     	;# 
  1996     040E                     	;# 
  1997     0413                     	;# 
  1998     0413                     	;# 
  1999     0414                     	;# 
  2000     0414                     	;# 
  2001     0415                     	;# 
  2002     0416                     	;# 
  2003     0417                     	;# 
  2004     0418                     	;# 
  2005     041A                     	;# 
  2006     041A                     	;# 
  2007     041B                     	;# 
  2008     041B                     	;# 
  2009     041C                     	;# 
  2010     041D                     	;# 
  2011     041E                     	;# 
  2012     041F                     	;# 
  2013     0493                     	;# 
  2014     0494                     	;# 
  2015     0495                     	;# 
  2016     0496                     	;# 
  2017     049A                     	;# 
  2018     049B                     	;# 
  2019     049C                     	;# 
  2020     049D                     	;# 
  2021     058C                     	;# 
  2022     058C                     	;# 
  2023     058D                     	;# 
  2024     058E                     	;# 
  2025     058E                     	;# 
  2026     058F                     	;# 
  2027     0590                     	;# 
  2028     0590                     	;# 
  2029     0591                     	;# 
  2030     0592                     	;# 
  2031     0592                     	;# 
  2032     0593                     	;# 
  2033     0594                     	;# 
  2034     0594                     	;# 
  2035     0595                     	;# 
  2036     0596                     	;# 
  2037     0596                     	;# 
  2038     0597                     	;# 
  2039     0598                     	;# 
  2040     0599                     	;# 
  2041     059A                     	;# 
  2042     059B                     	;# 
  2043     059B                     	;# 
  2044     059C                     	;# 
  2045     059D                     	;# 
  2046     060C                     	;# 
  2047     060C                     	;# 
  2048     060D                     	;# 
  2049     060E                     	;# 
  2050     060F                     	;# 
  2051     060F                     	;# 
  2052     0610                     	;# 
  2053     0611                     	;# 
  2054     0612                     	;# 
  2055     0613                     	;# 
  2056     0614                     	;# 
  2057     0617                     	;# 
  2058     0617                     	;# 
  2059     0618                     	;# 
  2060     0619                     	;# 
  2061     061A                     	;# 
  2062     061A                     	;# 
  2063     061B                     	;# 
  2064     061C                     	;# 
  2065     0691                     	;# 
  2066     0692                     	;# 
  2067     0693                     	;# 
  2068     0694                     	;# 
  2069     0695                     	;# 
  2070     0696                     	;# 
  2071     0697                     	;# 
  2072     0699                     	;# 
  2073     069A                     	;# 
  2074     0711                     	;# 
  2075     0712                     	;# 
  2076     0713                     	;# 
  2077     0714                     	;# 
  2078     0715                     	;# 
  2079     0718                     	;# 
  2080     0718                     	;# 
  2081     0719                     	;# 
  2082     071A                     	;# 
  2083     071A                     	;# 
  2084     071B                     	;# 
  2085     071C                     	;# 
  2086     071D                     	;# 
  2087     0791                     	;# 
  2088     0791                     	;# 
  2089     0792                     	;# 
  2090     0793                     	;# 
  2091     0793                     	;# 
  2092     0794                     	;# 
  2093     0795                     	;# 
  2094     0795                     	;# 
  2095     0796                     	;# 
  2096     0797                     	;# 
  2097     0797                     	;# 
  2098     0798                     	;# 
  2099     0799                     	;# 
  2100     079A                     	;# 
  2101     080C                     	;# 
  2102     080C                     	;# 
  2103     080D                     	;# 
  2104     080E                     	;# 
  2105     080E                     	;# 
  2106     080F                     	;# 
  2107     0810                     	;# 
  2108     0810                     	;# 
  2109     0811                     	;# 
  2110     0812                     	;# 
  2111     0812                     	;# 
  2112     0813                     	;# 
  2113     0814                     	;# 
  2114     0815                     	;# 
  2115     0816                     	;# 
  2116     0817                     	;# 
  2117     0818                     	;# 
  2118     0819                     	;# 
  2119     081A                     	;# 
  2120     081A                     	;# 
  2121     081B                     	;# 
  2122     081C                     	;# 
  2123     081C                     	;# 
  2124     081D                     	;# 
  2125     088C                     	;# 
  2126     088D                     	;# 
  2127     088E                     	;# 
  2128     088F                     	;# 
  2129     088F                     	;# 
  2130     0890                     	;# 
  2131     0891                     	;# 
  2132     0892                     	;# 
  2133     0893                     	;# 
  2134     0893                     	;# 
  2135     0894                     	;# 
  2136     0895                     	;# 
  2137     0896                     	;# 
  2138     0897                     	;# 
  2139     0897                     	;# 
  2140     0898                     	;# 
  2141     0899                     	;# 
  2142     0D8C                     	;# 
  2143     0D8C                     	;# 
  2144     0D8D                     	;# 
  2145     0D8E                     	;# 
  2146     0D8F                     	;# 
  2147     0D8F                     	;# 
  2148     0D90                     	;# 
  2149     0D91                     	;# 
  2150     0D92                     	;# 
  2151     0D92                     	;# 
  2152     0D93                     	;# 
  2153     0D94                     	;# 
  2154     0D95                     	;# 
  2155     0D95                     	;# 
  2156     0D96                     	;# 
  2157     0D97                     	;# 
  2158     0D98                     	;# 
  2159     0D99                     	;# 
  2160     0D9A                     	;# 
  2161     0D9B                     	;# 
  2162     0D9C                     	;# 
  2163     0D9D                     	;# 
  2164     0D9E                     	;# 
  2165     0D9E                     	;# 
  2166     0D9F                     	;# 
  2167     0DA0                     	;# 
  2168     0DA1                     	;# 
  2169     0DA1                     	;# 
  2170     0DA2                     	;# 
  2171     0DA3                     	;# 
  2172     0DA4                     	;# 
  2173     0DA4                     	;# 
  2174     0DA5                     	;# 
  2175     0DA6                     	;# 
  2176     0DA7                     	;# 
  2177     0DA7                     	;# 
  2178     0DA8                     	;# 
  2179     0DA9                     	;# 
  2180     0DAA                     	;# 
  2181     0DAB                     	;# 
  2182     0DAC                     	;# 
  2183     0DAD                     	;# 
  2184     0DAE                     	;# 
  2185     0DAF                     	;# 
  2186     0E0F                     	;# 
  2187     0E10                     	;# 
  2188     0E11                     	;# 
  2189     0E12                     	;# 
  2190     0E13                     	;# 
  2191     0E14                     	;# 
  2192     0E15                     	;# 
  2193     0E16                     	;# 
  2194     0E17                     	;# 
  2195     0E18                     	;# 
  2196     0E19                     	;# 
  2197     0E1A                     	;# 
  2198     0E1B                     	;# 
  2199     0E1C                     	;# 
  2200     0E1D                     	;# 
  2201     0E1E                     	;# 
  2202     0E1F                     	;# 
  2203     0E20                     	;# 
  2204     0E21                     	;# 
  2205     0E22                     	;# 
  2206     0E23                     	;# 
  2207     0E24                     	;# 
  2208     0E25                     	;# 
  2209     0E26                     	;# 
  2210     0E27                     	;# 
  2211     0E28                     	;# 
  2212     0E29                     	;# 
  2213     0E2A                     	;# 
  2214     0E2B                     	;# 
  2215     0E2C                     	;# 
  2216     0E2D                     	;# 
  2217     0E2E                     	;# 
  2218     0E90                     	;# 
  2219     0E91                     	;# 
  2220     0E92                     	;# 
  2221     0E94                     	;# 
  2222     0E95                     	;# 
  2223     0E9C                     	;# 
  2224     0E9D                     	;# 
  2225     0E9E                     	;# 
  2226     0E9F                     	;# 
  2227     0EA0                     	;# 
  2228     0EA1                     	;# 
  2229     0EA2                     	;# 
  2230     0EA3                     	;# 
  2231     0EA4                     	;# 
  2232     0EA5                     	;# 
  2233     0EA6                     	;# 
  2234     0EA7                     	;# 
  2235     0F0F                     	;# 
  2236     0F10                     	;# 
  2237     0F11                     	;# 
  2238     0F12                     	;# 
  2239     0F13                     	;# 
  2240     0F14                     	;# 
  2241     0F15                     	;# 
  2242     0F16                     	;# 
  2243     0F17                     	;# 
  2244     0F18                     	;# 
  2245     0F19                     	;# 
  2246     0F1A                     	;# 
  2247     0F1B                     	;# 
  2248     0F1C                     	;# 
  2249     0F1D                     	;# 
  2250     0F1E                     	;# 
  2251     0F1F                     	;# 
  2252     0F20                     	;# 
  2253     0F21                     	;# 
  2254     0F22                     	;# 
  2255     0F23                     	;# 
  2256     0F24                     	;# 
  2257     0F25                     	;# 
  2258     0F26                     	;# 
  2259     0F27                     	;# 
  2260     0F28                     	;# 
  2261     0F29                     	;# 
  2262     0F2A                     	;# 
  2263     0F2B                     	;# 
  2264     0F2C                     	;# 
  2265     0F2D                     	;# 
  2266     0F2E                     	;# 
  2267     0F2F                     	;# 
  2268     0F30                     	;# 
  2269     0F31                     	;# 
  2270     0F32                     	;# 
  2271     0F33                     	;# 
  2272     0F34                     	;# 
  2273     0F35                     	;# 
  2274     0F36                     	;# 
  2275     0F37                     	;# 
  2276     0FE4                     	;# 
  2277     0FE5                     	;# 
  2278     0FE6                     	;# 
  2279     0FE7                     	;# 
  2280     0FE8                     	;# 
  2281     0FE9                     	;# 
  2282     0FEA                     	;# 
  2283     0FEB                     	;# 
  2284     0FED                     	;# 
  2285     0FEE                     	;# 
  2286     0FEF                     	;# 
  2287     0016                     _TMR1	set	22
  2288     0016                     _TMR1L	set	22
  2289     0017                     _TMR1H	set	23
  2290     0018                     _T1CONbits	set	24
  2291     000E                     _PORTC	set	14
  2292     000D                     _PORTB	set	13
  2293     000C                     _PORTA	set	12
  2294     0018                     _T1CON	set	24
  2295     000B                     _INTCONbits	set	11
  2296     0015                     _TMR0	set	21
  2297     000E                     _PORTCbits	set	14
  2298     001B                     _PR2	set	27
  2299     001A                     _TMR2	set	26
  2300     001C                     _T2CONbits	set	28
  2301     001F                     _T2RSTbits	set	31
  2302     001D                     _T2HLTbits	set	29
  2303     001C                     _T2CON	set	28
  2304     0010                     _PIR1bits	set	16
  2305     001A                     _T2TMR	set	26
  2306     001B                     _T2PR	set	27
  2307     001F                     _T2RST	set	31
  2308     001D                     _T2HLT	set	29
  2309     001E                     _T2CLKCON	set	30
  2310     0099                     _OSCCONbits	set	153
  2311     0095                     _OPTION_REG	set	149
  2312     008E                     _TRISCbits	set	142
  2313     0095                     _OPTION_REGbits	set	149
  2314     008E                     _TRISC	set	142
  2315     008D                     _TRISB	set	141
  2316     008C                     _TRISA	set	140
  2317     0098                     _OSCTUNE	set	152
  2318     0099                     _OSCCON	set	153
  2319     010D                     _LATBbits	set	269
  2320     010E                     _LATC	set	270
  2321     010D                     _LATB	set	269
  2322     010C                     _LATA	set	268
  2323     0116                     _BORCON	set	278
  2324     018C                     _ANSELA	set	396
  2325     018D                     _ANSELB	set	397
  2326     018E                     _ANSELC	set	398
  2327     020E                     _WPUC	set	526
  2328     020C                     _WPUA	set	524
  2329     020D                     _WPUB	set	525
  2330     028E                     _ODCONC	set	654
  2331     028D                     _ODCONB	set	653
  2332     028C                     _ODCONA	set	652
  2333     029E                     _CCPTMRSbits	set	670
  2334     030E                     _SLRCONC	set	782
  2335     030D                     _SLRCONB	set	781
  2336     030C                     _SLRCONA	set	780
  2337     038E                     _INLVLC	set	910
  2338     038D                     _INLVLB	set	909
  2339     038C                     _INLVLA	set	908
  2340     0617                     _PWM3DCL	set	1559
  2341     0618                     _PWM3DCH	set	1560
  2342     0619                     _PWM3CON	set	1561
  2343     0E11                     _T0CKIPPS	set	3601
  2344     0EA6                     _RC6PPS	set	3750
  2345                           
  2346                           	psect	stringtext1
  2347     06DE                     __pstringtext1:
  2348     06DE                     STR_2:
  2349     06DE  3448               	retlw	72	;'H'
  2350     06DF  343A               	retlw	58	;':'
  2351     06E0  3425               	retlw	37	;'%'
  2352     06E1  3432               	retlw	50	;'2'
  2353     06E2  3464               	retlw	100	;'d'
  2354     06E3  3420               	retlw	32	;' '
  2355     06E4  344C               	retlw	76	;'L'
  2356     06E5  343A               	retlw	58	;':'
  2357     06E6  3425               	retlw	37	;'%'
  2358     06E7  3432               	retlw	50	;'2'
  2359     06E8  3464               	retlw	100	;'d'
  2360     06E9  3400               	retlw	0
  2361                           
  2362                           	psect	stringtext2
  2363     06EA                     __pstringtext2:
  2364     06EA                     STR_1:
  2365     06EA  3443               	retlw	67	;'C'
  2366     06EB  3475               	retlw	117	;'u'
  2367     06EC  3465               	retlw	101	;'e'
  2368     06ED  346E               	retlw	110	;'n'
  2369     06EE  3474               	retlw	116	;'t'
  2370     06EF  3461               	retlw	97	;'a'
  2371     06F0  343A               	retlw	58	;':'
  2372     06F1  3420               	retlw	32	;' '
  2373     06F2  3425               	retlw	37	;'%'
  2374     06F3  3435               	retlw	53	;'5'
  2375     06F4  3464               	retlw	100	;'d'
  2376     06F5  3400               	retlw	0
  2377                           
  2378                           	psect	stringtext3
  2379     0000                     __pstringtext3:
  2380                           
  2381                           	psect	cinit
  2382     002A                     start_initialization:	
  2383                           ; #config settings
  2384                           
  2385     002A                     __initialization:
  2386                           
  2387                           ; Clear objects allocated to BANK0
  2388     002A  3065               	movlw	low __pbssBANK0
  2389     002B  0084               	movwf	4
  2390     002C  3000               	movlw	high __pbssBANK0
  2391     002D  0085               	movwf	5
  2392     002E  300B               	movlw	11
  2393     002F  3187  271F  3180   	fcall	clear_ram0
  2394                           
  2395                           ; Clear objects allocated to BANK1
  2396     0032  30A0               	movlw	low __pbssBANK1
  2397     0033  0084               	movwf	4
  2398     0034  3000               	movlw	high __pbssBANK1
  2399     0035  0085               	movwf	5
  2400     0036  304C               	movlw	76
  2401     0037  3187  271F  3180   	fcall	clear_ram0
  2402     003A                     end_of_initialization:	
  2403                           ;End of C runtime variable initialization code
  2404                           
  2405     003A                     __end_of__initialization:
  2406     003A  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2407     003B  0020               	movlb	0
  2408     003C  3180  283E         	ljmp	_main	;jump to C main() function
  2409                           
  2410                           	psect	bssBANK0
  2411     0065                     __pbssBANK0:
  2412     0065                     _width:
  2413     0065                     	ds	2
  2414     0067                     _prec:
  2415     0067                     	ds	2
  2416     0069                     _TIMER:
  2417     0069                     	ds	2
  2418     006B                     _TMR:
  2419     006B                     	ds	2
  2420     006D                     _i:
  2421     006D                     	ds	2
  2422     006F                     _flags:
  2423     006F                     	ds	1
  2424                           
  2425                           	psect	bssBANK1
  2426     00A0                     __pbssBANK1:
  2427     00A0                     _counter:
  2428     00A0                     	ds	4
  2429     00A4                     _dbuf:
  2430     00A4                     	ds	32
  2431     00C4                     _buffer2:
  2432     00C4                     	ds	20
  2433     00D8                     _buffer1:
  2434     00D8                     	ds	20
  2435                           
  2436                           	psect	clrtext
  2437     071F                     clear_ram0:	
  2438                           ;	Called with FSR0 containing the base address, and
  2439                           ;	WREG with the size to clear
  2440                           
  2441     071F  0064               	clrwdt	;clear the watchdog before getting into this loop
  2442     0720                     clrloop0:
  2443     0720  0180               	clrf	0	;clear RAM location pointed to by FSR
  2444     0721  3101               	addfsr 0,1
  2445     0722  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2446     0723  2F20               	goto	clrloop0	;have we reached the end yet?
  2447     0724  3400               	retlw	0	;all done for this memory range, return
  2448                           
  2449                           	psect	cstackCOMMON
  2450     0070                     __pcstackCOMMON:
  2451     0070                     ?_PIN_MANAGER_Initialize:
  2452     0070                     ??_PIN_MANAGER_Initialize:	
  2453                           ; 1 bytes @ 0x0
  2454                           
  2455     0070                     ?_OSCILLATOR_Initialize:	
  2456                           ; 1 bytes @ 0x0
  2457                           
  2458     0070                     ??_OSCILLATOR_Initialize:	
  2459                           ; 1 bytes @ 0x0
  2460                           
  2461     0070                     ?_Lcd_Cmd:	
  2462                           ; 1 bytes @ 0x0
  2463                           
  2464     0070                     ??_Lcd_Cmd:	
  2465                           ; 1 bytes @ 0x0
  2466                           
  2467     0070                     ?_Lcd_Chr_CP:	
  2468                           ; 1 bytes @ 0x0
  2469                           
  2470     0070                     ??_Lcd_Chr_CP:	
  2471                           ; 1 bytes @ 0x0
  2472                           
  2473     0070                     ?_putch:	
  2474                           ; 1 bytes @ 0x0
  2475                           
  2476     0070                     ??_putch:	
  2477                           ; 1 bytes @ 0x0
  2478                           
  2479     0070                     ?_PWM3_Initialize:	
  2480                           ; 1 bytes @ 0x0
  2481                           
  2482     0070                     ??_PWM3_Initialize:	
  2483                           ; 1 bytes @ 0x0
  2484                           
  2485     0070                     ?_PWM3_LoadDutyValue:	
  2486                           ; 1 bytes @ 0x0
  2487                           
  2488     0070                     ?_TMR2_Initialize:	
  2489                           ; 1 bytes @ 0x0
  2490                           
  2491     0070                     ??_TMR2_Initialize:	
  2492                           ; 1 bytes @ 0x0
  2493                           
  2494     0070                     ?_SYSTEM_Initialize:	
  2495                           ; 1 bytes @ 0x0
  2496                           
  2497     0070                     ??_SYSTEM_Initialize:	
  2498                           ; 1 bytes @ 0x0
  2499                           
  2500     0070                     ?_Lcd_Init:	
  2501                           ; 1 bytes @ 0x0
  2502                           
  2503     0070                     ?_TMR0_Timer:	
  2504                           ; 1 bytes @ 0x0
  2505                           
  2506     0070                     ??_TMR0_Timer:	
  2507                           ; 1 bytes @ 0x0
  2508                           
  2509     0070                     ?_TMR1_Counter:	
  2510                           ; 1 bytes @ 0x0
  2511                           
  2512     0070                     ??_TMR1_Counter:	
  2513                           ; 1 bytes @ 0x0
  2514                           
  2515     0070                     ?_ISR_TIMER0:	
  2516                           ; 1 bytes @ 0x0
  2517                           
  2518     0070                     ??_ISR_TIMER0:	
  2519                           ; 1 bytes @ 0x0
  2520                           
  2521     0070                     ?_main:	
  2522                           ; 1 bytes @ 0x0
  2523                           
  2524     0070                     ?_fputc:	
  2525                           ; 1 bytes @ 0x0
  2526                           
  2527     0070                     ?___wmul:	
  2528                           ; 2 bytes @ 0x0
  2529                           
  2530     0070                     ?___awdiv:	
  2531                           ; 2 bytes @ 0x0
  2532                           
  2533     0070                     ?___awmod:	
  2534                           ; 2 bytes @ 0x0
  2535                           
  2536     0070                     putch@c:	
  2537                           ; 2 bytes @ 0x0
  2538                           
  2539     0070                     PWM3_LoadDutyValue@dutyValue:	
  2540                           ; 1 bytes @ 0x0
  2541                           
  2542     0070                     ___wmul@multiplier:	
  2543                           ; 2 bytes @ 0x0
  2544                           
  2545     0070                     ___awdiv@divisor:	
  2546                           ; 2 bytes @ 0x0
  2547                           
  2548     0070                     ___awmod@divisor:	
  2549                           ; 2 bytes @ 0x0
  2550                           
  2551     0070                     fputc@c:	
  2552                           ; 2 bytes @ 0x0
  2553                           
  2554                           
  2555                           ; 2 bytes @ 0x0
  2556     0070                     	ds	2
  2557     0072                     ??_PWM3_LoadDutyValue:
  2558     0072                     Lcd_Chr_CP@data:	
  2559                           ; 1 bytes @ 0x2
  2560                           
  2561     0072                     Lcd_Cmd@data:	
  2562                           ; 1 bytes @ 0x2
  2563                           
  2564     0072                     fputc@fp:	
  2565                           ; 1 bytes @ 0x2
  2566                           
  2567     0072                     ___wmul@multiplicand:	
  2568                           ; 1 bytes @ 0x2
  2569                           
  2570     0072                     ___awdiv@dividend:	
  2571                           ; 2 bytes @ 0x2
  2572                           
  2573     0072                     ___awmod@dividend:	
  2574                           ; 2 bytes @ 0x2
  2575                           
  2576                           
  2577                           ; 2 bytes @ 0x2
  2578     0072                     	ds	1
  2579     0073                     ??_fputc:
  2580     0073                     ??_Lcd_Init:	
  2581                           ; 1 bytes @ 0x3
  2582                           
  2583     0073                     ?_Lcd_Out2:	
  2584                           ; 1 bytes @ 0x3
  2585                           
  2586     0073                     Lcd_Out2@x:	
  2587                           ; 1 bytes @ 0x3
  2588                           
  2589                           
  2590                           ; 1 bytes @ 0x3
  2591     0073                     	ds	1
  2592     0074                     ??___wmul:
  2593     0074                     ??___awdiv:	
  2594                           ; 1 bytes @ 0x4
  2595                           
  2596     0074                     ??___awmod:	
  2597                           ; 1 bytes @ 0x4
  2598                           
  2599     0074                     Lcd_Init@data:	
  2600                           ; 1 bytes @ 0x4
  2601                           
  2602     0074                     Lcd_Out2@buffer:	
  2603                           ; 1 bytes @ 0x4
  2604                           
  2605     0074                     ___wmul@product:	
  2606                           ; 1 bytes @ 0x4
  2607                           
  2608                           
  2609                           ; 2 bytes @ 0x4
  2610     0074                     	ds	1
  2611     0075                     ??_Lcd_Out2:
  2612     0075                     ___awdiv@counter:	
  2613                           ; 1 bytes @ 0x5
  2614                           
  2615     0075                     ___awmod@counter:	
  2616                           ; 1 bytes @ 0x5
  2617                           
  2618                           
  2619                           ; 1 bytes @ 0x5
  2620     0075                     	ds	1
  2621     0076                     ?_read_prec_or_width:
  2622     0076                     ___awdiv@sign:	
  2623                           ; 2 bytes @ 0x6
  2624                           
  2625     0076                     ___awmod@sign:	
  2626                           ; 1 bytes @ 0x6
  2627                           
  2628     0076                     read_prec_or_width@ap:	
  2629                           ; 1 bytes @ 0x6
  2630                           
  2631                           
  2632                           ; 1 bytes @ 0x6
  2633     0076                     	ds	1
  2634     0077                     ?_abs:
  2635     0077                     Lcd_Out2@y:	
  2636                           ; 2 bytes @ 0x7
  2637                           
  2638     0077                     ___awdiv@quotient:	
  2639                           ; 1 bytes @ 0x7
  2640                           
  2641     0077                     abs@a:	
  2642                           ; 2 bytes @ 0x7
  2643                           
  2644                           
  2645                           ; 2 bytes @ 0x7
  2646     0077                     	ds	1
  2647     0078                     ??_read_prec_or_width:
  2648     0078                     ?_fputs:	
  2649                           ; 1 bytes @ 0x8
  2650                           
  2651     0078                     Lcd_Out2@data:	
  2652                           ; 2 bytes @ 0x8
  2653                           
  2654     0078                     fputs@fp:	
  2655                           ; 1 bytes @ 0x8
  2656                           
  2657                           
  2658                           ; 1 bytes @ 0x8
  2659     0078                     	ds	1
  2660     0079                     ??_fputs:
  2661     0079                     ??_abs:	
  2662                           ; 1 bytes @ 0x9
  2663                           
  2664                           
  2665                           ; 1 bytes @ 0x9
  2666     0079                     	ds	2
  2667     007B                     ?_pad:
  2668     007B                     pad@buf:	
  2669                           ; 1 bytes @ 0xB
  2670                           
  2671                           
  2672                           ; 1 bytes @ 0xB
  2673     007B                     	ds	1
  2674     007C                     pad@p:
  2675                           
  2676                           ; 2 bytes @ 0xC
  2677     007C                     	ds	2
  2678                           
  2679                           	psect	cstackBANK0
  2680     0020                     __pcstackBANK0:
  2681     0020                     read_prec_or_width@c:
  2682     0020                     fputs@c:	
  2683                           ; 1 bytes @ 0x0
  2684                           
  2685                           
  2686                           ; 1 bytes @ 0x0
  2687     0020                     	ds	1
  2688     0021                     read_prec_or_width@n:
  2689     0021                     fputs@i:	
  2690                           ; 2 bytes @ 0x1
  2691                           
  2692                           
  2693                           ; 2 bytes @ 0x1
  2694     0021                     	ds	2
  2695     0023                     read_prec_or_width@fmt:
  2696     0023                     fputs@s:	
  2697                           ; 1 bytes @ 0x3
  2698                           
  2699                           
  2700                           ; 1 bytes @ 0x3
  2701     0023                     	ds	1
  2702     0024                     ??_pad:
  2703                           
  2704                           ; 1 bytes @ 0x4
  2705     0024                     	ds	1
  2706     0025                     pad@i:
  2707                           
  2708                           ; 2 bytes @ 0x5
  2709     0025                     	ds	2
  2710     0027                     pad@w:
  2711                           
  2712                           ; 2 bytes @ 0x7
  2713     0027                     	ds	2
  2714     0029                     pad@fp:
  2715                           
  2716                           ; 1 bytes @ 0x9
  2717     0029                     	ds	1
  2718     002A                     ?_dtoa:
  2719     002A                     dtoa@d:	
  2720                           ; 1 bytes @ 0xA
  2721                           
  2722                           
  2723                           ; 2 bytes @ 0xA
  2724     002A                     	ds	2
  2725     002C                     ??_dtoa:
  2726                           
  2727                           ; 1 bytes @ 0xC
  2728     002C                     	ds	1
  2729     002D                     _dtoa$1067:
  2730                           
  2731                           ; 2 bytes @ 0xD
  2732     002D                     	ds	2
  2733     002F                     dtoa@fp:
  2734                           
  2735                           ; 1 bytes @ 0xF
  2736     002F                     	ds	1
  2737     0030                     dtoa@p:
  2738                           
  2739                           ; 2 bytes @ 0x10
  2740     0030                     	ds	2
  2741     0032                     dtoa@w:
  2742                           
  2743                           ; 2 bytes @ 0x12
  2744     0032                     	ds	2
  2745     0034                     dtoa@i:
  2746                           
  2747                           ; 2 bytes @ 0x14
  2748     0034                     	ds	2
  2749     0036                     dtoa@s:
  2750                           
  2751                           ; 1 bytes @ 0x16
  2752     0036                     	ds	1
  2753     0037                     ?_vfpfcnvrt:
  2754     0037                     vfpfcnvrt@fmt:	
  2755                           ; 1 bytes @ 0x17
  2756                           
  2757                           
  2758                           ; 1 bytes @ 0x17
  2759     0037                     	ds	1
  2760     0038                     vfpfcnvrt@ap:
  2761                           
  2762                           ; 1 bytes @ 0x18
  2763     0038                     	ds	1
  2764     0039                     ??_vfpfcnvrt:
  2765                           
  2766                           ; 1 bytes @ 0x19
  2767     0039                     	ds	4
  2768     003D                     vfpfcnvrt@convarg:
  2769                           
  2770                           ; 4 bytes @ 0x1D
  2771     003D                     	ds	4
  2772     0041                     vfpfcnvrt@fp:
  2773                           
  2774                           ; 1 bytes @ 0x21
  2775     0041                     	ds	1
  2776     0042                     vfpfcnvrt@cp:
  2777                           
  2778                           ; 2 bytes @ 0x22
  2779     0042                     	ds	2
  2780     0044                     ?_vfprintf:
  2781     0044                     vfprintf@fmt:	
  2782                           ; 2 bytes @ 0x24
  2783                           
  2784                           
  2785                           ; 2 bytes @ 0x24
  2786     0044                     	ds	2
  2787     0046                     vfprintf@ap:
  2788                           
  2789                           ; 1 bytes @ 0x26
  2790     0046                     	ds	1
  2791     0047                     ??_vfprintf:
  2792                           
  2793                           ; 1 bytes @ 0x27
  2794     0047                     	ds	1
  2795     0048                     vfprintf@fp:
  2796                           
  2797                           ; 1 bytes @ 0x28
  2798     0048                     	ds	1
  2799     0049                     vfprintf@cfmt:
  2800                           
  2801                           ; 2 bytes @ 0x29
  2802     0049                     	ds	2
  2803     004B                     ?_sprintf:
  2804     004B                     sprintf@fmt:	
  2805                           ; 2 bytes @ 0x2B
  2806                           
  2807                           
  2808                           ; 2 bytes @ 0x2B
  2809     004B                     	ds	6
  2810     0051                     ??_sprintf:
  2811                           
  2812                           ; 1 bytes @ 0x31
  2813     0051                     	ds	1
  2814     0052                     sprintf@ap:
  2815                           
  2816                           ; 1 bytes @ 0x32
  2817     0052                     	ds	1
  2818     0053                     sprintf@s:
  2819                           
  2820                           ; 1 bytes @ 0x33
  2821     0053                     	ds	1
  2822     0054                     sprintf@f:
  2823                           
  2824                           ; 11 bytes @ 0x34
  2825     0054                     	ds	11
  2826     005F                     ??_main:
  2827                           
  2828                           ; 1 bytes @ 0x3F
  2829     005F                     	ds	4
  2830     0063                     main@DC:
  2831                           
  2832                           ; 2 bytes @ 0x43
  2833     0063                     	ds	2
  2834                           
  2835                           	psect	maintext
  2836     003E                     __pmaintext:	
  2837 ;;
  2838 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  2839 ;;
  2840 ;; *************** function _main *****************
  2841 ;; Defined at:
  2842 ;;		line 43 in file "main.c"
  2843 ;; Parameters:    Size  Location     Type
  2844 ;;		None
  2845 ;; Auto vars:     Size  Location     Type
  2846 ;;  DC              2   67[BANK0 ] unsigned short 
  2847 ;; Return value:  Size  Location     Type
  2848 ;;                  1    wreg      void 
  2849 ;; Registers used:
  2850 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2851 ;; Tracked objects:
  2852 ;;		On entry : B1F/0
  2853 ;;		On exit  : 0/0
  2854 ;;		Unchanged: 0/0
  2855 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2856 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2857 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2858 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2859 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2860 ;;Total ram usage:        6 bytes
  2861 ;; Hardware stack levels required when called: 9
  2862 ;; This function calls:
  2863 ;;		_Lcd_Cmd
  2864 ;;		_Lcd_Init
  2865 ;;		_Lcd_Out2
  2866 ;;		_PWM3_LoadDutyValue
  2867 ;;		_SYSTEM_Initialize
  2868 ;;		_TMR0_Timer
  2869 ;;		_TMR1_Counter
  2870 ;;		_sprintf
  2871 ;; This function is called by:
  2872 ;;		Startup code after reset
  2873 ;; This function uses a non-reentrant model
  2874 ;;
  2875                           
  2876     003E                     _main:	
  2877                           ;psect for function _main
  2878                           
  2879     003E                     l2016:	
  2880                           ;incstack = 0
  2881                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2882                           
  2883                           
  2884                           ;main.c: 44: 
  2885     003E  3186  26D1  3180   	fcall	_SYSTEM_Initialize
  2886     0041                     l2018:
  2887                           
  2888                           ;main.c: 46:     PORTB = 0;
  2889     0041  0021               	movlb	1	; select bank1
  2890     0042  0819               	movf	25,w	;volatile
  2891     0043  3987               	andlw	-121
  2892     0044  3868               	iorlw	104
  2893     0045  0099               	movwf	25	;volatile
  2894     0046                     l2020:
  2895                           
  2896                           ;main.c: 47:     PORTC = 0;
  2897     0046  30FC               	movlw	-4
  2898     0047  0599               	andwf	25,f	;volatile
  2899     0048                     l2022:
  2900                           
  2901                           ;main.c: 48: 
  2902     0048  0198               	clrf	24	;volatile
  2903     0049                     l2024:
  2904                           
  2905                           ;main.c: 51:     INTCONbits.T0IF = 0;
  2906     0049  0023               	movlb	3	; select bank3
  2907     004A  018C               	clrf	12	;volatile
  2908     004B                     l2026:
  2909                           
  2910                           ;main.c: 52:     INTCONbits.TMR0IE = 1;
  2911     004B  018D               	clrf	13	;volatile
  2912     004C                     l2028:
  2913                           
  2914                           ;main.c: 53:     TMR0_Timer();
  2915     004C  018E               	clrf	14	;volatile
  2916     004D                     l2030:
  2917                           
  2918                           ;main.c: 54:     TMR1_Counter();
  2919     004D  3024               	movlw	36
  2920     004E  0021               	movlb	1	; select bank1
  2921     004F  008C               	movwf	12	;volatile
  2922     0050                     l2032:
  2923                           
  2924                           ;main.c: 55: 
  2925     0050  018D               	clrf	13	;volatile
  2926     0051                     l2034:
  2927                           
  2928                           ;main.c: 56: 
  2929     0051  018E               	clrf	14	;volatile
  2930     0052                     l2036:
  2931                           
  2932                           ;main.c: 59: 
  2933     0052  0020               	movlb	0	; select bank0
  2934     0053  018C               	clrf	12	;volatile
  2935     0054                     l2038:
  2936                           
  2937                           ;main.c: 60: 
  2938     0054  018D               	clrf	13	;volatile
  2939     0055                     l2040:
  2940                           
  2941                           ;main.c: 61: 
  2942     0055  018E               	clrf	14	;volatile
  2943     0056                     l2042:
  2944                           
  2945                           ;main.c: 64:     Lcd_Cmd(12);
  2946     0056  178B               	bsf	11,7	;volatile
  2947     0057                     l2044:
  2948                           
  2949                           ;main.c: 65:     _delay((unsigned long)((100)*(4000000/4000.0)));
  2950     0057  110B               	bcf	11,2	;volatile
  2951     0058                     l2046:
  2952                           
  2953                           ;main.c: 66: 
  2954     0058  168B               	bsf	11,5	;volatile
  2955     0059                     l2048:
  2956                           
  2957                           ;main.c: 67:     uint16_t DC;
  2958     0059  3186  26F6  3180   	fcall	_TMR0_Timer
  2959     005C                     l2050:
  2960                           
  2961                           ;main.c: 68:     DC = 63;
  2962     005C  3187  2725  3180   	fcall	_TMR1_Counter
  2963     005F                     l2052:
  2964                           
  2965                           ;main.c: 76:         TMR = TMR1H;
  2966     005F  3182  224D  3180   	fcall	_Lcd_Init
  2967     0062                     l2054:
  2968                           
  2969                           ;main.c: 77:         TMR = TMR<<8;
  2970     0062  3001               	movlw	1
  2971     0063  3183  237C  3180   	fcall	_Lcd_Cmd
  2972     0066                     l2056:
  2973                           
  2974                           ;main.c: 78:         TMR = TMR + TMR1L;
  2975     0066  300C               	movlw	12
  2976     0067  3183  237C  3180   	fcall	_Lcd_Cmd
  2977     006A                     l2058:
  2978                           
  2979                           ;main.c: 79:         T1CONbits.TMR1ON = 0;
  2980     006A  3082               	movlw	130
  2981     006B  0020               	movlb	0	; select bank0
  2982     006C  00DF               	movwf	??_main
  2983     006D  30DD               	movlw	221
  2984     006E                     u1407:
  2985     006E  0B89               	decfsz	9,f
  2986     006F  286E               	goto	u1407
  2987     0070  0BDF               	decfsz	??_main,f
  2988     0071  286E               	goto	u1407
  2989     0072  3200               	nop2
  2990     0073                     l2060:
  2991                           
  2992                           ;main.c: 81:         TMR1L = 0;;main.c: 82:         TMR1H = 0;
  2993     0073  303F               	movlw	63
  2994     0074  0020               	movlb	0	; select bank0
  2995     0075  00E3               	movwf	main@DC
  2996     0076  3000               	movlw	0
  2997     0077  00E4               	movwf	main@DC+1
  2998     0078                     l2062:
  2999                           
  3000                           ;main.c: 85:         sprintf((char *)buffer1,"Cuenta: %5d", TIMER);
  3001     0078  0020               	movlb	0	; select bank0
  3002     0079  0864               	movf	main@DC+1,w
  3003     007A  00F1               	movwf	PWM3_LoadDutyValue@dutyValue+1
  3004     007B  0863               	movf	main@DC,w
  3005     007C  00F0               	movwf	PWM3_LoadDutyValue@dutyValue
  3006     007D  3186  26BB  3180   	fcall	_PWM3_LoadDutyValue
  3007     0080                     l2064:
  3008                           
  3009                           ;main.c: 86:         sprintf((char *)buffer2,"H:%2d L:%2d", TMR1H, TMR1L);
  3010     0080  0020               	movlb	0	; select bank0
  3011     0081  01E9               	clrf	_TIMER
  3012     0082  01EA               	clrf	_TIMER+1
  3013     0083                     l2066:
  3014                           
  3015                           ;main.c: 87:         Lcd_Out2(1,1,(char *)buffer1);
  3016     0083  01EB               	clrf	_TMR
  3017     0084  01EC               	clrf	_TMR+1
  3018     0085                     l2068:
  3019                           
  3020                           ;main.c: 88:         Lcd_Out2(2,1,(char *)buffer2);
  3021     0085  1418               	bsf	24,0	;volatile
  3022     0086                     l2070:
  3023                           
  3024                           ;main.c: 89:         _delay((unsigned long)((1000)*(4000000/4000.0)));
  3025     0086  3006               	movlw	6
  3026     0087  0020               	movlb	0	; select bank0
  3027     0088  00E0               	movwf	??_main+1
  3028     0089  3013               	movlw	19
  3029     008A  00DF               	movwf	??_main
  3030     008B  30AD               	movlw	173
  3031     008C                     u1417:
  3032     008C  0B89               	decfsz	9,f
  3033     008D  288C               	goto	u1417
  3034     008E  0BDF               	decfsz	??_main,f
  3035     008F  288C               	goto	u1417
  3036     0090  0BE0               	decfsz	??_main+1,f
  3037     0091  288C               	goto	u1417
  3038     0092  3200               	nop2
  3039     0093                     l2072:
  3040                           
  3041                           ;main.c: 90:     }
  3042     0093  0020               	movlb	0	; select bank0
  3043     0094  0817               	movf	23,w	;volatile
  3044     0095  00DF               	movwf	??_main
  3045     0096  01E0               	clrf	??_main+1
  3046     0097  085F               	movf	??_main,w
  3047     0098  00EB               	movwf	_TMR
  3048     0099  0860               	movf	??_main+1,w
  3049     009A  00EC               	movwf	_TMR+1
  3050     009B                     l2074:
  3051                           
  3052                           ;main.c: 91:  return;
  3053     009B  086B               	movf	_TMR,w
  3054     009C  00E0               	movwf	??_main+1
  3055     009D  01DF               	clrf	??_main
  3056     009E  085F               	movf	??_main,w
  3057     009F  00EB               	movwf	_TMR
  3058     00A0  0860               	movf	??_main+1,w
  3059     00A1  00EC               	movwf	_TMR+1
  3060     00A2                     l2076:
  3061                           
  3062                           ;main.c: 92: }
  3063     00A2  0816               	movf	22,w	;volatile
  3064     00A3  076B               	addwf	_TMR,w
  3065     00A4  00DF               	movwf	??_main
  3066     00A5  086C               	movf	_TMR+1,w
  3067     00A6  1803               	skipnc
  3068     00A7  0A6C               	incf	_TMR+1,w
  3069     00A8  00E0               	movwf	??_main+1
  3070     00A9  085F               	movf	??_main,w
  3071     00AA  00EB               	movwf	_TMR
  3072     00AB  0860               	movf	??_main+1,w
  3073     00AC  00EC               	movwf	_TMR+1
  3074     00AD                     l2078:
  3075     00AD  1018               	bcf	24,0	;volatile
  3076     00AE                     l2080:
  3077     00AE  0196               	clrf	22	;volatile
  3078     00AF  0197               	clrf	23	;volatile
  3079     00B0                     l2082:
  3080     00B0  0196               	clrf	22	;volatile
  3081     00B1                     l2084:
  3082     00B1  0197               	clrf	23	;volatile
  3083     00B2                     l2086:
  3084     00B2  086C               	movf	_TMR+1,w
  3085     00B3  00EA               	movwf	_TIMER+1
  3086     00B4  086B               	movf	_TMR,w
  3087     00B5  00E9               	movwf	_TIMER
  3088     00B6                     l2088:
  3089     00B6  30EA               	movlw	low (STR_1| (0+32768))
  3090     00B7  00CB               	movwf	sprintf@fmt
  3091     00B8  3086               	movlw	high (STR_1| (0+32768))
  3092     00B9  00CC               	movwf	sprintf@fmt+1
  3093     00BA  086A               	movf	_TIMER+1,w
  3094     00BB  00CE               	movwf	?_sprintf+3
  3095     00BC  0869               	movf	_TIMER,w
  3096     00BD  00CD               	movwf	?_sprintf+2
  3097     00BE  30D8               	movlw	(low (_buffer1| 0))& (0+255)
  3098     00BF  3186  2668  3180   	fcall	_sprintf
  3099     00C2                     l2090:
  3100     00C2  30DE               	movlw	low (STR_2| (0+32768))
  3101     00C3  0020               	movlb	0	; select bank0
  3102     00C4  00CB               	movwf	sprintf@fmt
  3103     00C5  3086               	movlw	high (STR_2| (0+32768))
  3104     00C6  00CC               	movwf	sprintf@fmt+1
  3105     00C7  0817               	movf	23,w	;volatile
  3106     00C8  00DF               	movwf	??_main
  3107     00C9  01E0               	clrf	??_main+1
  3108     00CA  085F               	movf	??_main,w
  3109     00CB  00CD               	movwf	?_sprintf+2
  3110     00CC  0860               	movf	??_main+1,w
  3111     00CD  00CE               	movwf	?_sprintf+3
  3112     00CE  0816               	movf	22,w	;volatile
  3113     00CF  00E1               	movwf	??_main+2
  3114     00D0  01E2               	clrf	??_main+3
  3115     00D1  0861               	movf	??_main+2,w
  3116     00D2  00CF               	movwf	?_sprintf+4
  3117     00D3  0862               	movf	??_main+3,w
  3118     00D4  00D0               	movwf	?_sprintf+5
  3119     00D5  30C4               	movlw	(low (_buffer2| 0))& (0+255)
  3120     00D6  3186  2668  3180   	fcall	_sprintf
  3121     00D9                     l2092:
  3122     00D9  01F3               	clrf	Lcd_Out2@x
  3123     00DA  0AF3               	incf	Lcd_Out2@x,f
  3124     00DB  30D8               	movlw	(low (_buffer1| 0))& (0+255)
  3125     00DC  00F4               	movwf	Lcd_Out2@buffer
  3126     00DD  3001               	movlw	1
  3127     00DE  3185  25B6  3180   	fcall	_Lcd_Out2
  3128     00E1                     l2094:
  3129     00E1  01F3               	clrf	Lcd_Out2@x
  3130     00E2  0AF3               	incf	Lcd_Out2@x,f
  3131     00E3  30C4               	movlw	(low (_buffer2| 0))& (0+255)
  3132     00E4  00F4               	movwf	Lcd_Out2@buffer
  3133     00E5  3002               	movlw	2
  3134     00E6  3185  25B6  3180   	fcall	_Lcd_Out2
  3135     00E9                     l2096:
  3136     00E9  3006               	movlw	6
  3137     00EA  0020               	movlb	0	; select bank0
  3138     00EB  00E0               	movwf	??_main+1
  3139     00EC  3013               	movlw	19
  3140     00ED  00DF               	movwf	??_main
  3141     00EE  30AD               	movlw	173
  3142     00EF                     u1427:
  3143     00EF  0B89               	decfsz	9,f
  3144     00F0  28EF               	goto	u1427
  3145     00F1  0BDF               	decfsz	??_main,f
  3146     00F2  28EF               	goto	u1427
  3147     00F3  0BE0               	decfsz	??_main+1,f
  3148     00F4  28EF               	goto	u1427
  3149     00F5  3200               	nop2
  3150     00F6  2878               	goto	l2062
  3151     00F7  3180  2828         	ljmp	start
  3152     00F9                     __end_of_main:
  3153                           
  3154                           	psect	text1
  3155     0668                     __ptext1:	
  3156 ;; *************** function _sprintf *****************
  3157 ;; Defined at:
  3158 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_sprintf.c"
  3159 ;; Parameters:    Size  Location     Type
  3160 ;;  s               1    wreg     PTR unsigned char 
  3161 ;;		 -> buffer2(20), buffer1(20), 
  3162 ;;  fmt             2   43[BANK0 ] PTR const unsigned char 
  3163 ;;		 -> STR_2(12), STR_1(12), 
  3164 ;; Auto vars:     Size  Location     Type
  3165 ;;  s               1   51[BANK0 ] PTR unsigned char 
  3166 ;;		 -> buffer2(20), buffer1(20), 
  3167 ;;  f              11   52[BANK0 ] struct _IO_FILE
  3168 ;;  ret             2    0        int 
  3169 ;;  ap              1   50[BANK0 ] PTR void [1]
  3170 ;;		 -> ?_sprintf(2), 
  3171 ;; Return value:  Size  Location     Type
  3172 ;;                  2   43[BANK0 ] int 
  3173 ;; Registers used:
  3174 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3175 ;; Tracked objects:
  3176 ;;		On entry : 0/0
  3177 ;;		On exit  : 0/0
  3178 ;;		Unchanged: 0/0
  3179 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3180 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3181 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3182 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3183 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3184 ;;Total ram usage:       20 bytes
  3185 ;; Hardware stack levels used: 1
  3186 ;; Hardware stack levels required when called: 8
  3187 ;; This function calls:
  3188 ;;		_vfprintf
  3189 ;; This function is called by:
  3190 ;;		_main
  3191 ;; This function uses a non-reentrant model
  3192 ;;
  3193                           
  3194     0668                     _sprintf:	
  3195                           ;psect for function _sprintf
  3196                           
  3197                           
  3198                           ;incstack = 0
  3199                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3200                           ;sprintf@s stored from wreg
  3201     0668  0020               	movlb	0	; select bank0
  3202     0669  00D3               	movwf	sprintf@s
  3203     066A                     l1966:
  3204     066A  304D               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  3205     066B  00D2               	movwf	sprintf@ap
  3206     066C  0853               	movf	sprintf@s,w
  3207     066D  00D4               	movwf	sprintf@f
  3208     066E                     l1968:
  3209     066E  01D6               	clrf	sprintf@f+2
  3210     066F  01D7               	clrf	sprintf@f+3
  3211     0670                     l1970:
  3212     0670  01DD               	clrf	sprintf@f+9
  3213     0671  01DE               	clrf	sprintf@f+10
  3214     0672                     l1972:
  3215     0672  084C               	movf	sprintf@fmt+1,w
  3216     0673  00C5               	movwf	vfprintf@fmt+1
  3217     0674  084B               	movf	sprintf@fmt,w
  3218     0675  00C4               	movwf	vfprintf@fmt
  3219     0676  3052               	movlw	(low (sprintf@ap| 0))& (0+255)
  3220     0677  00C6               	movwf	vfprintf@ap
  3221     0678  3054               	movlw	(low (sprintf@f| 0))& (0+255)
  3222     0679  3186  2685  3186   	fcall	_vfprintf
  3223     067C                     l1974:
  3224     067C  0020               	movlb	0	; select bank0
  3225     067D  0856               	movf	sprintf@f+2,w
  3226     067E  0753               	addwf	sprintf@s,w
  3227     067F  00D1               	movwf	??_sprintf
  3228     0680  0851               	movf	??_sprintf,w
  3229     0681  0086               	movwf	6
  3230     0682  0187               	clrf	7
  3231     0683  0181               	clrf	1
  3232     0684                     l811:
  3233     0684  0008               	return
  3234     0685                     __end_of_sprintf:
  3235                           
  3236                           	psect	text2
  3237     0685                     __ptext2:	
  3238 ;; *************** function _vfprintf *****************
  3239 ;; Defined at:
  3240 ;;		line 1546 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  3241 ;; Parameters:    Size  Location     Type
  3242 ;;  fp              1    wreg     PTR struct _IO_FILE
  3243 ;;		 -> sprintf@f(11), 
  3244 ;;  fmt             2   36[BANK0 ] PTR const unsigned char 
  3245 ;;		 -> STR_2(12), STR_1(12), 
  3246 ;;  ap              1   38[BANK0 ] PTR PTR void 
  3247 ;;		 -> sprintf@ap(1), 
  3248 ;; Auto vars:     Size  Location     Type
  3249 ;;  fp              1   40[BANK0 ] PTR struct _IO_FILE
  3250 ;;		 -> sprintf@f(11), 
  3251 ;;  cfmt            2   41[BANK0 ] PTR unsigned char 
  3252 ;;		 -> STR_2(12), STR_1(12), 
  3253 ;; Return value:  Size  Location     Type
  3254 ;;                  2   36[BANK0 ] int 
  3255 ;; Registers used:
  3256 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3257 ;; Tracked objects:
  3258 ;;		On entry : 0/0
  3259 ;;		On exit  : 0/0
  3260 ;;		Unchanged: 0/0
  3261 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3262 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3263 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3264 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3265 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3266 ;;Total ram usage:        7 bytes
  3267 ;; Hardware stack levels used: 1
  3268 ;; Hardware stack levels required when called: 7
  3269 ;; This function calls:
  3270 ;;		_vfpfcnvrt
  3271 ;; This function is called by:
  3272 ;;		_sprintf
  3273 ;; This function uses a non-reentrant model
  3274 ;;
  3275                           
  3276     0685                     _vfprintf:	
  3277                           ;psect for function _vfprintf
  3278                           
  3279                           
  3280                           ;incstack = 0
  3281                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3282                           ;vfprintf@fp stored from wreg
  3283     0685  0020               	movlb	0	; select bank0
  3284     0686  00C8               	movwf	vfprintf@fp
  3285     0687                     l1892:
  3286                           
  3287                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1546: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.41\pic\source
      +                          s\c99\common\doprnt.c: 1547: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\comm
      +                          on\doprnt.c: 1549:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\
      +                          common\doprnt.c: 1551:     cfmt = (char *)fmt;
  3288     0687  0845               	movf	vfprintf@fmt+1,w
  3289     0688  00CA               	movwf	vfprintf@cfmt+1
  3290     0689  0844               	movf	vfprintf@fmt,w
  3291     068A  00C9               	movwf	vfprintf@cfmt
  3292                           
  3293                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1555:     while (
      +                          *cfmt) {
  3294     068B  2E94               	goto	l1896
  3295     068C                     l1894:
  3296                           
  3297                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1559:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  3298     068C  3049               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  3299     068D  00B7               	movwf	vfpfcnvrt@fmt
  3300     068E  0846               	movf	vfprintf@ap,w
  3301     068F  00B8               	movwf	vfpfcnvrt@ap
  3302     0690  0848               	movf	vfprintf@fp,w
  3303     0691  3181  21B2  3186   	fcall	_vfpfcnvrt
  3304     0694                     l1896:
  3305                           
  3306                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1555:     while (
      +                          *cfmt) {
  3307     0694  0020               	movlb	0	; select bank0
  3308     0695  0849               	movf	vfprintf@cfmt,w
  3309     0696  0084               	movwf	4
  3310     0697  084A               	movf	vfprintf@cfmt+1,w
  3311     0698  0085               	movwf	5
  3312     0699  0012               	moviw fsr0++
  3313     069A  1D03               	btfss	3,2
  3314     069B  2E9D               	goto	u1321
  3315     069C  2E9E               	goto	u1320
  3316     069D                     u1321:
  3317     069D  2E8C               	goto	l1894
  3318     069E                     u1320:
  3319     069E                     l1898:
  3320                           
  3321                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1564:  return 0;
  3322     069E  01C4               	clrf	?_vfprintf
  3323     069F  01C5               	clrf	?_vfprintf+1
  3324     06A0                     l880:
  3325     06A0  0008               	return
  3326     06A1                     __end_of_vfprintf:
  3327                           
  3328                           	psect	text3
  3329     01B2                     __ptext3:	
  3330 ;; *************** function _vfpfcnvrt *****************
  3331 ;; Defined at:
  3332 ;;		line 1048 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  3333 ;; Parameters:    Size  Location     Type
  3334 ;;  fp              1    wreg     PTR struct _IO_FILE
  3335 ;;		 -> sprintf@f(11), 
  3336 ;;  fmt             1   23[BANK0 ] PTR PTR unsigned char 
  3337 ;;		 -> vfprintf@cfmt(2), 
  3338 ;;  ap              1   24[BANK0 ] PTR PTR void 
  3339 ;;		 -> sprintf@ap(1), 
  3340 ;; Auto vars:     Size  Location     Type
  3341 ;;  fp              1   33[BANK0 ] PTR struct _IO_FILE
  3342 ;;		 -> sprintf@f(11), 
  3343 ;;  convarg         4   29[BANK0 ] struct .
  3344 ;;  cp              2   34[BANK0 ] PTR unsigned char 
  3345 ;;		 -> STR_2(12), STR_1(12), 
  3346 ;;  i               2    0        int 
  3347 ;;  done            2    0        int 
  3348 ;;  c               1    0        unsigned char 
  3349 ;; Return value:  Size  Location     Type
  3350 ;;                  1    wreg      void 
  3351 ;; Registers used:
  3352 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3353 ;; Tracked objects:
  3354 ;;		On entry : 0/0
  3355 ;;		On exit  : 0/0
  3356 ;;		Unchanged: 0/0
  3357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3358 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3359 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3360 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3361 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3362 ;;Total ram usage:       13 bytes
  3363 ;; Hardware stack levels used: 1
  3364 ;; Hardware stack levels required when called: 6
  3365 ;; This function calls:
  3366 ;;		_dtoa
  3367 ;;		_fputc
  3368 ;;		_read_prec_or_width
  3369 ;; This function is called by:
  3370 ;;		_vfprintf
  3371 ;; This function uses a non-reentrant model
  3372 ;;
  3373                           
  3374     01B2                     _vfpfcnvrt:	
  3375                           ;psect for function _vfpfcnvrt
  3376                           
  3377                           
  3378                           ;incstack = 0
  3379                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3380                           ;vfpfcnvrt@fp stored from wreg
  3381     01B2  0020               	movlb	0	; select bank0
  3382     01B3  00C1               	movwf	vfpfcnvrt@fp
  3383     01B4                     l1742:
  3384                           
  3385                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1048: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1049: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\dopr
      +                          nt.c: 1050:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common
      +                          \doprnt.c: 1051:     int done, i;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1059:  } convarg;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1062:     if ((*fmt)[0] == '%') {
  3386     01B4  0837               	movf	vfpfcnvrt@fmt,w
  3387     01B5  0086               	movwf	6
  3388     01B6  0187               	clrf	7
  3389     01B7  3F40               	moviw [0]fsr1
  3390     01B8  00B9               	movwf	??_vfpfcnvrt
  3391     01B9  3F41               	moviw [1]fsr1
  3392     01BA  00BA               	movwf	??_vfpfcnvrt+1
  3393     01BB  0839               	movf	??_vfpfcnvrt,w
  3394     01BC  0084               	movwf	4
  3395     01BD  083A               	movf	??_vfpfcnvrt+1,w
  3396     01BE  0085               	movwf	5
  3397     01BF  0012               	moviw fsr0++
  3398     01C0  3A25               	xorlw	37
  3399     01C1  1D03               	btfss	3,2
  3400     01C2  29C4               	goto	u1161
  3401     01C3  29C5               	goto	u1160
  3402     01C4                     u1161:
  3403     01C4  2A34               	goto	l1776
  3404     01C5                     u1160:
  3405     01C5                     l1744:
  3406                           
  3407                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1063:         ++*
      +                          fmt;
  3408     01C5  0837               	movf	vfpfcnvrt@fmt,w
  3409     01C6  0086               	movwf	6
  3410     01C7  0187               	clrf	7
  3411     01C8  3001               	movlw	1
  3412     01C9  0781               	addwf	1,f
  3413     01CA  3141               	addfsr 1,1
  3414     01CB  1803               	skipnc
  3415     01CC  0A81               	incf	1,f
  3416     01CD                     l1746:
  3417                           
  3418                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1065:         fla
      +                          gs = width = 0;
  3419     01CD  01E5               	clrf	_width
  3420     01CE  01E6               	clrf	_width+1
  3421     01CF  1003               	clrc
  3422     01D0  3000               	movlw	0
  3423     01D1  1803               	btfsc	3,0
  3424     01D2  3001               	movlw	1
  3425     01D3  00EF               	movwf	_flags
  3426     01D4                     l1748:
  3427                           
  3428                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1066:         pre
      +                          c = -1;
  3429     01D4  30FF               	movlw	255
  3430     01D5  00E7               	movwf	_prec
  3431     01D6  30FF               	movlw	255
  3432     01D7  00E8               	movwf	_prec+1
  3433     01D8                     l1750:
  3434                           
  3435                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1117:   width = r
      +                          ead_prec_or_width(fmt, ap);
  3436     01D8  0838               	movf	vfpfcnvrt@ap,w
  3437     01D9  00F6               	movwf	read_prec_or_width@ap
  3438     01DA  0837               	movf	vfpfcnvrt@fmt,w
  3439     01DB  3184  240F  3181   	fcall	_read_prec_or_width
  3440     01DE  0877               	movf	?_read_prec_or_width+1,w
  3441     01DF  0020               	movlb	0	; select bank0
  3442     01E0  00E6               	movwf	_width+1
  3443     01E1  0876               	movf	?_read_prec_or_width,w
  3444     01E2  00E5               	movwf	_width
  3445     01E3                     l1752:
  3446                           
  3447                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1118:   if (width
      +                           < 0) {
  3448     01E3  1FE6               	btfss	_width+1,7
  3449     01E4  29E6               	goto	u1171
  3450     01E5  29E7               	goto	u1170
  3451     01E6                     u1171:
  3452     01E6  29ED               	goto	l1758
  3453     01E7                     u1170:
  3454     01E7                     l1754:
  3455                           
  3456                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1119:    flags |=
      +                           (1 << 0);
  3457     01E7  146F               	bsf	_flags,0
  3458     01E8                     l1756:
  3459                           
  3460                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1120:    width = 
      +                          -width;
  3461     01E8  09E5               	comf	_width,f
  3462     01E9  09E6               	comf	_width+1,f
  3463     01EA  0AE5               	incf	_width,f
  3464     01EB  1903               	skipnz
  3465     01EC  0AE6               	incf	_width+1,f
  3466     01ED                     l1758:
  3467                           
  3468                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1143:   cp = *fmt
      +                          ;
  3469     01ED  0837               	movf	vfpfcnvrt@fmt,w
  3470     01EE  0086               	movwf	6
  3471     01EF  0187               	clrf	7
  3472     01F0  3F40               	moviw [0]fsr1
  3473     01F1  00C2               	movwf	vfpfcnvrt@cp
  3474     01F2  3F41               	moviw [1]fsr1
  3475     01F3  00C3               	movwf	vfpfcnvrt@cp+1
  3476     01F4                     l1760:
  3477                           
  3478                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1213:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  3479     01F4  0842               	movf	vfpfcnvrt@cp,w
  3480     01F5  0084               	movwf	4
  3481     01F6  0843               	movf	vfpfcnvrt@cp+1,w
  3482     01F7  0085               	movwf	5
  3483     01F8  0012               	moviw fsr0++
  3484     01F9  3A64               	xorlw	100
  3485     01FA  1903               	btfsc	3,2
  3486     01FB  29FD               	goto	u1181
  3487     01FC  29FE               	goto	u1180
  3488     01FD                     u1181:
  3489     01FD  2A08               	goto	l1764
  3490     01FE                     u1180:
  3491     01FE                     l1762:
  3492     01FE  0842               	movf	vfpfcnvrt@cp,w
  3493     01FF  0084               	movwf	4
  3494     0200  0843               	movf	vfpfcnvrt@cp+1,w
  3495     0201  0085               	movwf	5
  3496     0202  0012               	moviw fsr0++
  3497     0203  3A69               	xorlw	105
  3498     0204  1D03               	btfss	3,2
  3499     0205  2A07               	goto	u1191
  3500     0206  2A08               	goto	u1190
  3501     0207                     u1191:
  3502     0207  2A2A               	goto	l1772
  3503     0208                     u1190:
  3504     0208                     l1764:
  3505                           
  3506                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1256:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  3507     0208  0838               	movf	vfpfcnvrt@ap,w
  3508     0209  0086               	movwf	6
  3509     020A  0187               	clrf	7
  3510     020B  0801               	movf	1,w
  3511     020C  0084               	movwf	4
  3512     020D  0185               	clrf	5
  3513     020E  3002               	movlw	2
  3514     020F  0781               	addwf	1,f
  3515     0210  3F00               	moviw [0]fsr0
  3516     0211  00BD               	movwf	vfpfcnvrt@convarg
  3517     0212  3F01               	moviw [1]fsr0
  3518     0213  00BE               	movwf	vfpfcnvrt@convarg+1
  3519     0214                     l1766:
  3520                           
  3521                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1258:    *fmt = c
      +                          p+1;
  3522     0214  0842               	movf	vfpfcnvrt@cp,w
  3523     0215  3E01               	addlw	1
  3524     0216  00B9               	movwf	??_vfpfcnvrt
  3525     0217  3000               	movlw	0
  3526     0218  3D43               	addwfc	vfpfcnvrt@cp+1,w
  3527     0219  00BA               	movwf	??_vfpfcnvrt+1
  3528     021A  0837               	movf	vfpfcnvrt@fmt,w
  3529     021B  0086               	movwf	6
  3530     021C  0187               	clrf	7
  3531     021D  0839               	movf	??_vfpfcnvrt,w
  3532     021E  3FC0               	movwi [0]fsr1
  3533     021F  083A               	movf	??_vfpfcnvrt+1,w
  3534     0220  3FC1               	movwi [1]fsr1
  3535     0221                     l1768:
  3536                           
  3537                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1259:    return (
      +                          void) dtoa(fp, convarg.sint);;	Return value of _vfpfcnvrt is never used
  3538     0221  083E               	movf	vfpfcnvrt@convarg+1,w
  3539     0222  00AB               	movwf	dtoa@d+1
  3540     0223  083D               	movf	vfpfcnvrt@convarg,w
  3541     0224  00AA               	movwf	dtoa@d
  3542     0225  0841               	movf	vfpfcnvrt@fp,w
  3543     0226  3180  20F9  3181   	fcall	_dtoa
  3544     0229  2A4C               	goto	l874
  3545     022A                     l1772:
  3546                           
  3547                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1535:         ++*
      +                          fmt;
  3548     022A  0020               	movlb	0	; select bank0
  3549     022B  0837               	movf	vfpfcnvrt@fmt,w
  3550     022C  0086               	movwf	6
  3551     022D  0187               	clrf	7
  3552     022E  3001               	movlw	1
  3553     022F  0781               	addwf	1,f
  3554     0230  3141               	addfsr 1,1
  3555     0231  1803               	skipnc
  3556     0232  0A81               	incf	1,f
  3557     0233  2A4C               	goto	l874
  3558     0234                     l1776:
  3559                           
  3560                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1540:     fputc((
      +                          int)(*fmt)[0], fp);
  3561     0234  0837               	movf	vfpfcnvrt@fmt,w
  3562     0235  0086               	movwf	6
  3563     0236  0187               	clrf	7
  3564     0237  3F40               	moviw [0]fsr1
  3565     0238  00B9               	movwf	??_vfpfcnvrt
  3566     0239  3F41               	moviw [1]fsr1
  3567     023A  00BA               	movwf	??_vfpfcnvrt+1
  3568     023B  0839               	movf	??_vfpfcnvrt,w
  3569     023C  0084               	movwf	4
  3570     023D  083A               	movf	??_vfpfcnvrt+1,w
  3571     023E  0085               	movwf	5
  3572     023F  0800               	movf	0,w	;code access
  3573     0240  00BB               	movwf	??_vfpfcnvrt+2
  3574     0241  01BC               	clrf	??_vfpfcnvrt+3
  3575     0242  083B               	movf	??_vfpfcnvrt+2,w
  3576     0243  00F0               	movwf	fputc@c
  3577     0244  083C               	movf	??_vfpfcnvrt+3,w
  3578     0245  00F1               	movwf	fputc@c+1
  3579     0246  0841               	movf	vfpfcnvrt@fp,w
  3580     0247  00F2               	movwf	fputc@fp
  3581     0248  3185  2521  3181   	fcall	_fputc
  3582     024B  2A2A               	goto	l1772
  3583     024C                     l874:
  3584     024C  0008               	return
  3585     024D                     __end_of_vfpfcnvrt:
  3586                           
  3587                           	psect	text4
  3588     040F                     __ptext4:	
  3589 ;; *************** function _read_prec_or_width *****************
  3590 ;; Defined at:
  3591 ;;		line 1029 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  3592 ;; Parameters:    Size  Location     Type
  3593 ;;  fmt             1    wreg     PTR PTR const unsigned c
  3594 ;;		 -> vfprintf@cfmt(2), 
  3595 ;;  ap              1    6[COMMON] PTR PTR void [1]
  3596 ;;		 -> sprintf@ap(1), 
  3597 ;; Auto vars:     Size  Location     Type
  3598 ;;  fmt             1    3[BANK0 ] PTR PTR const unsigned c
  3599 ;;		 -> vfprintf@cfmt(2), 
  3600 ;;  c               1    0[BANK0 ] unsigned char 
  3601 ;;  n               2    1[BANK0 ] int 
  3602 ;; Return value:  Size  Location     Type
  3603 ;;                  2    6[COMMON] int 
  3604 ;; Registers used:
  3605 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3606 ;; Tracked objects:
  3607 ;;		On entry : 0/0
  3608 ;;		On exit  : 0/0
  3609 ;;		Unchanged: 0/0
  3610 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3611 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3612 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3613 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3614 ;;      Totals:         5       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3615 ;;Total ram usage:        9 bytes
  3616 ;; Hardware stack levels used: 1
  3617 ;; Hardware stack levels required when called: 2
  3618 ;; This function calls:
  3619 ;;		___wmul
  3620 ;; This function is called by:
  3621 ;;		_vfpfcnvrt
  3622 ;; This function uses a non-reentrant model
  3623 ;;
  3624                           
  3625     040F                     _read_prec_or_width:	
  3626                           ;psect for function _read_prec_or_width
  3627                           
  3628                           
  3629                           ;incstack = 0
  3630                           ; Regs used in _read_prec_or_width: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3631                           ;read_prec_or_width@fmt stored from wreg
  3632     040F  0020               	movlb	0	; select bank0
  3633     0410  00A3               	movwf	read_prec_or_width@fmt
  3634     0411                     l1724:
  3635                           
  3636                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1030:     int n =
      +                           0;
  3637     0411  01A1               	clrf	read_prec_or_width@n
  3638     0412  01A2               	clrf	read_prec_or_width@n+1
  3639     0413                     l1726:
  3640                           
  3641                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1031:     if ((*f
      +                          mt)[0] == '*') {
  3642     0413  0823               	movf	read_prec_or_width@fmt,w
  3643     0414  0086               	movwf	6
  3644     0415  0187               	clrf	7
  3645     0416  3F40               	moviw [0]fsr1
  3646     0417  00F8               	movwf	??_read_prec_or_width
  3647     0418  3F41               	moviw [1]fsr1
  3648     0419  00F9               	movwf	??_read_prec_or_width+1
  3649     041A  0878               	movf	??_read_prec_or_width,w
  3650     041B  0084               	movwf	4
  3651     041C  0879               	movf	??_read_prec_or_width+1,w
  3652     041D  0085               	movwf	5
  3653     041E  0012               	moviw fsr0++
  3654     041F  3A2A               	xorlw	42
  3655     0420  1D03               	btfss	3,2
  3656     0421  2C23               	goto	u1141
  3657     0422  2C24               	goto	u1140
  3658     0423                     u1141:
  3659     0423  2C56               	goto	l1736
  3660     0424                     u1140:
  3661     0424                     l1728:
  3662                           
  3663                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1032:         ++*
      +                          fmt;
  3664     0424  0823               	movf	read_prec_or_width@fmt,w
  3665     0425  0086               	movwf	6
  3666     0426  0187               	clrf	7
  3667     0427  3001               	movlw	1
  3668     0428  0781               	addwf	1,f
  3669     0429  3141               	addfsr 1,1
  3670     042A  1803               	skipnc
  3671     042B  0A81               	incf	1,f
  3672     042C                     l1730:
  3673                           
  3674                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1033:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
  3675     042C  0876               	movf	read_prec_or_width@ap,w
  3676     042D  0086               	movwf	6
  3677     042E  0187               	clrf	7
  3678     042F  0801               	movf	1,w
  3679     0430  0084               	movwf	4
  3680     0431  0185               	clrf	5
  3681     0432  3002               	movlw	2
  3682     0433  0781               	addwf	1,f
  3683     0434  3F00               	moviw [0]fsr0
  3684     0435  00A1               	movwf	read_prec_or_width@n
  3685     0436  3F01               	moviw [1]fsr0
  3686     0437  00A2               	movwf	read_prec_or_width@n+1
  3687                           
  3688                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1034:     } else 
      +                          {
  3689     0438  2C6A               	goto	l1738
  3690     0439                     l1732:
  3691                           
  3692                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1037:            
      +                           n = n * 10 + c;
  3693     0439  0820               	movf	read_prec_or_width@c,w
  3694     043A  00F8               	movwf	??_read_prec_or_width
  3695     043B  01F9               	clrf	??_read_prec_or_width+1
  3696     043C  0822               	movf	read_prec_or_width@n+1,w
  3697     043D  00F1               	movwf	___wmul@multiplier+1
  3698     043E  0821               	movf	read_prec_or_width@n,w
  3699     043F  00F0               	movwf	___wmul@multiplier
  3700     0440  300A               	movlw	10
  3701     0441  00F2               	movwf	___wmul@multiplicand
  3702     0442  3000               	movlw	0
  3703     0443  00F3               	movwf	___wmul@multiplicand+1
  3704     0444  3186  2649  3184   	fcall	___wmul
  3705     0447  0878               	movf	??_read_prec_or_width,w
  3706     0448  0770               	addwf	?___wmul,w
  3707     0449  0020               	movlb	0	; select bank0
  3708     044A  00A1               	movwf	read_prec_or_width@n
  3709     044B  0879               	movf	??_read_prec_or_width+1,w
  3710     044C  3D71               	addwfc	?___wmul+1,w
  3711     044D  00A2               	movwf	read_prec_or_width@n+1
  3712     044E                     l1734:
  3713                           
  3714                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1038:            
      +                           ++*fmt;
  3715     044E  0823               	movf	read_prec_or_width@fmt,w
  3716     044F  0086               	movwf	6
  3717     0450  0187               	clrf	7
  3718     0451  3001               	movlw	1
  3719     0452  0781               	addwf	1,f
  3720     0453  3141               	addfsr 1,1
  3721     0454  1803               	skipnc
  3722     0455  0A81               	incf	1,f
  3723     0456                     l1736:
  3724                           
  3725                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1036:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  3726     0456  0823               	movf	read_prec_or_width@fmt,w
  3727     0457  0086               	movwf	6
  3728     0458  0187               	clrf	7
  3729     0459  3F40               	moviw [0]fsr1
  3730     045A  00F8               	movwf	??_read_prec_or_width
  3731     045B  3F41               	moviw [1]fsr1
  3732     045C  00F9               	movwf	??_read_prec_or_width+1
  3733     045D  0878               	movf	??_read_prec_or_width,w
  3734     045E  0084               	movwf	4
  3735     045F  0879               	movf	??_read_prec_or_width+1,w
  3736     0460  0085               	movwf	5
  3737     0461  0800               	movf	0,w	;code access
  3738     0462  3ED0               	addlw	208
  3739     0463  00A0               	movwf	read_prec_or_width@c
  3740     0464  300A               	movlw	10
  3741     0465  0220               	subwf	read_prec_or_width@c,w
  3742     0466  1C03               	skipc
  3743     0467  2C69               	goto	u1151
  3744     0468  2C6A               	goto	u1150
  3745     0469                     u1151:
  3746     0469  2C39               	goto	l1732
  3747     046A                     u1150:
  3748     046A                     l1738:
  3749                           
  3750                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1041:     return 
      +                          n;
  3751     046A  0822               	movf	read_prec_or_width@n+1,w
  3752     046B  00F7               	movwf	?_read_prec_or_width+1
  3753     046C  0821               	movf	read_prec_or_width@n,w
  3754     046D  00F6               	movwf	?_read_prec_or_width
  3755     046E                     l866:
  3756     046E  0008               	return
  3757     046F                     __end_of_read_prec_or_width:
  3758                           
  3759                           	psect	text5
  3760     0649                     __ptext5:	
  3761 ;; *************** function ___wmul *****************
  3762 ;; Defined at:
  3763 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\Umul16.c"
  3764 ;; Parameters:    Size  Location     Type
  3765 ;;  multiplier      2    0[COMMON] unsigned int 
  3766 ;;  multiplicand    2    2[COMMON] unsigned int 
  3767 ;; Auto vars:     Size  Location     Type
  3768 ;;  product         2    4[COMMON] unsigned int 
  3769 ;; Return value:  Size  Location     Type
  3770 ;;                  2    0[COMMON] unsigned int 
  3771 ;; Registers used:
  3772 ;;		wreg, status,2, status,0
  3773 ;; Tracked objects:
  3774 ;;		On entry : 0/0
  3775 ;;		On exit  : 0/0
  3776 ;;		Unchanged: 0/0
  3777 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3778 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3779 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3780 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3781 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3782 ;;Total ram usage:        6 bytes
  3783 ;; Hardware stack levels used: 1
  3784 ;; Hardware stack levels required when called: 1
  3785 ;; This function calls:
  3786 ;;		Nothing
  3787 ;; This function is called by:
  3788 ;;		_read_prec_or_width
  3789 ;; This function uses a non-reentrant model
  3790 ;;
  3791                           
  3792     0649                     ___wmul:	
  3793                           ;psect for function ___wmul
  3794                           
  3795     0649                     l1556:	
  3796                           ;incstack = 0
  3797                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3798                           
  3799     0649  01F4               	clrf	___wmul@product
  3800     064A  01F5               	clrf	___wmul@product+1
  3801     064B                     l1558:
  3802     064B  1C70               	btfss	___wmul@multiplier,0
  3803     064C  2E4E               	goto	u761
  3804     064D  2E4F               	goto	u760
  3805     064E                     u761:
  3806     064E  2E53               	goto	l348
  3807     064F                     u760:
  3808     064F                     l1560:
  3809     064F  0872               	movf	___wmul@multiplicand,w
  3810     0650  07F4               	addwf	___wmul@product,f
  3811     0651  0873               	movf	___wmul@multiplicand+1,w
  3812     0652  3DF5               	addwfc	___wmul@product+1,f
  3813     0653                     l348:
  3814     0653  3001               	movlw	1
  3815     0654                     u775:
  3816     0654  35F2               	lslf	___wmul@multiplicand,f
  3817     0655  0DF3               	rlf	___wmul@multiplicand+1,f
  3818     0656  0B89               	decfsz	9,f
  3819     0657  2E54               	goto	u775
  3820     0658                     l1562:
  3821     0658  3001               	movlw	1
  3822     0659                     u785:
  3823     0659  36F1               	lsrf	___wmul@multiplier+1,f
  3824     065A  0CF0               	rrf	___wmul@multiplier,f
  3825     065B  0B89               	decfsz	9,f
  3826     065C  2E59               	goto	u785
  3827     065D                     l1564:
  3828     065D  0870               	movf	___wmul@multiplier,w
  3829     065E  0471               	iorwf	___wmul@multiplier+1,w
  3830     065F  1D03               	btfss	3,2
  3831     0660  2E62               	goto	u791
  3832     0661  2E63               	goto	u790
  3833     0662                     u791:
  3834     0662  2E4B               	goto	l1558
  3835     0663                     u790:
  3836     0663                     l1566:
  3837     0663  0875               	movf	___wmul@product+1,w
  3838     0664  00F1               	movwf	?___wmul+1
  3839     0665  0874               	movf	___wmul@product,w
  3840     0666  00F0               	movwf	?___wmul
  3841     0667                     l350:
  3842     0667  0008               	return
  3843     0668                     __end_of___wmul:
  3844                           
  3845                           	psect	text6
  3846     00F9                     __ptext6:	
  3847 ;; *************** function _dtoa *****************
  3848 ;; Defined at:
  3849 ;;		line 470 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  3850 ;; Parameters:    Size  Location     Type
  3851 ;;  fp              1    wreg     PTR struct _IO_FILE
  3852 ;;		 -> sprintf@f(11), 
  3853 ;;  d               2   10[BANK0 ] int 
  3854 ;; Auto vars:     Size  Location     Type
  3855 ;;  fp              1   15[BANK0 ] PTR struct _IO_FILE
  3856 ;;		 -> sprintf@f(11), 
  3857 ;;  i               2   20[BANK0 ] int 
  3858 ;;  w               2   18[BANK0 ] int 
  3859 ;;  p               2   16[BANK0 ] int 
  3860 ;;  s               1   22[BANK0 ] unsigned char 
  3861 ;; Return value:  Size  Location     Type
  3862 ;;                  1    wreg      void 
  3863 ;; Registers used:
  3864 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3865 ;; Tracked objects:
  3866 ;;		On entry : 0/0
  3867 ;;		On exit  : 0/0
  3868 ;;		Unchanged: 0/0
  3869 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3870 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3871 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3872 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3873 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3874 ;;Total ram usage:       13 bytes
  3875 ;; Hardware stack levels used: 1
  3876 ;; Hardware stack levels required when called: 5
  3877 ;; This function calls:
  3878 ;;		___awdiv
  3879 ;;		___awmod
  3880 ;;		_abs
  3881 ;;		_pad
  3882 ;; This function is called by:
  3883 ;;		_vfpfcnvrt
  3884 ;; This function uses a non-reentrant model
  3885 ;;
  3886                           
  3887     00F9                     _dtoa:	
  3888                           ;psect for function _dtoa
  3889                           
  3890                           
  3891                           ;incstack = 0
  3892                           ; Regs used in _dtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3893                           ;dtoa@fp stored from wreg
  3894     00F9  0020               	movlb	0	; select bank0
  3895     00FA  00AF               	movwf	dtoa@fp
  3896     00FB                     l1674:
  3897                           
  3898                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 470: static void 
      +                          dtoa(FILE *fp, vfpf_sint_t d);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\commo
      +                          n\doprnt.c: 471: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c:
      +                           472:  char s;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 473
      +                          :     int i, p, w;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c:
      +                           476:     s = d < 0 ? 1 : 0;
  3899     00FB  1BAB               	btfsc	dtoa@d+1,7
  3900     00FC  28FE               	goto	u1041
  3901     00FD  2900               	goto	u1040
  3902     00FE                     u1041:
  3903     00FE  3001               	movlw	1
  3904     00FF  2901               	goto	u1050
  3905     0100                     u1040:
  3906     0100  3000               	movlw	0
  3907     0101                     u1050:
  3908     0101  00B6               	movwf	dtoa@s
  3909     0102                     l1676:
  3910                           
  3911                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 477:     if (s) {
  3912     0102  0836               	movf	dtoa@s,w
  3913     0103  1903               	btfsc	3,2
  3914     0104  2906               	goto	u1061
  3915     0105  2907               	goto	u1060
  3916     0106                     u1061:
  3917     0106  290C               	goto	l1680
  3918     0107                     u1060:
  3919     0107                     l1678:
  3920                           
  3921                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 478:         d = 
      +                          -d;
  3922     0107  09AA               	comf	dtoa@d,f
  3923     0108  09AB               	comf	dtoa@d+1,f
  3924     0109  0AAA               	incf	dtoa@d,f
  3925     010A  1903               	skipnz
  3926     010B  0AAB               	incf	dtoa@d+1,f
  3927     010C                     l1680:
  3928                           
  3929                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 487:     p = (0 <
      +                          = prec) ? prec : 1;
  3930     010C  1FE8               	btfss	_prec+1,7
  3931     010D  290F               	goto	u1071
  3932     010E  2910               	goto	u1070
  3933     010F                     u1071:
  3934     010F  2915               	goto	l1684
  3935     0110                     u1070:
  3936     0110                     l1682:
  3937     0110  3001               	movlw	1
  3938     0111  00B0               	movwf	dtoa@p
  3939     0112  3000               	movlw	0
  3940     0113  00B1               	movwf	dtoa@p+1
  3941     0114  2919               	goto	l846
  3942     0115                     l1684:
  3943     0115  0868               	movf	_prec+1,w
  3944     0116  00B1               	movwf	dtoa@p+1
  3945     0117  0867               	movf	_prec,w
  3946     0118  00B0               	movwf	dtoa@p
  3947     0119                     l846:
  3948                           
  3949                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 488:     w = widt
      +                          h;
  3950     0119  0866               	movf	_width+1,w
  3951     011A  00B3               	movwf	dtoa@w+1
  3952     011B  0865               	movf	_width,w
  3953     011C  00B2               	movwf	dtoa@w
  3954     011D                     l1686:
  3955                           
  3956                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 489:     if (s
  3957     011D  0836               	movf	dtoa@s,w
  3958     011E  1903               	btfsc	3,2
  3959     011F  2921               	goto	u1081
  3960     0120  2922               	goto	u1080
  3961     0121                     u1081:
  3962     0121  2936               	goto	l847
  3963     0122                     u1080:
  3964     0122                     l1688:
  3965                           
  3966                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 493:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 494:         --w;
  3967     0122  30FF               	movlw	255
  3968     0123  07B2               	addwf	dtoa@w,f
  3969     0124  30FF               	movlw	255
  3970     0125  3DB3               	addwfc	dtoa@w+1,f
  3971     0126                     l1690:
  3972                           
  3973                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 495:   s = s ? '-
      +                          ' : '+';
  3974     0126  0836               	movf	dtoa@s,w
  3975     0127  1D03               	btfss	3,2
  3976     0128  292A               	goto	u1091
  3977     0129  292B               	goto	u1090
  3978     012A                     u1091:
  3979     012A  2930               	goto	l1694
  3980     012B                     u1090:
  3981     012B                     l1692:
  3982     012B  302B               	movlw	43
  3983     012C  00AD               	movwf	_dtoa$1067
  3984     012D  3000               	movlw	0
  3985     012E  00AE               	movwf	_dtoa$1067+1
  3986     012F  2934               	goto	l851
  3987     0130                     l1694:
  3988     0130  302D               	movlw	45
  3989     0131  00AD               	movwf	_dtoa$1067
  3990     0132  3000               	movlw	0
  3991     0133  00AE               	movwf	_dtoa$1067+1
  3992     0134                     l851:
  3993     0134  082D               	movf	_dtoa$1067,w
  3994     0135  00B6               	movwf	dtoa@s
  3995     0136                     l847:	
  3996                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 496:     }
  3997                           
  3998                           
  3999                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 505:     i = size
      +                          of(dbuf) - 1;
  4000     0136  301F               	movlw	31
  4001     0137  00B4               	movwf	dtoa@i
  4002     0138  3000               	movlw	0
  4003     0139  00B5               	movwf	dtoa@i+1
  4004     013A                     l1696:
  4005                           
  4006                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 506:     dbuf[i] 
      +                          = '\0';
  4007     013A  0021               	movlb	1	; select bank1
  4008     013B  01C3               	clrf	(_dbuf^(0+128)+31)
  4009                           
  4010                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 507:     while (!
      +                          (i < 1) && (d || (0 < p)
  4011     013C  2974               	goto	l1708
  4012     013D                     l1698:
  4013                           
  4014                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 511:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 512:         --i;
  4015     013D  30FF               	movlw	255
  4016     013E  0020               	movlb	0	; select bank0
  4017     013F  07B4               	addwf	dtoa@i,f
  4018     0140  30FF               	movlw	255
  4019     0141  3DB5               	addwfc	dtoa@i+1,f
  4020     0142                     l1700:
  4021                           
  4022                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 513:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
  4023     0142  0834               	movf	dtoa@i,w
  4024     0143  3EA4               	addlw	(low (_dbuf| 0))& (0+255)
  4025     0144  0086               	movwf	6
  4026     0145  0187               	clrf	7
  4027     0146  300A               	movlw	10
  4028     0147  00F0               	movwf	___awmod@divisor
  4029     0148  3000               	movlw	0
  4030     0149  00F1               	movwf	___awmod@divisor+1
  4031     014A  082B               	movf	dtoa@d+1,w
  4032     014B  00F3               	movwf	___awmod@dividend+1
  4033     014C  082A               	movf	dtoa@d,w
  4034     014D  00F2               	movwf	___awmod@dividend
  4035     014E  3184  24CE  3180   	fcall	___awmod
  4036     0151  0871               	movf	?___awmod+1,w
  4037     0152  00F8               	movwf	abs@a+1
  4038     0153  0870               	movf	?___awmod,w
  4039     0154  00F7               	movwf	abs@a
  4040     0155  3186  26A1  3180   	fcall	_abs
  4041     0158  0877               	movf	?_abs,w
  4042     0159  3E30               	addlw	48
  4043     015A  0081               	movwf	1
  4044     015B                     l1702:
  4045                           
  4046                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 514:         --p;
  4047     015B  30FF               	movlw	255
  4048     015C  0020               	movlb	0	; select bank0
  4049     015D  07B0               	addwf	dtoa@p,f
  4050     015E  30FF               	movlw	255
  4051     015F  3DB1               	addwfc	dtoa@p+1,f
  4052     0160                     l1704:
  4053                           
  4054                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 515:         --w;
  4055     0160  30FF               	movlw	255
  4056     0161  07B2               	addwf	dtoa@w,f
  4057     0162  30FF               	movlw	255
  4058     0163  3DB3               	addwfc	dtoa@w+1,f
  4059     0164                     l1706:
  4060                           
  4061                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 516:         d = 
      +                          d / 10;
  4062     0164  300A               	movlw	10
  4063     0165  00F0               	movwf	___awdiv@divisor
  4064     0166  3000               	movlw	0
  4065     0167  00F1               	movwf	___awdiv@divisor+1
  4066     0168  082B               	movf	dtoa@d+1,w
  4067     0169  00F3               	movwf	___awdiv@dividend+1
  4068     016A  082A               	movf	dtoa@d,w
  4069     016B  00F2               	movwf	___awdiv@dividend
  4070     016C  3184  246F  3180   	fcall	___awdiv
  4071     016F  0871               	movf	?___awdiv+1,w
  4072     0170  0020               	movlb	0	; select bank0
  4073     0171  00AB               	movwf	dtoa@d+1
  4074     0172  0870               	movf	?___awdiv,w
  4075     0173  00AA               	movwf	dtoa@d
  4076     0174                     l1708:
  4077                           
  4078                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 507:     while (!
      +                          (i < 1) && (d || (0 < p)
  4079     0174  0020               	movlb	0	; select bank0
  4080     0175  0835               	movf	dtoa@i+1,w
  4081     0176  3A80               	xorlw	128
  4082     0177  00AC               	movwf	??_dtoa
  4083     0178  3080               	movlw	128
  4084     0179  022C               	subwf	??_dtoa,w
  4085     017A  1D03               	skipz
  4086     017B  297E               	goto	u1105
  4087     017C  3001               	movlw	1
  4088     017D  0234               	subwf	dtoa@i,w
  4089     017E                     u1105:
  4090     017E  1C03               	skipc
  4091     017F  2981               	goto	u1101
  4092     0180  2982               	goto	u1100
  4093     0181                     u1101:
  4094     0181  2996               	goto	l1714
  4095     0182                     u1100:
  4096     0182                     l1710:
  4097     0182  0020               	movlb	0	; select bank0
  4098     0183  082A               	movf	dtoa@d,w
  4099     0184  042B               	iorwf	dtoa@d+1,w
  4100     0185  1D03               	btfss	3,2
  4101     0186  2988               	goto	u1111
  4102     0187  2989               	goto	u1110
  4103     0188                     u1111:
  4104     0188  293D               	goto	l1698
  4105     0189                     u1110:
  4106     0189                     l1712:
  4107     0189  0831               	movf	dtoa@p+1,w
  4108     018A  3A80               	xorlw	128
  4109     018B  00AC               	movwf	??_dtoa
  4110     018C  3080               	movlw	128
  4111     018D  022C               	subwf	??_dtoa,w
  4112     018E  1D03               	skipz
  4113     018F  2992               	goto	u1125
  4114     0190  3001               	movlw	1
  4115     0191  0230               	subwf	dtoa@p,w
  4116     0192                     u1125:
  4117     0192  1803               	skipnc
  4118     0193  2995               	goto	u1121
  4119     0194  2996               	goto	u1120
  4120     0195                     u1121:
  4121     0195  293D               	goto	l1698
  4122     0196                     u1120:
  4123     0196                     l1714:
  4124                           
  4125                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 520:     if (s !=
      +                           0) {
  4126     0196  0020               	movlb	0	; select bank0
  4127     0197  0836               	movf	dtoa@s,w
  4128     0198  1903               	btfsc	3,2
  4129     0199  299B               	goto	u1131
  4130     019A  299C               	goto	u1130
  4131     019B                     u1131:
  4132     019B  29A6               	goto	l1720
  4133     019C                     u1130:
  4134     019C                     l1716:
  4135                           
  4136                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 521:         --i;
  4137     019C  30FF               	movlw	255
  4138     019D  07B4               	addwf	dtoa@i,f
  4139     019E  30FF               	movlw	255
  4140     019F  3DB5               	addwfc	dtoa@i+1,f
  4141     01A0                     l1718:
  4142                           
  4143                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 522:         dbuf
      +                          [i] = s;
  4144     01A0  0834               	movf	dtoa@i,w
  4145     01A1  3EA4               	addlw	(low (_dbuf| 0))& (0+255)
  4146     01A2  0086               	movwf	6
  4147     01A3  0187               	clrf	7
  4148     01A4  0836               	movf	dtoa@s,w
  4149     01A5  0081               	movwf	1
  4150     01A6                     l1720:
  4151                           
  4152                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 526:     return (
      +                          void) pad(fp, &dbuf[i], w);
  4153     01A6  0834               	movf	dtoa@i,w
  4154     01A7  3EA4               	addlw	(low (_dbuf| 0))& (0+255)
  4155     01A8  00FB               	movwf	pad@buf
  4156     01A9  0833               	movf	dtoa@w+1,w
  4157     01AA  00FD               	movwf	pad@p+1
  4158     01AB  0832               	movf	dtoa@w,w
  4159     01AC  00FC               	movwf	pad@p
  4160     01AD  082F               	movf	dtoa@fp,w
  4161     01AE  3185  2571  3180   	fcall	_pad
  4162     01B1                     l858:
  4163     01B1  0008               	return
  4164     01B2                     __end_of_dtoa:
  4165                           
  4166                           	psect	text7
  4167     0571                     __ptext7:	
  4168 ;; *************** function _pad *****************
  4169 ;; Defined at:
  4170 ;;		line 152 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  4171 ;; Parameters:    Size  Location     Type
  4172 ;;  fp              1    wreg     PTR struct _IO_FILE
  4173 ;;		 -> sprintf@f(11), 
  4174 ;;  buf             1   11[COMMON] PTR unsigned char 
  4175 ;;		 -> dbuf(32), 
  4176 ;;  p               2   12[COMMON] int 
  4177 ;; Auto vars:     Size  Location     Type
  4178 ;;  fp              1    9[BANK0 ] PTR struct _IO_FILE
  4179 ;;		 -> sprintf@f(11), 
  4180 ;;  w               2    7[BANK0 ] int 
  4181 ;;  i               2    5[BANK0 ] int 
  4182 ;; Return value:  Size  Location     Type
  4183 ;;                  1    wreg      void 
  4184 ;; Registers used:
  4185 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4186 ;; Tracked objects:
  4187 ;;		On entry : 0/0
  4188 ;;		On exit  : 0/0
  4189 ;;		Unchanged: 0/0
  4190 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4191 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4192 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4193 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4194 ;;      Totals:         3       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4195 ;;Total ram usage:        9 bytes
  4196 ;; Hardware stack levels used: 1
  4197 ;; Hardware stack levels required when called: 4
  4198 ;; This function calls:
  4199 ;;		_fputc
  4200 ;;		_fputs
  4201 ;; This function is called by:
  4202 ;;		_dtoa
  4203 ;; This function uses a non-reentrant model
  4204 ;;
  4205                           
  4206     0571                     _pad:	
  4207                           ;psect for function _pad
  4208                           
  4209                           
  4210                           ;incstack = 0
  4211                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4212                           ;pad@fp stored from wreg
  4213     0571  0020               	movlb	0	; select bank0
  4214     0572  00A9               	movwf	pad@fp
  4215     0573                     l1652:
  4216                           
  4217                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 152: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\com
      +                          mon\doprnt.c: 153: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.
      +                          c: 154:     int i, w;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt
      +                          .c: 158:     if (flags & (1 << 0)) {
  4218     0573  1C6F               	btfss	_flags,0
  4219     0574  2D76               	goto	u991
  4220     0575  2D77               	goto	u990
  4221     0576                     u991:
  4222     0576  2D7D               	goto	l1656
  4223     0577                     u990:
  4224     0577                     l1654:
  4225                           
  4226                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 159:         fput
      +                          s((const char *)buf, fp);
  4227     0577  0829               	movf	pad@fp,w
  4228     0578  00F8               	movwf	fputs@fp
  4229     0579  087B               	movf	pad@buf,w
  4230     057A  3186  2625  3185   	fcall	_fputs
  4231     057D                     l1656:
  4232                           
  4233                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 164:     w = (p <
      +                           0) ? 0 : p;
  4234     057D  1BFD               	btfsc	pad@p+1,7
  4235     057E  2D80               	goto	u1001
  4236     057F  2D81               	goto	u1000
  4237     0580                     u1001:
  4238     0580  2D87               	goto	l1660
  4239     0581                     u1000:
  4240     0581                     l1658:
  4241     0581  087D               	movf	pad@p+1,w
  4242     0582  0020               	movlb	0	; select bank0
  4243     0583  00A8               	movwf	pad@w+1
  4244     0584  087C               	movf	pad@p,w
  4245     0585  00A7               	movwf	pad@w
  4246     0586  2D8A               	goto	l834
  4247     0587                     l1660:
  4248     0587  0020               	movlb	0	; select bank0
  4249     0588  01A7               	clrf	pad@w
  4250     0589  01A8               	clrf	pad@w+1
  4251     058A                     l834:
  4252                           
  4253                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 165:     i = 0;
  4254     058A  01A5               	clrf	pad@i
  4255     058B  01A6               	clrf	pad@i+1
  4256                           
  4257                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 166:     while (i
      +                           < w) {
  4258     058C  2D9C               	goto	l1666
  4259     058D                     l1662:
  4260                           
  4261                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 167:         fput
      +                          c(' ', fp);
  4262     058D  3020               	movlw	32
  4263     058E  00F0               	movwf	fputc@c
  4264     058F  3000               	movlw	0
  4265     0590  00F1               	movwf	fputc@c+1
  4266     0591  0020               	movlb	0	; select bank0
  4267     0592  0829               	movf	pad@fp,w
  4268     0593  00F2               	movwf	fputc@fp
  4269     0594  3185  2521  3185   	fcall	_fputc
  4270     0597                     l1664:
  4271                           
  4272                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 168:         ++i;
  4273     0597  3001               	movlw	1
  4274     0598  0020               	movlb	0	; select bank0
  4275     0599  07A5               	addwf	pad@i,f
  4276     059A  3000               	movlw	0
  4277     059B  3DA6               	addwfc	pad@i+1,f
  4278     059C                     l1666:
  4279                           
  4280                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 166:     while (i
      +                           < w) {
  4281     059C  0826               	movf	pad@i+1,w
  4282     059D  3A80               	xorlw	128
  4283     059E  00A4               	movwf	??_pad
  4284     059F  0828               	movf	pad@w+1,w
  4285     05A0  3A80               	xorlw	128
  4286     05A1  0224               	subwf	??_pad,w
  4287     05A2  1D03               	skipz
  4288     05A3  2DA6               	goto	u1015
  4289     05A4  0827               	movf	pad@w,w
  4290     05A5  0225               	subwf	pad@i,w
  4291     05A6                     u1015:
  4292     05A6  1C03               	skipc
  4293     05A7  2DA9               	goto	u1011
  4294     05A8  2DAA               	goto	u1010
  4295     05A9                     u1011:
  4296     05A9  2D8D               	goto	l1662
  4297     05AA                     u1010:
  4298     05AA                     l837:
  4299                           
  4300                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 173:     if (!(fl
      +                          ags & (1 << 0))) {
  4301     05AA  0020               	movlb	0	; select bank0
  4302     05AB  186F               	btfsc	_flags,0
  4303     05AC  2DAE               	goto	u1021
  4304     05AD  2DAF               	goto	u1020
  4305     05AE                     u1021:
  4306     05AE  2DB5               	goto	l839
  4307     05AF                     u1020:
  4308     05AF                     l1668:
  4309                           
  4310                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 175:         fput
      +                          s((const char *)buf, fp);
  4311     05AF  0829               	movf	pad@fp,w
  4312     05B0  00F8               	movwf	fputs@fp
  4313     05B1  087B               	movf	pad@buf,w
  4314     05B2  3186  2625  3185   	fcall	_fputs
  4315     05B5                     l839:
  4316     05B5  0008               	return
  4317     05B6                     __end_of_pad:
  4318                           
  4319                           	psect	text8
  4320     0625                     __ptext8:	
  4321 ;; *************** function _fputs *****************
  4322 ;; Defined at:
  4323 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_fputs.c"
  4324 ;; Parameters:    Size  Location     Type
  4325 ;;  s               1    wreg     PTR const unsigned char 
  4326 ;;		 -> dbuf(32), 
  4327 ;;  fp              1    8[COMMON] PTR struct _IO_FILE
  4328 ;;		 -> sprintf@f(11), 
  4329 ;; Auto vars:     Size  Location     Type
  4330 ;;  s               1    3[BANK0 ] PTR const unsigned char 
  4331 ;;		 -> dbuf(32), 
  4332 ;;  i               2    1[BANK0 ] int 
  4333 ;;  c               1    0[BANK0 ] unsigned char 
  4334 ;; Return value:  Size  Location     Type
  4335 ;;                  2    8[COMMON] int 
  4336 ;; Registers used:
  4337 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4338 ;; Tracked objects:
  4339 ;;		On entry : 0/0
  4340 ;;		On exit  : 0/0
  4341 ;;		Unchanged: 0/0
  4342 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4343 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4344 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4345 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4346 ;;      Totals:         3       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4347 ;;Total ram usage:        7 bytes
  4348 ;; Hardware stack levels used: 1
  4349 ;; Hardware stack levels required when called: 3
  4350 ;; This function calls:
  4351 ;;		_fputc
  4352 ;; This function is called by:
  4353 ;;		_pad
  4354 ;; This function uses a non-reentrant model
  4355 ;;
  4356                           
  4357     0625                     _fputs:	
  4358                           ;psect for function _fputs
  4359                           
  4360                           
  4361                           ;incstack = 0
  4362                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4363                           ;fputs@s stored from wreg
  4364     0625  0020               	movlb	0	; select bank0
  4365     0626  00A3               	movwf	fputs@s
  4366     0627                     l1548:
  4367     0627  01A1               	clrf	fputs@i
  4368     0628  01A2               	clrf	fputs@i+1
  4369     0629  2E3B               	goto	l1554
  4370     062A                     l1550:
  4371     062A  0820               	movf	fputs@c,w
  4372     062B  00F9               	movwf	??_fputs
  4373     062C  01FA               	clrf	??_fputs+1
  4374     062D  0879               	movf	??_fputs,w
  4375     062E  00F0               	movwf	fputc@c
  4376     062F  087A               	movf	??_fputs+1,w
  4377     0630  00F1               	movwf	fputc@c+1
  4378     0631  0878               	movf	fputs@fp,w
  4379     0632  00F2               	movwf	fputc@fp
  4380     0633  3185  2521  3186   	fcall	_fputc
  4381     0636                     l1552:
  4382     0636  3001               	movlw	1
  4383     0637  0020               	movlb	0	; select bank0
  4384     0638  07A1               	addwf	fputs@i,f
  4385     0639  3000               	movlw	0
  4386     063A  3DA2               	addwfc	fputs@i+1,f
  4387     063B                     l1554:
  4388     063B  0821               	movf	fputs@i,w
  4389     063C  0723               	addwf	fputs@s,w
  4390     063D  00F9               	movwf	??_fputs
  4391     063E  0879               	movf	??_fputs,w
  4392     063F  0086               	movwf	6
  4393     0640  0187               	clrf	7
  4394     0641  0801               	movf	1,w
  4395     0642  00A0               	movwf	fputs@c
  4396     0643  0820               	movf	fputs@c,w
  4397     0644  1D03               	btfss	3,2
  4398     0645  2E47               	goto	u751
  4399     0646  2E48               	goto	u750
  4400     0647                     u751:
  4401     0647  2E2A               	goto	l1550
  4402     0648                     u750:
  4403     0648                     l907:
  4404     0648  0008               	return
  4405     0649                     __end_of_fputs:
  4406                           
  4407                           	psect	text9
  4408     0521                     __ptext9:	
  4409 ;; *************** function _fputc *****************
  4410 ;; Defined at:
  4411 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_fputc.c"
  4412 ;; Parameters:    Size  Location     Type
  4413 ;;  c               2    0[COMMON] int 
  4414 ;;  fp              1    2[COMMON] PTR struct _IO_FILE
  4415 ;;		 -> sprintf@f(11), 
  4416 ;; Auto vars:     Size  Location     Type
  4417 ;;		None
  4418 ;; Return value:  Size  Location     Type
  4419 ;;                  2    0[COMMON] int 
  4420 ;; Registers used:
  4421 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4422 ;; Tracked objects:
  4423 ;;		On entry : 0/0
  4424 ;;		On exit  : 0/0
  4425 ;;		Unchanged: 0/0
  4426 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4427 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4428 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4429 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4430 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4431 ;;Total ram usage:        8 bytes
  4432 ;; Hardware stack levels used: 1
  4433 ;; Hardware stack levels required when called: 2
  4434 ;; This function calls:
  4435 ;;		_putch
  4436 ;; This function is called by:
  4437 ;;		_pad
  4438 ;;		_vfpfcnvrt
  4439 ;;		_fputs
  4440 ;; This function uses a non-reentrant model
  4441 ;;
  4442                           
  4443     0521                     _fputc:	
  4444                           ;psect for function _fputc
  4445                           
  4446     0521                     l1532:	
  4447                           ;incstack = 0
  4448                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4449                           
  4450     0521  0872               	movf	fputc@fp,w
  4451     0522  1903               	btfsc	3,2
  4452     0523  2D25               	goto	u711
  4453     0524  2D26               	goto	u710
  4454     0525                     u711:
  4455     0525  2D2B               	goto	l1536
  4456     0526                     u710:
  4457     0526                     l1534:
  4458     0526  0872               	movf	fputc@fp,w
  4459     0527  1D03               	btfss	3,2
  4460     0528  2D2A               	goto	u721
  4461     0529  2D2B               	goto	u720
  4462     052A                     u721:
  4463     052A  2D30               	goto	l1538
  4464     052B                     u720:
  4465     052B                     l1536:
  4466     052B  0870               	movf	fputc@c,w
  4467     052C  3187  2729  3185   	fcall	_putch
  4468     052F  2D70               	goto	l899
  4469     0530                     l1538:
  4470     0530  0872               	movf	fputc@fp,w
  4471     0531  3E09               	addlw	9
  4472     0532  0086               	movwf	6
  4473     0533  0187               	clrf	7
  4474     0534  0016               	moviw fsr1++
  4475     0535  0401               	iorwf	1,w
  4476     0536  1903               	btfsc	3,2
  4477     0537  2D39               	goto	u731
  4478     0538  2D3A               	goto	u730
  4479     0539                     u731:
  4480     0539  2D58               	goto	l1542
  4481     053A                     u730:
  4482     053A                     l1540:
  4483     053A  0872               	movf	fputc@fp,w
  4484     053B  3E09               	addlw	9
  4485     053C  0086               	movwf	6
  4486     053D  0187               	clrf	7
  4487     053E  3F40               	moviw [0]fsr1
  4488     053F  00F3               	movwf	??_fputc
  4489     0540  3F41               	moviw [1]fsr1
  4490     0541  00F4               	movwf	??_fputc+1
  4491     0542  0872               	movf	fputc@fp,w
  4492     0543  3E02               	addlw	2
  4493     0544  0086               	movwf	6
  4494     0545  0187               	clrf	7
  4495     0546  3F40               	moviw [0]fsr1
  4496     0547  00F5               	movwf	??_fputc+2
  4497     0548  3F41               	moviw [1]fsr1
  4498     0549  00F6               	movwf	??_fputc+3
  4499     054A  0876               	movf	??_fputc+3,w
  4500     054B  3A80               	xorlw	128
  4501     054C  00F7               	movwf	??_fputc+4
  4502     054D  0874               	movf	??_fputc+1,w
  4503     054E  3A80               	xorlw	128
  4504     054F  0277               	subwf	??_fputc+4,w
  4505     0550  1D03               	skipz
  4506     0551  2D54               	goto	u745
  4507     0552  0873               	movf	??_fputc,w
  4508     0553  0275               	subwf	??_fputc+2,w
  4509     0554                     u745:
  4510     0554  1803               	skipnc
  4511     0555  2D57               	goto	u741
  4512     0556  2D58               	goto	u740
  4513     0557                     u741:
  4514     0557  2D70               	goto	l899
  4515     0558                     u740:
  4516     0558                     l1542:
  4517     0558  0872               	movf	fputc@fp,w
  4518     0559  0086               	movwf	6
  4519     055A  0187               	clrf	7
  4520     055B  0872               	movf	fputc@fp,w
  4521     055C  3E02               	addlw	2
  4522     055D  0084               	movwf	4
  4523     055E  0185               	clrf	5
  4524     055F  0800               	movf	0,w
  4525     0560  0701               	addwf	1,w
  4526     0561  00F3               	movwf	??_fputc
  4527     0562  0873               	movf	??_fputc,w
  4528     0563  0086               	movwf	6
  4529     0564  0187               	clrf	7
  4530     0565  0870               	movf	fputc@c,w
  4531     0566  0081               	movwf	1
  4532     0567                     l1544:
  4533     0567  0872               	movf	fputc@fp,w
  4534     0568  3E02               	addlw	2
  4535     0569  0086               	movwf	6
  4536     056A  0187               	clrf	7
  4537     056B  3001               	movlw	1
  4538     056C  0781               	addwf	1,f
  4539     056D  3141               	addfsr 1,1
  4540     056E  1803               	skipnc
  4541     056F  0A81               	incf	1,f
  4542     0570                     l899:
  4543     0570  0008               	return
  4544     0571                     __end_of_fputc:
  4545                           
  4546                           	psect	text10
  4547     0729                     __ptext10:	
  4548 ;; *************** function _putch *****************
  4549 ;; Defined at:
  4550 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\putch.c"
  4551 ;; Parameters:    Size  Location     Type
  4552 ;;  c               1    wreg     unsigned char 
  4553 ;; Auto vars:     Size  Location     Type
  4554 ;;  c               1    0[COMMON] unsigned char 
  4555 ;; Return value:  Size  Location     Type
  4556 ;;                  1    wreg      void 
  4557 ;; Registers used:
  4558 ;;		wreg
  4559 ;; Tracked objects:
  4560 ;;		On entry : 0/0
  4561 ;;		On exit  : 0/0
  4562 ;;		Unchanged: 0/0
  4563 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4564 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4565 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4566 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4567 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4568 ;;Total ram usage:        0 bytes
  4569 ;; Hardware stack levels used: 1
  4570 ;; Hardware stack levels required when called: 1
  4571 ;; This function calls:
  4572 ;;		Nothing
  4573 ;; This function is called by:
  4574 ;;		_fputc
  4575 ;; This function uses a non-reentrant model
  4576 ;;
  4577                           
  4578     0729                     _putch:	
  4579                           ;psect for function _putch
  4580                           
  4581     0729                     l910:	
  4582                           ;incstack = 0
  4583                           ; Regs used in _putch: [wreg]
  4584                           
  4585     0729  0008               	return
  4586     072A                     __end_of_putch:
  4587                           
  4588                           	psect	text11
  4589     06A1                     __ptext11:	
  4590 ;; *************** function _abs *****************
  4591 ;; Defined at:
  4592 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\abs.c"
  4593 ;; Parameters:    Size  Location     Type
  4594 ;;  a               2    7[COMMON] int 
  4595 ;; Auto vars:     Size  Location     Type
  4596 ;;		None
  4597 ;; Return value:  Size  Location     Type
  4598 ;;                  2    7[COMMON] int 
  4599 ;; Registers used:
  4600 ;;		wreg, status,2, status,0
  4601 ;; Tracked objects:
  4602 ;;		On entry : 0/0
  4603 ;;		On exit  : 0/0
  4604 ;;		Unchanged: 0/0
  4605 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4606 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4607 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4608 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4609 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4610 ;;Total ram usage:        4 bytes
  4611 ;; Hardware stack levels used: 1
  4612 ;; Hardware stack levels required when called: 1
  4613 ;; This function calls:
  4614 ;;		Nothing
  4615 ;; This function is called by:
  4616 ;;		_dtoa
  4617 ;; This function uses a non-reentrant model
  4618 ;;
  4619                           
  4620     06A1                     _abs:	
  4621                           ;psect for function _abs
  4622                           
  4623     06A1                     l1670:	
  4624                           ;incstack = 0
  4625                           ; Regs used in _abs: [wreg+status,2+status,0]
  4626                           
  4627     06A1  0878               	movf	abs@a+1,w
  4628     06A2  3A80               	xorlw	128
  4629     06A3  00F9               	movwf	??_abs
  4630     06A4  3080               	movlw	128
  4631     06A5  0279               	subwf	??_abs,w
  4632     06A6  1D03               	skipz
  4633     06A7  2EAA               	goto	u1035
  4634     06A8  3001               	movlw	1
  4635     06A9  0277               	subwf	abs@a,w
  4636     06AA                     u1035:
  4637     06AA  1803               	skipnc
  4638     06AB  2EAD               	goto	u1031
  4639     06AC  2EAE               	goto	u1030
  4640     06AD                     u1031:
  4641     06AD  2EBA               	goto	l884
  4642     06AE                     u1030:
  4643     06AE                     l1672:
  4644     06AE  0977               	comf	abs@a,w
  4645     06AF  00F9               	movwf	??_abs
  4646     06B0  0978               	comf	abs@a+1,w
  4647     06B1  00FA               	movwf	??_abs+1
  4648     06B2  0AF9               	incf	??_abs,f
  4649     06B3  1903               	skipnz
  4650     06B4  0AFA               	incf	??_abs+1,f
  4651     06B5  0879               	movf	??_abs,w
  4652     06B6  00F7               	movwf	?_abs
  4653     06B7  087A               	movf	??_abs+1,w
  4654     06B8  00F8               	movwf	?_abs+1
  4655     06B9  2EBA               	goto	l887
  4656     06BA                     l884:
  4657     06BA                     l887:
  4658     06BA  0008               	return
  4659     06BB                     __end_of_abs:
  4660                           
  4661                           	psect	text12
  4662     04CE                     __ptext12:	
  4663 ;; *************** function ___awmod *****************
  4664 ;; Defined at:
  4665 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awmod.c"
  4666 ;; Parameters:    Size  Location     Type
  4667 ;;  divisor         2    0[COMMON] int 
  4668 ;;  dividend        2    2[COMMON] int 
  4669 ;; Auto vars:     Size  Location     Type
  4670 ;;  sign            1    6[COMMON] unsigned char 
  4671 ;;  counter         1    5[COMMON] unsigned char 
  4672 ;; Return value:  Size  Location     Type
  4673 ;;                  2    0[COMMON] int 
  4674 ;; Registers used:
  4675 ;;		wreg, status,2, status,0
  4676 ;; Tracked objects:
  4677 ;;		On entry : 0/0
  4678 ;;		On exit  : 0/0
  4679 ;;		Unchanged: 0/0
  4680 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4681 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4682 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4683 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4684 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4685 ;;Total ram usage:        7 bytes
  4686 ;; Hardware stack levels used: 1
  4687 ;; Hardware stack levels required when called: 1
  4688 ;; This function calls:
  4689 ;;		Nothing
  4690 ;; This function is called by:
  4691 ;;		_dtoa
  4692 ;; This function uses a non-reentrant model
  4693 ;;
  4694                           
  4695     04CE                     ___awmod:	
  4696                           ;psect for function ___awmod
  4697                           
  4698     04CE                     l1614:	
  4699                           ;incstack = 0
  4700                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  4701                           
  4702     04CE  01F6               	clrf	___awmod@sign
  4703     04CF                     l1616:
  4704     04CF  1FF3               	btfss	___awmod@dividend+1,7
  4705     04D0  2CD2               	goto	u901
  4706     04D1  2CD3               	goto	u900
  4707     04D2                     u901:
  4708     04D2  2CDA               	goto	l1622
  4709     04D3                     u900:
  4710     04D3                     l1618:
  4711     04D3  09F2               	comf	___awmod@dividend,f
  4712     04D4  09F3               	comf	___awmod@dividend+1,f
  4713     04D5  0AF2               	incf	___awmod@dividend,f
  4714     04D6  1903               	skipnz
  4715     04D7  0AF3               	incf	___awmod@dividend+1,f
  4716     04D8                     l1620:
  4717     04D8  01F6               	clrf	___awmod@sign
  4718     04D9  0AF6               	incf	___awmod@sign,f
  4719     04DA                     l1622:
  4720     04DA  1FF1               	btfss	___awmod@divisor+1,7
  4721     04DB  2CDD               	goto	u911
  4722     04DC  2CDE               	goto	u910
  4723     04DD                     u911:
  4724     04DD  2CE3               	goto	l1626
  4725     04DE                     u910:
  4726     04DE                     l1624:
  4727     04DE  09F0               	comf	___awmod@divisor,f
  4728     04DF  09F1               	comf	___awmod@divisor+1,f
  4729     04E0  0AF0               	incf	___awmod@divisor,f
  4730     04E1  1903               	skipnz
  4731     04E2  0AF1               	incf	___awmod@divisor+1,f
  4732     04E3                     l1626:
  4733     04E3  0870               	movf	___awmod@divisor,w
  4734     04E4  0471               	iorwf	___awmod@divisor+1,w
  4735     04E5  1903               	btfsc	3,2
  4736     04E6  2CE8               	goto	u921
  4737     04E7  2CE9               	goto	u920
  4738     04E8                     u921:
  4739     04E8  2D12               	goto	l1644
  4740     04E9                     u920:
  4741     04E9                     l1628:
  4742     04E9  01F5               	clrf	___awmod@counter
  4743     04EA  0AF5               	incf	___awmod@counter,f
  4744     04EB  2CF5               	goto	l1634
  4745     04EC                     l1630:
  4746     04EC  3001               	movlw	1
  4747     04ED                     u935:
  4748     04ED  35F0               	lslf	___awmod@divisor,f
  4749     04EE  0DF1               	rlf	___awmod@divisor+1,f
  4750     04EF  0B89               	decfsz	9,f
  4751     04F0  2CED               	goto	u935
  4752     04F1                     l1632:
  4753     04F1  3001               	movlw	1
  4754     04F2  00F4               	movwf	??___awmod
  4755     04F3  0874               	movf	??___awmod,w
  4756     04F4  07F5               	addwf	___awmod@counter,f
  4757     04F5                     l1634:
  4758     04F5  1FF1               	btfss	___awmod@divisor+1,7
  4759     04F6  2CF8               	goto	u941
  4760     04F7  2CF9               	goto	u940
  4761     04F8                     u941:
  4762     04F8  2CEC               	goto	l1630
  4763     04F9                     u940:
  4764     04F9                     l1636:
  4765     04F9  0871               	movf	___awmod@divisor+1,w
  4766     04FA  0273               	subwf	___awmod@dividend+1,w
  4767     04FB  1D03               	skipz
  4768     04FC  2CFF               	goto	u955
  4769     04FD  0870               	movf	___awmod@divisor,w
  4770     04FE  0272               	subwf	___awmod@dividend,w
  4771     04FF                     u955:
  4772     04FF  1C03               	skipc
  4773     0500  2D02               	goto	u951
  4774     0501  2D03               	goto	u950
  4775     0502                     u951:
  4776     0502  2D07               	goto	l1640
  4777     0503                     u950:
  4778     0503                     l1638:
  4779     0503  0870               	movf	___awmod@divisor,w
  4780     0504  02F2               	subwf	___awmod@dividend,f
  4781     0505  0871               	movf	___awmod@divisor+1,w
  4782     0506  3BF3               	subwfb	___awmod@dividend+1,f
  4783     0507                     l1640:
  4784     0507  3001               	movlw	1
  4785     0508                     u965:
  4786     0508  36F1               	lsrf	___awmod@divisor+1,f
  4787     0509  0CF0               	rrf	___awmod@divisor,f
  4788     050A  0B89               	decfsz	9,f
  4789     050B  2D08               	goto	u965
  4790     050C                     l1642:
  4791     050C  3001               	movlw	1
  4792     050D  02F5               	subwf	___awmod@counter,f
  4793     050E  1D03               	btfss	3,2
  4794     050F  2D11               	goto	u971
  4795     0510  2D12               	goto	u970
  4796     0511                     u971:
  4797     0511  2CF9               	goto	l1636
  4798     0512                     u970:
  4799     0512                     l1644:
  4800     0512  0876               	movf	___awmod@sign,w
  4801     0513  1903               	btfsc	3,2
  4802     0514  2D16               	goto	u981
  4803     0515  2D17               	goto	u980
  4804     0516                     u981:
  4805     0516  2D1C               	goto	l1648
  4806     0517                     u980:
  4807     0517                     l1646:
  4808     0517  09F2               	comf	___awmod@dividend,f
  4809     0518  09F3               	comf	___awmod@dividend+1,f
  4810     0519  0AF2               	incf	___awmod@dividend,f
  4811     051A  1903               	skipnz
  4812     051B  0AF3               	incf	___awmod@dividend+1,f
  4813     051C                     l1648:
  4814     051C  0873               	movf	___awmod@dividend+1,w
  4815     051D  00F1               	movwf	?___awmod+1
  4816     051E  0872               	movf	___awmod@dividend,w
  4817     051F  00F0               	movwf	?___awmod
  4818     0520                     l514:
  4819     0520  0008               	return
  4820     0521                     __end_of___awmod:
  4821                           
  4822                           	psect	text13
  4823     046F                     __ptext13:	
  4824 ;; *************** function ___awdiv *****************
  4825 ;; Defined at:
  4826 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awdiv.c"
  4827 ;; Parameters:    Size  Location     Type
  4828 ;;  divisor         2    0[COMMON] int 
  4829 ;;  dividend        2    2[COMMON] int 
  4830 ;; Auto vars:     Size  Location     Type
  4831 ;;  quotient        2    7[COMMON] int 
  4832 ;;  sign            1    6[COMMON] unsigned char 
  4833 ;;  counter         1    5[COMMON] unsigned char 
  4834 ;; Return value:  Size  Location     Type
  4835 ;;                  2    0[COMMON] int 
  4836 ;; Registers used:
  4837 ;;		wreg, status,2, status,0
  4838 ;; Tracked objects:
  4839 ;;		On entry : 0/0
  4840 ;;		On exit  : 0/0
  4841 ;;		Unchanged: 0/0
  4842 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4843 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4844 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4845 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4846 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4847 ;;Total ram usage:        9 bytes
  4848 ;; Hardware stack levels used: 1
  4849 ;; Hardware stack levels required when called: 1
  4850 ;; This function calls:
  4851 ;;		Nothing
  4852 ;; This function is called by:
  4853 ;;		_dtoa
  4854 ;; This function uses a non-reentrant model
  4855 ;;
  4856                           
  4857     046F                     ___awdiv:	
  4858                           ;psect for function ___awdiv
  4859                           
  4860     046F                     l1570:	
  4861                           ;incstack = 0
  4862                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4863                           
  4864     046F  01F6               	clrf	___awdiv@sign
  4865     0470                     l1572:
  4866     0470  1FF1               	btfss	___awdiv@divisor+1,7
  4867     0471  2C73               	goto	u801
  4868     0472  2C74               	goto	u800
  4869     0473                     u801:
  4870     0473  2C7B               	goto	l1578
  4871     0474                     u800:
  4872     0474                     l1574:
  4873     0474  09F0               	comf	___awdiv@divisor,f
  4874     0475  09F1               	comf	___awdiv@divisor+1,f
  4875     0476  0AF0               	incf	___awdiv@divisor,f
  4876     0477  1903               	skipnz
  4877     0478  0AF1               	incf	___awdiv@divisor+1,f
  4878     0479                     l1576:
  4879     0479  01F6               	clrf	___awdiv@sign
  4880     047A  0AF6               	incf	___awdiv@sign,f
  4881     047B                     l1578:
  4882     047B  1FF3               	btfss	___awdiv@dividend+1,7
  4883     047C  2C7E               	goto	u811
  4884     047D  2C7F               	goto	u810
  4885     047E                     u811:
  4886     047E  2C88               	goto	l1584
  4887     047F                     u810:
  4888     047F                     l1580:
  4889     047F  09F2               	comf	___awdiv@dividend,f
  4890     0480  09F3               	comf	___awdiv@dividend+1,f
  4891     0481  0AF2               	incf	___awdiv@dividend,f
  4892     0482  1903               	skipnz
  4893     0483  0AF3               	incf	___awdiv@dividend+1,f
  4894     0484                     l1582:
  4895     0484  3001               	movlw	1
  4896     0485  00F4               	movwf	??___awdiv
  4897     0486  0874               	movf	??___awdiv,w
  4898     0487  06F6               	xorwf	___awdiv@sign,f
  4899     0488                     l1584:
  4900     0488  01F7               	clrf	___awdiv@quotient
  4901     0489  01F8               	clrf	___awdiv@quotient+1
  4902     048A                     l1586:
  4903     048A  0870               	movf	___awdiv@divisor,w
  4904     048B  0471               	iorwf	___awdiv@divisor+1,w
  4905     048C  1903               	btfsc	3,2
  4906     048D  2C8F               	goto	u821
  4907     048E  2C90               	goto	u820
  4908     048F                     u821:
  4909     048F  2CBF               	goto	l1606
  4910     0490                     u820:
  4911     0490                     l1588:
  4912     0490  01F5               	clrf	___awdiv@counter
  4913     0491  0AF5               	incf	___awdiv@counter,f
  4914     0492  2C9C               	goto	l1594
  4915     0493                     l1590:
  4916     0493  3001               	movlw	1
  4917     0494                     u835:
  4918     0494  35F0               	lslf	___awdiv@divisor,f
  4919     0495  0DF1               	rlf	___awdiv@divisor+1,f
  4920     0496  0B89               	decfsz	9,f
  4921     0497  2C94               	goto	u835
  4922     0498                     l1592:
  4923     0498  3001               	movlw	1
  4924     0499  00F4               	movwf	??___awdiv
  4925     049A  0874               	movf	??___awdiv,w
  4926     049B  07F5               	addwf	___awdiv@counter,f
  4927     049C                     l1594:
  4928     049C  1FF1               	btfss	___awdiv@divisor+1,7
  4929     049D  2C9F               	goto	u841
  4930     049E  2CA0               	goto	u840
  4931     049F                     u841:
  4932     049F  2C93               	goto	l1590
  4933     04A0                     u840:
  4934     04A0                     l1596:
  4935     04A0  3001               	movlw	1
  4936     04A1                     u855:
  4937     04A1  35F7               	lslf	___awdiv@quotient,f
  4938     04A2  0DF8               	rlf	___awdiv@quotient+1,f
  4939     04A3  0B89               	decfsz	9,f
  4940     04A4  2CA1               	goto	u855
  4941     04A5  0871               	movf	___awdiv@divisor+1,w
  4942     04A6  0273               	subwf	___awdiv@dividend+1,w
  4943     04A7  1D03               	skipz
  4944     04A8  2CAB               	goto	u865
  4945     04A9  0870               	movf	___awdiv@divisor,w
  4946     04AA  0272               	subwf	___awdiv@dividend,w
  4947     04AB                     u865:
  4948     04AB  1C03               	skipc
  4949     04AC  2CAE               	goto	u861
  4950     04AD  2CAF               	goto	u860
  4951     04AE                     u861:
  4952     04AE  2CB4               	goto	l1602
  4953     04AF                     u860:
  4954     04AF                     l1598:
  4955     04AF  0870               	movf	___awdiv@divisor,w
  4956     04B0  02F2               	subwf	___awdiv@dividend,f
  4957     04B1  0871               	movf	___awdiv@divisor+1,w
  4958     04B2  3BF3               	subwfb	___awdiv@dividend+1,f
  4959     04B3                     l1600:
  4960     04B3  1477               	bsf	___awdiv@quotient,0
  4961     04B4                     l1602:
  4962     04B4  3001               	movlw	1
  4963     04B5                     u875:
  4964     04B5  36F1               	lsrf	___awdiv@divisor+1,f
  4965     04B6  0CF0               	rrf	___awdiv@divisor,f
  4966     04B7  0B89               	decfsz	9,f
  4967     04B8  2CB5               	goto	u875
  4968     04B9                     l1604:
  4969     04B9  3001               	movlw	1
  4970     04BA  02F5               	subwf	___awdiv@counter,f
  4971     04BB  1D03               	btfss	3,2
  4972     04BC  2CBE               	goto	u881
  4973     04BD  2CBF               	goto	u880
  4974     04BE                     u881:
  4975     04BE  2CA0               	goto	l1596
  4976     04BF                     u880:
  4977     04BF                     l1606:
  4978     04BF  0876               	movf	___awdiv@sign,w
  4979     04C0  1903               	btfsc	3,2
  4980     04C1  2CC3               	goto	u891
  4981     04C2  2CC4               	goto	u890
  4982     04C3                     u891:
  4983     04C3  2CC9               	goto	l1610
  4984     04C4                     u890:
  4985     04C4                     l1608:
  4986     04C4  09F7               	comf	___awdiv@quotient,f
  4987     04C5  09F8               	comf	___awdiv@quotient+1,f
  4988     04C6  0AF7               	incf	___awdiv@quotient,f
  4989     04C7  1903               	skipnz
  4990     04C8  0AF8               	incf	___awdiv@quotient+1,f
  4991     04C9                     l1610:
  4992     04C9  0878               	movf	___awdiv@quotient+1,w
  4993     04CA  00F1               	movwf	?___awdiv+1
  4994     04CB  0877               	movf	___awdiv@quotient,w
  4995     04CC  00F0               	movwf	?___awdiv
  4996     04CD                     l501:
  4997     04CD  0008               	return
  4998     04CE                     __end_of___awdiv:
  4999                           
  5000                           	psect	text14
  5001     0725                     __ptext14:	
  5002 ;; *************** function _TMR1_Counter *****************
  5003 ;; Defined at:
  5004 ;;		line 28 in file "main.c"
  5005 ;; Parameters:    Size  Location     Type
  5006 ;;		None
  5007 ;; Auto vars:     Size  Location     Type
  5008 ;;		None
  5009 ;; Return value:  Size  Location     Type
  5010 ;;                  1    wreg      void 
  5011 ;; Registers used:
  5012 ;;		wreg
  5013 ;; Tracked objects:
  5014 ;;		On entry : 0/0
  5015 ;;		On exit  : 0/0
  5016 ;;		Unchanged: 0/0
  5017 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5018 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5019 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5020 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5021 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5022 ;;Total ram usage:        0 bytes
  5023 ;; Hardware stack levels used: 1
  5024 ;; Hardware stack levels required when called: 1
  5025 ;; This function calls:
  5026 ;;		Nothing
  5027 ;; This function is called by:
  5028 ;;		_main
  5029 ;; This function uses a non-reentrant model
  5030 ;;
  5031                           
  5032     0725                     _TMR1_Counter:	
  5033                           ;psect for function _TMR1_Counter
  5034                           
  5035     0725                     l1964:	
  5036                           ;incstack = 0
  5037                           ; Regs used in _TMR1_Counter: [wreg]
  5038                           
  5039                           
  5040                           ;main.c: 29: void main(void) {
  5041     0725  3084               	movlw	132
  5042     0726  0020               	movlb	0	; select bank0
  5043     0727  0098               	movwf	24	;volatile
  5044     0728                     l266:
  5045     0728  0008               	return
  5046     0729                     __end_of_TMR1_Counter:
  5047                           
  5048                           	psect	text15
  5049     06F6                     __ptext15:	
  5050 ;; *************** function _TMR0_Timer *****************
  5051 ;; Defined at:
  5052 ;;		line 20 in file "main.c"
  5053 ;; Parameters:    Size  Location     Type
  5054 ;;		None
  5055 ;; Auto vars:     Size  Location     Type
  5056 ;;		None
  5057 ;; Return value:  Size  Location     Type
  5058 ;;                  1    wreg      void 
  5059 ;; Registers used:
  5060 ;;		wreg
  5061 ;; Tracked objects:
  5062 ;;		On entry : 0/0
  5063 ;;		On exit  : 0/0
  5064 ;;		Unchanged: 0/0
  5065 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5066 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5067 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5069 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5070 ;;Total ram usage:        0 bytes
  5071 ;; Hardware stack levels used: 1
  5072 ;; Hardware stack levels required when called: 1
  5073 ;; This function calls:
  5074 ;;		Nothing
  5075 ;; This function is called by:
  5076 ;;		_main
  5077 ;; This function uses a non-reentrant model
  5078 ;;
  5079                           
  5080     06F6                     _TMR0_Timer:	
  5081                           ;psect for function _TMR0_Timer
  5082                           
  5083     06F6                     l1958:	
  5084                           ;incstack = 0
  5085                           ; Regs used in _TMR0_Timer: [wreg]
  5086                           
  5087                           
  5088                           ;main.c: 21:         counter = TMR1;
  5089     06F6  3002               	movlw	2
  5090     06F7  003C               	movlb	28	; select bank28
  5091     06F8  0091               	movwf	17	;volatile
  5092                           
  5093                           ;main.c: 22:         TMR0 = 0x7D;
  5094     06F9  3027               	movlw	39
  5095     06FA  0021               	movlb	1	; select bank1
  5096     06FB  0095               	movwf	21	;volatile
  5097                           
  5098                           ;main.c: 23:         TMR1 = 0;
  5099     06FC  30E1               	movlw	225
  5100     06FD  0020               	movlb	0	; select bank0
  5101     06FE  0095               	movwf	21	;volatile
  5102     06FF                     l1960:
  5103                           
  5104                           ;main.c: 24:         INTCONbits.TMR0IF = 0;
  5105     06FF  110B               	bcf	11,2	;volatile
  5106     0700                     l1962:
  5107                           
  5108                           ;main.c: 25:     }
  5109     0700  168B               	bsf	11,5	;volatile
  5110     0701                     l263:
  5111     0701  0008               	return
  5112     0702                     __end_of_TMR0_Timer:
  5113                           
  5114                           	psect	text16
  5115     06D1                     __ptext16:	
  5116 ;; *************** function _SYSTEM_Initialize *****************
  5117 ;; Defined at:
  5118 ;;		line 50 in file "mcc_generated_files/mcc.c"
  5119 ;; Parameters:    Size  Location     Type
  5120 ;;		None
  5121 ;; Auto vars:     Size  Location     Type
  5122 ;;		None
  5123 ;; Return value:  Size  Location     Type
  5124 ;;                  1    wreg      void 
  5125 ;; Registers used:
  5126 ;;		wreg, status,2, status,0, pclath, cstack
  5127 ;; Tracked objects:
  5128 ;;		On entry : 0/0
  5129 ;;		On exit  : 0/0
  5130 ;;		Unchanged: 0/0
  5131 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5132 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5133 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5134 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5135 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5136 ;;Total ram usage:        0 bytes
  5137 ;; Hardware stack levels used: 1
  5138 ;; Hardware stack levels required when called: 2
  5139 ;; This function calls:
  5140 ;;		_OSCILLATOR_Initialize
  5141 ;;		_PIN_MANAGER_Initialize
  5142 ;;		_PWM3_Initialize
  5143 ;;		_TMR2_Initialize
  5144 ;; This function is called by:
  5145 ;;		_main
  5146 ;; This function uses a non-reentrant model
  5147 ;;
  5148                           
  5149     06D1                     _SYSTEM_Initialize:	
  5150                           ;psect for function _SYSTEM_Initialize
  5151                           
  5152     06D1                     l1904:	
  5153                           ;incstack = 0
  5154                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5155                           
  5156                           
  5157                           ;mcc_generated_files/mcc.c: 52:     PIN_MANAGER_Initialize();
  5158     06D1  3185  25F7  3186   	fcall	_PIN_MANAGER_Initialize
  5159                           
  5160                           ;mcc_generated_files/mcc.c: 53:     OSCILLATOR_Initialize();
  5161     06D4  3187  2718  3186   	fcall	_OSCILLATOR_Initialize
  5162                           
  5163                           ;mcc_generated_files/mcc.c: 54:     PWM3_Initialize();
  5164     06D7  3187  270D  3186   	fcall	_PWM3_Initialize
  5165                           
  5166                           ;mcc_generated_files/mcc.c: 55:     TMR2_Initialize();
  5167     06DA  3187  2702  3186   	fcall	_TMR2_Initialize
  5168     06DD                     l98:
  5169     06DD  0008               	return
  5170     06DE                     __end_of_SYSTEM_Initialize:
  5171                           
  5172                           	psect	text17
  5173     0702                     __ptext17:	
  5174 ;; *************** function _TMR2_Initialize *****************
  5175 ;; Defined at:
  5176 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  5177 ;; Parameters:    Size  Location     Type
  5178 ;;		None
  5179 ;; Auto vars:     Size  Location     Type
  5180 ;;		None
  5181 ;; Return value:  Size  Location     Type
  5182 ;;                  1    wreg      void 
  5183 ;; Registers used:
  5184 ;;		wreg, status,2
  5185 ;; Tracked objects:
  5186 ;;		On entry : 0/0
  5187 ;;		On exit  : 0/0
  5188 ;;		Unchanged: 0/0
  5189 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5190 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5191 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5192 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5193 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5194 ;;Total ram usage:        0 bytes
  5195 ;; Hardware stack levels used: 1
  5196 ;; Hardware stack levels required when called: 1
  5197 ;; This function calls:
  5198 ;;		Nothing
  5199 ;; This function is called by:
  5200 ;;		_SYSTEM_Initialize
  5201 ;; This function uses a non-reentrant model
  5202 ;;
  5203                           
  5204     0702                     _TMR2_Initialize:	
  5205                           ;psect for function _TMR2_Initialize
  5206                           
  5207     0702                     l1786:	
  5208                           ;incstack = 0
  5209                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
  5210                           
  5211                           
  5212                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x00;
  5213     0702  0020               	movlb	0	; select bank0
  5214     0703  019E               	clrf	30	;volatile
  5215                           
  5216                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
  5217     0704  019D               	clrf	29	;volatile
  5218                           
  5219                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
  5220     0705  019F               	clrf	31	;volatile
  5221     0706                     l1788:
  5222                           
  5223                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0x1F;
  5224     0706  301F               	movlw	31
  5225     0707  009B               	movwf	27	;volatile
  5226     0708                     l1790:
  5227                           
  5228                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
  5229     0708  019A               	clrf	26	;volatile
  5230     0709                     l1792:
  5231                           
  5232                           ;mcc_generated_files/tmr2.c: 82:     PIR1bits.TMR2IF = 0;
  5233     0709  1090               	bcf	16,1	;volatile
  5234                           
  5235                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0x80;
  5236     070A  3080               	movlw	128
  5237     070B  009C               	movwf	28	;volatile
  5238     070C                     l41:
  5239     070C  0008               	return
  5240     070D                     __end_of_TMR2_Initialize:
  5241                           
  5242                           	psect	text18
  5243     070D                     __ptext18:	
  5244 ;; *************** function _PWM3_Initialize *****************
  5245 ;; Defined at:
  5246 ;;		line 58 in file "mcc_generated_files/pwm3.c"
  5247 ;; Parameters:    Size  Location     Type
  5248 ;;		None
  5249 ;; Auto vars:     Size  Location     Type
  5250 ;;		None
  5251 ;; Return value:  Size  Location     Type
  5252 ;;                  1    wreg      void 
  5253 ;; Registers used:
  5254 ;;		wreg, status,2, status,0
  5255 ;; Tracked objects:
  5256 ;;		On entry : 0/0
  5257 ;;		On exit  : 0/0
  5258 ;;		Unchanged: 0/0
  5259 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5260 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5261 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5262 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5263 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5264 ;;Total ram usage:        0 bytes
  5265 ;; Hardware stack levels used: 1
  5266 ;; Hardware stack levels required when called: 1
  5267 ;; This function calls:
  5268 ;;		Nothing
  5269 ;; This function is called by:
  5270 ;;		_SYSTEM_Initialize
  5271 ;; This function uses a non-reentrant model
  5272 ;;
  5273                           
  5274     070D                     _PWM3_Initialize:	
  5275                           ;psect for function _PWM3_Initialize
  5276                           
  5277     070D                     l1782:	
  5278                           ;incstack = 0
  5279                           ; Regs used in _PWM3_Initialize: [wreg+status,2+status,0]
  5280                           
  5281                           
  5282                           ;mcc_generated_files/pwm3.c: 62:     PWM3CON = 0x80;
  5283     070D  3080               	movlw	128
  5284     070E  002C               	movlb	12	; select bank12
  5285     070F  0099               	movwf	25	;volatile
  5286                           
  5287                           ;mcc_generated_files/pwm3.c: 65:     PWM3DCH = 0x0F;
  5288     0710  300F               	movlw	15
  5289     0711  0098               	movwf	24	;volatile
  5290                           
  5291                           ;mcc_generated_files/pwm3.c: 68:     PWM3DCL = 0xC0;
  5292     0712  30C0               	movlw	192
  5293     0713  0097               	movwf	23	;volatile
  5294     0714                     l1784:
  5295                           
  5296                           ;mcc_generated_files/pwm3.c: 71:     CCPTMRSbits.P3TSEL = 0;
  5297     0714  30CF               	movlw	-49
  5298     0715  0025               	movlb	5	; select bank5
  5299     0716  059E               	andwf	30,f	;volatile
  5300     0717                     l11:
  5301     0717  0008               	return
  5302     0718                     __end_of_PWM3_Initialize:
  5303                           
  5304                           	psect	text19
  5305     05F7                     __ptext19:	
  5306 ;; *************** function _PIN_MANAGER_Initialize *****************
  5307 ;; Defined at:
  5308 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  5309 ;; Parameters:    Size  Location     Type
  5310 ;;		None
  5311 ;; Auto vars:     Size  Location     Type
  5312 ;;		None
  5313 ;; Return value:  Size  Location     Type
  5314 ;;                  1    wreg      void 
  5315 ;; Registers used:
  5316 ;;		wreg, status,2
  5317 ;; Tracked objects:
  5318 ;;		On entry : 0/0
  5319 ;;		On exit  : 0/0
  5320 ;;		Unchanged: 0/0
  5321 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5322 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5323 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5324 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5325 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5326 ;;Total ram usage:        0 bytes
  5327 ;; Hardware stack levels used: 1
  5328 ;; Hardware stack levels required when called: 1
  5329 ;; This function calls:
  5330 ;;		Nothing
  5331 ;; This function is called by:
  5332 ;;		_SYSTEM_Initialize
  5333 ;; This function uses a non-reentrant model
  5334 ;;
  5335                           
  5336     05F7                     _PIN_MANAGER_Initialize:	
  5337                           ;psect for function _PIN_MANAGER_Initialize
  5338                           
  5339     05F7                     l1794:	
  5340                           ;incstack = 0
  5341                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  5342                           
  5343                           
  5344                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  5345     05F7  0022               	movlb	2	; select bank2
  5346     05F8  018C               	clrf	12	;volatile
  5347                           
  5348                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  5349     05F9  018D               	clrf	13	;volatile
  5350                           
  5351                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  5352     05FA  018E               	clrf	14	;volatile
  5353     05FB                     l1796:
  5354                           
  5355                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0x37;
  5356     05FB  3037               	movlw	55
  5357     05FC  0021               	movlb	1	; select bank1
  5358     05FD  008C               	movwf	12	;volatile
  5359     05FE                     l1798:
  5360                           
  5361                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xF0;
  5362     05FE  30F0               	movlw	240
  5363     05FF  008D               	movwf	13	;volatile
  5364     0600                     l1800:
  5365                           
  5366                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xBF;
  5367     0600  30BF               	movlw	191
  5368     0601  008E               	movwf	14	;volatile
  5369     0602                     l1802:
  5370                           
  5371                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0xCF;
  5372     0602  30CF               	movlw	207
  5373     0603  0023               	movlb	3	; select bank3
  5374     0604  008E               	movwf	14	;volatile
  5375     0605                     l1804:
  5376                           
  5377                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0xF0;
  5378     0605  30F0               	movlw	240
  5379     0606  008D               	movwf	13	;volatile
  5380     0607                     l1806:
  5381                           
  5382                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x17;
  5383     0607  3017               	movlw	23
  5384     0608  008C               	movwf	12	;volatile
  5385                           
  5386                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  5387     0609  0024               	movlb	4	; select bank4
  5388     060A  018D               	clrf	13	;volatile
  5389                           
  5390                           ;mcc_generated_files/pin_manager.c: 82:     WPUA = 0x00;
  5391     060B  018C               	clrf	12	;volatile
  5392                           
  5393                           ;mcc_generated_files/pin_manager.c: 83:     WPUC = 0x00;
  5394     060C  018E               	clrf	14	;volatile
  5395     060D                     l1808:
  5396                           
  5397                           ;mcc_generated_files/pin_manager.c: 84:     OPTION_REGbits.nWPUEN = 1;
  5398     060D  0021               	movlb	1	; select bank1
  5399     060E  1795               	bsf	21,7	;volatile
  5400                           
  5401                           ;mcc_generated_files/pin_manager.c: 89:     ODCONA = 0x00;
  5402     060F  0025               	movlb	5	; select bank5
  5403     0610  018C               	clrf	12	;volatile
  5404                           
  5405                           ;mcc_generated_files/pin_manager.c: 90:     ODCONB = 0x00;
  5406     0611  018D               	clrf	13	;volatile
  5407                           
  5408                           ;mcc_generated_files/pin_manager.c: 91:     ODCONC = 0x00;
  5409     0612  018E               	clrf	14	;volatile
  5410     0613                     l1810:
  5411                           
  5412                           ;mcc_generated_files/pin_manager.c: 96:     SLRCONA = 0x37;
  5413     0613  3037               	movlw	55
  5414     0614  0026               	movlb	6	; select bank6
  5415     0615  008C               	movwf	12	;volatile
  5416     0616                     l1812:
  5417                           
  5418                           ;mcc_generated_files/pin_manager.c: 97:     SLRCONB = 0xF0;
  5419     0616  30F0               	movlw	240
  5420     0617  008D               	movwf	13	;volatile
  5421     0618                     l1814:
  5422                           
  5423                           ;mcc_generated_files/pin_manager.c: 98:     SLRCONC = 0xFF;
  5424     0618  30FF               	movlw	255
  5425     0619  008E               	movwf	14	;volatile
  5426     061A                     l1816:
  5427                           
  5428                           ;mcc_generated_files/pin_manager.c: 103:     INLVLA = 0x3F;
  5429     061A  303F               	movlw	63
  5430     061B  0027               	movlb	7	; select bank7
  5431     061C  008C               	movwf	12	;volatile
  5432     061D                     l1818:
  5433                           
  5434                           ;mcc_generated_files/pin_manager.c: 104:     INLVLB = 0xF0;
  5435     061D  30F0               	movlw	240
  5436     061E  008D               	movwf	13	;volatile
  5437     061F                     l1820:
  5438                           
  5439                           ;mcc_generated_files/pin_manager.c: 105:     INLVLC = 0xFF;
  5440     061F  30FF               	movlw	255
  5441     0620  008E               	movwf	14	;volatile
  5442     0621                     l1822:
  5443                           
  5444                           ;mcc_generated_files/pin_manager.c: 114:     RC6PPS = 0x0E;
  5445     0621  300E               	movlw	14
  5446     0622  003D               	movlb	29	; select bank29
  5447     0623  00A6               	movwf	38	;volatile
  5448     0624                     l150:
  5449     0624  0008               	return
  5450     0625                     __end_of_PIN_MANAGER_Initialize:
  5451                           
  5452                           	psect	text20
  5453     0718                     __ptext20:	
  5454 ;; *************** function _OSCILLATOR_Initialize *****************
  5455 ;; Defined at:
  5456 ;;		line 58 in file "mcc_generated_files/mcc.c"
  5457 ;; Parameters:    Size  Location     Type
  5458 ;;		None
  5459 ;; Auto vars:     Size  Location     Type
  5460 ;;		None
  5461 ;; Return value:  Size  Location     Type
  5462 ;;                  1    wreg      void 
  5463 ;; Registers used:
  5464 ;;		wreg, status,2
  5465 ;; Tracked objects:
  5466 ;;		On entry : 0/0
  5467 ;;		On exit  : 0/0
  5468 ;;		Unchanged: 0/0
  5469 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5470 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5471 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5473 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5474 ;;Total ram usage:        0 bytes
  5475 ;; Hardware stack levels used: 1
  5476 ;; Hardware stack levels required when called: 1
  5477 ;; This function calls:
  5478 ;;		Nothing
  5479 ;; This function is called by:
  5480 ;;		_SYSTEM_Initialize
  5481 ;; This function uses a non-reentrant model
  5482 ;;
  5483                           
  5484     0718                     _OSCILLATOR_Initialize:	
  5485                           ;psect for function _OSCILLATOR_Initialize
  5486                           
  5487     0718                     l1824:	
  5488                           ;incstack = 0
  5489                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  5490                           
  5491                           
  5492                           ;mcc_generated_files/mcc.c: 61:     OSCCON = 0x68;
  5493     0718  3068               	movlw	104
  5494     0719  0021               	movlb	1	; select bank1
  5495     071A  0099               	movwf	25	;volatile
  5496     071B                     l1826:
  5497                           
  5498                           ;mcc_generated_files/mcc.c: 63:     OSCTUNE = 0x00;
  5499     071B  0198               	clrf	24	;volatile
  5500     071C                     l1828:
  5501                           
  5502                           ;mcc_generated_files/mcc.c: 65:     BORCON = 0x00;
  5503     071C  0022               	movlb	2	; select bank2
  5504     071D  0196               	clrf	22	;volatile
  5505     071E                     l101:
  5506     071E  0008               	return
  5507     071F                     __end_of_OSCILLATOR_Initialize:
  5508                           
  5509                           	psect	text21
  5510     06BB                     __ptext21:	
  5511 ;; *************** function _PWM3_LoadDutyValue *****************
  5512 ;; Defined at:
  5513 ;;		line 74 in file "mcc_generated_files/pwm3.c"
  5514 ;; Parameters:    Size  Location     Type
  5515 ;;  dutyValue       2    0[COMMON] unsigned short 
  5516 ;; Auto vars:     Size  Location     Type
  5517 ;;		None
  5518 ;; Return value:  Size  Location     Type
  5519 ;;                  1    wreg      void 
  5520 ;; Registers used:
  5521 ;;		wreg, status,2, status,0
  5522 ;; Tracked objects:
  5523 ;;		On entry : 0/0
  5524 ;;		On exit  : 0/0
  5525 ;;		Unchanged: 0/0
  5526 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5527 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5528 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5529 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5530 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5531 ;;Total ram usage:        4 bytes
  5532 ;; Hardware stack levels used: 1
  5533 ;; Hardware stack levels required when called: 1
  5534 ;; This function calls:
  5535 ;;		Nothing
  5536 ;; This function is called by:
  5537 ;;		_main
  5538 ;; This function uses a non-reentrant model
  5539 ;;
  5540                           
  5541     06BB                     _PWM3_LoadDutyValue:	
  5542                           ;psect for function _PWM3_LoadDutyValue
  5543                           
  5544     06BB                     l1902:	
  5545                           ;incstack = 0
  5546                           ; Regs used in _PWM3_LoadDutyValue: [wreg+status,2+status,0]
  5547                           
  5548                           
  5549                           ;mcc_generated_files/pwm3.c: 74:  void PWM3_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm3.c: 75:  {;mcc_generated_files/pwm3.c: 77:      PWM3DCH = (dutyValue & 0x0
      +                          3FC)>>2;
  5550     06BB  0871               	movf	PWM3_LoadDutyValue@dutyValue+1,w
  5551     06BC  00F3               	movwf	??_PWM3_LoadDutyValue+1
  5552     06BD  0870               	movf	PWM3_LoadDutyValue@dutyValue,w
  5553     06BE  00F2               	movwf	??_PWM3_LoadDutyValue
  5554     06BF  36F3               	lsrf	??_PWM3_LoadDutyValue+1,f
  5555     06C0  0CF2               	rrf	??_PWM3_LoadDutyValue,f
  5556     06C1  36F3               	lsrf	??_PWM3_LoadDutyValue+1,f
  5557     06C2  0CF2               	rrf	??_PWM3_LoadDutyValue,f
  5558     06C3  0872               	movf	??_PWM3_LoadDutyValue,w
  5559     06C4  002C               	movlb	12	; select bank12
  5560     06C5  0098               	movwf	24	;volatile
  5561                           
  5562                           ;mcc_generated_files/pwm3.c: 80:      PWM3DCL = (dutyValue & 0x0003)<<6;
  5563     06C6  0870               	movf	PWM3_LoadDutyValue@dutyValue,w
  5564     06C7  3903               	andlw	3
  5565     06C8  00F2               	movwf	??_PWM3_LoadDutyValue
  5566     06C9  3005               	movlw	5
  5567     06CA                     u1335:
  5568     06CA  35F2               	lslf	??_PWM3_LoadDutyValue,f
  5569     06CB  3EFF               	addlw	-1
  5570     06CC  1D03               	skipz
  5571     06CD  2ECA               	goto	u1335
  5572     06CE  3572               	lslf	??_PWM3_LoadDutyValue,w
  5573     06CF  0097               	movwf	23	;volatile
  5574     06D0                     l14:
  5575     06D0  0008               	return
  5576     06D1                     __end_of_PWM3_LoadDutyValue:
  5577                           
  5578                           	psect	text22
  5579     05B6                     __ptext22:	
  5580 ;; *************** function _Lcd_Out2 *****************
  5581 ;; Defined at:
  5582 ;;		line 115 in file "./flex_lcd.h"
  5583 ;; Parameters:    Size  Location     Type
  5584 ;;  y               1    wreg     unsigned char 
  5585 ;;  x               1    3[COMMON] unsigned char 
  5586 ;;  buffer          1    4[COMMON] PTR unsigned char 
  5587 ;;		 -> buffer2(20), buffer1(20), 
  5588 ;; Auto vars:     Size  Location     Type
  5589 ;;  y               1    7[COMMON] unsigned char 
  5590 ;;  data            1    8[COMMON] unsigned char 
  5591 ;; Return value:  Size  Location     Type
  5592 ;;                  1    wreg      void 
  5593 ;; Registers used:
  5594 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5595 ;; Tracked objects:
  5596 ;;		On entry : 0/0
  5597 ;;		On exit  : 0/0
  5598 ;;		Unchanged: 0/0
  5599 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5600 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5601 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5602 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5603 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5604 ;;Total ram usage:        6 bytes
  5605 ;; Hardware stack levels used: 1
  5606 ;; Hardware stack levels required when called: 2
  5607 ;; This function calls:
  5608 ;;		_Lcd_Chr_CP
  5609 ;;		_Lcd_Cmd
  5610 ;; This function is called by:
  5611 ;;		_main
  5612 ;; This function uses a non-reentrant model
  5613 ;;
  5614                           
  5615     05B6                     _Lcd_Out2:	
  5616                           ;psect for function _Lcd_Out2
  5617                           
  5618                           
  5619                           ;incstack = 0
  5620                           ; Regs used in _Lcd_Out2: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5621                           ;Lcd_Out2@y stored from wreg
  5622     05B6  00F7               	movwf	Lcd_Out2@y
  5623     05B7                     l1932:
  5624                           
  5625                           ;./flex_lcd.h: 115: void Lcd_Out2(unsigned char y, unsigned char x, char *buffer);./flex
      +                          _lcd.h: 116: {;./flex_lcd.h: 117: unsigned char data;;./flex_lcd.h: 118: switch (y)
  5626     05B7  2DC8               	goto	l1944
  5627     05B8                     l1934:
  5628     05B8  0873               	movf	Lcd_Out2@x,w
  5629     05B9  3E80               	addlw	128
  5630     05BA  00F8               	movwf	Lcd_Out2@data
  5631     05BB  2DDE               	goto	l1946
  5632     05BC                     l1936:
  5633     05BC  0873               	movf	Lcd_Out2@x,w
  5634     05BD  3EC0               	addlw	192
  5635     05BE  00F8               	movwf	Lcd_Out2@data
  5636     05BF  2DDE               	goto	l1946
  5637     05C0                     l1938:
  5638     05C0  0873               	movf	Lcd_Out2@x,w
  5639     05C1  3E94               	addlw	148
  5640     05C2  00F8               	movwf	Lcd_Out2@data
  5641     05C3  2DDE               	goto	l1946
  5642     05C4                     l1940:
  5643     05C4  0873               	movf	Lcd_Out2@x,w
  5644     05C5  3ED4               	addlw	212
  5645     05C6  00F8               	movwf	Lcd_Out2@data
  5646     05C7  2DDE               	goto	l1946
  5647     05C8                     l1944:
  5648     05C8  0877               	movf	Lcd_Out2@y,w
  5649     05C9  00F5               	movwf	??_Lcd_Out2
  5650     05CA  01F6               	clrf	??_Lcd_Out2+1
  5651                           
  5652                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5653                           ; Switch size 1, requested type "simple"
  5654                           ; Number of cases is 1, Range of values is 0 to 0
  5655                           ; switch strategies available:
  5656                           ; Name         Instructions Cycles
  5657                           ; simple_byte            4     3 (average)
  5658                           ; direct_byte            8     6 (fixed)
  5659                           ; jumptable            260     6 (fixed)
  5660                           ;	Chosen strategy is simple_byte
  5661     05CB  0876               	movf	??_Lcd_Out2+1,w
  5662     05CC  3A00               	xorlw	0	; case 0
  5663     05CD  1903               	skipnz
  5664     05CE  2DD0               	goto	l2118
  5665     05CF  2DDE               	goto	l1946
  5666     05D0                     l2118:
  5667                           
  5668                           ; Switch size 1, requested type "simple"
  5669                           ; Number of cases is 4, Range of values is 1 to 4
  5670                           ; switch strategies available:
  5671                           ; Name         Instructions Cycles
  5672                           ; simple_byte           13     7 (average)
  5673                           ; direct_byte           17     9 (fixed)
  5674                           ; jumptable            263     9 (fixed)
  5675                           ;	Chosen strategy is simple_byte
  5676     05D0  0875               	movf	??_Lcd_Out2,w
  5677     05D1  3A01               	xorlw	1	; case 1
  5678     05D2  1903               	skipnz
  5679     05D3  2DB8               	goto	l1934
  5680     05D4  3A03               	xorlw	3	; case 2
  5681     05D5  1903               	skipnz
  5682     05D6  2DBC               	goto	l1936
  5683     05D7  3A01               	xorlw	1	; case 3
  5684     05D8  1903               	skipnz
  5685     05D9  2DC0               	goto	l1938
  5686     05DA  3A07               	xorlw	7	; case 4
  5687     05DB  1903               	skipnz
  5688     05DC  2DC4               	goto	l1940
  5689     05DD  2DDE               	goto	l1946
  5690     05DE                     l1946:
  5691                           
  5692                           ;./flex_lcd.h: 126: Lcd_Cmd(data);
  5693     05DE  0878               	movf	Lcd_Out2@data,w
  5694     05DF  3183  237C  3185   	fcall	_Lcd_Cmd
  5695                           
  5696                           ;./flex_lcd.h: 127: while(*buffer)
  5697     05E2  2DEE               	goto	l1952
  5698     05E3                     l1948:
  5699                           
  5700                           ;./flex_lcd.h: 128: {;./flex_lcd.h: 129:     Lcd_Chr_CP(*buffer);
  5701     05E3  0874               	movf	Lcd_Out2@buffer,w
  5702     05E4  0086               	movwf	6
  5703     05E5  0187               	clrf	7
  5704     05E6  0801               	movf	1,w
  5705     05E7  3182  22E6  3185   	fcall	_Lcd_Chr_CP
  5706     05EA                     l1950:
  5707                           
  5708                           ;./flex_lcd.h: 130:     buffer++;
  5709     05EA  3001               	movlw	1
  5710     05EB  00F5               	movwf	??_Lcd_Out2
  5711     05EC  0875               	movf	??_Lcd_Out2,w
  5712     05ED  07F4               	addwf	Lcd_Out2@buffer,f
  5713     05EE                     l1952:
  5714                           
  5715                           ;./flex_lcd.h: 127: while(*buffer)
  5716     05EE  0874               	movf	Lcd_Out2@buffer,w
  5717     05EF  0086               	movwf	6
  5718     05F0  0187               	clrf	7
  5719     05F1  0801               	movf	1,w
  5720     05F2  1D03               	btfss	3,2
  5721     05F3  2DF5               	goto	u1351
  5722     05F4  2DF6               	goto	u1350
  5723     05F5                     u1351:
  5724     05F5  2DE3               	goto	l1948
  5725     05F6                     u1350:
  5726     05F6                     l242:
  5727     05F6  0008               	return
  5728     05F7                     __end_of_Lcd_Out2:
  5729                           
  5730                           	psect	text23
  5731     02E6                     __ptext23:	
  5732 ;; *************** function _Lcd_Chr_CP *****************
  5733 ;; Defined at:
  5734 ;;		line 136 in file "./flex_lcd.h"
  5735 ;; Parameters:    Size  Location     Type
  5736 ;;  data            1    wreg     unsigned char 
  5737 ;; Auto vars:     Size  Location     Type
  5738 ;;  data            1    2[COMMON] unsigned char 
  5739 ;; Return value:  Size  Location     Type
  5740 ;;                  1    wreg      void 
  5741 ;; Registers used:
  5742 ;;		wreg, status,2, status,0
  5743 ;; Tracked objects:
  5744 ;;		On entry : 0/0
  5745 ;;		On exit  : 0/0
  5746 ;;		Unchanged: 0/0
  5747 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5748 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5749 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5750 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5751 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5752 ;;Total ram usage:        3 bytes
  5753 ;; Hardware stack levels used: 1
  5754 ;; Hardware stack levels required when called: 1
  5755 ;; This function calls:
  5756 ;;		Nothing
  5757 ;; This function is called by:
  5758 ;;		_Lcd_Out2
  5759 ;;		_Lcd_Out
  5760 ;; This function uses a non-reentrant model
  5761 ;;
  5762                           
  5763     02E6                     _Lcd_Chr_CP:	
  5764                           ;psect for function _Lcd_Chr_CP
  5765                           
  5766                           
  5767                           ;incstack = 0
  5768                           ; Regs used in _Lcd_Chr_CP: [wreg+status,2+status,0]
  5769                           ;Lcd_Chr_CP@data stored from wreg
  5770     02E6  00F2               	movwf	Lcd_Chr_CP@data
  5771     02E7                     l1860:
  5772                           
  5773                           ;./flex_lcd.h: 137: PORTCbits.RC4 = 0; PORTCbits.RC5 = 1;
  5774     02E7  0020               	movlb	0	; select bank0
  5775     02E8  120E               	bcf	14,4	;volatile
  5776     02E9  168E               	bsf	14,5	;volatile
  5777     02EA                     l1862:
  5778                           
  5779                           ;./flex_lcd.h: 138: PORTCbits.RC0 = (data & 0b10000000)>>7; PORTCbits.RC1 = (data & 0b01
      +                          000000)>>6;
  5780     02EA  0872               	movf	Lcd_Chr_CP@data,w
  5781     02EB  00F0               	movwf	??_Lcd_Chr_CP
  5782     02EC  3007               	movlw	7
  5783     02ED                     u1265:
  5784     02ED  36F0               	lsrf	??_Lcd_Chr_CP,f
  5785     02EE  0B89               	decfsz	9,f
  5786     02EF  2AED               	goto	u1265
  5787     02F0  3001               	movlw	1
  5788     02F1  0570               	andwf	??_Lcd_Chr_CP,w
  5789     02F2  00F1               	movwf	??_Lcd_Chr_CP+1
  5790     02F3  080E               	movf	14,w	;volatile
  5791     02F4  0671               	xorwf	??_Lcd_Chr_CP+1,w
  5792     02F5  39FE               	andlw	-2
  5793     02F6  0671               	xorwf	??_Lcd_Chr_CP+1,w
  5794     02F7  008E               	movwf	14	;volatile
  5795     02F8  0872               	movf	Lcd_Chr_CP@data,w
  5796     02F9  00F0               	movwf	??_Lcd_Chr_CP
  5797     02FA  3006               	movlw	6
  5798     02FB                     u1275:
  5799     02FB  36F0               	lsrf	??_Lcd_Chr_CP,f
  5800     02FC  0B89               	decfsz	9,f
  5801     02FD  2AFB               	goto	u1275
  5802     02FE  0870               	movf	??_Lcd_Chr_CP,w
  5803     02FF  3901               	andlw	1
  5804     0300  00F1               	movwf	??_Lcd_Chr_CP+1
  5805     0301  0DF1               	rlf	??_Lcd_Chr_CP+1,f
  5806     0302  080E               	movf	14,w	;volatile
  5807     0303  0671               	xorwf	??_Lcd_Chr_CP+1,w
  5808     0304  39FD               	andlw	-3
  5809     0305  0671               	xorwf	??_Lcd_Chr_CP+1,w
  5810     0306  008E               	movwf	14	;volatile
  5811                           
  5812                           ;./flex_lcd.h: 139: PORTCbits.RC2 = (data & 0b00100000)>>5; PORTCbits.RC3 = (data & 0b00
      +                          010000)>>4;
  5813     0307  0872               	movf	Lcd_Chr_CP@data,w
  5814     0308  00F0               	movwf	??_Lcd_Chr_CP
  5815     0309  3005               	movlw	5
  5816     030A                     u1285:
  5817     030A  36F0               	lsrf	??_Lcd_Chr_CP,f
  5818     030B  0B89               	decfsz	9,f
  5819     030C  2B0A               	goto	u1285
  5820     030D  0870               	movf	??_Lcd_Chr_CP,w
  5821     030E  3901               	andlw	1
  5822     030F  00F1               	movwf	??_Lcd_Chr_CP+1
  5823     0310  0DF1               	rlf	??_Lcd_Chr_CP+1,f
  5824     0311  0DF1               	rlf	??_Lcd_Chr_CP+1,f
  5825     0312  080E               	movf	14,w	;volatile
  5826     0313  0671               	xorwf	??_Lcd_Chr_CP+1,w
  5827     0314  39FB               	andlw	-5
  5828     0315  0671               	xorwf	??_Lcd_Chr_CP+1,w
  5829     0316  008E               	movwf	14	;volatile
  5830     0317  0872               	movf	Lcd_Chr_CP@data,w
  5831     0318  00F0               	movwf	??_Lcd_Chr_CP
  5832     0319  3004               	movlw	4
  5833     031A                     u1295:
  5834     031A  36F0               	lsrf	??_Lcd_Chr_CP,f
  5835     031B  0B89               	decfsz	9,f
  5836     031C  2B1A               	goto	u1295
  5837     031D  0870               	movf	??_Lcd_Chr_CP,w
  5838     031E  3901               	andlw	1
  5839     031F  00F1               	movwf	??_Lcd_Chr_CP+1
  5840     0320  0DF1               	rlf	??_Lcd_Chr_CP+1,f
  5841     0321  0DF1               	rlf	??_Lcd_Chr_CP+1,f
  5842     0322  0DF1               	rlf	??_Lcd_Chr_CP+1,f
  5843     0323  080E               	movf	14,w	;volatile
  5844     0324  0671               	xorwf	??_Lcd_Chr_CP+1,w
  5845     0325  39F7               	andlw	-9
  5846     0326  0671               	xorwf	??_Lcd_Chr_CP+1,w
  5847     0327  008E               	movwf	14	;volatile
  5848     0328                     l1864:
  5849                           
  5850                           ;./flex_lcd.h: 140: _delay(10);
  5851     0328  3003               	movlw	3
  5852     0329                     u1437:
  5853     0329  0B89               	decfsz	9,f
  5854     032A  2B29               	goto	u1437
  5855     032B  0000               	nop
  5856     032C                     l1866:
  5857                           
  5858                           ;./flex_lcd.h: 141: PORTCbits.RC4 = 1; _delay((unsigned long)((5)*(4000000/4000000.0)));
      +                           PORTCbits.RC4 = 0;
  5859     032C  0020               	movlb	0	; select bank0
  5860     032D  160E               	bsf	14,4	;volatile
  5861     032E                     l1868:
  5862     032E  3200               	nop2	;2 cycle nop
  5863     032F  3200               	nop2	;2 cycle nop
  5864     0330  0000               	nop
  5865     0331                     l1870:
  5866     0331  0020               	movlb	0	; select bank0
  5867     0332  120E               	bcf	14,4	;volatile
  5868     0333                     l1872:
  5869                           
  5870                           ;./flex_lcd.h: 142: PORTCbits.RC0 = (data & 0b00001000)>>3; PORTCbits.RC1 = (data & 0b00
      +                          000100)>>2;
  5871     0333  0872               	movf	Lcd_Chr_CP@data,w
  5872     0334  00F0               	movwf	??_Lcd_Chr_CP
  5873     0335  3003               	movlw	3
  5874     0336                     u1305:
  5875     0336  36F0               	lsrf	??_Lcd_Chr_CP,f
  5876     0337  0B89               	decfsz	9,f
  5877     0338  2B36               	goto	u1305
  5878     0339  3001               	movlw	1
  5879     033A  0570               	andwf	??_Lcd_Chr_CP,w
  5880     033B  00F1               	movwf	??_Lcd_Chr_CP+1
  5881     033C  080E               	movf	14,w	;volatile
  5882     033D  0671               	xorwf	??_Lcd_Chr_CP+1,w
  5883     033E  39FE               	andlw	-2
  5884     033F  0671               	xorwf	??_Lcd_Chr_CP+1,w
  5885     0340  008E               	movwf	14	;volatile
  5886     0341                     l1874:
  5887     0341  0872               	movf	Lcd_Chr_CP@data,w
  5888     0342  00F0               	movwf	??_Lcd_Chr_CP
  5889     0343  3002               	movlw	2
  5890     0344                     u1315:
  5891     0344  36F0               	lsrf	??_Lcd_Chr_CP,f
  5892     0345  0B89               	decfsz	9,f
  5893     0346  2B44               	goto	u1315
  5894     0347  0870               	movf	??_Lcd_Chr_CP,w
  5895     0348  3901               	andlw	1
  5896     0349  00F1               	movwf	??_Lcd_Chr_CP+1
  5897     034A  0DF1               	rlf	??_Lcd_Chr_CP+1,f
  5898     034B  080E               	movf	14,w	;volatile
  5899     034C  0671               	xorwf	??_Lcd_Chr_CP+1,w
  5900     034D  39FD               	andlw	-3
  5901     034E  0671               	xorwf	??_Lcd_Chr_CP+1,w
  5902     034F  008E               	movwf	14	;volatile
  5903     0350                     l1876:
  5904                           
  5905                           ;./flex_lcd.h: 143: PORTCbits.RC2 = (data & 0b00000010)>>1; PORTCbits.RC3 = (data & 0b00
      +                          000001);
  5906     0350  3672               	lsrf	Lcd_Chr_CP@data,w
  5907     0351  3901               	andlw	1
  5908     0352  00F0               	movwf	??_Lcd_Chr_CP
  5909     0353  0DF0               	rlf	??_Lcd_Chr_CP,f
  5910     0354  0DF0               	rlf	??_Lcd_Chr_CP,f
  5911     0355  080E               	movf	14,w	;volatile
  5912     0356  0670               	xorwf	??_Lcd_Chr_CP,w
  5913     0357  39FB               	andlw	-5
  5914     0358  0670               	xorwf	??_Lcd_Chr_CP,w
  5915     0359  008E               	movwf	14	;volatile
  5916     035A                     l1878:
  5917     035A  0872               	movf	Lcd_Chr_CP@data,w
  5918     035B  3901               	andlw	1
  5919     035C  00F0               	movwf	??_Lcd_Chr_CP
  5920     035D  0DF0               	rlf	??_Lcd_Chr_CP,f
  5921     035E  0DF0               	rlf	??_Lcd_Chr_CP,f
  5922     035F  0DF0               	rlf	??_Lcd_Chr_CP,f
  5923     0360  080E               	movf	14,w	;volatile
  5924     0361  0670               	xorwf	??_Lcd_Chr_CP,w
  5925     0362  39F7               	andlw	-9
  5926     0363  0670               	xorwf	??_Lcd_Chr_CP,w
  5927     0364  008E               	movwf	14	;volatile
  5928     0365                     l1880:
  5929                           
  5930                           ;./flex_lcd.h: 144: _delay(10);
  5931     0365  3003               	movlw	3
  5932     0366                     u1447:
  5933     0366  0B89               	decfsz	9,f
  5934     0367  2B66               	goto	u1447
  5935     0368  0000               	nop
  5936     0369                     l1882:
  5937                           
  5938                           ;./flex_lcd.h: 145: PORTCbits.RC4 = 1; _delay((unsigned long)((5)*(4000000/4000000.0)));
      +                           PORTCbits.RC4 = 0;
  5939     0369  0020               	movlb	0	; select bank0
  5940     036A  160E               	bsf	14,4	;volatile
  5941     036B                     l1884:
  5942     036B  3200               	nop2	;2 cycle nop
  5943     036C  3200               	nop2	;2 cycle nop
  5944     036D  0000               	nop
  5945     036E                     l1886:
  5946     036E  0020               	movlb	0	; select bank0
  5947     036F  120E               	bcf	14,4	;volatile
  5948     0370                     l1888:
  5949                           
  5950                           ;./flex_lcd.h: 146: _delay((unsigned long)((5)*(4000000/4000000.0))); _delay((unsigned l
      +                          ong)((5500)*(4000000/4000000.0)));
  5951     0370  3200               	nop2	;2 cycle nop
  5952     0371  3200               	nop2	;2 cycle nop
  5953     0372  0000               	nop
  5954     0373                     l1890:
  5955     0373  3008               	movlw	8
  5956     0374  00F0               	movwf	??_Lcd_Chr_CP
  5957     0375  3023               	movlw	35
  5958     0376                     u1457:
  5959     0376  0B89               	decfsz	9,f
  5960     0377  2B76               	goto	u1457
  5961     0378  0BF0               	decfsz	??_Lcd_Chr_CP,f
  5962     0379  2B76               	goto	u1457
  5963     037A  0000               	nop
  5964     037B                     l245:
  5965     037B  0008               	return
  5966     037C                     __end_of_Lcd_Chr_CP:
  5967                           
  5968                           	psect	text24
  5969     024D                     __ptext24:	
  5970 ;; *************** function _Lcd_Init *****************
  5971 ;; Defined at:
  5972 ;;		line 52 in file "./flex_lcd.h"
  5973 ;; Parameters:    Size  Location     Type
  5974 ;;		None
  5975 ;; Auto vars:     Size  Location     Type
  5976 ;;  data            1    4[COMMON] unsigned char 
  5977 ;; Return value:  Size  Location     Type
  5978 ;;                  1    wreg      void 
  5979 ;; Registers used:
  5980 ;;		wreg, status,2, status,0, pclath, cstack
  5981 ;; Tracked objects:
  5982 ;;		On entry : 0/0
  5983 ;;		On exit  : 0/0
  5984 ;;		Unchanged: 0/0
  5985 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5986 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5987 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5988 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5989 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5990 ;;Total ram usage:        2 bytes
  5991 ;; Hardware stack levels used: 1
  5992 ;; Hardware stack levels required when called: 2
  5993 ;; This function calls:
  5994 ;;		_Lcd_Cmd
  5995 ;; This function is called by:
  5996 ;;		_main
  5997 ;; This function uses a non-reentrant model
  5998 ;;
  5999                           
  6000     024D                     _Lcd_Init:	
  6001                           ;psect for function _Lcd_Init
  6002                           
  6003     024D                     l1906:	
  6004                           ;incstack = 0
  6005                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  6006                           
  6007                           
  6008                           ;./flex_lcd.h: 53: unsigned char data;;./flex_lcd.h: 54: TRISCbits.TRISC0 = 0;
  6009     024D  0021               	movlb	1	; select bank1
  6010     024E  100E               	bcf	14,0	;volatile
  6011                           
  6012                           ;./flex_lcd.h: 55: TRISCbits.TRISC1 = 0;
  6013     024F  108E               	bcf	14,1	;volatile
  6014                           
  6015                           ;./flex_lcd.h: 56: TRISCbits.TRISC2 = 0;
  6016     0250  110E               	bcf	14,2	;volatile
  6017                           
  6018                           ;./flex_lcd.h: 57: TRISCbits.TRISC3 = 0;
  6019     0251  118E               	bcf	14,3	;volatile
  6020                           
  6021                           ;./flex_lcd.h: 58: TRISCbits.TRISC4 = 0;
  6022     0252  120E               	bcf	14,4	;volatile
  6023                           
  6024                           ;./flex_lcd.h: 59: TRISCbits.TRISC5 = 0;
  6025     0253  128E               	bcf	14,5	;volatile
  6026                           
  6027                           ;./flex_lcd.h: 60: PORTCbits.RC0 = 0;
  6028     0254  0020               	movlb	0	; select bank0
  6029     0255  100E               	bcf	14,0	;volatile
  6030                           
  6031                           ;./flex_lcd.h: 61: PORTCbits.RC1 = 0;
  6032     0256  108E               	bcf	14,1	;volatile
  6033                           
  6034                           ;./flex_lcd.h: 62: PORTCbits.RC2 = 0;
  6035     0257  110E               	bcf	14,2	;volatile
  6036                           
  6037                           ;./flex_lcd.h: 63: PORTCbits.RC3 = 0;
  6038     0258  118E               	bcf	14,3	;volatile
  6039                           
  6040                           ;./flex_lcd.h: 64: PORTCbits.RC4 = 0;
  6041     0259  120E               	bcf	14,4	;volatile
  6042                           
  6043                           ;./flex_lcd.h: 65: PORTCbits.RC5 = 0;
  6044     025A  128E               	bcf	14,5	;volatile
  6045     025B                     l1908:
  6046                           
  6047                           ;./flex_lcd.h: 66: _delay((unsigned long)((5500)*(4000000/4000000.0)));
  6048     025B  3008               	movlw	8
  6049     025C  00F3               	movwf	??_Lcd_Init
  6050     025D  3023               	movlw	35
  6051     025E                     u1467:
  6052     025E  0B89               	decfsz	9,f
  6053     025F  2A5E               	goto	u1467
  6054     0260  0BF3               	decfsz	??_Lcd_Init,f
  6055     0261  2A5E               	goto	u1467
  6056     0262  0000               	nop
  6057                           
  6058                           ;./flex_lcd.h: 67: _delay((unsigned long)((5500)*(4000000/4000000.0)));
  6059     0263  3008               	movlw	8
  6060     0264  00F3               	movwf	??_Lcd_Init
  6061     0265  3023               	movlw	35
  6062     0266                     u1477:
  6063     0266  0B89               	decfsz	9,f
  6064     0267  2A66               	goto	u1477
  6065     0268  0BF3               	decfsz	??_Lcd_Init,f
  6066     0269  2A66               	goto	u1477
  6067     026A  0000               	nop
  6068                           
  6069                           ;./flex_lcd.h: 68: _delay((unsigned long)((5500)*(4000000/4000000.0)));
  6070     026B  3008               	movlw	8
  6071     026C  00F3               	movwf	??_Lcd_Init
  6072     026D  3023               	movlw	35
  6073     026E                     u1487:
  6074     026E  0B89               	decfsz	9,f
  6075     026F  2A6E               	goto	u1487
  6076     0270  0BF3               	decfsz	??_Lcd_Init,f
  6077     0271  2A6E               	goto	u1487
  6078     0272  0000               	nop
  6079                           
  6080                           ;./flex_lcd.h: 69: _delay((unsigned long)((5500)*(4000000/4000000.0)));
  6081     0273  3008               	movlw	8
  6082     0274  00F3               	movwf	??_Lcd_Init
  6083     0275  3023               	movlw	35
  6084     0276                     u1497:
  6085     0276  0B89               	decfsz	9,f
  6086     0277  2A76               	goto	u1497
  6087     0278  0BF3               	decfsz	??_Lcd_Init,f
  6088     0279  2A76               	goto	u1497
  6089     027A  0000               	nop
  6090                           
  6091                           ;./flex_lcd.h: 70: _delay((unsigned long)((5500)*(4000000/4000000.0)));
  6092     027B  3008               	movlw	8
  6093     027C  00F3               	movwf	??_Lcd_Init
  6094     027D  3023               	movlw	35
  6095     027E                     u1507:
  6096     027E  0B89               	decfsz	9,f
  6097     027F  2A7E               	goto	u1507
  6098     0280  0BF3               	decfsz	??_Lcd_Init,f
  6099     0281  2A7E               	goto	u1507
  6100     0282  0000               	nop
  6101                           
  6102                           ;./flex_lcd.h: 71: _delay((unsigned long)((5500)*(4000000/4000000.0)));
  6103     0283  3008               	movlw	8
  6104     0284  00F3               	movwf	??_Lcd_Init
  6105     0285  3023               	movlw	35
  6106     0286                     u1517:
  6107     0286  0B89               	decfsz	9,f
  6108     0287  2A86               	goto	u1517
  6109     0288  0BF3               	decfsz	??_Lcd_Init,f
  6110     0289  2A86               	goto	u1517
  6111     028A  0000               	nop
  6112     028B                     l1910:
  6113                           
  6114                           ;./flex_lcd.h: 72: for(data = 1; data < 4; data ++)
  6115     028B  01F4               	clrf	Lcd_Init@data
  6116     028C  0AF4               	incf	Lcd_Init@data,f
  6117     028D                     l214:
  6118                           
  6119                           ;./flex_lcd.h: 73: {;./flex_lcd.h: 74:     PORTCbits.RC0 = 0; PORTCbits.RC1 = 0; PORTCbi
      +                          ts.RC2 = 1; PORTCbits.RC3 = 1; PORTCbits.RC4 = 0;
  6120     028D  0020               	movlb	0	; select bank0
  6121     028E  100E               	bcf	14,0	;volatile
  6122     028F  108E               	bcf	14,1	;volatile
  6123     0290  150E               	bsf	14,2	;volatile
  6124     0291  158E               	bsf	14,3	;volatile
  6125     0292  120E               	bcf	14,4	;volatile
  6126                           
  6127                           ;./flex_lcd.h: 75:     PORTCbits.RC5 = 0; PORTCbits.RC0 = 0; PORTCbits.RC1 = 0; PORTCbit
      +                          s.RC2 = 1; PORTCbits.RC3 = 1;
  6128     0293  128E               	bcf	14,5	;volatile
  6129     0294  100E               	bcf	14,0	;volatile
  6130     0295  108E               	bcf	14,1	;volatile
  6131     0296  150E               	bsf	14,2	;volatile
  6132     0297  158E               	bsf	14,3	;volatile
  6133                           
  6134                           ;./flex_lcd.h: 76:     PORTCbits.RC4 = 1; PORTCbits.RC5 = 0;
  6135     0298  160E               	bsf	14,4	;volatile
  6136     0299  128E               	bcf	14,5	;volatile
  6137                           
  6138                           ;./flex_lcd.h: 77:     _delay((unsigned long)((5)*(4000000/4000000.0)));
  6139     029A  3200               	nop2	;2 cycle nop
  6140     029B  3200               	nop2	;2 cycle nop
  6141     029C  0000               	nop
  6142                           
  6143                           ;./flex_lcd.h: 78:     PORTCbits.RC0 = 0; PORTCbits.RC1 = 0; PORTCbits.RC2 = 1; PORTCbit
      +                          s.RC3 = 1; PORTCbits.RC4 = 0;
  6144     029D  0020               	movlb	0	; select bank0
  6145     029E  100E               	bcf	14,0	;volatile
  6146     029F  108E               	bcf	14,1	;volatile
  6147     02A0  150E               	bsf	14,2	;volatile
  6148     02A1  158E               	bsf	14,3	;volatile
  6149     02A2  120E               	bcf	14,4	;volatile
  6150                           
  6151                           ;./flex_lcd.h: 79:     PORTCbits.RC5 = 0;
  6152     02A3  128E               	bcf	14,5	;volatile
  6153     02A4                     l1914:
  6154                           
  6155                           ;./flex_lcd.h: 80:     _delay((unsigned long)((5500)*(4000000/4000000.0)));
  6156     02A4  3008               	movlw	8
  6157     02A5  00F3               	movwf	??_Lcd_Init
  6158     02A6  3023               	movlw	35
  6159     02A7                     u1527:
  6160     02A7  0B89               	decfsz	9,f
  6161     02A8  2AA7               	goto	u1527
  6162     02A9  0BF3               	decfsz	??_Lcd_Init,f
  6163     02AA  2AA7               	goto	u1527
  6164     02AB  0000               	nop
  6165     02AC                     l1916:
  6166                           
  6167                           ;./flex_lcd.h: 81: }
  6168     02AC  3001               	movlw	1
  6169     02AD  00F3               	movwf	??_Lcd_Init
  6170     02AE  0873               	movf	??_Lcd_Init,w
  6171     02AF  07F4               	addwf	Lcd_Init@data,f
  6172     02B0                     l1918:
  6173     02B0  3004               	movlw	4
  6174     02B1  0274               	subwf	Lcd_Init@data,w
  6175     02B2  1C03               	skipc
  6176     02B3  2AB5               	goto	u1341
  6177     02B4  2AB6               	goto	u1340
  6178     02B5                     u1341:
  6179     02B5  2A8D               	goto	l214
  6180     02B6                     u1340:
  6181     02B6                     l215:
  6182                           
  6183                           ;./flex_lcd.h: 82: PORTCbits.RC0 = 0; PORTCbits.RC1 = 0; PORTCbits.RC2 = 1; PORTCbits.RC
      +                          3 = 0; PORTCbits.RC4 = 0; PORTCbits.RC5 = 0;
  6184     02B6  0020               	movlb	0	; select bank0
  6185     02B7  100E               	bcf	14,0	;volatile
  6186     02B8  108E               	bcf	14,1	;volatile
  6187     02B9  150E               	bsf	14,2	;volatile
  6188     02BA  118E               	bcf	14,3	;volatile
  6189     02BB  120E               	bcf	14,4	;volatile
  6190     02BC  128E               	bcf	14,5	;volatile
  6191                           
  6192                           ;./flex_lcd.h: 83: PORTCbits.RC0 = 0; PORTCbits.RC1 = 0; PORTCbits.RC2 = 1; PORTCbits.RC
      +                          3 = 0; PORTCbits.RC4 = 1; PORTCbits.RC5 = 0;
  6193     02BD  100E               	bcf	14,0	;volatile
  6194     02BE  108E               	bcf	14,1	;volatile
  6195     02BF  150E               	bsf	14,2	;volatile
  6196     02C0  118E               	bcf	14,3	;volatile
  6197     02C1  160E               	bsf	14,4	;volatile
  6198     02C2  128E               	bcf	14,5	;volatile
  6199                           
  6200                           ;./flex_lcd.h: 84: _delay((unsigned long)((5)*(4000000/4000000.0)));
  6201     02C3  3200               	nop2	;2 cycle nop
  6202     02C4  3200               	nop2	;2 cycle nop
  6203     02C5  0000               	nop
  6204                           
  6205                           ;./flex_lcd.h: 85: PORTCbits.RC0 = 0; PORTCbits.RC1 = 0; PORTCbits.RC2 = 1; PORTCbits.RC
      +                          3 = 0; PORTCbits.RC4 = 0; PORTCbits.RC5 = 0;
  6206     02C6  0020               	movlb	0	; select bank0
  6207     02C7  100E               	bcf	14,0	;volatile
  6208     02C8  108E               	bcf	14,1	;volatile
  6209     02C9  150E               	bsf	14,2	;volatile
  6210     02CA  118E               	bcf	14,3	;volatile
  6211     02CB  120E               	bcf	14,4	;volatile
  6212     02CC  128E               	bcf	14,5	;volatile
  6213     02CD                     l1920:
  6214                           
  6215                           ;./flex_lcd.h: 86: _delay((unsigned long)((5500)*(4000000/4000000.0)));
  6216     02CD  3008               	movlw	8
  6217     02CE  00F3               	movwf	??_Lcd_Init
  6218     02CF  3023               	movlw	35
  6219     02D0                     u1537:
  6220     02D0  0B89               	decfsz	9,f
  6221     02D1  2AD0               	goto	u1537
  6222     02D2  0BF3               	decfsz	??_Lcd_Init,f
  6223     02D3  2AD0               	goto	u1537
  6224     02D4  0000               	nop
  6225     02D5                     l1922:
  6226     02D5  3028               	movlw	40
  6227     02D6  3183  237C  3182   	fcall	_Lcd_Cmd
  6228     02D9                     l1924:
  6229     02D9  3010               	movlw	16
  6230     02DA  3183  237C  3182   	fcall	_Lcd_Cmd
  6231     02DD                     l1926:
  6232     02DD  3001               	movlw	1
  6233     02DE  3183  237C  3182   	fcall	_Lcd_Cmd
  6234     02E1                     l1928:
  6235     02E1                     l1930:
  6236     02E1  300F               	movlw	15
  6237     02E2  3183  237C  3182   	fcall	_Lcd_Cmd
  6238     02E5                     l216:
  6239     02E5  0008               	return
  6240     02E6                     __end_of_Lcd_Init:
  6241                           
  6242                           	psect	text25
  6243     037C                     __ptext25:	
  6244 ;; *************** function _Lcd_Cmd *****************
  6245 ;; Defined at:
  6246 ;;		line 150 in file "./flex_lcd.h"
  6247 ;; Parameters:    Size  Location     Type
  6248 ;;  data            1    wreg     unsigned char 
  6249 ;; Auto vars:     Size  Location     Type
  6250 ;;  data            1    2[COMMON] unsigned char 
  6251 ;; Return value:  Size  Location     Type
  6252 ;;                  1    wreg      void 
  6253 ;; Registers used:
  6254 ;;		wreg, status,2, status,0
  6255 ;; Tracked objects:
  6256 ;;		On entry : 0/0
  6257 ;;		On exit  : 0/0
  6258 ;;		Unchanged: 0/0
  6259 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6260 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6261 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6262 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6263 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6264 ;;Total ram usage:        3 bytes
  6265 ;; Hardware stack levels used: 1
  6266 ;; Hardware stack levels required when called: 1
  6267 ;; This function calls:
  6268 ;;		Nothing
  6269 ;; This function is called by:
  6270 ;;		_Lcd_Init
  6271 ;;		_Lcd_Out2
  6272 ;;		_main
  6273 ;;		_Lcd_Out
  6274 ;; This function uses a non-reentrant model
  6275 ;;
  6276                           
  6277     037C                     _Lcd_Cmd:	
  6278                           ;psect for function _Lcd_Cmd
  6279                           
  6280                           
  6281                           ;incstack = 0
  6282                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0]
  6283                           ;Lcd_Cmd@data stored from wreg
  6284     037C  00F2               	movwf	Lcd_Cmd@data
  6285     037D                     l1830:
  6286                           
  6287                           ;./flex_lcd.h: 151: PORTCbits.RC4 = 0; PORTCbits.RC5 = 0;
  6288     037D  0020               	movlb	0	; select bank0
  6289     037E  120E               	bcf	14,4	;volatile
  6290     037F  128E               	bcf	14,5	;volatile
  6291     0380                     l1832:
  6292                           
  6293                           ;./flex_lcd.h: 152: PORTCbits.RC0 = (data & 0b10000000)>>7; PORTCbits.RC1 = (data & 0b01
      +                          000000)>>6;
  6294     0380  0872               	movf	Lcd_Cmd@data,w
  6295     0381  00F0               	movwf	??_Lcd_Cmd
  6296     0382  3007               	movlw	7
  6297     0383                     u1205:
  6298     0383  36F0               	lsrf	??_Lcd_Cmd,f
  6299     0384  0B89               	decfsz	9,f
  6300     0385  2B83               	goto	u1205
  6301     0386  3001               	movlw	1
  6302     0387  0570               	andwf	??_Lcd_Cmd,w
  6303     0388  00F1               	movwf	??_Lcd_Cmd+1
  6304     0389  080E               	movf	14,w	;volatile
  6305     038A  0671               	xorwf	??_Lcd_Cmd+1,w
  6306     038B  39FE               	andlw	-2
  6307     038C  0671               	xorwf	??_Lcd_Cmd+1,w
  6308     038D  008E               	movwf	14	;volatile
  6309     038E  0872               	movf	Lcd_Cmd@data,w
  6310     038F  00F0               	movwf	??_Lcd_Cmd
  6311     0390  3006               	movlw	6
  6312     0391                     u1215:
  6313     0391  36F0               	lsrf	??_Lcd_Cmd,f
  6314     0392  0B89               	decfsz	9,f
  6315     0393  2B91               	goto	u1215
  6316     0394  0870               	movf	??_Lcd_Cmd,w
  6317     0395  3901               	andlw	1
  6318     0396  00F1               	movwf	??_Lcd_Cmd+1
  6319     0397  0DF1               	rlf	??_Lcd_Cmd+1,f
  6320     0398  080E               	movf	14,w	;volatile
  6321     0399  0671               	xorwf	??_Lcd_Cmd+1,w
  6322     039A  39FD               	andlw	-3
  6323     039B  0671               	xorwf	??_Lcd_Cmd+1,w
  6324     039C  008E               	movwf	14	;volatile
  6325                           
  6326                           ;./flex_lcd.h: 153: PORTCbits.RC2 = (data & 0b00100000)>>5; PORTCbits.RC3 = (data & 0b00
      +                          010000)>>4;
  6327     039D  0872               	movf	Lcd_Cmd@data,w
  6328     039E  00F0               	movwf	??_Lcd_Cmd
  6329     039F  3005               	movlw	5
  6330     03A0                     u1225:
  6331     03A0  36F0               	lsrf	??_Lcd_Cmd,f
  6332     03A1  0B89               	decfsz	9,f
  6333     03A2  2BA0               	goto	u1225
  6334     03A3  0870               	movf	??_Lcd_Cmd,w
  6335     03A4  3901               	andlw	1
  6336     03A5  00F1               	movwf	??_Lcd_Cmd+1
  6337     03A6  0DF1               	rlf	??_Lcd_Cmd+1,f
  6338     03A7  0DF1               	rlf	??_Lcd_Cmd+1,f
  6339     03A8  080E               	movf	14,w	;volatile
  6340     03A9  0671               	xorwf	??_Lcd_Cmd+1,w
  6341     03AA  39FB               	andlw	-5
  6342     03AB  0671               	xorwf	??_Lcd_Cmd+1,w
  6343     03AC  008E               	movwf	14	;volatile
  6344     03AD  0872               	movf	Lcd_Cmd@data,w
  6345     03AE  00F0               	movwf	??_Lcd_Cmd
  6346     03AF  3004               	movlw	4
  6347     03B0                     u1235:
  6348     03B0  36F0               	lsrf	??_Lcd_Cmd,f
  6349     03B1  0B89               	decfsz	9,f
  6350     03B2  2BB0               	goto	u1235
  6351     03B3  0870               	movf	??_Lcd_Cmd,w
  6352     03B4  3901               	andlw	1
  6353     03B5  00F1               	movwf	??_Lcd_Cmd+1
  6354     03B6  0DF1               	rlf	??_Lcd_Cmd+1,f
  6355     03B7  0DF1               	rlf	??_Lcd_Cmd+1,f
  6356     03B8  0DF1               	rlf	??_Lcd_Cmd+1,f
  6357     03B9  080E               	movf	14,w	;volatile
  6358     03BA  0671               	xorwf	??_Lcd_Cmd+1,w
  6359     03BB  39F7               	andlw	-9
  6360     03BC  0671               	xorwf	??_Lcd_Cmd+1,w
  6361     03BD  008E               	movwf	14	;volatile
  6362     03BE                     l1834:
  6363                           
  6364                           ;./flex_lcd.h: 154: _delay(10);
  6365     03BE  3003               	movlw	3
  6366     03BF                     u1547:
  6367     03BF  0B89               	decfsz	9,f
  6368     03C0  2BBF               	goto	u1547
  6369     03C1  0000               	nop
  6370     03C2                     l1836:
  6371                           
  6372                           ;./flex_lcd.h: 155: PORTCbits.RC4 = 1; _delay((unsigned long)((5)*(4000000/4000000.0)));
      +                           PORTCbits.RC4 = 0;
  6373     03C2  0020               	movlb	0	; select bank0
  6374     03C3  160E               	bsf	14,4	;volatile
  6375     03C4                     l1838:
  6376     03C4  3200               	nop2	;2 cycle nop
  6377     03C5  3200               	nop2	;2 cycle nop
  6378     03C6  0000               	nop
  6379     03C7                     l1840:
  6380     03C7  0020               	movlb	0	; select bank0
  6381     03C8  120E               	bcf	14,4	;volatile
  6382     03C9                     l1842:
  6383                           
  6384                           ;./flex_lcd.h: 156: PORTCbits.RC0 = (data & 0b00001000)>>3; PORTCbits.RC1 = (data & 0b00
      +                          000100)>>2;
  6385     03C9  0872               	movf	Lcd_Cmd@data,w
  6386     03CA  00F0               	movwf	??_Lcd_Cmd
  6387     03CB  3003               	movlw	3
  6388     03CC                     u1245:
  6389     03CC  36F0               	lsrf	??_Lcd_Cmd,f
  6390     03CD  0B89               	decfsz	9,f
  6391     03CE  2BCC               	goto	u1245
  6392     03CF  3001               	movlw	1
  6393     03D0  0570               	andwf	??_Lcd_Cmd,w
  6394     03D1  00F1               	movwf	??_Lcd_Cmd+1
  6395     03D2  080E               	movf	14,w	;volatile
  6396     03D3  0671               	xorwf	??_Lcd_Cmd+1,w
  6397     03D4  39FE               	andlw	-2
  6398     03D5  0671               	xorwf	??_Lcd_Cmd+1,w
  6399     03D6  008E               	movwf	14	;volatile
  6400     03D7                     l1844:
  6401     03D7  0872               	movf	Lcd_Cmd@data,w
  6402     03D8  00F0               	movwf	??_Lcd_Cmd
  6403     03D9  3002               	movlw	2
  6404     03DA                     u1255:
  6405     03DA  36F0               	lsrf	??_Lcd_Cmd,f
  6406     03DB  0B89               	decfsz	9,f
  6407     03DC  2BDA               	goto	u1255
  6408     03DD  0870               	movf	??_Lcd_Cmd,w
  6409     03DE  3901               	andlw	1
  6410     03DF  00F1               	movwf	??_Lcd_Cmd+1
  6411     03E0  0DF1               	rlf	??_Lcd_Cmd+1,f
  6412     03E1  080E               	movf	14,w	;volatile
  6413     03E2  0671               	xorwf	??_Lcd_Cmd+1,w
  6414     03E3  39FD               	andlw	-3
  6415     03E4  0671               	xorwf	??_Lcd_Cmd+1,w
  6416     03E5  008E               	movwf	14	;volatile
  6417     03E6                     l1846:
  6418                           
  6419                           ;./flex_lcd.h: 157: PORTCbits.RC2 = (data & 0b00000010)>>1; PORTCbits.RC3 = (data & 0b00
      +                          000001);
  6420     03E6  3672               	lsrf	Lcd_Cmd@data,w
  6421     03E7  3901               	andlw	1
  6422     03E8  00F0               	movwf	??_Lcd_Cmd
  6423     03E9  0DF0               	rlf	??_Lcd_Cmd,f
  6424     03EA  0DF0               	rlf	??_Lcd_Cmd,f
  6425     03EB  080E               	movf	14,w	;volatile
  6426     03EC  0670               	xorwf	??_Lcd_Cmd,w
  6427     03ED  39FB               	andlw	-5
  6428     03EE  0670               	xorwf	??_Lcd_Cmd,w
  6429     03EF  008E               	movwf	14	;volatile
  6430     03F0                     l1848:
  6431     03F0  0872               	movf	Lcd_Cmd@data,w
  6432     03F1  3901               	andlw	1
  6433     03F2  00F0               	movwf	??_Lcd_Cmd
  6434     03F3  0DF0               	rlf	??_Lcd_Cmd,f
  6435     03F4  0DF0               	rlf	??_Lcd_Cmd,f
  6436     03F5  0DF0               	rlf	??_Lcd_Cmd,f
  6437     03F6  080E               	movf	14,w	;volatile
  6438     03F7  0670               	xorwf	??_Lcd_Cmd,w
  6439     03F8  39F7               	andlw	-9
  6440     03F9  0670               	xorwf	??_Lcd_Cmd,w
  6441     03FA  008E               	movwf	14	;volatile
  6442     03FB                     l1850:
  6443                           
  6444                           ;./flex_lcd.h: 158: _delay(10);
  6445     03FB  3003               	movlw	3
  6446     03FC                     u1557:
  6447     03FC  0B89               	decfsz	9,f
  6448     03FD  2BFC               	goto	u1557
  6449     03FE  0000               	nop
  6450     03FF                     l1852:
  6451                           
  6452                           ;./flex_lcd.h: 159: PORTCbits.RC4 = 1; _delay((unsigned long)((5)*(4000000/4000000.0)));
      +                           PORTCbits.RC4 = 0;
  6453     03FF  0020               	movlb	0	; select bank0
  6454     0400  160E               	bsf	14,4	;volatile
  6455     0401                     l1854:
  6456     0401  3200               	nop2	;2 cycle nop
  6457     0402  3200               	nop2	;2 cycle nop
  6458     0403  0000               	nop
  6459     0404                     l1856:
  6460     0404  0020               	movlb	0	; select bank0
  6461     0405  120E               	bcf	14,4	;volatile
  6462     0406                     l1858:
  6463                           
  6464                           ;./flex_lcd.h: 160: _delay((unsigned long)((5500)*(4000000/4000000.0)));
  6465     0406  3008               	movlw	8
  6466     0407  00F0               	movwf	??_Lcd_Cmd
  6467     0408  3023               	movlw	35
  6468     0409                     u1567:
  6469     0409  0B89               	decfsz	9,f
  6470     040A  2C09               	goto	u1567
  6471     040B  0BF0               	decfsz	??_Lcd_Cmd,f
  6472     040C  2C09               	goto	u1567
  6473     040D  0000               	nop
  6474     040E                     l248:
  6475     040E  0008               	return
  6476     040F                     __end_of_Lcd_Cmd:
  6477                           
  6478                           	psect	intentry
  6479     0004                     __pintentry:	
  6480 ;; *************** function _ISR_TIMER0 *****************
  6481 ;; Defined at:
  6482 ;;		line 32 in file "main.c"
  6483 ;; Parameters:    Size  Location     Type
  6484 ;;		None
  6485 ;; Auto vars:     Size  Location     Type
  6486 ;;		None
  6487 ;; Return value:  Size  Location     Type
  6488 ;;                  1    wreg      void 
  6489 ;; Registers used:
  6490 ;;		wreg, status,2, status,0
  6491 ;; Tracked objects:
  6492 ;;		On entry : 0/0
  6493 ;;		On exit  : 0/0
  6494 ;;		Unchanged: 0/0
  6495 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6496 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6497 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6498 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6499 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6500 ;;Total ram usage:        0 bytes
  6501 ;; Hardware stack levels used: 1
  6502 ;; This function calls:
  6503 ;;		Nothing
  6504 ;; This function is called by:
  6505 ;;		Interrupt level 1
  6506 ;; This function uses a non-reentrant model
  6507 ;;
  6508                           
  6509     0004                     _ISR_TIMER0:
  6510                           
  6511                           ;incstack = 0
  6512     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  6513                           
  6514                           ; Regs used in _ISR_TIMER0: [wreg+status,2+status,0]
  6515     0005  3180               	pagesel	$
  6516     0006                     i1l2004:
  6517                           
  6518                           ;main.c: 33:     OSCCONbits.SCS = 0b00;
  6519     0006  1D0B               	btfss	11,2	;volatile
  6520     0007  2809               	goto	u137_21
  6521     0008  280A               	goto	u137_20
  6522     0009                     u137_21:
  6523     0009  2826               	goto	i1l272
  6524     000A                     u137_20:
  6525     000A                     i1l2006:
  6526                           
  6527                           ;main.c: 34:     OSCTUNE = 0;
  6528     000A  1003               	clrc
  6529     000B  0022               	movlb	2	; select bank2
  6530     000C  1E0D               	btfss	13,4	;volatile
  6531     000D  1403               	setc
  6532     000E  1803               	btfsc	3,0
  6533     000F  2811               	goto	u138_21
  6534     0010  2814               	goto	u138_20
  6535     0011                     u138_21:
  6536     0011  0022               	movlb	2	; select bank2
  6537     0012  160D               	bsf	13,4	;volatile
  6538     0013  2816               	goto	u139_24
  6539     0014                     u138_20:
  6540     0014  0022               	movlb	2	; select bank2
  6541     0015  120D               	bcf	13,4	;volatile
  6542     0016                     u139_24:
  6543     0016                     i1l2008:
  6544                           
  6545                           ;main.c: 35: 
  6546     0016  0020               	movlb	0	; select bank0
  6547     0017  0816               	movf	22,w	;volatile
  6548     0018  0021               	movlb	1	; select bank1
  6549     0019  00A0               	movwf	_counter^(0+128)
  6550     001A  0020               	movlb	0	; select bank0
  6551     001B  0817               	movf	23,w	;volatile
  6552     001C  0021               	movlb	1	; select bank1
  6553     001D  00A1               	movwf	(_counter^(0+128)+1)
  6554     001E  01A2               	clrf	(_counter^(0+128)+2)
  6555     001F  01A3               	clrf	(_counter^(0+128)+3)
  6556     0020                     i1l2010:
  6557                           
  6558                           ;main.c: 36: 
  6559     0020  307D               	movlw	125
  6560     0021  0020               	movlb	0	; select bank0
  6561     0022  0095               	movwf	21	;volatile
  6562     0023                     i1l2012:
  6563                           
  6564                           ;main.c: 37:     ANSELA = 0b00000000;
  6565     0023  0196               	clrf	22	;volatile
  6566     0024  0197               	clrf	23	;volatile
  6567     0025                     i1l2014:
  6568                           
  6569                           ;main.c: 38:     ANSELB = 0b00000000;
  6570     0025  110B               	bcf	11,2	;volatile
  6571     0026                     i1l272:
  6572     0026  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  6573     0027  0009               	retfie
  6574     0028                     __end_of_ISR_TIMER0:
  6575     007E                     btemp	set	126	;btemp
  6576     007E                     int$flags	set	126
  6577     007E                     wtemp0	set	126
  6578                           
  6579                           	psect	config
  6580                           
  6581                           ;Config register CONFIG1 @ 0x8007
  6582                           ;	Oscillator Selection Bits
  6583                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  6584                           ;	Power-up Timer Enable
  6585                           ;	PWRTE = ON, PWRT enabled
  6586                           ;	MCLR Pin Function Select
  6587                           ;	MCLRE = OFF, MCLR/VPP pin function is digital input
  6588                           ;	Flash Program Memory Code Protection
  6589                           ;	CP = OFF, Program memory code protection is disabled
  6590                           ;	Brown-out Reset Enable
  6591                           ;	BOREN = ON, Brown-out Reset enabled
  6592                           ;	Clock Out Enable
  6593                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  6594                           ;	Internal/External Switch Over
  6595                           ;	IESO = ON, Internal External Switch Over mode is enabled
  6596                           ;	Fail-Safe Clock Monitor Enable
  6597                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  6598     8007                     	org	32775
  6599     8007  3F9C               	dw	16284
  6600                           
  6601                           ;Config register CONFIG2 @ 0x8008
  6602                           ;	Flash Memory Self-Write Protection
  6603                           ;	WRT = OFF, Write protection off
  6604                           ;	Peripheral Pin Select one-way control
  6605                           ;	PPS1WAY = ON, The PPSLOCK bit cannot be cleared once it is set by software
  6606                           ;	Zero Cross Detect Disable Bit
  6607                           ;	ZCD = OFF, ZCD disable.  ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
  6608                           ;	PLL Enable Bit
  6609                           ;	PLLEN = OFF, 4x PLL is enabled when software sets the SPLLEN bit
  6610                           ;	Stack Overflow/Underflow Reset Enable
  6611                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  6612                           ;	Brown-out Reset Voltage Selection
  6613                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  6614                           ;	Low-Power Brown Out Reset
  6615                           ;	LPBOR = OFF, Low-Power BOR is disabled
  6616                           ;	Low-Voltage Programming Enable
  6617                           ;	LVP = ON, Low-voltage programming enabled
  6618     8008                     	org	32776
  6619     8008  3EFF               	dw	16127
  6620                           
  6621                           ;Config register CONFIG3 @ 0x8009
  6622                           ;	WDT Period Select
  6623                           ;	WDTCPS = WDTCPS1F, Software Control (WDTPS)
  6624                           ;	Watchdog Timer Enable
  6625                           ;	WDTE = OFF, WDT disabled
  6626                           ;	WDT Window Select
  6627                           ;	WDTCWS = WDTCWSSW, Software WDT window size control (WDTWS bits)
  6628                           ;	WDT Input Clock Selector
  6629                           ;	WDTCCS = SWC, Software control, controlled by WDTCS bits
  6630     8009                     	org	32777
  6631     8009  3F9F               	dw	16287

Data Sizes:
    Strings     24
    Constant    0
    Data        0
    BSS         87
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     69      80
    BANK1            80      0      76
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_2(CODE[12]), STR_1(CODE[12]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 12
		 -> STR_2(CODE[12]), STR_1(CODE[12]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 12
		 -> STR_2(CODE[12]), STR_1(CODE[12]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    S1045$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_2(CODE[12]), STR_1(CODE[12]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 20
		 -> buffer2(BANK1[20]), buffer1(BANK1[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S986$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S986$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    Lcd_Out2@buffer	PTR unsigned char  size(1) Largest target is 20
		 -> buffer2(BANK1[20]), buffer1(BANK1[20]), 


Critical Paths under _main in COMMON

    _read_prec_or_width->___wmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___awmod
    _Lcd_Out2->_Lcd_Chr_CP
    _Lcd_Out2->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd

Critical Paths under _ISR_TIMER0 in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs

Critical Paths under _ISR_TIMER0 in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR_TIMER0 in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_TIMER0 in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR_TIMER0 in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR_TIMER0 in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR_TIMER0 in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR_TIMER0 in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR_TIMER0 in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR_TIMER0 in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR_TIMER0 in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR_TIMER0 in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR_TIMER0 in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR_TIMER0 in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0    7606
                                             63 BANK0      6     6      0
                            _Lcd_Cmd
                           _Lcd_Init
                           _Lcd_Out2
                 _PWM3_LoadDutyValue
                  _SYSTEM_Initialize
                         _TMR0_Timer
                       _TMR1_Counter
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             22    16      6    6136
                                             43 BANK0     20    14      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             7     4      3    5717
                                             36 BANK0      7     4      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           18    16      2    5404
                                             23 BANK0     13    11      2
                               _dtoa
                              _fputc
                 _read_prec_or_width
 ---------------------------------------------------------------------------------
 (4) _read_prec_or_width                                   9     7      2     533
                                              6 COMMON     5     3      2
                                              0 BANK0      4     4      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     244
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                13    11      2    3650
                                             10 BANK0     13    11      2
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                  9     6      3    2066
                                             11 COMMON     3     0      3
                                              4 BANK0      6     6      0
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     6      1     997
                                              8 COMMON     3     2      1
                                              0 BANK0      4     4      0
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3     682
                                              0 COMMON     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                              7 COMMON     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              7     3      4     448
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              9     5      4     452
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _TMR1_Counter                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR0_Timer                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _PWM3_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM3_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM3_LoadDutyValue                                   4     2      2     120
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _Lcd_Out2                                             6     4      2     837
                                              3 COMMON     6     4      2
                         _Lcd_Chr_CP
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Chr_CP                                           3     3      0     176
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     314
                                              3 COMMON     2     2      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     176
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _ISR_TIMER0                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Cmd
   _Lcd_Init
     _Lcd_Cmd
   _Lcd_Out2
     _Lcd_Chr_CP
     _Lcd_Cmd
   _PWM3_LoadDutyValue
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM3_Initialize
     _TMR2_Initialize
   _TMR0_Timer
   _TMR1_Counter
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___awdiv
           ___awmod
           _abs
             ___awmod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
         _fputc
         _read_prec_or_width
           ___wmul

 _ISR_TIMER0 (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     45      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      4C       7       95.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      AA      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      AA      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Thu Jun 01 14:47:23 2023

                             _i 006D                              l11 0717                              l14 06D0  
                            l41 070C                              l98 06DD                    ___awdiv@sign 0076  
           ___wmul@multiplicand 0072                             l101 071E                             l214 028D  
                           l150 0624                             l215 02B6                             l216 02E5  
                           l242 05F6                             l245 037B                             l501 04CD  
                           l350 0667                             l263 0701                             l248 040E  
                           l266 0728                             l514 0520                             l348 0653  
                           l811 0684                             l910 0729                             l834 058A  
                           l907 0648                             l851 0134                             l837 05AA  
                           l846 0119                             l839 05B5                             l847 0136  
                           l880 06A0                             l858 01B1                             l866 046E  
                           l874 024C                             l884 06BA                             l887 06BA  
                           l899 0570                             _PR2 001B                             u710 0526  
                           u711 0525                             u800 0474                             u720 052B  
                           u801 0473                             u721 052A                             u810 047F  
                           u730 053A                             u811 047E                             u731 0539  
                           u820 0490                             u900 04D3                             u740 0558  
                           u821 048F                             u901 04D2                             u741 0557  
                           u910 04DE                             u750 0648                             u911 04DD  
                           u751 0647                             u840 04A0                             u920 04E9  
                           u760 064F                             u841 049F                             u921 04E8  
                           u745 0554                             u761 064E                             u835 0494  
                           u860 04AF                             u940 04F9                             u861 04AE  
                           u941 04F8                             u950 0503                             u790 0663  
                           u855 04A1                             u951 0502                             u935 04ED  
                           u791 0662                             u775 0654                             u880 04BF  
                           u881 04BE                             u865 04AB                             u785 0659  
                           u890 04C4                             u970 0512                             u891 04C3  
                           u875 04B5                             u971 0511                             u955 04FF  
                           u980 0517                             u981 0516                             u965 0508  
                           u990 0577                             u991 0576                             _TMR 006B  
                           _abs 06A1                             _pad 0571                    ___awmod@sign 0076  
               _TMR2_Initialize 0702                             wreg 0009                            ?_abs 0077  
                          l2020 0046                            l2030 004D                            l2022 0048  
                          l2040 0055                            l2032 0050                            l2024 0049  
                          l2016 003E                            l2050 005C                            l2042 0056  
                          l2034 0051                            l2026 004B                            l2018 0041  
                          l2060 0073                            l2052 005F                            l2044 0057  
                          l2036 0052                            l2028 004C                            l2118 05D0  
                          l2070 0086                            l2062 0078                            l2054 0062  
                          l2046 0058                            l2038 0054                            l1600 04B3  
                          l2080 00AE                            l2072 0093                            l2064 0080  
                          l2056 0066                            l2048 0059                            l1610 04C9  
                          l1602 04B4                            l2090 00C2                            l2082 00B0  
                          l2074 009B                            l2066 0083                            l2058 006A  
                          l1604 04B9                            l1620 04D8                            l1540 053A  
                          l1532 0521                            l1700 0142                            l2092 00D9  
                          l2084 00B1                            l2076 00A2                            l2068 0085  
                          l1606 04BF                            l1630 04EC                            l1622 04DA  
                          l1614 04CE                            l1542 0558                            l1534 0526  
                          l1550 062A                            l1710 0182                            l1702 015B  
                          l2094 00E1                            l2086 00B2                            l2078 00AD  
                          l1800 0600                            l1608 04C4                            l1640 0507  
                          l1632 04F1                            l1624 04DE                            l1616 04CF  
                          l1544 0567                            l1536 052B                            l1552 0636  
                          l1720 01A6                            l1712 0189                            l1704 0160  
                          l1560 064F                            l2096 00E9                            l2088 00B6  
                          l1810 0613                            l1802 0602                            l1570 046F  
                          l1642 050C                            l1634 04F5                            l1626 04E3  
                          l1618 04D3                            l1538 0530                            l1554 063B  
                          l1714 0196                            l1706 0164                            l1562 0658  
                          l1730 042C                            l1820 061F                            l1812 0616  
                          l1804 0605                            l1580 047F                            l1572 0470  
                          l1636 04F9                            l1628 04E9                            l1644 0512  
                          l1548 0627                            l1660 0587                            l1652 0573  
                          l1716 019C                            l1708 0174                            l1564 065D  
                          l1556 0649                            l1732 0439                            l1724 0411  
                          l1830 037D                            l1910 028B                            l1902 06BB  
                          l1822 0621                            l1814 0618                            l1806 0607  
                          l1590 0493                            l1582 0484                            l1574 0474  
                          l1646 0517                            l1638 0503                            l1670 06A1  
                          l1662 058D                            l1654 0577                            l1718 01A0  
                          l1566 0663                            l1558 064B                            l1734 044E  
                          l1726 0413                            l1750 01D8                            l1742 01B4  
                          l1840 03C7                            l1832 0380                            l1920 02CD  
                          l1824 0718                            l1816 061A                            l1808 060D  
                          l1904 06D1                            l1592 0498                            l1584 0488  
                          l1576 0479                            l1648 051C                            l1672 06AE  
                          l1664 0597                            l1656 057D                            l1680 010C  
                          l1728 0424                            l1736 0456                            l1760 01F4  
                          l1752 01E3                            l1744 01C5                            l1850 03FB  
                          l1842 03C9                            l1834 03BE                            l1930 02E1  
                          l1922 02D5                            l1914 02A4                            l1906 024D  
                          l1826 071B                            l1818 061D                            l1594 049C  
                          l1586 048A                            l1578 047B                            l1666 059C  
                          l1658 0581                            l1690 0126                            l1682 0110  
                          l1674 00FB                            l1738 046A                            l1762 01FE  
                          l1754 01E7                            l1746 01CD                            l1852 03FF  
                          l1844 03D7                            l1836 03C2                            l1924 02D9  
                          l1916 02AC                            l1908 025B                            l1860 02E7  
                          l1940 05C4                            l1932 05B7                            l1828 071C  
                          l1596 04A0                            l1588 0490                            l1668 05AF  
                          l1692 012B                            l1684 0115                            l1676 0102  
                          l1772 022A                            l1764 0208                            l1756 01E8  
                          l1748 01D4                            l1854 0401                            l1846 03E6  
                          l1838 03C4                            l1926 02DD                            l1918 02B0  
                          l1870 0331                            l1862 02EA                            l1950 05EA  
                          l1934 05B8                            l1782 070D                            l1790 0708  
                          l1598 04AF                            l1694 0130                            l1686 011D  
                          l1678 0107                            l1766 0214                            l1758 01ED  
                          l1856 0404                            l1848 03F0                            l1928 02E1  
                          l1880 0365                            l1872 0333                            l1864 0328  
                          l1952 05EE                            l1936 05BC                            l1944 05C8  
                          l1784 0714                            l1792 0709                            l1960 06FF  
                          l1696 013A                            l1688 0122                            l1768 0221  
                          l1776 0234                            l1858 0406                            l1890 0373  
                          l1882 0369                            l1874 0341                            l1866 032C  
                          l1938 05C0                            l1946 05DE                            l1794 05F7  
                          l1786 0702                            l1962 0700                            l1698 013D  
                          l1970 0670                            l1884 036B                            l1876 0350  
                          l1868 032E                            l1948 05E3                            l1796 05FB  
                          l1788 0706                            l1964 0725                            l1892 0687  
                          l1972 0672                            l1886 036E                            l1878 035A  
                          l1798 05FE                            l1958 06F6                            l1894 068C  
                          l1974 067C                            l1966 066A                            ?_pad 007B  
                          l1888 0370                            l1896 0694                            l1968 066E  
                          l1898 069E                            STR_1 06EA                            STR_2 06DE  
                          u1000 0581                            u1001 0580                            u1010 05AA  
                          u1011 05A9                            u1020 05AF                            u1100 0182  
                          u1021 05AE                            u1101 0181                            u1030 06AE  
                          u1110 0189                            u1031 06AD                            u1015 05A6  
                          u1111 0188                            u1120 0196                            u1040 0100  
                          u1121 0195                            u1105 017E                            u1041 00FE  
                          u1130 019C                            u1050 0101                            u1035 06AA  
                          u1131 019B                            u1060 0107                            u1140 0424  
                          u1205 0383                            u1125 0192                            u1061 0106  
                          u1141 0423                            u1070 0110                            u1150 046A  
                          u1215 0391                            u1071 010F                            u1151 0469  
                          u1080 0122                            u1160 01C5                            u1320 069E  
                          u1225 03A0                            u1305 0336                            u1081 0121  
                          u1161 01C4                            u1321 069D                            u1090 012B  
                          u1170 01E7                            u1235 03B0                            u1315 0344  
                          u1091 012A                            u1171 01E6                            u1340 02B6  
                          u1180 01FE                            u1245 03CC                            u1341 02B5  
                          u1181 01FD                            _LATA 010C                            u1350 05F6  
                          u1190 0208                            _LATB 010D                            u1255 03DA  
                          u1351 05F5                            u1335 06CA                            u1191 0207  
                          u1407 006E                            _LATC 010E                            u1265 02ED  
                          u1417 008C                            u1507 027E                            u1275 02FB  
                          u1427 00EF                            u1517 0286                            u1437 0329  
                          u1285 030A                            u1527 02A7                            u1447 0366  
                          u1295 031A                            u1537 02D0                            u1457 0376  
                          _T2PR 001B                            u1547 03BF                            u1467 025E  
                          u1557 03FC                            u1477 0266                            u1567 0409  
                          u1487 026E                            u1497 0276                            _TMR0 0015  
                          _TMR1 0016                            _TMR2 001A                            _WPUA 020C  
                          _WPUB 020D                            _WPUC 020E                            abs@a 0077  
                          _dbuf 00A4                            _main 003E                            _dtoa 00F9  
                          _prec 0067                            pad@i 0025                            pad@p 007C  
                          fsr0h 0005                            fsr1h 0007                            indf0 0000  
                          fsr0l 0004                            indf1 0001                            fsr1l 0006  
                          pad@w 0027                            btemp 007E                            start 0028  
               __end_of_Lcd_Cmd 040F                     ?_ISR_TIMER0 0070                      _Lcd_Chr_CP 02E6  
                         ??_abs 0079                           ??_pad 0024                  Lcd_Out2@buffer 0074  
 __end_of_OSCILLATOR_Initialize 071F                           ?_main 0070                           ?_dtoa 002A  
               __end_of___awdiv 04CE                 __end_of___awmod 0521                 ___awdiv@divisor 0070  
                         _T1CON 0018                           _T2CON 001C                           _T2HLT 001D  
                         _T2TMR 001A                           _T2RST 001F                           i1l272 0026  
               ___awdiv@counter 0075                    vfpfcnvrt@fmt 0037                           _TIMER 0069  
                         _TMR1H 0017                           _TMR1L 0016                           _PORTA 000C  
                         _PORTB 000D                           _PORTC 000E                           _TRISA 008C  
                         _TRISB 008D                           _TRISC 008E                     ?_TMR0_Timer 0070  
                         _flags 006F             read_prec_or_width@c 0020             read_prec_or_width@n 0021  
                         _fputc 0521                           _fputs 0625                           pad@fp 0029  
                         _width 0065                           _putch 0729                           dtoa@d 002A  
                         dtoa@i 0034                           dtoa@p 0030                           dtoa@s 0036  
                         dtoa@w 0032         __end_of_PWM3_Initialize 0718                           status 0003  
                         wtemp0 007E                 __end_of_sprintf 0685                __end_of_Lcd_Init 02E6  
              __end_of_Lcd_Out2 05F7                 __initialization 002A                    __end_of_main 00F9  
                  __end_of_dtoa 01B2         __end_of_TMR2_Initialize 070D                          ??_main 005F  
                        ??_dtoa 002C      __end_of_read_prec_or_width 046F                          ?_fputc 0070  
                        ?_fputs 0078                ___awdiv@dividend 0072                          _ANSELA 018C  
                        ?_putch 0070                          _ANSELB 018D                          _ANSELC 018E  
                        _BORCON 0116                          i1l2010 0020                          i1l2012 0023  
                        i1l2004 0006                          i1l2014 0025                          i1l2006 000A  
                        i1l2008 0016                          _ODCONA 028C                          _ODCONB 028D  
                        _RC6PPS 0EA6                          _ODCONC 028E                          _INLVLA 038C  
                        _INLVLB 038D                          _INLVLC 038E                          u137_20 000A  
                        u137_21 0009                          u138_20 0014                          u138_21 0011  
                        u139_24 0016                          _OSCCON 0099                       ??_Lcd_Cmd 0070  
                  vfprintf@cfmt 0049                     ?_Lcd_Chr_CP 0070                          ___wmul 0649  
                     ??___awdiv 0074                       ??___awmod 0074            read_prec_or_width@ap 0076  
              ___awdiv@quotient 0077                 ___awmod@divisor 0070                 ___awmod@counter 0075  
                        main@DC 0063                          pad@buf 007B                          dtoa@fp 002F  
                        fputc@c 0070                          fputs@c 0020                          fputs@i 0021  
                        fputs@s 0023                          putch@c 0070                __end_of_vfprintf 06A1  
                     ??_sprintf 0051                ?_PWM3_Initialize 0070               _SYSTEM_Initialize 06D1  
       __end_of__initialization 003A              ?_SYSTEM_Initialize 0070                  __pcstackCOMMON 0070  
           ??_SYSTEM_Initialize 0070                   __end_of_fputc 0571                   __end_of_fputs 0649  
                 __end_of_putch 072A                ?_TMR2_Initialize 0070                  _OPTION_REGbits 0095  
                     ?_Lcd_Init 0070                       ?_Lcd_Out2 0073                         ??_fputc 0073  
     __end_of_SYSTEM_Initialize 06DE                         ??_fputs 0079                         ??_putch 0070  
                    __pbssBANK0 0065                      __pbssBANK1 00A0                    ??_ISR_TIMER0 0070  
                    __pmaintext 003E                         ?___wmul 0070                      __pintentry 0004  
                  ??_TMR0_Timer 0070                         _OSCTUNE 0098                         _PWM3DCH 0618  
                       _PWM3DCL 0617                         _PWM3CON 0619                      ??_Lcd_Init 0073  
                    ??_Lcd_Out2 0075                         _SLRCONA 030C                         _SLRCONB 030D  
                       _SLRCONC 030E              __end_of_ISR_TIMER0 0028                         _Lcd_Cmd 037C  
                 ?_TMR1_Counter 0070                         ___awdiv 046F                         ___awmod 04CE  
                     ?_vfprintf 0044              __end_of_TMR0_Timer 0702                         __ptext1 0668  
                       __ptext2 0685                         __ptext3 01B2                         __ptext4 040F  
                       __ptext5 0649                         __ptext6 00F9                         __ptext7 0571  
                       __ptext8 0625                         __ptext9 0521                         _buffer1 00D8  
                       _buffer2 00C4                       _T1CONbits 0018                         _counter 00A0  
         _OSCILLATOR_Initialize 0718                       _T2CONbits 001C           read_prec_or_width@fmt 0023  
              ___awmod@dividend 0072        ??_PIN_MANAGER_Initialize 0070                       _T2HLTbits 001D  
                       _sprintf 0668                         clrloop0 0720            end_of_initialization 003A  
                     _T2RSTbits 001F                         fputc@fp 0072                         fputs@fp 0078  
            _read_prec_or_width 040F                  ??_TMR1_Counter 0070               __end_of_vfpfcnvrt 024D  
                  ??_Lcd_Chr_CP 0070                       Lcd_Out2@x 0073                       Lcd_Out2@y 0077  
           ?_read_prec_or_width 0076                vfpfcnvrt@convarg 003D                      ??_vfprintf 0047  
                     _PORTCbits 000E                       _TRISCbits 008E            ??_read_prec_or_width 0078  
            __end_of_Lcd_Chr_CP 037C      __end_of_PWM3_LoadDutyValue 06D1                     vfpfcnvrt@ap 0038  
                   vfpfcnvrt@cp 0042                     vfpfcnvrt@fp 0041                  __end_of___wmul 0668  
        ?_OSCILLATOR_Initialize 0070             start_initialization 002A                     __end_of_abs 06BB  
                   __end_of_pad 05B6                     vfprintf@fmt 0044                        ??___wmul 0074  
                   _CCPTMRSbits 029E                       ___latbits 0002                   __pcstackBANK0 0020  
          __end_of_TMR1_Counter 0729                        ?_Lcd_Cmd 0070          _PIN_MANAGER_Initialize 05F7  
                     _dtoa$1067 002D                        ?___awdiv 0070                        ?___awmod 0070  
                      _T0CKIPPS 0E11                        ?_sprintf 004B                        _T2CLKCON 001E  
                ___wmul@product 0074                        _LATBbits 010D                       clear_ram0 071F  
                      _PIR1bits 0010                       _vfpfcnvrt 01B2               ??_PWM3_Initialize 0070  
                  Lcd_Init@data 0074               ___wmul@multiplier 0070                    Lcd_Out2@data 0078  
                      _Lcd_Init 024D                        _Lcd_Out2 05B6               ??_TMR2_Initialize 0070  
                    vfprintf@ap 0046                      vfprintf@fp 0048         ??_OSCILLATOR_Initialize 0070  
                    ?_vfpfcnvrt 0037              _PWM3_LoadDutyValue 06BB                      sprintf@fmt 004B  
                Lcd_Chr_CP@data 0072                        __ptext10 0729                        __ptext11 06A1  
                      __ptext20 0718                        __ptext12 04CE                        __ptext21 06BB  
                      __ptext13 046F                        __ptext22 05B6                        __ptext14 0725  
                      __ptext23 02E6                        __ptext15 06F6                        __ptext24 024D  
                      __ptext16 06D1                        __ptext25 037C                        __ptext17 0702  
                      __ptext18 070D                        __ptext19 05F7             ?_PWM3_LoadDutyValue 0070  
                   Lcd_Cmd@data 0072            ??_PWM3_LoadDutyValue 0072                    _TMR1_Counter 0725  
                      int$flags 007E                        _vfprintf 0685                      _INTCONbits 000B  
                      intlevel1 0000                       sprintf@ap 0052         ?_PIN_MANAGER_Initialize 0070  
                    _OSCCONbits 0099                      _ISR_TIMER0 0004     PWM3_LoadDutyValue@dutyValue 0070  
                   ??_vfpfcnvrt 0039                   __pstringtext1 06DE                   __pstringtext2 06EA  
                 __pstringtext3 0000                      _OPTION_REG 0095                        sprintf@f 0054  
                      sprintf@s 0053                      _TMR0_Timer 06F6  __end_of_PIN_MANAGER_Initialize 0625  
               _PWM3_Initialize 070D  
