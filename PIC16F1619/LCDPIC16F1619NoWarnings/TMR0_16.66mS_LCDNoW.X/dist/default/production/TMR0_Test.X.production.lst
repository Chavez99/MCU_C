

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Fri May 26 10:47:42 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F1619
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    10                           	psect	cinit,global,class=CODE,merge=1,delta=2
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2,group=3
    18                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text8,local,class=CODE,merge=1,delta=2,group=3
    25                           	psect	text9,local,class=CODE,merge=1,delta=2,group=3
    26                           	psect	text10,local,class=CODE,merge=1,delta=2,group=3
    27                           	psect	text11,local,class=CODE,merge=1,delta=2,group=3
    28                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text14,local,class=CODE,merge=1,delta=2
    31                           	psect	text15,local,class=CODE,merge=1,delta=2
    32                           	psect	text16,local,class=CODE,merge=1,delta=2
    33                           	psect	text17,local,class=CODE,merge=1,delta=2
    34                           	psect	text18,local,class=CODE,merge=1,delta=2
    35                           	psect	text19,local,class=CODE,merge=1,delta=2
    36                           	psect	intentry,global,class=CODE,delta=2
    37                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    38                           	dabs	1,0x7E,2
    39     0000                     
    40                           ; Generated 09/02/2023 GMT
    41                           ; 
    42                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    43                           ; All rights reserved.
    44                           ; 
    45                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    46                           ; 
    47                           ; Redistribution and use in source and binary forms, with or without modification, are
    48                           ; permitted provided that the following conditions are met:
    49                           ; 
    50                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    51                           ;        conditions and the following disclaimer.
    52                           ; 
    53                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    54                           ;        of conditions and the following disclaimer in the documentation and/or other
    55                           ;        materials provided with the distribution. Publication is not required when
    56                           ;        this file is used in an embedded application.
    57                           ; 
    58                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    59                           ;        software without specific prior written permission.
    60                           ; 
    61                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    62                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    63                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    64                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    65                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    66                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    67                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    68                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    69                           ; 
    70                           ; 
    71                           ; Code-generator required, PIC16F1619 Definitions
    72                           ; 
    73                           ; SFR Addresses
    74     0000                     	;# 
    75     0001                     	;# 
    76     0002                     	;# 
    77     0003                     	;# 
    78     0004                     	;# 
    79     0005                     	;# 
    80     0006                     	;# 
    81     0007                     	;# 
    82     0008                     	;# 
    83     0009                     	;# 
    84     000A                     	;# 
    85     000B                     	;# 
    86     000C                     	;# 
    87     000D                     	;# 
    88     000E                     	;# 
    89     0010                     	;# 
    90     0011                     	;# 
    91     0012                     	;# 
    92     0013                     	;# 
    93     0014                     	;# 
    94     0015                     	;# 
    95     0016                     	;# 
    96     0016                     	;# 
    97     0017                     	;# 
    98     0018                     	;# 
    99     0019                     	;# 
   100     001A                     	;# 
   101     001A                     	;# 
   102     001B                     	;# 
   103     001B                     	;# 
   104     001C                     	;# 
   105     001D                     	;# 
   106     001E                     	;# 
   107     001F                     	;# 
   108     008C                     	;# 
   109     008D                     	;# 
   110     008E                     	;# 
   111     0090                     	;# 
   112     0091                     	;# 
   113     0092                     	;# 
   114     0093                     	;# 
   115     0094                     	;# 
   116     0095                     	;# 
   117     0096                     	;# 
   118     0098                     	;# 
   119     0099                     	;# 
   120     009A                     	;# 
   121     009B                     	;# 
   122     009B                     	;# 
   123     009C                     	;# 
   124     009D                     	;# 
   125     009E                     	;# 
   126     009F                     	;# 
   127     010C                     	;# 
   128     010D                     	;# 
   129     010E                     	;# 
   130     0111                     	;# 
   131     0112                     	;# 
   132     0113                     	;# 
   133     0114                     	;# 
   134     0115                     	;# 
   135     0116                     	;# 
   136     0117                     	;# 
   137     0118                     	;# 
   138     0119                     	;# 
   139     011C                     	;# 
   140     018C                     	;# 
   141     018D                     	;# 
   142     018E                     	;# 
   143     0191                     	;# 
   144     0191                     	;# 
   145     0192                     	;# 
   146     0193                     	;# 
   147     0193                     	;# 
   148     0194                     	;# 
   149     0195                     	;# 
   150     0196                     	;# 
   151     0197                     	;# 
   152     0199                     	;# 
   153     0199                     	;# 
   154     0199                     	;# 
   155     019A                     	;# 
   156     019A                     	;# 
   157     019A                     	;# 
   158     019B                     	;# 
   159     019B                     	;# 
   160     019B                     	;# 
   161     019B                     	;# 
   162     019B                     	;# 
   163     019C                     	;# 
   164     019C                     	;# 
   165     019C                     	;# 
   166     019D                     	;# 
   167     019D                     	;# 
   168     019D                     	;# 
   169     019E                     	;# 
   170     019E                     	;# 
   171     019E                     	;# 
   172     019F                     	;# 
   173     019F                     	;# 
   174     019F                     	;# 
   175     019F                     	;# 
   176     019F                     	;# 
   177     020C                     	;# 
   178     020D                     	;# 
   179     020E                     	;# 
   180     0211                     	;# 
   181     0211                     	;# 
   182     0212                     	;# 
   183     0212                     	;# 
   184     0213                     	;# 
   185     0213                     	;# 
   186     0214                     	;# 
   187     0214                     	;# 
   188     0215                     	;# 
   189     0215                     	;# 
   190     0215                     	;# 
   191     0215                     	;# 
   192     0216                     	;# 
   193     0216                     	;# 
   194     0217                     	;# 
   195     0217                     	;# 
   196     028C                     	;# 
   197     028D                     	;# 
   198     028E                     	;# 
   199     0291                     	;# 
   200     0291                     	;# 
   201     0292                     	;# 
   202     0293                     	;# 
   203     0294                     	;# 
   204     0298                     	;# 
   205     0298                     	;# 
   206     0299                     	;# 
   207     029A                     	;# 
   208     029B                     	;# 
   209     029E                     	;# 
   210     030C                     	;# 
   211     030D                     	;# 
   212     030E                     	;# 
   213     038C                     	;# 
   214     038D                     	;# 
   215     038E                     	;# 
   216     0391                     	;# 
   217     0392                     	;# 
   218     0393                     	;# 
   219     0394                     	;# 
   220     0395                     	;# 
   221     0396                     	;# 
   222     0397                     	;# 
   223     0398                     	;# 
   224     0399                     	;# 
   225     040E                     	;# 
   226     0413                     	;# 
   227     0413                     	;# 
   228     0414                     	;# 
   229     0414                     	;# 
   230     0415                     	;# 
   231     0416                     	;# 
   232     0417                     	;# 
   233     0418                     	;# 
   234     041A                     	;# 
   235     041A                     	;# 
   236     041B                     	;# 
   237     041B                     	;# 
   238     041C                     	;# 
   239     041D                     	;# 
   240     041E                     	;# 
   241     041F                     	;# 
   242     0493                     	;# 
   243     0494                     	;# 
   244     0495                     	;# 
   245     0496                     	;# 
   246     049A                     	;# 
   247     049B                     	;# 
   248     049C                     	;# 
   249     049D                     	;# 
   250     058C                     	;# 
   251     058C                     	;# 
   252     058D                     	;# 
   253     058E                     	;# 
   254     058E                     	;# 
   255     058F                     	;# 
   256     0590                     	;# 
   257     0590                     	;# 
   258     0591                     	;# 
   259     0592                     	;# 
   260     0592                     	;# 
   261     0593                     	;# 
   262     0594                     	;# 
   263     0594                     	;# 
   264     0595                     	;# 
   265     0596                     	;# 
   266     0596                     	;# 
   267     0597                     	;# 
   268     0598                     	;# 
   269     0599                     	;# 
   270     059A                     	;# 
   271     059B                     	;# 
   272     059B                     	;# 
   273     059C                     	;# 
   274     059D                     	;# 
   275     060C                     	;# 
   276     060C                     	;# 
   277     060D                     	;# 
   278     060E                     	;# 
   279     060F                     	;# 
   280     060F                     	;# 
   281     0610                     	;# 
   282     0611                     	;# 
   283     0612                     	;# 
   284     0613                     	;# 
   285     0614                     	;# 
   286     0617                     	;# 
   287     0617                     	;# 
   288     0618                     	;# 
   289     0619                     	;# 
   290     061A                     	;# 
   291     061A                     	;# 
   292     061B                     	;# 
   293     061C                     	;# 
   294     0691                     	;# 
   295     0692                     	;# 
   296     0693                     	;# 
   297     0694                     	;# 
   298     0695                     	;# 
   299     0696                     	;# 
   300     0697                     	;# 
   301     0699                     	;# 
   302     069A                     	;# 
   303     0711                     	;# 
   304     0712                     	;# 
   305     0713                     	;# 
   306     0714                     	;# 
   307     0715                     	;# 
   308     0718                     	;# 
   309     0718                     	;# 
   310     0719                     	;# 
   311     071A                     	;# 
   312     071A                     	;# 
   313     071B                     	;# 
   314     071C                     	;# 
   315     071D                     	;# 
   316     0791                     	;# 
   317     0791                     	;# 
   318     0792                     	;# 
   319     0793                     	;# 
   320     0793                     	;# 
   321     0794                     	;# 
   322     0795                     	;# 
   323     0795                     	;# 
   324     0796                     	;# 
   325     0797                     	;# 
   326     0797                     	;# 
   327     0798                     	;# 
   328     0799                     	;# 
   329     079A                     	;# 
   330     080C                     	;# 
   331     080C                     	;# 
   332     080D                     	;# 
   333     080E                     	;# 
   334     080E                     	;# 
   335     080F                     	;# 
   336     0810                     	;# 
   337     0810                     	;# 
   338     0811                     	;# 
   339     0812                     	;# 
   340     0812                     	;# 
   341     0813                     	;# 
   342     0814                     	;# 
   343     0815                     	;# 
   344     0816                     	;# 
   345     0817                     	;# 
   346     0818                     	;# 
   347     0819                     	;# 
   348     081A                     	;# 
   349     081A                     	;# 
   350     081B                     	;# 
   351     081C                     	;# 
   352     081C                     	;# 
   353     081D                     	;# 
   354     088C                     	;# 
   355     088D                     	;# 
   356     088E                     	;# 
   357     088F                     	;# 
   358     088F                     	;# 
   359     0890                     	;# 
   360     0891                     	;# 
   361     0892                     	;# 
   362     0893                     	;# 
   363     0893                     	;# 
   364     0894                     	;# 
   365     0895                     	;# 
   366     0896                     	;# 
   367     0897                     	;# 
   368     0897                     	;# 
   369     0898                     	;# 
   370     0899                     	;# 
   371     0D8C                     	;# 
   372     0D8C                     	;# 
   373     0D8D                     	;# 
   374     0D8E                     	;# 
   375     0D8F                     	;# 
   376     0D8F                     	;# 
   377     0D90                     	;# 
   378     0D91                     	;# 
   379     0D92                     	;# 
   380     0D92                     	;# 
   381     0D93                     	;# 
   382     0D94                     	;# 
   383     0D95                     	;# 
   384     0D95                     	;# 
   385     0D96                     	;# 
   386     0D97                     	;# 
   387     0D98                     	;# 
   388     0D99                     	;# 
   389     0D9A                     	;# 
   390     0D9B                     	;# 
   391     0D9C                     	;# 
   392     0D9D                     	;# 
   393     0D9E                     	;# 
   394     0D9E                     	;# 
   395     0D9F                     	;# 
   396     0DA0                     	;# 
   397     0DA1                     	;# 
   398     0DA1                     	;# 
   399     0DA2                     	;# 
   400     0DA3                     	;# 
   401     0DA4                     	;# 
   402     0DA4                     	;# 
   403     0DA5                     	;# 
   404     0DA6                     	;# 
   405     0DA7                     	;# 
   406     0DA7                     	;# 
   407     0DA8                     	;# 
   408     0DA9                     	;# 
   409     0DAA                     	;# 
   410     0DAB                     	;# 
   411     0DAC                     	;# 
   412     0DAD                     	;# 
   413     0DAE                     	;# 
   414     0DAF                     	;# 
   415     0E0F                     	;# 
   416     0E10                     	;# 
   417     0E11                     	;# 
   418     0E12                     	;# 
   419     0E13                     	;# 
   420     0E14                     	;# 
   421     0E15                     	;# 
   422     0E16                     	;# 
   423     0E17                     	;# 
   424     0E18                     	;# 
   425     0E19                     	;# 
   426     0E1A                     	;# 
   427     0E1B                     	;# 
   428     0E1C                     	;# 
   429     0E1D                     	;# 
   430     0E1E                     	;# 
   431     0E1F                     	;# 
   432     0E20                     	;# 
   433     0E21                     	;# 
   434     0E22                     	;# 
   435     0E23                     	;# 
   436     0E24                     	;# 
   437     0E25                     	;# 
   438     0E26                     	;# 
   439     0E27                     	;# 
   440     0E28                     	;# 
   441     0E29                     	;# 
   442     0E2A                     	;# 
   443     0E2B                     	;# 
   444     0E2C                     	;# 
   445     0E2D                     	;# 
   446     0E2E                     	;# 
   447     0E90                     	;# 
   448     0E91                     	;# 
   449     0E92                     	;# 
   450     0E94                     	;# 
   451     0E95                     	;# 
   452     0E9C                     	;# 
   453     0E9D                     	;# 
   454     0E9E                     	;# 
   455     0E9F                     	;# 
   456     0EA0                     	;# 
   457     0EA1                     	;# 
   458     0EA2                     	;# 
   459     0EA3                     	;# 
   460     0EA4                     	;# 
   461     0EA5                     	;# 
   462     0EA6                     	;# 
   463     0EA7                     	;# 
   464     0F0F                     	;# 
   465     0F10                     	;# 
   466     0F11                     	;# 
   467     0F12                     	;# 
   468     0F13                     	;# 
   469     0F14                     	;# 
   470     0F15                     	;# 
   471     0F16                     	;# 
   472     0F17                     	;# 
   473     0F18                     	;# 
   474     0F19                     	;# 
   475     0F1A                     	;# 
   476     0F1B                     	;# 
   477     0F1C                     	;# 
   478     0F1D                     	;# 
   479     0F1E                     	;# 
   480     0F1F                     	;# 
   481     0F20                     	;# 
   482     0F21                     	;# 
   483     0F22                     	;# 
   484     0F23                     	;# 
   485     0F24                     	;# 
   486     0F25                     	;# 
   487     0F26                     	;# 
   488     0F27                     	;# 
   489     0F28                     	;# 
   490     0F29                     	;# 
   491     0F2A                     	;# 
   492     0F2B                     	;# 
   493     0F2C                     	;# 
   494     0F2D                     	;# 
   495     0F2E                     	;# 
   496     0F2F                     	;# 
   497     0F30                     	;# 
   498     0F31                     	;# 
   499     0F32                     	;# 
   500     0F33                     	;# 
   501     0F34                     	;# 
   502     0F35                     	;# 
   503     0F36                     	;# 
   504     0F37                     	;# 
   505     0FE4                     	;# 
   506     0FE5                     	;# 
   507     0FE6                     	;# 
   508     0FE7                     	;# 
   509     0FE8                     	;# 
   510     0FE9                     	;# 
   511     0FEA                     	;# 
   512     0FEB                     	;# 
   513     0FED                     	;# 
   514     0FEE                     	;# 
   515     0FEF                     	;# 
   516     000E                     _PORTC	set	14
   517     000D                     _PORTB	set	13
   518     000C                     _PORTA	set	12
   519     000B                     _INTCONbits	set	11
   520     0015                     _TMR0	set	21
   521     000E                     _PORTCbits	set	14
   522     008E                     _TRISC	set	142
   523     008D                     _TRISB	set	141
   524     008C                     _TRISA	set	140
   525     0098                     _OSCTUNE	set	152
   526     0099                     _OSCCONbits	set	153
   527     0095                     _OPTION_REG	set	149
   528     008E                     _TRISCbits	set	142
   529     010D                     _LATBbits	set	269
   530     018E                     _ANSELC	set	398
   531     018D                     _ANSELB	set	397
   532     018C                     _ANSELA	set	396
   533                           
   534                           	psect	stringtext1
   535     0764                     __pstringtext1:
   536     0764                     STR_4:
   537     0764  3454               	retlw	84	;'T'
   538     0765  3465               	retlw	101	;'e'
   539     0766  3473               	retlw	115	;'s'
   540     0767  3474               	retlw	116	;'t'
   541     0768  3469               	retlw	105	;'i'
   542     0769  346E               	retlw	110	;'n'
   543     076A  3467               	retlw	103	;'g'
   544     076B  3420               	retlw	32	;' '
   545     076C  344C               	retlw	76	;'L'
   546     076D  3443               	retlw	67	;'C'
   547     076E  3444               	retlw	68	;'D'
   548     076F  3400               	retlw	0
   549                           
   550                           	psect	stringtext2
   551     0770                     __pstringtext2:
   552     0770                     STR_1:
   553     0770  3443               	retlw	67	;'C'
   554     0771  3475               	retlw	117	;'u'
   555     0772  3465               	retlw	101	;'e'
   556     0773  346E               	retlw	110	;'n'
   557     0774  3474               	retlw	116	;'t'
   558     0775  3461               	retlw	97	;'a'
   559     0776  3420               	retlw	32	;' '
   560     0777  3425               	retlw	37	;'%'
   561     0778  3430               	retlw	48	;'0'
   562     0779  3433               	retlw	51	;'3'
   563     077A  3464               	retlw	100	;'d'
   564     077B  3400               	retlw	0
   565                           
   566                           	psect	stringtext3
   567     077C                     __pstringtext3:
   568     077C                     STR_2:
   569     077C  3444               	retlw	68	;'D'
   570     077D  3445               	retlw	69	;'E'
   571     077E  3443               	retlw	67	;'C'
   572     077F  343A               	retlw	58	;':'
   573     0780  3420               	retlw	32	;' '
   574     0781  3425               	retlw	37	;'%'
   575     0782  3430               	retlw	48	;'0'
   576     0783  3433               	retlw	51	;'3'
   577     0784  3464               	retlw	100	;'d'
   578     0785  3400               	retlw	0
   579                           
   580                           	psect	stringtext4
   581     078F                     __pstringtext4:
   582     078F                     STR_5:
   583     078F  3454               	retlw	84	;'T'
   584     0790  3468               	retlw	104	;'h'
   585     0791  3461               	retlw	97	;'a'
   586     0792  346E               	retlw	110	;'n'
   587     0793  346B               	retlw	107	;'k'
   588     0794  3473               	retlw	115	;'s'
   589     0795  3400               	retlw	0
   590                           
   591                           	psect	stringtext5
   592     0796                     __pstringtext5:
   593     0796                     STR_6:
   594     0796  3454               	retlw	84	;'T'
   595     0797  3468               	retlw	104	;'h'
   596     0798  3461               	retlw	97	;'a'
   597     0799  346E               	retlw	110	;'n'
   598     079A  346B               	retlw	107	;'k'
   599     079B  3400               	retlw	0
   600                           
   601                           	psect	stringtext6
   602     0000                     __pstringtext6:
   603     0770                     
   604                           	psect	cinit
   605     001E                     start_initialization:	
   606                           ; #config settings
   607                           
   608     001E                     __initialization:
   609                           
   610                           ; Clear objects allocated to BANK0
   611     001E  3061               	movlw	low __pbssBANK0
   612     001F  0084               	movwf	4
   613     0020  3000               	movlw	high __pbssBANK0
   614     0021  0085               	movwf	5
   615     0022  3007               	movlw	7
   616     0023  3187  279C  3180   	fcall	clear_ram0
   617                           
   618                           ; Clear objects allocated to BANK1
   619     0026  30A0               	movlw	low __pbssBANK1
   620     0027  0084               	movwf	4
   621     0028  3000               	movlw	high __pbssBANK1
   622     0029  0085               	movwf	5
   623     002A  3048               	movlw	72
   624     002B  3187  279C  3180   	fcall	clear_ram0
   625     002E                     end_of_initialization:	
   626                           ;End of C runtime variable initialization code
   627                           
   628     002E                     __end_of__initialization:
   629     002E  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   630     002F  0020               	movlb	0
   631     0030  3180  2832         	ljmp	_main	;jump to C main() function
   632                           
   633                           	psect	bssBANK0
   634     0061                     __pbssBANK0:
   635     0061                     _width:
   636     0061                     	ds	2
   637     0063                     _prec:
   638     0063                     	ds	2
   639     0065                     _i:
   640     0065                     	ds	2
   641     0067                     _flags:
   642     0067                     	ds	1
   643                           
   644                           	psect	bssBANK1
   645     00A0                     __pbssBANK1:
   646     00A0                     _dbuf:
   647     00A0                     	ds	32
   648     00C0                     _buffer2:
   649     00C0                     	ds	20
   650     00D4                     _buffer1:
   651     00D4                     	ds	20
   652                           
   653                           	psect	clrtext
   654     079C                     clear_ram0:	
   655                           ;	Called with FSR0 containing the base address, and
   656                           ;	WREG with the size to clear
   657                           
   658     079C  0064               	clrwdt	;clear the watchdog before getting into this loop
   659     079D                     clrloop0:
   660     079D  0180               	clrf	0	;clear RAM location pointed to by FSR
   661     079E  3101               	addfsr 0,1
   662     079F  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   663     07A0  2F9D               	goto	clrloop0	;have we reached the end yet?
   664     07A1  3400               	retlw	0	;all done for this memory range, return
   665                           
   666                           	psect	cstackCOMMON
   667     0070                     __pcstackCOMMON:
   668     0070                     ?_Lcd_Cmd:
   669     0070                     ??_Lcd_Cmd:	
   670                           ; 1 bytes @ 0x0
   671                           
   672     0070                     ?_Lcd_Chr_CP:	
   673                           ; 1 bytes @ 0x0
   674                           
   675     0070                     ??_Lcd_Chr_CP:	
   676                           ; 1 bytes @ 0x0
   677                           
   678     0070                     ?_putch:	
   679                           ; 1 bytes @ 0x0
   680                           
   681     0070                     ??_putch:	
   682                           ; 1 bytes @ 0x0
   683                           
   684     0070                     ?_Lcd_Init:	
   685                           ; 1 bytes @ 0x0
   686                           
   687     0070                     ?_TMR0_temporizador:	
   688                           ; 1 bytes @ 0x0
   689                           
   690     0070                     ??_TMR0_temporizador:	
   691                           ; 1 bytes @ 0x0
   692                           
   693     0070                     ?_ISR_TIMER0:	
   694                           ; 1 bytes @ 0x0
   695                           
   696     0070                     ??_ISR_TIMER0:	
   697                           ; 1 bytes @ 0x0
   698                           
   699     0070                     ?_main:	
   700                           ; 1 bytes @ 0x0
   701                           
   702     0070                     ?_fputc:	
   703                           ; 1 bytes @ 0x0
   704                           
   705     0070                     ?___wmul:	
   706                           ; 2 bytes @ 0x0
   707                           
   708     0070                     ?___awdiv:	
   709                           ; 2 bytes @ 0x0
   710                           
   711     0070                     ?___awmod:	
   712                           ; 2 bytes @ 0x0
   713                           
   714     0070                     putch@c:	
   715                           ; 2 bytes @ 0x0
   716                           
   717     0070                     ___wmul@multiplier:	
   718                           ; 1 bytes @ 0x0
   719                           
   720     0070                     ___awdiv@divisor:	
   721                           ; 2 bytes @ 0x0
   722                           
   723     0070                     ___awmod@divisor:	
   724                           ; 2 bytes @ 0x0
   725                           
   726     0070                     fputc@c:	
   727                           ; 2 bytes @ 0x0
   728                           
   729                           
   730                           ; 2 bytes @ 0x0
   731     0070                     	ds	2
   732     0072                     Lcd_Chr_CP@data:
   733     0072                     Lcd_Cmd@data:	
   734                           ; 1 bytes @ 0x2
   735                           
   736     0072                     fputc@fp:	
   737                           ; 1 bytes @ 0x2
   738                           
   739     0072                     ___wmul@multiplicand:	
   740                           ; 1 bytes @ 0x2
   741                           
   742     0072                     ___awdiv@dividend:	
   743                           ; 2 bytes @ 0x2
   744                           
   745     0072                     ___awmod@dividend:	
   746                           ; 2 bytes @ 0x2
   747                           
   748                           
   749                           ; 2 bytes @ 0x2
   750     0072                     	ds	1
   751     0073                     ??_fputc:
   752     0073                     ??_Lcd_Init:	
   753                           ; 1 bytes @ 0x3
   754                           
   755     0073                     ?_Lcd_Out:	
   756                           ; 1 bytes @ 0x3
   757                           
   758     0073                     ?_Lcd_Out2:	
   759                           ; 1 bytes @ 0x3
   760                           
   761     0073                     Lcd_Out@x:	
   762                           ; 1 bytes @ 0x3
   763                           
   764     0073                     Lcd_Out2@x:	
   765                           ; 1 bytes @ 0x3
   766                           
   767                           
   768                           ; 1 bytes @ 0x3
   769     0073                     	ds	1
   770     0074                     ??___wmul:
   771     0074                     ??___awdiv:	
   772                           ; 1 bytes @ 0x4
   773                           
   774     0074                     ??___awmod:	
   775                           ; 1 bytes @ 0x4
   776                           
   777     0074                     Lcd_Init@data:	
   778                           ; 1 bytes @ 0x4
   779                           
   780     0074                     Lcd_Out@buffer:	
   781                           ; 1 bytes @ 0x4
   782                           
   783     0074                     Lcd_Out2@buffer:	
   784                           ; 2 bytes @ 0x4
   785                           
   786     0074                     ___wmul@product:	
   787                           ; 2 bytes @ 0x4
   788                           
   789                           
   790                           ; 2 bytes @ 0x4
   791     0074                     	ds	1
   792     0075                     ___awdiv@counter:
   793     0075                     ___awmod@counter:	
   794                           ; 1 bytes @ 0x5
   795                           
   796                           
   797                           ; 1 bytes @ 0x5
   798     0075                     	ds	1
   799     0076                     ??_Lcd_Out:
   800     0076                     ??_Lcd_Out2:	
   801                           ; 1 bytes @ 0x6
   802                           
   803     0076                     ?_read_prec_or_width:	
   804                           ; 1 bytes @ 0x6
   805                           
   806     0076                     ___awdiv@sign:	
   807                           ; 2 bytes @ 0x6
   808                           
   809     0076                     ___awmod@sign:	
   810                           ; 1 bytes @ 0x6
   811                           
   812     0076                     read_prec_or_width@ap:	
   813                           ; 1 bytes @ 0x6
   814                           
   815                           
   816                           ; 1 bytes @ 0x6
   817     0076                     	ds	1
   818     0077                     ?_abs:
   819     0077                     ___awdiv@quotient:	
   820                           ; 2 bytes @ 0x7
   821                           
   822     0077                     abs@a:	
   823                           ; 2 bytes @ 0x7
   824                           
   825                           
   826                           ; 2 bytes @ 0x7
   827     0077                     	ds	1
   828     0078                     ??_read_prec_or_width:
   829     0078                     ?_fputs:	
   830                           ; 1 bytes @ 0x8
   831                           
   832     0078                     Lcd_Out@y:	
   833                           ; 2 bytes @ 0x8
   834                           
   835     0078                     Lcd_Out2@y:	
   836                           ; 1 bytes @ 0x8
   837                           
   838     0078                     fputs@fp:	
   839                           ; 1 bytes @ 0x8
   840                           
   841                           
   842                           ; 1 bytes @ 0x8
   843     0078                     	ds	1
   844     0079                     ??_fputs:
   845     0079                     ??_abs:	
   846                           ; 1 bytes @ 0x9
   847                           
   848     0079                     Lcd_Out@data:	
   849                           ; 1 bytes @ 0x9
   850                           
   851     0079                     Lcd_Out2@data:	
   852                           ; 1 bytes @ 0x9
   853                           
   854                           
   855                           ; 1 bytes @ 0x9
   856     0079                     	ds	2
   857     007B                     ?_pad:
   858     007B                     pad@buf:	
   859                           ; 1 bytes @ 0xB
   860                           
   861                           
   862                           ; 1 bytes @ 0xB
   863     007B                     	ds	1
   864     007C                     pad@p:
   865                           
   866                           ; 2 bytes @ 0xC
   867     007C                     	ds	2
   868                           
   869                           	psect	cstackBANK0
   870     0020                     __pcstackBANK0:
   871     0020                     read_prec_or_width@c:
   872     0020                     fputs@c:	
   873                           ; 1 bytes @ 0x0
   874                           
   875                           
   876                           ; 1 bytes @ 0x0
   877     0020                     	ds	1
   878     0021                     read_prec_or_width@n:
   879     0021                     fputs@i:	
   880                           ; 2 bytes @ 0x1
   881                           
   882                           
   883                           ; 2 bytes @ 0x1
   884     0021                     	ds	2
   885     0023                     read_prec_or_width@fmt:
   886     0023                     fputs@s:	
   887                           ; 1 bytes @ 0x3
   888                           
   889                           
   890                           ; 1 bytes @ 0x3
   891     0023                     	ds	1
   892     0024                     ??_pad:
   893                           
   894                           ; 1 bytes @ 0x4
   895     0024                     	ds	1
   896     0025                     pad@i:
   897                           
   898                           ; 2 bytes @ 0x5
   899     0025                     	ds	2
   900     0027                     pad@w:
   901                           
   902                           ; 2 bytes @ 0x7
   903     0027                     	ds	2
   904     0029                     pad@fp:
   905                           
   906                           ; 1 bytes @ 0x9
   907     0029                     	ds	1
   908     002A                     ?_dtoa:
   909     002A                     dtoa@d:	
   910                           ; 1 bytes @ 0xA
   911                           
   912                           
   913                           ; 2 bytes @ 0xA
   914     002A                     	ds	2
   915     002C                     ??_dtoa:
   916                           
   917                           ; 1 bytes @ 0xC
   918     002C                     	ds	1
   919     002D                     _dtoa$645:
   920                           
   921                           ; 2 bytes @ 0xD
   922     002D                     	ds	2
   923     002F                     dtoa@fp:
   924                           
   925                           ; 1 bytes @ 0xF
   926     002F                     	ds	1
   927     0030                     dtoa@p:
   928                           
   929                           ; 2 bytes @ 0x10
   930     0030                     	ds	2
   931     0032                     dtoa@w:
   932                           
   933                           ; 2 bytes @ 0x12
   934     0032                     	ds	2
   935     0034                     dtoa@i:
   936                           
   937                           ; 2 bytes @ 0x14
   938     0034                     	ds	2
   939     0036                     dtoa@s:
   940                           
   941                           ; 1 bytes @ 0x16
   942     0036                     	ds	1
   943     0037                     ?_vfpfcnvrt:
   944     0037                     vfpfcnvrt@fmt:	
   945                           ; 1 bytes @ 0x17
   946                           
   947                           
   948                           ; 1 bytes @ 0x17
   949     0037                     	ds	1
   950     0038                     vfpfcnvrt@ap:
   951                           
   952                           ; 1 bytes @ 0x18
   953     0038                     	ds	1
   954     0039                     ??_vfpfcnvrt:
   955                           
   956                           ; 1 bytes @ 0x19
   957     0039                     	ds	4
   958     003D                     vfpfcnvrt@convarg:
   959                           
   960                           ; 4 bytes @ 0x1D
   961     003D                     	ds	4
   962     0041                     vfpfcnvrt@done:
   963                           
   964                           ; 2 bytes @ 0x21
   965     0041                     	ds	2
   966     0043                     vfpfcnvrt@fp:
   967                           
   968                           ; 1 bytes @ 0x23
   969     0043                     	ds	1
   970     0044                     vfpfcnvrt@cp:
   971                           
   972                           ; 2 bytes @ 0x24
   973     0044                     	ds	2
   974     0046                     ?_vfprintf:
   975     0046                     vfprintf@fmt:	
   976                           ; 2 bytes @ 0x26
   977                           
   978                           
   979                           ; 2 bytes @ 0x26
   980     0046                     	ds	2
   981     0048                     vfprintf@ap:
   982                           
   983                           ; 1 bytes @ 0x28
   984     0048                     	ds	1
   985     0049                     ??_vfprintf:
   986                           
   987                           ; 1 bytes @ 0x29
   988     0049                     	ds	1
   989     004A                     vfprintf@fp:
   990                           
   991                           ; 1 bytes @ 0x2A
   992     004A                     	ds	1
   993     004B                     vfprintf@cfmt:
   994                           
   995                           ; 2 bytes @ 0x2B
   996     004B                     	ds	2
   997     004D                     ?_sprintf:
   998     004D                     sprintf@fmt:	
   999                           ; 2 bytes @ 0x2D
  1000                           
  1001                           
  1002                           ; 2 bytes @ 0x2D
  1003     004D                     	ds	4
  1004     0051                     ??_sprintf:
  1005                           
  1006                           ; 1 bytes @ 0x31
  1007     0051                     	ds	1
  1008     0052                     sprintf@ap:
  1009                           
  1010                           ; 1 bytes @ 0x32
  1011     0052                     	ds	1
  1012     0053                     sprintf@s:
  1013                           
  1014                           ; 1 bytes @ 0x33
  1015     0053                     	ds	1
  1016     0054                     sprintf@f:
  1017                           
  1018                           ; 11 bytes @ 0x34
  1019     0054                     	ds	11
  1020     005F                     ??_main:
  1021                           
  1022                           ; 1 bytes @ 0x3F
  1023     005F                     	ds	2
  1024                           
  1025                           	psect	maintext
  1026     0032                     __pmaintext:	
  1027 ;;
  1028 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1029 ;;
  1030 ;; *************** function _main *****************
  1031 ;; Defined at:
  1032 ;;		line 33 in file "main.c"
  1033 ;; Parameters:    Size  Location     Type
  1034 ;;		None
  1035 ;; Auto vars:     Size  Location     Type
  1036 ;;		None
  1037 ;; Return value:  Size  Location     Type
  1038 ;;                  1    wreg      void 
  1039 ;; Registers used:
  1040 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1041 ;; Tracked objects:
  1042 ;;		On entry : B1F/0
  1043 ;;		On exit  : 0/0
  1044 ;;		Unchanged: 0/0
  1045 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1046 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1047 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1048 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1049 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1050 ;;Total ram usage:        2 bytes
  1051 ;; Hardware stack levels required when called: 9
  1052 ;; This function calls:
  1053 ;;		_Lcd_Cmd
  1054 ;;		_Lcd_Init
  1055 ;;		_Lcd_Out
  1056 ;;		_Lcd_Out2
  1057 ;;		_TMR0_temporizador
  1058 ;;		_sprintf
  1059 ;; This function is called by:
  1060 ;;		Startup code after reset
  1061 ;; This function uses a non-reentrant model
  1062 ;;
  1063                           
  1064     0032                     _main:	
  1065                           ;psect for function _main
  1066                           
  1067     0032                     l1786:	
  1068                           ;incstack = 0
  1069                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1070                           
  1071                           
  1072                           ;main.c: 35:     PORTA = 0;
  1073     0032  0021               	movlb	1	; select bank1
  1074     0033  0819               	movf	25,w	;volatile
  1075     0034  3987               	andlw	-121
  1076     0035  3868               	iorlw	104
  1077     0036  0099               	movwf	25	;volatile
  1078                           
  1079                           ;main.c: 36:     PORTB = 0;
  1080     0037  30FC               	movlw	-4
  1081     0038  0599               	andwf	25,f	;volatile
  1082     0039                     l1788:
  1083                           
  1084                           ;main.c: 37:     PORTC = 0;
  1085     0039  0198               	clrf	24	;volatile
  1086     003A                     l1790:
  1087                           
  1088                           ;main.c: 40:     INTCONbits.GIE = 1;
  1089     003A  0023               	movlb	3	; select bank3
  1090     003B  018C               	clrf	12	;volatile
  1091     003C                     l1792:
  1092                           
  1093                           ;main.c: 41:     INTCONbits.T0IF = 0;
  1094     003C  018D               	clrf	13	;volatile
  1095     003D                     l1794:
  1096                           
  1097                           ;main.c: 42:     INTCONbits.TMR0IE = 1;
  1098     003D  018E               	clrf	14	;volatile
  1099     003E                     l1796:
  1100                           
  1101                           ;main.c: 43:     TMR0_temporizador();
  1102     003E  0021               	movlb	1	; select bank1
  1103     003F  018C               	clrf	12	;volatile
  1104     0040                     l1798:
  1105                           
  1106                           ;main.c: 44: 
  1107     0040  018D               	clrf	13	;volatile
  1108     0041                     l1800:
  1109                           
  1110                           ;main.c: 45: 
  1111     0041  018E               	clrf	14	;volatile
  1112     0042                     l1802:
  1113                           
  1114                           ;main.c: 48: 
  1115     0042  0020               	movlb	0	; select bank0
  1116     0043  018C               	clrf	12	;volatile
  1117     0044                     l1804:
  1118                           
  1119                           ;main.c: 49: 
  1120     0044  018D               	clrf	13	;volatile
  1121     0045                     l1806:
  1122                           
  1123                           ;main.c: 50: 
  1124     0045  018E               	clrf	14	;volatile
  1125     0046                     l1808:
  1126                           
  1127                           ;main.c: 53:     Lcd_Cmd(12);
  1128     0046  178B               	bsf	11,7	;volatile
  1129     0047                     l1810:
  1130                           
  1131                           ;main.c: 54:     _delay((unsigned long)((100)*(4000000/4000.0)));
  1132     0047  110B               	bcf	11,2	;volatile
  1133     0048                     l1812:
  1134                           
  1135                           ;main.c: 55: 
  1136     0048  168B               	bsf	11,5	;volatile
  1137     0049                     l1814:
  1138                           
  1139                           ;main.c: 56: 
  1140     0049  3187  2786  3180   	fcall	_TMR0_temporizador
  1141     004C                     l1816:
  1142                           
  1143                           ;main.c: 64: 
  1144     004C  3182  22DF  3180   	fcall	_Lcd_Init
  1145     004F                     l1818:
  1146                           
  1147                           ;main.c: 65: 
  1148     004F  3001               	movlw	1
  1149     0050  3184  240E  3180   	fcall	_Lcd_Cmd
  1150     0053                     l1820:
  1151                           
  1152                           ;main.c: 66:         for(i=10; i>0; i--){
  1153     0053  300C               	movlw	12
  1154     0054  3184  240E  3180   	fcall	_Lcd_Cmd
  1155     0057                     l1822:
  1156                           
  1157                           ;main.c: 67:             sprintf((char *)buffer1,"Cuenta %03d", i);
  1158     0057  3082               	movlw	130
  1159     0058  0020               	movlb	0	; select bank0
  1160     0059  00DF               	movwf	??_main
  1161     005A  30DD               	movlw	221
  1162     005B                     u1447:
  1163     005B  0B89               	decfsz	9,f
  1164     005C  285B               	goto	u1447
  1165     005D  0BDF               	decfsz	??_main,f
  1166     005E  285B               	goto	u1447
  1167     005F  3200               	nop2
  1168     0060                     l1824:
  1169                           
  1170                           ;main.c: 72:         _delay((unsigned long)((600)*(4000000/4000.0)));
  1171     0060  3070               	movlw	low (STR_1| (0+32768))
  1172     0061  0020               	movlb	0	; select bank0
  1173     0062  00CD               	movwf	sprintf@fmt
  1174     0063  3087               	movlw	high (STR_1| (0+32768))
  1175     0064  00CE               	movwf	sprintf@fmt+1
  1176     0065  3005               	movlw	5
  1177     0066  00CF               	movwf	?_sprintf+2
  1178     0067  3000               	movlw	0
  1179     0068  00D0               	movwf	?_sprintf+3
  1180     0069  30D4               	movlw	(low (_buffer1| 0))& (0+255)
  1181     006A  3187  2711  3180   	fcall	_sprintf
  1182     006D                     l1826:
  1183                           
  1184                           ;main.c: 73:         Lcd_Cmd(15);
  1185     006D  307C               	movlw	low (STR_2| (0+32768))
  1186     006E  0020               	movlb	0	; select bank0
  1187     006F  00CD               	movwf	sprintf@fmt
  1188     0070  3087               	movlw	high (STR_2| (0+32768))
  1189     0071  00CE               	movwf	sprintf@fmt+1
  1190     0072  30DE               	movlw	222
  1191     0073  00CF               	movwf	?_sprintf+2
  1192     0074  3000               	movlw	0
  1193     0075  00D0               	movwf	?_sprintf+3
  1194     0076  30C0               	movlw	(low (_buffer2| 0))& (0+255)
  1195     0077  3187  2711  3180   	fcall	_sprintf
  1196     007A                     l1828:
  1197                           
  1198                           ;main.c: 74:         _delay((unsigned long)((1000)*(4000000/4000.0)));
  1199     007A  01F3               	clrf	Lcd_Out2@x
  1200     007B  0AF3               	incf	Lcd_Out2@x,f
  1201     007C  30D4               	movlw	low _buffer1
  1202     007D  00F4               	movwf	Lcd_Out2@buffer
  1203     007E  3000               	movlw	high _buffer1
  1204     007F  00F5               	movwf	Lcd_Out2@buffer+1
  1205     0080  3001               	movlw	1
  1206     0081  3186  2648  3180   	fcall	_Lcd_Out2
  1207     0084                     l1830:
  1208                           
  1209                           ;main.c: 75:         Lcd_Cmd(14);
  1210     0084  01F3               	clrf	Lcd_Out2@x
  1211     0085  0AF3               	incf	Lcd_Out2@x,f
  1212     0086  30C0               	movlw	low _buffer2
  1213     0087  00F4               	movwf	Lcd_Out2@buffer
  1214     0088  3000               	movlw	high _buffer2
  1215     0089  00F5               	movwf	Lcd_Out2@buffer+1
  1216     008A  3002               	movlw	2
  1217     008B  3186  2648  3180   	fcall	_Lcd_Out2
  1218     008E                     l1832:
  1219                           
  1220                           ;main.c: 76:         _delay((unsigned long)((1000)*(4000000/4000.0)));
  1221     008E  3082               	movlw	130
  1222     008F  0020               	movlb	0	; select bank0
  1223     0090  00DF               	movwf	??_main
  1224     0091  30DD               	movlw	221
  1225     0092                     u1457:
  1226     0092  0B89               	decfsz	9,f
  1227     0093  2892               	goto	u1457
  1228     0094  0BDF               	decfsz	??_main,f
  1229     0095  2892               	goto	u1457
  1230     0096  3200               	nop2
  1231     0097                     l1834:
  1232                           
  1233                           ;main.c: 79:         Lcd_Cmd(1);
  1234     0097  300A               	movlw	10
  1235     0098  0020               	movlb	0	; select bank0
  1236     0099  00E5               	movwf	_i
  1237     009A  3000               	movlw	0
  1238     009B  00E6               	movwf	_i+1
  1239     009C                     l1840:
  1240                           
  1241                           ;main.c: 80:         _delay((unsigned long)((1000)*(4000000/4000.0)));
  1242     009C  3070               	movlw	low (STR_1| (0+32768))
  1243     009D  0020               	movlb	0	; select bank0
  1244     009E  00CD               	movwf	sprintf@fmt
  1245     009F  3087               	movlw	high (STR_1| (0+32768))
  1246     00A0  00CE               	movwf	sprintf@fmt+1
  1247     00A1  0866               	movf	_i+1,w
  1248     00A2  00D0               	movwf	?_sprintf+3
  1249     00A3  0865               	movf	_i,w
  1250     00A4  00CF               	movwf	?_sprintf+2
  1251     00A5  30D4               	movlw	(low (_buffer1| 0))& (0+255)
  1252     00A6  3187  2711  3180   	fcall	_sprintf
  1253     00A9                     l1842:
  1254                           
  1255                           ;main.c: 81:         Lcd_Out(1, 4, "Thanks");
  1256     00A9  01F3               	clrf	Lcd_Out2@x
  1257     00AA  0AF3               	incf	Lcd_Out2@x,f
  1258     00AB  30D4               	movlw	low _buffer1
  1259     00AC  00F4               	movwf	Lcd_Out2@buffer
  1260     00AD  3000               	movlw	high _buffer1
  1261     00AE  00F5               	movwf	Lcd_Out2@buffer+1
  1262     00AF  3001               	movlw	1
  1263     00B0  3186  2648  3180   	fcall	_Lcd_Out2
  1264     00B3                     l1844:
  1265                           
  1266                           ;main.c: 82:         Lcd_Out(2, 4, "Thank");
  1267     00B3  3082               	movlw	130
  1268     00B4  0020               	movlb	0	; select bank0
  1269     00B5  00DF               	movwf	??_main
  1270     00B6  30DD               	movlw	221
  1271     00B7                     u1467:
  1272     00B7  0B89               	decfsz	9,f
  1273     00B8  28B7               	goto	u1467
  1274     00B9  0BDF               	decfsz	??_main,f
  1275     00BA  28B7               	goto	u1467
  1276     00BB  3200               	nop2
  1277     00BC                     l1846:
  1278                           
  1279                           ;main.c: 83:         }
  1280     00BC  30FF               	movlw	255
  1281     00BD  0020               	movlb	0	; select bank0
  1282     00BE  07E5               	addwf	_i,f
  1283     00BF  30FF               	movlw	255
  1284     00C0  3DE6               	addwfc	_i+1,f
  1285     00C1                     l1848:
  1286     00C1  0866               	movf	_i+1,w
  1287     00C2  3A80               	xorlw	128
  1288     00C3  00DF               	movwf	??_main
  1289     00C4  3080               	movlw	128
  1290     00C5  025F               	subwf	??_main,w
  1291     00C6  1D03               	skipz
  1292     00C7  28CA               	goto	u1435
  1293     00C8  3001               	movlw	1
  1294     00C9  0265               	subwf	_i,w
  1295     00CA                     u1435:
  1296     00CA  1803               	skipnc
  1297     00CB  28CD               	goto	u1431
  1298     00CC  28CE               	goto	u1430
  1299     00CD                     u1431:
  1300     00CD  289C               	goto	l1840
  1301     00CE                     u1430:
  1302     00CE                     l1850:
  1303                           
  1304                           ;main.c: 84:  return;
  1305     00CE  01F3               	clrf	Lcd_Out2@x
  1306     00CF  0AF3               	incf	Lcd_Out2@x,f
  1307     00D0  3064               	movlw	low (STR_4| (0+32768))
  1308     00D1  00F4               	movwf	Lcd_Out2@buffer
  1309     00D2  3087               	movlw	high (STR_4| (0+32768))
  1310     00D3  00F5               	movwf	Lcd_Out2@buffer+1
  1311     00D4  3002               	movlw	2
  1312     00D5  3186  2648  3180   	fcall	_Lcd_Out2
  1313     00D8                     l1852:
  1314                           
  1315                           ;main.c: 85: }
  1316     00D8  3004               	movlw	4
  1317     00D9  0020               	movlb	0	; select bank0
  1318     00DA  00E0               	movwf	??_main+1
  1319     00DB  300C               	movlw	12
  1320     00DC  00DF               	movwf	??_main
  1321     00DD  3033               	movlw	51
  1322     00DE                     u1477:
  1323     00DE  0B89               	decfsz	9,f
  1324     00DF  28DE               	goto	u1477
  1325     00E0  0BDF               	decfsz	??_main,f
  1326     00E1  28DE               	goto	u1477
  1327     00E2  0BE0               	decfsz	??_main+1,f
  1328     00E3  28DE               	goto	u1477
  1329     00E4  3200               	nop2
  1330     00E5                     l1854:
  1331     00E5  300F               	movlw	15
  1332     00E6  3184  240E  3180   	fcall	_Lcd_Cmd
  1333     00E9                     l1856:
  1334     00E9  3006               	movlw	6
  1335     00EA  0020               	movlb	0	; select bank0
  1336     00EB  00E0               	movwf	??_main+1
  1337     00EC  3013               	movlw	19
  1338     00ED  00DF               	movwf	??_main
  1339     00EE  30AD               	movlw	173
  1340     00EF                     u1487:
  1341     00EF  0B89               	decfsz	9,f
  1342     00F0  28EF               	goto	u1487
  1343     00F1  0BDF               	decfsz	??_main,f
  1344     00F2  28EF               	goto	u1487
  1345     00F3  0BE0               	decfsz	??_main+1,f
  1346     00F4  28EF               	goto	u1487
  1347     00F5  3200               	nop2
  1348     00F6                     l1858:
  1349     00F6  300E               	movlw	14
  1350     00F7  3184  240E  3180   	fcall	_Lcd_Cmd
  1351     00FA                     l1860:
  1352     00FA  3006               	movlw	6
  1353     00FB  0020               	movlb	0	; select bank0
  1354     00FC  00E0               	movwf	??_main+1
  1355     00FD  3013               	movlw	19
  1356     00FE  00DF               	movwf	??_main
  1357     00FF  30AD               	movlw	173
  1358     0100                     u1497:
  1359     0100  0B89               	decfsz	9,f
  1360     0101  2900               	goto	u1497
  1361     0102  0BDF               	decfsz	??_main,f
  1362     0103  2900               	goto	u1497
  1363     0104  0BE0               	decfsz	??_main+1,f
  1364     0105  2900               	goto	u1497
  1365     0106  3200               	nop2
  1366     0107                     l1862:
  1367     0107  300C               	movlw	12
  1368     0108  3184  240E  3180   	fcall	_Lcd_Cmd
  1369     010B                     l1864:
  1370     010B  3006               	movlw	6
  1371     010C  0020               	movlb	0	; select bank0
  1372     010D  00E0               	movwf	??_main+1
  1373     010E  3013               	movlw	19
  1374     010F  00DF               	movwf	??_main
  1375     0110  30AD               	movlw	173
  1376     0111                     u1507:
  1377     0111  0B89               	decfsz	9,f
  1378     0112  2911               	goto	u1507
  1379     0113  0BDF               	decfsz	??_main,f
  1380     0114  2911               	goto	u1507
  1381     0115  0BE0               	decfsz	??_main+1,f
  1382     0116  2911               	goto	u1507
  1383     0117  3200               	nop2
  1384     0118                     l1866:
  1385     0118  3001               	movlw	1
  1386     0119  3184  240E  3180   	fcall	_Lcd_Cmd
  1387     011C                     l1868:
  1388     011C  3006               	movlw	6
  1389     011D  0020               	movlb	0	; select bank0
  1390     011E  00E0               	movwf	??_main+1
  1391     011F  3013               	movlw	19
  1392     0120  00DF               	movwf	??_main
  1393     0121  30AD               	movlw	173
  1394     0122                     u1517:
  1395     0122  0B89               	decfsz	9,f
  1396     0123  2922               	goto	u1517
  1397     0124  0BDF               	decfsz	??_main,f
  1398     0125  2922               	goto	u1517
  1399     0126  0BE0               	decfsz	??_main+1,f
  1400     0127  2922               	goto	u1517
  1401     0128  3200               	nop2
  1402     0129                     l1870:
  1403     0129  3004               	movlw	4
  1404     012A  00F3               	movwf	Lcd_Out@x
  1405     012B  308F               	movlw	low (STR_5| (0+32768))
  1406     012C  00F4               	movwf	Lcd_Out@buffer
  1407     012D  3087               	movlw	high (STR_5| (0+32768))
  1408     012E  00F5               	movwf	Lcd_Out@buffer+1
  1409     012F  3001               	movlw	1
  1410     0130  3186  268B  3180   	fcall	_Lcd_Out
  1411     0133                     l1872:
  1412     0133  3004               	movlw	4
  1413     0134  00F3               	movwf	Lcd_Out@x
  1414     0135  3096               	movlw	low (STR_6| (0+32768))
  1415     0136  00F4               	movwf	Lcd_Out@buffer
  1416     0137  3087               	movlw	high (STR_6| (0+32768))
  1417     0138  00F5               	movwf	Lcd_Out@buffer+1
  1418     0139  3002               	movlw	2
  1419     013A  3186  268B  3180   	fcall	_Lcd_Out
  1420     013D  2860               	goto	l1824
  1421     013E  3180  281C         	ljmp	start
  1422     0140                     __end_of_main:
  1423                           
  1424                           	psect	text1
  1425     0711                     __ptext1:	
  1426 ;; *************** function _sprintf *****************
  1427 ;; Defined at:
  1428 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_sprintf.c"
  1429 ;; Parameters:    Size  Location     Type
  1430 ;;  s               1    wreg     PTR unsigned char 
  1431 ;;		 -> buffer2(20), buffer1(20), 
  1432 ;;  fmt             2   45[BANK0 ] PTR const unsigned char 
  1433 ;;		 -> STR_3(12), STR_2(10), STR_1(12), 
  1434 ;; Auto vars:     Size  Location     Type
  1435 ;;  s               1   51[BANK0 ] PTR unsigned char 
  1436 ;;		 -> buffer2(20), buffer1(20), 
  1437 ;;  f              11   52[BANK0 ] struct _IO_FILE
  1438 ;;  ret             2    0        int 
  1439 ;;  ap              1   50[BANK0 ] PTR void [1]
  1440 ;;		 -> ?_sprintf(2), 
  1441 ;; Return value:  Size  Location     Type
  1442 ;;                  2   45[BANK0 ] int 
  1443 ;; Registers used:
  1444 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1445 ;; Tracked objects:
  1446 ;;		On entry : 0/0
  1447 ;;		On exit  : 0/0
  1448 ;;		Unchanged: 0/0
  1449 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1450 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1451 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1452 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1453 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1454 ;;Total ram usage:       18 bytes
  1455 ;; Hardware stack levels used: 1
  1456 ;; Hardware stack levels required when called: 8
  1457 ;; This function calls:
  1458 ;;		_vfprintf
  1459 ;; This function is called by:
  1460 ;;		_main
  1461 ;; This function uses a non-reentrant model
  1462 ;;
  1463                           
  1464     0711                     _sprintf:	
  1465                           ;psect for function _sprintf
  1466                           
  1467                           
  1468                           ;incstack = 0
  1469                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1470                           ;sprintf@s stored from wreg
  1471     0711  0020               	movlb	0	; select bank0
  1472     0712  00D3               	movwf	sprintf@s
  1473     0713                     l1774:
  1474     0713  304F               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  1475     0714  00D2               	movwf	sprintf@ap
  1476     0715  0853               	movf	sprintf@s,w
  1477     0716  00D4               	movwf	sprintf@f
  1478     0717                     l1776:
  1479     0717  01D6               	clrf	sprintf@f+2
  1480     0718  01D7               	clrf	sprintf@f+3
  1481     0719                     l1778:
  1482     0719  01DD               	clrf	sprintf@f+9
  1483     071A  01DE               	clrf	sprintf@f+10
  1484     071B                     l1780:
  1485     071B  084E               	movf	sprintf@fmt+1,w
  1486     071C  00C7               	movwf	vfprintf@fmt+1
  1487     071D  084D               	movf	sprintf@fmt,w
  1488     071E  00C6               	movwf	vfprintf@fmt
  1489     071F  3052               	movlw	(low (sprintf@ap| 0))& (0+255)
  1490     0720  00C8               	movwf	vfprintf@ap
  1491     0721  3054               	movlw	(low (sprintf@f| 0))& (0+255)
  1492     0722  3187  272E  3187   	fcall	_vfprintf
  1493     0725                     l1782:
  1494     0725  0020               	movlb	0	; select bank0
  1495     0726  0856               	movf	sprintf@f+2,w
  1496     0727  0753               	addwf	sprintf@s,w
  1497     0728  00D1               	movwf	??_sprintf
  1498     0729  0851               	movf	??_sprintf,w
  1499     072A  0086               	movwf	6
  1500     072B  0187               	clrf	7
  1501     072C  0181               	clrf	1
  1502     072D                     l635:
  1503     072D  0008               	return
  1504     072E                     __end_of_sprintf:
  1505                           
  1506                           	psect	text2
  1507     072E                     __ptext2:	
  1508 ;; *************** function _vfprintf *****************
  1509 ;; Defined at:
  1510 ;;		line 1546 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  1511 ;; Parameters:    Size  Location     Type
  1512 ;;  fp              1    wreg     PTR struct _IO_FILE
  1513 ;;		 -> sprintf@f(11), 
  1514 ;;  fmt             2   38[BANK0 ] PTR const unsigned char 
  1515 ;;		 -> STR_3(12), STR_2(10), STR_1(12), 
  1516 ;;  ap              1   40[BANK0 ] PTR PTR void 
  1517 ;;		 -> sprintf@ap(1), 
  1518 ;; Auto vars:     Size  Location     Type
  1519 ;;  fp              1   42[BANK0 ] PTR struct _IO_FILE
  1520 ;;		 -> sprintf@f(11), 
  1521 ;;  cfmt            2   43[BANK0 ] PTR unsigned char 
  1522 ;;		 -> STR_3(12), STR_2(10), STR_1(12), 
  1523 ;; Return value:  Size  Location     Type
  1524 ;;                  2   38[BANK0 ] int 
  1525 ;; Registers used:
  1526 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1527 ;; Tracked objects:
  1528 ;;		On entry : 0/0
  1529 ;;		On exit  : 0/0
  1530 ;;		Unchanged: 0/0
  1531 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1532 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1533 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1534 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1535 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1536 ;;Total ram usage:        7 bytes
  1537 ;; Hardware stack levels used: 1
  1538 ;; Hardware stack levels required when called: 7
  1539 ;; This function calls:
  1540 ;;		_vfpfcnvrt
  1541 ;; This function is called by:
  1542 ;;		_sprintf
  1543 ;; This function uses a non-reentrant model
  1544 ;;
  1545                           
  1546     072E                     _vfprintf:	
  1547                           ;psect for function _vfprintf
  1548                           
  1549                           
  1550                           ;incstack = 0
  1551                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1552                           ;vfprintf@fp stored from wreg
  1553     072E  0020               	movlb	0	; select bank0
  1554     072F  00CA               	movwf	vfprintf@fp
  1555     0730                     l1680:
  1556                           
  1557                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1546: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.41\pic\source
      +                          s\c99\common\doprnt.c: 1547: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\comm
      +                          on\doprnt.c: 1549:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\
      +                          common\doprnt.c: 1551:     cfmt = (char *)fmt;
  1558     0730  0847               	movf	vfprintf@fmt+1,w
  1559     0731  00CC               	movwf	vfprintf@cfmt+1
  1560     0732  0846               	movf	vfprintf@fmt,w
  1561     0733  00CB               	movwf	vfprintf@cfmt
  1562                           
  1563                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1555:     while (
      +                          *cfmt) {
  1564     0734  2F3D               	goto	l1684
  1565     0735                     l1682:
  1566                           
  1567                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1559:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1568     0735  304B               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  1569     0736  00B7               	movwf	vfpfcnvrt@fmt
  1570     0737  0848               	movf	vfprintf@ap,w
  1571     0738  00B8               	movwf	vfpfcnvrt@ap
  1572     0739  084A               	movf	vfprintf@fp,w
  1573     073A  3182  2214  3187   	fcall	_vfpfcnvrt
  1574     073D                     l1684:
  1575                           
  1576                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1555:     while (
      +                          *cfmt) {
  1577     073D  0020               	movlb	0	; select bank0
  1578     073E  084B               	movf	vfprintf@cfmt,w
  1579     073F  0084               	movwf	4
  1580     0740  084C               	movf	vfprintf@cfmt+1,w
  1581     0741  0085               	movwf	5
  1582     0742  0012               	moviw fsr0++
  1583     0743  1D03               	btfss	3,2
  1584     0744  2F46               	goto	u1391
  1585     0745  2F47               	goto	u1390
  1586     0746                     u1391:
  1587     0746  2F35               	goto	l1682
  1588     0747                     u1390:
  1589     0747                     l1686:
  1590                           
  1591                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1564:  return 0;
  1592     0747  01C6               	clrf	?_vfprintf
  1593     0748  01C7               	clrf	?_vfprintf+1
  1594     0749                     l714:
  1595     0749  0008               	return
  1596     074A                     __end_of_vfprintf:
  1597                           
  1598                           	psect	text3
  1599     0214                     __ptext3:	
  1600 ;; *************** function _vfpfcnvrt *****************
  1601 ;; Defined at:
  1602 ;;		line 1048 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  1603 ;; Parameters:    Size  Location     Type
  1604 ;;  fp              1    wreg     PTR struct _IO_FILE
  1605 ;;		 -> sprintf@f(11), 
  1606 ;;  fmt             1   23[BANK0 ] PTR PTR unsigned char 
  1607 ;;		 -> vfprintf@cfmt(2), 
  1608 ;;  ap              1   24[BANK0 ] PTR PTR void 
  1609 ;;		 -> sprintf@ap(1), 
  1610 ;; Auto vars:     Size  Location     Type
  1611 ;;  fp              1   35[BANK0 ] PTR struct _IO_FILE
  1612 ;;		 -> sprintf@f(11), 
  1613 ;;  convarg         4   29[BANK0 ] struct .
  1614 ;;  cp              2   36[BANK0 ] PTR unsigned char 
  1615 ;;		 -> STR_3(12), STR_2(10), STR_1(12), 
  1616 ;;  done            2   33[BANK0 ] int 
  1617 ;;  i               2    0        int 
  1618 ;;  c               1    0        unsigned char 
  1619 ;; Return value:  Size  Location     Type
  1620 ;;                  1    wreg      void 
  1621 ;; Registers used:
  1622 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1623 ;; Tracked objects:
  1624 ;;		On entry : 0/0
  1625 ;;		On exit  : 0/0
  1626 ;;		Unchanged: 0/0
  1627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1628 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1629 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1630 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1631 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1632 ;;Total ram usage:       15 bytes
  1633 ;; Hardware stack levels used: 1
  1634 ;; Hardware stack levels required when called: 6
  1635 ;; This function calls:
  1636 ;;		_dtoa
  1637 ;;		_fputc
  1638 ;;		_read_prec_or_width
  1639 ;; This function is called by:
  1640 ;;		_vfprintf
  1641 ;; This function uses a non-reentrant model
  1642 ;;
  1643                           
  1644     0214                     _vfpfcnvrt:	
  1645                           ;psect for function _vfpfcnvrt
  1646                           
  1647                           
  1648                           ;incstack = 0
  1649                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1650                           ;vfpfcnvrt@fp stored from wreg
  1651     0214  0020               	movlb	0	; select bank0
  1652     0215  00C3               	movwf	vfpfcnvrt@fp
  1653     0216                     l1562:
  1654                           
  1655                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1048: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1049: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\dopr
      +                          nt.c: 1050:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common
      +                          \doprnt.c: 1051:     int done, i;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1059:  } convarg;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1062:     if ((*fmt)[0] == '%') {
  1656     0216  0837               	movf	vfpfcnvrt@fmt,w
  1657     0217  0086               	movwf	6
  1658     0218  0187               	clrf	7
  1659     0219  3F40               	moviw [0]fsr1
  1660     021A  00B9               	movwf	??_vfpfcnvrt
  1661     021B  3F41               	moviw [1]fsr1
  1662     021C  00BA               	movwf	??_vfpfcnvrt+1
  1663     021D  0839               	movf	??_vfpfcnvrt,w
  1664     021E  0084               	movwf	4
  1665     021F  083A               	movf	??_vfpfcnvrt+1,w
  1666     0220  0085               	movwf	5
  1667     0221  0012               	moviw fsr0++
  1668     0222  3A25               	xorlw	37
  1669     0223  1D03               	btfss	3,2
  1670     0224  2A26               	goto	u1221
  1671     0225  2A27               	goto	u1220
  1672     0226                     u1221:
  1673     0226  2AC6               	goto	l1608
  1674     0227                     u1220:
  1675     0227                     l1564:
  1676                           
  1677                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1063:         ++*
      +                          fmt;
  1678     0227  0837               	movf	vfpfcnvrt@fmt,w
  1679     0228  0086               	movwf	6
  1680     0229  0187               	clrf	7
  1681     022A  3001               	movlw	1
  1682     022B  0781               	addwf	1,f
  1683     022C  3141               	addfsr 1,1
  1684     022D  1803               	skipnc
  1685     022E  0A81               	incf	1,f
  1686     022F                     l1566:
  1687                           
  1688                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1065:         fla
      +                          gs = width = 0;
  1689     022F  01E1               	clrf	_width
  1690     0230  01E2               	clrf	_width+1
  1691     0231  1003               	clrc
  1692     0232  3000               	movlw	0
  1693     0233  1803               	btfsc	3,0
  1694     0234  3001               	movlw	1
  1695     0235  00E7               	movwf	_flags
  1696     0236                     l1568:
  1697                           
  1698                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1066:         pre
      +                          c = -1;
  1699     0236  30FF               	movlw	255
  1700     0237  00E3               	movwf	_prec
  1701     0238  30FF               	movlw	255
  1702     0239  00E4               	movwf	_prec+1
  1703     023A                     l1570:
  1704                           
  1705                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1070:         don
      +                          e = 0;
  1706     023A  01C1               	clrf	vfpfcnvrt@done
  1707     023B  01C2               	clrf	vfpfcnvrt@done+1
  1708                           
  1709                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1071:         whi
      +                          le (!done) {
  1710     023C  2A64               	goto	l1580
  1711     023D                     l700:	
  1712                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1080:            
      +                               case '0' :
  1713                           
  1714                           
  1715                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1081:            
      +                                   flags |= (1 << 1);
  1716     023D  14E7               	bsf	_flags,1
  1717     023E                     l1572:
  1718                           
  1719                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1082:            
      +                                   ++*fmt;
  1720     023E  0837               	movf	vfpfcnvrt@fmt,w
  1721     023F  0086               	movwf	6
  1722     0240  0187               	clrf	7
  1723     0241  3001               	movlw	1
  1724     0242  0781               	addwf	1,f
  1725     0243  3141               	addfsr 1,1
  1726     0244  1803               	skipnc
  1727     0245  0A81               	incf	1,f
  1728                           
  1729                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1083:            
      +                                   break;
  1730     0246  2A64               	goto	l1580
  1731     0247                     l1574:
  1732                           
  1733                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1104:            
      +                                   done = 1;
  1734     0247  3001               	movlw	1
  1735     0248  00C1               	movwf	vfpfcnvrt@done
  1736     0249  3000               	movlw	0
  1737     024A  00C2               	movwf	vfpfcnvrt@done+1
  1738                           
  1739                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1105:            
      +                                   break;
  1740     024B  2A64               	goto	l1580
  1741     024C                     l1578:
  1742     024C  0837               	movf	vfpfcnvrt@fmt,w
  1743     024D  0086               	movwf	6
  1744     024E  0187               	clrf	7
  1745     024F  3F40               	moviw [0]fsr1
  1746     0250  00B9               	movwf	??_vfpfcnvrt
  1747     0251  3F41               	moviw [1]fsr1
  1748     0252  00BA               	movwf	??_vfpfcnvrt+1
  1749     0253  0839               	movf	??_vfpfcnvrt,w
  1750     0254  0084               	movwf	4
  1751     0255  083A               	movf	??_vfpfcnvrt+1,w
  1752     0256  0085               	movwf	5
  1753     0257  0800               	movf	0,w	;code access
  1754     0258  00BB               	movwf	??_vfpfcnvrt+2
  1755     0259  01BC               	clrf	??_vfpfcnvrt+3
  1756                           
  1757                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1758                           ; Switch size 1, requested type "simple"
  1759                           ; Number of cases is 1, Range of values is 0 to 0
  1760                           ; switch strategies available:
  1761                           ; Name         Instructions Cycles
  1762                           ; simple_byte            4     3 (average)
  1763                           ; direct_byte            8     6 (fixed)
  1764                           ; jumptable            260     6 (fixed)
  1765                           ;	Chosen strategy is simple_byte
  1766     025A  083C               	movf	??_vfpfcnvrt+3,w
  1767     025B  3A00               	xorlw	0	; case 0
  1768     025C  1903               	skipnz
  1769     025D  2A5F               	goto	l1934
  1770     025E  2A47               	goto	l1574
  1771     025F                     l1934:
  1772                           
  1773                           ; Switch size 1, requested type "simple"
  1774                           ; Number of cases is 1, Range of values is 48 to 48
  1775                           ; switch strategies available:
  1776                           ; Name         Instructions Cycles
  1777                           ; simple_byte            4     3 (average)
  1778                           ; direct_byte           11     9 (fixed)
  1779                           ; jumptable            263     9 (fixed)
  1780                           ;	Chosen strategy is simple_byte
  1781     025F  083B               	movf	??_vfpfcnvrt+2,w
  1782     0260  3A30               	xorlw	48	; case 48
  1783     0261  1903               	skipnz
  1784     0262  2A3D               	goto	l700
  1785     0263  2A47               	goto	l1574
  1786     0264                     l1580:
  1787                           
  1788                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1071:         whi
      +                          le (!done) {
  1789     0264  0841               	movf	vfpfcnvrt@done,w
  1790     0265  0442               	iorwf	vfpfcnvrt@done+1,w
  1791     0266  1903               	btfsc	3,2
  1792     0267  2A69               	goto	u1231
  1793     0268  2A6A               	goto	u1230
  1794     0269                     u1231:
  1795     0269  2A4C               	goto	l1578
  1796     026A                     u1230:
  1797     026A                     l1582:
  1798                           
  1799                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1117:   width = r
      +                          ead_prec_or_width(fmt, ap);
  1800     026A  0838               	movf	vfpfcnvrt@ap,w
  1801     026B  00F6               	movwf	read_prec_or_width@ap
  1802     026C  0837               	movf	vfpfcnvrt@fmt,w
  1803     026D  3184  24A1  3182   	fcall	_read_prec_or_width
  1804     0270  0877               	movf	?_read_prec_or_width+1,w
  1805     0271  0020               	movlb	0	; select bank0
  1806     0272  00E2               	movwf	_width+1
  1807     0273  0876               	movf	?_read_prec_or_width,w
  1808     0274  00E1               	movwf	_width
  1809     0275                     l1584:
  1810                           
  1811                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1118:   if (width
      +                           < 0) {
  1812     0275  1FE2               	btfss	_width+1,7
  1813     0276  2A78               	goto	u1241
  1814     0277  2A79               	goto	u1240
  1815     0278                     u1241:
  1816     0278  2A7F               	goto	l1590
  1817     0279                     u1240:
  1818     0279                     l1586:
  1819                           
  1820                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1119:    flags |=
      +                           (1 << 0);
  1821     0279  1467               	bsf	_flags,0
  1822     027A                     l1588:
  1823                           
  1824                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1120:    width = 
      +                          -width;
  1825     027A  09E1               	comf	_width,f
  1826     027B  09E2               	comf	_width+1,f
  1827     027C  0AE1               	incf	_width,f
  1828     027D  1903               	skipnz
  1829     027E  0AE2               	incf	_width+1,f
  1830     027F                     l1590:
  1831                           
  1832                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1143:   cp = *fmt
      +                          ;
  1833     027F  0837               	movf	vfpfcnvrt@fmt,w
  1834     0280  0086               	movwf	6
  1835     0281  0187               	clrf	7
  1836     0282  3F40               	moviw [0]fsr1
  1837     0283  00C4               	movwf	vfpfcnvrt@cp
  1838     0284  3F41               	moviw [1]fsr1
  1839     0285  00C5               	movwf	vfpfcnvrt@cp+1
  1840     0286                     l1592:
  1841                           
  1842                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1213:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  1843     0286  0844               	movf	vfpfcnvrt@cp,w
  1844     0287  0084               	movwf	4
  1845     0288  0845               	movf	vfpfcnvrt@cp+1,w
  1846     0289  0085               	movwf	5
  1847     028A  0012               	moviw fsr0++
  1848     028B  3A64               	xorlw	100
  1849     028C  1903               	btfsc	3,2
  1850     028D  2A8F               	goto	u1251
  1851     028E  2A90               	goto	u1250
  1852     028F                     u1251:
  1853     028F  2A9A               	goto	l1596
  1854     0290                     u1250:
  1855     0290                     l1594:
  1856     0290  0844               	movf	vfpfcnvrt@cp,w
  1857     0291  0084               	movwf	4
  1858     0292  0845               	movf	vfpfcnvrt@cp+1,w
  1859     0293  0085               	movwf	5
  1860     0294  0012               	moviw fsr0++
  1861     0295  3A69               	xorlw	105
  1862     0296  1D03               	btfss	3,2
  1863     0297  2A99               	goto	u1261
  1864     0298  2A9A               	goto	u1260
  1865     0299                     u1261:
  1866     0299  2ABC               	goto	l1604
  1867     029A                     u1260:
  1868     029A                     l1596:
  1869                           
  1870                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1256:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  1871     029A  0838               	movf	vfpfcnvrt@ap,w
  1872     029B  0086               	movwf	6
  1873     029C  0187               	clrf	7
  1874     029D  0801               	movf	1,w
  1875     029E  0084               	movwf	4
  1876     029F  0185               	clrf	5
  1877     02A0  3002               	movlw	2
  1878     02A1  0781               	addwf	1,f
  1879     02A2  3F00               	moviw [0]fsr0
  1880     02A3  00BD               	movwf	vfpfcnvrt@convarg
  1881     02A4  3F01               	moviw [1]fsr0
  1882     02A5  00BE               	movwf	vfpfcnvrt@convarg+1
  1883     02A6                     l1598:
  1884                           
  1885                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1258:    *fmt = c
      +                          p+1;
  1886     02A6  0844               	movf	vfpfcnvrt@cp,w
  1887     02A7  3E01               	addlw	1
  1888     02A8  00B9               	movwf	??_vfpfcnvrt
  1889     02A9  3000               	movlw	0
  1890     02AA  3D45               	addwfc	vfpfcnvrt@cp+1,w
  1891     02AB  00BA               	movwf	??_vfpfcnvrt+1
  1892     02AC  0837               	movf	vfpfcnvrt@fmt,w
  1893     02AD  0086               	movwf	6
  1894     02AE  0187               	clrf	7
  1895     02AF  0839               	movf	??_vfpfcnvrt,w
  1896     02B0  3FC0               	movwi [0]fsr1
  1897     02B1  083A               	movf	??_vfpfcnvrt+1,w
  1898     02B2  3FC1               	movwi [1]fsr1
  1899     02B3                     l1600:
  1900                           
  1901                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1259:    return (
      +                          void) dtoa(fp, convarg.sint);;	Return value of _vfpfcnvrt is never used
  1902     02B3  083E               	movf	vfpfcnvrt@convarg+1,w
  1903     02B4  00AB               	movwf	dtoa@d+1
  1904     02B5  083D               	movf	vfpfcnvrt@convarg,w
  1905     02B6  00AA               	movwf	dtoa@d
  1906     02B7  0843               	movf	vfpfcnvrt@fp,w
  1907     02B8  3181  2140  3182   	fcall	_dtoa
  1908     02BB  2ADE               	goto	l708
  1909     02BC                     l1604:
  1910                           
  1911                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1535:         ++*
      +                          fmt;
  1912     02BC  0020               	movlb	0	; select bank0
  1913     02BD  0837               	movf	vfpfcnvrt@fmt,w
  1914     02BE  0086               	movwf	6
  1915     02BF  0187               	clrf	7
  1916     02C0  3001               	movlw	1
  1917     02C1  0781               	addwf	1,f
  1918     02C2  3141               	addfsr 1,1
  1919     02C3  1803               	skipnc
  1920     02C4  0A81               	incf	1,f
  1921     02C5  2ADE               	goto	l708
  1922     02C6                     l1608:
  1923                           
  1924                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1540:     fputc((
      +                          int)(*fmt)[0], fp);
  1925     02C6  0837               	movf	vfpfcnvrt@fmt,w
  1926     02C7  0086               	movwf	6
  1927     02C8  0187               	clrf	7
  1928     02C9  3F40               	moviw [0]fsr1
  1929     02CA  00B9               	movwf	??_vfpfcnvrt
  1930     02CB  3F41               	moviw [1]fsr1
  1931     02CC  00BA               	movwf	??_vfpfcnvrt+1
  1932     02CD  0839               	movf	??_vfpfcnvrt,w
  1933     02CE  0084               	movwf	4
  1934     02CF  083A               	movf	??_vfpfcnvrt+1,w
  1935     02D0  0085               	movwf	5
  1936     02D1  0800               	movf	0,w	;code access
  1937     02D2  00BB               	movwf	??_vfpfcnvrt+2
  1938     02D3  01BC               	clrf	??_vfpfcnvrt+3
  1939     02D4  083B               	movf	??_vfpfcnvrt+2,w
  1940     02D5  00F0               	movwf	fputc@c
  1941     02D6  083C               	movf	??_vfpfcnvrt+3,w
  1942     02D7  00F1               	movwf	fputc@c+1
  1943     02D8  0843               	movf	vfpfcnvrt@fp,w
  1944     02D9  00F2               	movwf	fputc@fp
  1945     02DA  3185  25B3  3182   	fcall	_fputc
  1946     02DD  2ABC               	goto	l1604
  1947     02DE                     l708:
  1948     02DE  0008               	return
  1949     02DF                     __end_of_vfpfcnvrt:
  1950                           
  1951                           	psect	text4
  1952     04A1                     __ptext4:	
  1953 ;; *************** function _read_prec_or_width *****************
  1954 ;; Defined at:
  1955 ;;		line 1029 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  1956 ;; Parameters:    Size  Location     Type
  1957 ;;  fmt             1    wreg     PTR PTR const unsigned c
  1958 ;;		 -> vfprintf@cfmt(2), 
  1959 ;;  ap              1    6[COMMON] PTR PTR void [1]
  1960 ;;		 -> sprintf@ap(1), 
  1961 ;; Auto vars:     Size  Location     Type
  1962 ;;  fmt             1    3[BANK0 ] PTR PTR const unsigned c
  1963 ;;		 -> vfprintf@cfmt(2), 
  1964 ;;  c               1    0[BANK0 ] unsigned char 
  1965 ;;  n               2    1[BANK0 ] int 
  1966 ;; Return value:  Size  Location     Type
  1967 ;;                  2    6[COMMON] int 
  1968 ;; Registers used:
  1969 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1970 ;; Tracked objects:
  1971 ;;		On entry : 0/0
  1972 ;;		On exit  : 0/0
  1973 ;;		Unchanged: 0/0
  1974 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1975 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1976 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1977 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1978 ;;      Totals:         5       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1979 ;;Total ram usage:        9 bytes
  1980 ;; Hardware stack levels used: 1
  1981 ;; Hardware stack levels required when called: 2
  1982 ;; This function calls:
  1983 ;;		___wmul
  1984 ;; This function is called by:
  1985 ;;		_vfpfcnvrt
  1986 ;; This function uses a non-reentrant model
  1987 ;;
  1988                           
  1989     04A1                     _read_prec_or_width:	
  1990                           ;psect for function _read_prec_or_width
  1991                           
  1992                           
  1993                           ;incstack = 0
  1994                           ; Regs used in _read_prec_or_width: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1995                           ;read_prec_or_width@fmt stored from wreg
  1996     04A1  0020               	movlb	0	; select bank0
  1997     04A2  00A3               	movwf	read_prec_or_width@fmt
  1998     04A3                     l1544:
  1999                           
  2000                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1030:     int n =
      +                           0;
  2001     04A3  01A1               	clrf	read_prec_or_width@n
  2002     04A4  01A2               	clrf	read_prec_or_width@n+1
  2003     04A5                     l1546:
  2004                           
  2005                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1031:     if ((*f
      +                          mt)[0] == '*') {
  2006     04A5  0823               	movf	read_prec_or_width@fmt,w
  2007     04A6  0086               	movwf	6
  2008     04A7  0187               	clrf	7
  2009     04A8  3F40               	moviw [0]fsr1
  2010     04A9  00F8               	movwf	??_read_prec_or_width
  2011     04AA  3F41               	moviw [1]fsr1
  2012     04AB  00F9               	movwf	??_read_prec_or_width+1
  2013     04AC  0878               	movf	??_read_prec_or_width,w
  2014     04AD  0084               	movwf	4
  2015     04AE  0879               	movf	??_read_prec_or_width+1,w
  2016     04AF  0085               	movwf	5
  2017     04B0  0012               	moviw fsr0++
  2018     04B1  3A2A               	xorlw	42
  2019     04B2  1D03               	btfss	3,2
  2020     04B3  2CB5               	goto	u1201
  2021     04B4  2CB6               	goto	u1200
  2022     04B5                     u1201:
  2023     04B5  2CE8               	goto	l1556
  2024     04B6                     u1200:
  2025     04B6                     l1548:
  2026                           
  2027                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1032:         ++*
      +                          fmt;
  2028     04B6  0823               	movf	read_prec_or_width@fmt,w
  2029     04B7  0086               	movwf	6
  2030     04B8  0187               	clrf	7
  2031     04B9  3001               	movlw	1
  2032     04BA  0781               	addwf	1,f
  2033     04BB  3141               	addfsr 1,1
  2034     04BC  1803               	skipnc
  2035     04BD  0A81               	incf	1,f
  2036     04BE                     l1550:
  2037                           
  2038                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1033:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
  2039     04BE  0876               	movf	read_prec_or_width@ap,w
  2040     04BF  0086               	movwf	6
  2041     04C0  0187               	clrf	7
  2042     04C1  0801               	movf	1,w
  2043     04C2  0084               	movwf	4
  2044     04C3  0185               	clrf	5
  2045     04C4  3002               	movlw	2
  2046     04C5  0781               	addwf	1,f
  2047     04C6  3F00               	moviw [0]fsr0
  2048     04C7  00A1               	movwf	read_prec_or_width@n
  2049     04C8  3F01               	moviw [1]fsr0
  2050     04C9  00A2               	movwf	read_prec_or_width@n+1
  2051                           
  2052                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1034:     } else 
      +                          {
  2053     04CA  2CFC               	goto	l1558
  2054     04CB                     l1552:
  2055                           
  2056                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1037:            
      +                           n = n * 10 + c;
  2057     04CB  0820               	movf	read_prec_or_width@c,w
  2058     04CC  00F8               	movwf	??_read_prec_or_width
  2059     04CD  01F9               	clrf	??_read_prec_or_width+1
  2060     04CE  0822               	movf	read_prec_or_width@n+1,w
  2061     04CF  00F1               	movwf	___wmul@multiplier+1
  2062     04D0  0821               	movf	read_prec_or_width@n,w
  2063     04D1  00F0               	movwf	___wmul@multiplier
  2064     04D2  300A               	movlw	10
  2065     04D3  00F2               	movwf	___wmul@multiplicand
  2066     04D4  3000               	movlw	0
  2067     04D5  00F3               	movwf	___wmul@multiplicand+1
  2068     04D6  3186  26F2  3184   	fcall	___wmul
  2069     04D9  0878               	movf	??_read_prec_or_width,w
  2070     04DA  0770               	addwf	?___wmul,w
  2071     04DB  0020               	movlb	0	; select bank0
  2072     04DC  00A1               	movwf	read_prec_or_width@n
  2073     04DD  0879               	movf	??_read_prec_or_width+1,w
  2074     04DE  3D71               	addwfc	?___wmul+1,w
  2075     04DF  00A2               	movwf	read_prec_or_width@n+1
  2076     04E0                     l1554:
  2077                           
  2078                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1038:            
      +                           ++*fmt;
  2079     04E0  0823               	movf	read_prec_or_width@fmt,w
  2080     04E1  0086               	movwf	6
  2081     04E2  0187               	clrf	7
  2082     04E3  3001               	movlw	1
  2083     04E4  0781               	addwf	1,f
  2084     04E5  3141               	addfsr 1,1
  2085     04E6  1803               	skipnc
  2086     04E7  0A81               	incf	1,f
  2087     04E8                     l1556:
  2088                           
  2089                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1036:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  2090     04E8  0823               	movf	read_prec_or_width@fmt,w
  2091     04E9  0086               	movwf	6
  2092     04EA  0187               	clrf	7
  2093     04EB  3F40               	moviw [0]fsr1
  2094     04EC  00F8               	movwf	??_read_prec_or_width
  2095     04ED  3F41               	moviw [1]fsr1
  2096     04EE  00F9               	movwf	??_read_prec_or_width+1
  2097     04EF  0878               	movf	??_read_prec_or_width,w
  2098     04F0  0084               	movwf	4
  2099     04F1  0879               	movf	??_read_prec_or_width+1,w
  2100     04F2  0085               	movwf	5
  2101     04F3  0800               	movf	0,w	;code access
  2102     04F4  3ED0               	addlw	208
  2103     04F5  00A0               	movwf	read_prec_or_width@c
  2104     04F6  300A               	movlw	10
  2105     04F7  0220               	subwf	read_prec_or_width@c,w
  2106     04F8  1C03               	skipc
  2107     04F9  2CFB               	goto	u1211
  2108     04FA  2CFC               	goto	u1210
  2109     04FB                     u1211:
  2110     04FB  2CCB               	goto	l1552
  2111     04FC                     u1210:
  2112     04FC                     l1558:
  2113                           
  2114                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1041:     return 
      +                          n;
  2115     04FC  0822               	movf	read_prec_or_width@n+1,w
  2116     04FD  00F7               	movwf	?_read_prec_or_width+1
  2117     04FE  0821               	movf	read_prec_or_width@n,w
  2118     04FF  00F6               	movwf	?_read_prec_or_width
  2119     0500                     l693:
  2120     0500  0008               	return
  2121     0501                     __end_of_read_prec_or_width:
  2122                           
  2123                           	psect	text5
  2124     06F2                     __ptext5:	
  2125 ;; *************** function ___wmul *****************
  2126 ;; Defined at:
  2127 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\Umul16.c"
  2128 ;; Parameters:    Size  Location     Type
  2129 ;;  multiplier      2    0[COMMON] unsigned int 
  2130 ;;  multiplicand    2    2[COMMON] unsigned int 
  2131 ;; Auto vars:     Size  Location     Type
  2132 ;;  product         2    4[COMMON] unsigned int 
  2133 ;; Return value:  Size  Location     Type
  2134 ;;                  2    0[COMMON] unsigned int 
  2135 ;; Registers used:
  2136 ;;		wreg, status,2, status,0
  2137 ;; Tracked objects:
  2138 ;;		On entry : 0/0
  2139 ;;		On exit  : 0/0
  2140 ;;		Unchanged: 0/0
  2141 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2142 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2143 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2144 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2145 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2146 ;;Total ram usage:        6 bytes
  2147 ;; Hardware stack levels used: 1
  2148 ;; Hardware stack levels required when called: 1
  2149 ;; This function calls:
  2150 ;;		Nothing
  2151 ;; This function is called by:
  2152 ;;		_read_prec_or_width
  2153 ;; This function uses a non-reentrant model
  2154 ;;
  2155                           
  2156     06F2                     ___wmul:	
  2157                           ;psect for function ___wmul
  2158                           
  2159     06F2                     l1368:	
  2160                           ;incstack = 0
  2161                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2162                           
  2163     06F2  01F4               	clrf	___wmul@product
  2164     06F3  01F5               	clrf	___wmul@product+1
  2165     06F4                     l1370:
  2166     06F4  1C70               	btfss	___wmul@multiplier,0
  2167     06F5  2EF7               	goto	u791
  2168     06F6  2EF8               	goto	u790
  2169     06F7                     u791:
  2170     06F7  2EFC               	goto	l172
  2171     06F8                     u790:
  2172     06F8                     l1372:
  2173     06F8  0872               	movf	___wmul@multiplicand,w
  2174     06F9  07F4               	addwf	___wmul@product,f
  2175     06FA  0873               	movf	___wmul@multiplicand+1,w
  2176     06FB  3DF5               	addwfc	___wmul@product+1,f
  2177     06FC                     l172:
  2178     06FC  3001               	movlw	1
  2179     06FD                     u805:
  2180     06FD  35F2               	lslf	___wmul@multiplicand,f
  2181     06FE  0DF3               	rlf	___wmul@multiplicand+1,f
  2182     06FF  0B89               	decfsz	9,f
  2183     0700  2EFD               	goto	u805
  2184     0701                     l1374:
  2185     0701  3001               	movlw	1
  2186     0702                     u815:
  2187     0702  36F1               	lsrf	___wmul@multiplier+1,f
  2188     0703  0CF0               	rrf	___wmul@multiplier,f
  2189     0704  0B89               	decfsz	9,f
  2190     0705  2F02               	goto	u815
  2191     0706                     l1376:
  2192     0706  0870               	movf	___wmul@multiplier,w
  2193     0707  0471               	iorwf	___wmul@multiplier+1,w
  2194     0708  1D03               	btfss	3,2
  2195     0709  2F0B               	goto	u821
  2196     070A  2F0C               	goto	u820
  2197     070B                     u821:
  2198     070B  2EF4               	goto	l1370
  2199     070C                     u820:
  2200     070C                     l1378:
  2201     070C  0875               	movf	___wmul@product+1,w
  2202     070D  00F1               	movwf	?___wmul+1
  2203     070E  0874               	movf	___wmul@product,w
  2204     070F  00F0               	movwf	?___wmul
  2205     0710                     l174:
  2206     0710  0008               	return
  2207     0711                     __end_of___wmul:
  2208                           
  2209                           	psect	text6
  2210     0140                     __ptext6:	
  2211 ;; *************** function _dtoa *****************
  2212 ;; Defined at:
  2213 ;;		line 470 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  2214 ;; Parameters:    Size  Location     Type
  2215 ;;  fp              1    wreg     PTR struct _IO_FILE
  2216 ;;		 -> sprintf@f(11), 
  2217 ;;  d               2   10[BANK0 ] int 
  2218 ;; Auto vars:     Size  Location     Type
  2219 ;;  fp              1   15[BANK0 ] PTR struct _IO_FILE
  2220 ;;		 -> sprintf@f(11), 
  2221 ;;  i               2   20[BANK0 ] int 
  2222 ;;  w               2   18[BANK0 ] int 
  2223 ;;  p               2   16[BANK0 ] int 
  2224 ;;  s               1   22[BANK0 ] unsigned char 
  2225 ;; Return value:  Size  Location     Type
  2226 ;;                  1    wreg      void 
  2227 ;; Registers used:
  2228 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2229 ;; Tracked objects:
  2230 ;;		On entry : 0/0
  2231 ;;		On exit  : 0/0
  2232 ;;		Unchanged: 0/0
  2233 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2234 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2235 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2236 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2237 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2238 ;;Total ram usage:       13 bytes
  2239 ;; Hardware stack levels used: 1
  2240 ;; Hardware stack levels required when called: 5
  2241 ;; This function calls:
  2242 ;;		___awdiv
  2243 ;;		___awmod
  2244 ;;		_abs
  2245 ;;		_pad
  2246 ;; This function is called by:
  2247 ;;		_vfpfcnvrt
  2248 ;; This function uses a non-reentrant model
  2249 ;;
  2250                           
  2251     0140                     _dtoa:	
  2252                           ;psect for function _dtoa
  2253                           
  2254                           
  2255                           ;incstack = 0
  2256                           ; Regs used in _dtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2257                           ;dtoa@fp stored from wreg
  2258     0140  0020               	movlb	0	; select bank0
  2259     0141  00AF               	movwf	dtoa@fp
  2260     0142                     l1486:
  2261                           
  2262                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 470: static void 
      +                          dtoa(FILE *fp, vfpf_sint_t d);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\commo
      +                          n\doprnt.c: 471: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c:
      +                           472:  char s;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 473
      +                          :     int i, p, w;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c:
      +                           476:     s = d < 0 ? 1 : 0;
  2263     0142  1BAB               	btfsc	dtoa@d+1,7
  2264     0143  2945               	goto	u1071
  2265     0144  2947               	goto	u1070
  2266     0145                     u1071:
  2267     0145  3001               	movlw	1
  2268     0146  2948               	goto	u1080
  2269     0147                     u1070:
  2270     0147  3000               	movlw	0
  2271     0148                     u1080:
  2272     0148  00B6               	movwf	dtoa@s
  2273     0149                     l1488:
  2274                           
  2275                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 477:     if (s) {
  2276     0149  0836               	movf	dtoa@s,w
  2277     014A  1903               	btfsc	3,2
  2278     014B  294D               	goto	u1091
  2279     014C  294E               	goto	u1090
  2280     014D                     u1091:
  2281     014D  2953               	goto	l1492
  2282     014E                     u1090:
  2283     014E                     l1490:
  2284                           
  2285                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 478:         d = 
      +                          -d;
  2286     014E  09AA               	comf	dtoa@d,f
  2287     014F  09AB               	comf	dtoa@d+1,f
  2288     0150  0AAA               	incf	dtoa@d,f
  2289     0151  1903               	skipnz
  2290     0152  0AAB               	incf	dtoa@d+1,f
  2291     0153                     l1492:
  2292                           
  2293                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 483:     if (!(pr
      +                          ec < 0)) {
  2294     0153  1BE4               	btfsc	_prec+1,7
  2295     0154  2956               	goto	u1101
  2296     0155  2957               	goto	u1100
  2297     0156                     u1101:
  2298     0156  295B               	goto	l1496
  2299     0157                     u1100:
  2300     0157                     l1494:
  2301                           
  2302                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 484:         flag
      +                          s &= ~(1 << 1);
  2303     0157  30FD               	movlw	253
  2304     0158  00AC               	movwf	??_dtoa
  2305     0159  082C               	movf	??_dtoa,w
  2306     015A  05E7               	andwf	_flags,f
  2307     015B                     l1496:
  2308                           
  2309                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 487:     p = (0 <
      +                          = prec) ? prec : 1;
  2310     015B  1FE4               	btfss	_prec+1,7
  2311     015C  295E               	goto	u1111
  2312     015D  295F               	goto	u1110
  2313     015E                     u1111:
  2314     015E  2964               	goto	l1500
  2315     015F                     u1110:
  2316     015F                     l1498:
  2317     015F  3001               	movlw	1
  2318     0160  00B0               	movwf	dtoa@p
  2319     0161  3000               	movlw	0
  2320     0162  00B1               	movwf	dtoa@p+1
  2321     0163  2968               	goto	l671
  2322     0164                     l1500:
  2323     0164  0864               	movf	_prec+1,w
  2324     0165  00B1               	movwf	dtoa@p+1
  2325     0166  0863               	movf	_prec,w
  2326     0167  00B0               	movwf	dtoa@p
  2327     0168                     l671:
  2328                           
  2329                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 488:     w = widt
      +                          h;
  2330     0168  0862               	movf	_width+1,w
  2331     0169  00B3               	movwf	dtoa@w+1
  2332     016A  0861               	movf	_width,w
  2333     016B  00B2               	movwf	dtoa@w
  2334     016C                     l1502:
  2335                           
  2336                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 489:     if (s
  2337     016C  0836               	movf	dtoa@s,w
  2338     016D  1903               	btfsc	3,2
  2339     016E  2970               	goto	u1121
  2340     016F  2971               	goto	u1120
  2341     0170                     u1121:
  2342     0170  2985               	goto	l672
  2343     0171                     u1120:
  2344     0171                     l1504:
  2345                           
  2346                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 493:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 494:         --w;
  2347     0171  30FF               	movlw	255
  2348     0172  07B2               	addwf	dtoa@w,f
  2349     0173  30FF               	movlw	255
  2350     0174  3DB3               	addwfc	dtoa@w+1,f
  2351     0175                     l1506:
  2352                           
  2353                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 495:   s = s ? '-
      +                          ' : '+';
  2354     0175  0836               	movf	dtoa@s,w
  2355     0176  1D03               	btfss	3,2
  2356     0177  2979               	goto	u1131
  2357     0178  297A               	goto	u1130
  2358     0179                     u1131:
  2359     0179  297F               	goto	l1510
  2360     017A                     u1130:
  2361     017A                     l1508:
  2362     017A  302B               	movlw	43
  2363     017B  00AD               	movwf	_dtoa$645
  2364     017C  3000               	movlw	0
  2365     017D  00AE               	movwf	_dtoa$645+1
  2366     017E  2983               	goto	l676
  2367     017F                     l1510:
  2368     017F  302D               	movlw	45
  2369     0180  00AD               	movwf	_dtoa$645
  2370     0181  3000               	movlw	0
  2371     0182  00AE               	movwf	_dtoa$645+1
  2372     0183                     l676:
  2373     0183  082D               	movf	_dtoa$645,w
  2374     0184  00B6               	movwf	dtoa@s
  2375     0185                     l672:	
  2376                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 496:     }
  2377                           
  2378                           
  2379                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 505:     i = size
      +                          of(dbuf) - 1;
  2380     0185  301F               	movlw	31
  2381     0186  00B4               	movwf	dtoa@i
  2382     0187  3000               	movlw	0
  2383     0188  00B5               	movwf	dtoa@i+1
  2384     0189                     l1512:
  2385                           
  2386                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 506:     dbuf[i] 
      +                          = '\0';
  2387     0189  0021               	movlb	1	; select bank1
  2388     018A  01BF               	clrf	(_dbuf^(0+128)+31)
  2389                           
  2390                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 507:     while (!
      +                          (i < 1) && (d || (0 < p)
  2391     018B  29C3               	goto	l1524
  2392     018C                     l1514:
  2393                           
  2394                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 511:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 512:         --i;
  2395     018C  30FF               	movlw	255
  2396     018D  0020               	movlb	0	; select bank0
  2397     018E  07B4               	addwf	dtoa@i,f
  2398     018F  30FF               	movlw	255
  2399     0190  3DB5               	addwfc	dtoa@i+1,f
  2400     0191                     l1516:
  2401                           
  2402                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 513:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
  2403     0191  0834               	movf	dtoa@i,w
  2404     0192  3EA0               	addlw	(low (_dbuf| 0))& (0+255)
  2405     0193  0086               	movwf	6
  2406     0194  0187               	clrf	7
  2407     0195  300A               	movlw	10
  2408     0196  00F0               	movwf	___awmod@divisor
  2409     0197  3000               	movlw	0
  2410     0198  00F1               	movwf	___awmod@divisor+1
  2411     0199  082B               	movf	dtoa@d+1,w
  2412     019A  00F3               	movwf	___awmod@dividend+1
  2413     019B  082A               	movf	dtoa@d,w
  2414     019C  00F2               	movwf	___awmod@dividend
  2415     019D  3185  2560  3181   	fcall	___awmod
  2416     01A0  0871               	movf	?___awmod+1,w
  2417     01A1  00F8               	movwf	abs@a+1
  2418     01A2  0870               	movf	?___awmod,w
  2419     01A3  00F7               	movwf	abs@a
  2420     01A4  3187  274A  3181   	fcall	_abs
  2421     01A7  0877               	movf	?_abs,w
  2422     01A8  3E30               	addlw	48
  2423     01A9  0081               	movwf	1
  2424     01AA                     l1518:
  2425                           
  2426                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 514:         --p;
  2427     01AA  30FF               	movlw	255
  2428     01AB  0020               	movlb	0	; select bank0
  2429     01AC  07B0               	addwf	dtoa@p,f
  2430     01AD  30FF               	movlw	255
  2431     01AE  3DB1               	addwfc	dtoa@p+1,f
  2432     01AF                     l1520:
  2433                           
  2434                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 515:         --w;
  2435     01AF  30FF               	movlw	255
  2436     01B0  07B2               	addwf	dtoa@w,f
  2437     01B1  30FF               	movlw	255
  2438     01B2  3DB3               	addwfc	dtoa@w+1,f
  2439     01B3                     l1522:
  2440                           
  2441                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 516:         d = 
      +                          d / 10;
  2442     01B3  300A               	movlw	10
  2443     01B4  00F0               	movwf	___awdiv@divisor
  2444     01B5  3000               	movlw	0
  2445     01B6  00F1               	movwf	___awdiv@divisor+1
  2446     01B7  082B               	movf	dtoa@d+1,w
  2447     01B8  00F3               	movwf	___awdiv@dividend+1
  2448     01B9  082A               	movf	dtoa@d,w
  2449     01BA  00F2               	movwf	___awdiv@dividend
  2450     01BB  3185  2501  3181   	fcall	___awdiv
  2451     01BE  0871               	movf	?___awdiv+1,w
  2452     01BF  0020               	movlb	0	; select bank0
  2453     01C0  00AB               	movwf	dtoa@d+1
  2454     01C1  0870               	movf	?___awdiv,w
  2455     01C2  00AA               	movwf	dtoa@d
  2456     01C3                     l1524:
  2457                           
  2458                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 507:     while (!
      +                          (i < 1) && (d || (0 < p)
  2459     01C3  0020               	movlb	0	; select bank0
  2460     01C4  0835               	movf	dtoa@i+1,w
  2461     01C5  3A80               	xorlw	128
  2462     01C6  00AC               	movwf	??_dtoa
  2463     01C7  3080               	movlw	128
  2464     01C8  022C               	subwf	??_dtoa,w
  2465     01C9  1D03               	skipz
  2466     01CA  29CD               	goto	u1145
  2467     01CB  3001               	movlw	1
  2468     01CC  0234               	subwf	dtoa@i,w
  2469     01CD                     u1145:
  2470     01CD  1C03               	skipc
  2471     01CE  29D0               	goto	u1141
  2472     01CF  29D1               	goto	u1140
  2473     01D0                     u1141:
  2474     01D0  29F8               	goto	l1534
  2475     01D1                     u1140:
  2476     01D1                     l1526:
  2477     01D1  0020               	movlb	0	; select bank0
  2478     01D2  082A               	movf	dtoa@d,w
  2479     01D3  042B               	iorwf	dtoa@d+1,w
  2480     01D4  1D03               	btfss	3,2
  2481     01D5  29D7               	goto	u1151
  2482     01D6  29D8               	goto	u1150
  2483     01D7                     u1151:
  2484     01D7  298C               	goto	l1514
  2485     01D8                     u1150:
  2486     01D8                     l1528:
  2487     01D8  0831               	movf	dtoa@p+1,w
  2488     01D9  3A80               	xorlw	128
  2489     01DA  00AC               	movwf	??_dtoa
  2490     01DB  3080               	movlw	128
  2491     01DC  022C               	subwf	??_dtoa,w
  2492     01DD  1D03               	skipz
  2493     01DE  29E1               	goto	u1165
  2494     01DF  3001               	movlw	1
  2495     01E0  0230               	subwf	dtoa@p,w
  2496     01E1                     u1165:
  2497     01E1  1803               	skipnc
  2498     01E2  29E4               	goto	u1161
  2499     01E3  29E5               	goto	u1160
  2500     01E4                     u1161:
  2501     01E4  298C               	goto	l1514
  2502     01E5                     u1160:
  2503     01E5                     l1530:
  2504     01E5  0020               	movlb	0	; select bank0
  2505     01E6  0833               	movf	dtoa@w+1,w
  2506     01E7  3A80               	xorlw	128
  2507     01E8  00AC               	movwf	??_dtoa
  2508     01E9  3080               	movlw	128
  2509     01EA  022C               	subwf	??_dtoa,w
  2510     01EB  1D03               	skipz
  2511     01EC  29EF               	goto	u1175
  2512     01ED  3001               	movlw	1
  2513     01EE  0232               	subwf	dtoa@w,w
  2514     01EF                     u1175:
  2515     01EF  1C03               	skipc
  2516     01F0  29F2               	goto	u1171
  2517     01F1  29F3               	goto	u1170
  2518     01F2                     u1171:
  2519     01F2  29F8               	goto	l1534
  2520     01F3                     u1170:
  2521     01F3                     l1532:
  2522     01F3  0020               	movlb	0	; select bank0
  2523     01F4  18E7               	btfsc	_flags,1
  2524     01F5  29F7               	goto	u1181
  2525     01F6  29F8               	goto	u1180
  2526     01F7                     u1181:
  2527     01F7  298C               	goto	l1514
  2528     01F8                     u1180:
  2529     01F8                     l1534:
  2530                           
  2531                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 520:     if (s !=
      +                           0) {
  2532     01F8  0020               	movlb	0	; select bank0
  2533     01F9  0836               	movf	dtoa@s,w
  2534     01FA  1903               	btfsc	3,2
  2535     01FB  29FD               	goto	u1191
  2536     01FC  29FE               	goto	u1190
  2537     01FD                     u1191:
  2538     01FD  2A08               	goto	l1540
  2539     01FE                     u1190:
  2540     01FE                     l1536:
  2541                           
  2542                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 521:         --i;
  2543     01FE  30FF               	movlw	255
  2544     01FF  07B4               	addwf	dtoa@i,f
  2545     0200  30FF               	movlw	255
  2546     0201  3DB5               	addwfc	dtoa@i+1,f
  2547     0202                     l1538:
  2548                           
  2549                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 522:         dbuf
      +                          [i] = s;
  2550     0202  0834               	movf	dtoa@i,w
  2551     0203  3EA0               	addlw	(low (_dbuf| 0))& (0+255)
  2552     0204  0086               	movwf	6
  2553     0205  0187               	clrf	7
  2554     0206  0836               	movf	dtoa@s,w
  2555     0207  0081               	movwf	1
  2556     0208                     l1540:
  2557                           
  2558                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 526:     return (
      +                          void) pad(fp, &dbuf[i], w);
  2559     0208  0834               	movf	dtoa@i,w
  2560     0209  3EA0               	addlw	(low (_dbuf| 0))& (0+255)
  2561     020A  00FB               	movwf	pad@buf
  2562     020B  0833               	movf	dtoa@w+1,w
  2563     020C  00FD               	movwf	pad@p+1
  2564     020D  0832               	movf	dtoa@w,w
  2565     020E  00FC               	movwf	pad@p
  2566     020F  082F               	movf	dtoa@fp,w
  2567     0210  3186  2603  3181   	fcall	_pad
  2568     0213                     l685:
  2569     0213  0008               	return
  2570     0214                     __end_of_dtoa:
  2571                           
  2572                           	psect	text7
  2573     0603                     __ptext7:	
  2574 ;; *************** function _pad *****************
  2575 ;; Defined at:
  2576 ;;		line 152 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  2577 ;; Parameters:    Size  Location     Type
  2578 ;;  fp              1    wreg     PTR struct _IO_FILE
  2579 ;;		 -> sprintf@f(11), 
  2580 ;;  buf             1   11[COMMON] PTR unsigned char 
  2581 ;;		 -> dbuf(32), 
  2582 ;;  p               2   12[COMMON] int 
  2583 ;; Auto vars:     Size  Location     Type
  2584 ;;  fp              1    9[BANK0 ] PTR struct _IO_FILE
  2585 ;;		 -> sprintf@f(11), 
  2586 ;;  w               2    7[BANK0 ] int 
  2587 ;;  i               2    5[BANK0 ] int 
  2588 ;; Return value:  Size  Location     Type
  2589 ;;                  1    wreg      void 
  2590 ;; Registers used:
  2591 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2592 ;; Tracked objects:
  2593 ;;		On entry : 0/0
  2594 ;;		On exit  : 0/0
  2595 ;;		Unchanged: 0/0
  2596 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2597 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2598 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2599 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2600 ;;      Totals:         3       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2601 ;;Total ram usage:        9 bytes
  2602 ;; Hardware stack levels used: 1
  2603 ;; Hardware stack levels required when called: 4
  2604 ;; This function calls:
  2605 ;;		_fputc
  2606 ;;		_fputs
  2607 ;; This function is called by:
  2608 ;;		_dtoa
  2609 ;; This function uses a non-reentrant model
  2610 ;;
  2611                           
  2612     0603                     _pad:	
  2613                           ;psect for function _pad
  2614                           
  2615                           
  2616                           ;incstack = 0
  2617                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2618                           ;pad@fp stored from wreg
  2619     0603  0020               	movlb	0	; select bank0
  2620     0604  00A9               	movwf	pad@fp
  2621     0605                     l1464:
  2622                           
  2623                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 152: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\com
      +                          mon\doprnt.c: 153: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.
      +                          c: 154:     int i, w;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt
      +                          .c: 158:     if (flags & (1 << 0)) {
  2624     0605  1C67               	btfss	_flags,0
  2625     0606  2E08               	goto	u1021
  2626     0607  2E09               	goto	u1020
  2627     0608                     u1021:
  2628     0608  2E0F               	goto	l1468
  2629     0609                     u1020:
  2630     0609                     l1466:
  2631                           
  2632                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 159:         fput
      +                          s((const char *)buf, fp);
  2633     0609  0829               	movf	pad@fp,w
  2634     060A  00F8               	movwf	fputs@fp
  2635     060B  087B               	movf	pad@buf,w
  2636     060C  3186  26CE  3186   	fcall	_fputs
  2637     060F                     l1468:
  2638                           
  2639                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 164:     w = (p <
      +                           0) ? 0 : p;
  2640     060F  1BFD               	btfsc	pad@p+1,7
  2641     0610  2E12               	goto	u1031
  2642     0611  2E13               	goto	u1030
  2643     0612                     u1031:
  2644     0612  2E19               	goto	l1472
  2645     0613                     u1030:
  2646     0613                     l1470:
  2647     0613  087D               	movf	pad@p+1,w
  2648     0614  0020               	movlb	0	; select bank0
  2649     0615  00A8               	movwf	pad@w+1
  2650     0616  087C               	movf	pad@p,w
  2651     0617  00A7               	movwf	pad@w
  2652     0618  2E1C               	goto	l658
  2653     0619                     l1472:
  2654     0619  0020               	movlb	0	; select bank0
  2655     061A  01A7               	clrf	pad@w
  2656     061B  01A8               	clrf	pad@w+1
  2657     061C                     l658:
  2658                           
  2659                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 165:     i = 0;
  2660     061C  01A5               	clrf	pad@i
  2661     061D  01A6               	clrf	pad@i+1
  2662                           
  2663                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 166:     while (i
      +                           < w) {
  2664     061E  2E2E               	goto	l1478
  2665     061F                     l1474:
  2666                           
  2667                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 167:         fput
      +                          c(' ', fp);
  2668     061F  3020               	movlw	32
  2669     0620  00F0               	movwf	fputc@c
  2670     0621  3000               	movlw	0
  2671     0622  00F1               	movwf	fputc@c+1
  2672     0623  0020               	movlb	0	; select bank0
  2673     0624  0829               	movf	pad@fp,w
  2674     0625  00F2               	movwf	fputc@fp
  2675     0626  3185  25B3  3186   	fcall	_fputc
  2676     0629                     l1476:
  2677                           
  2678                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 168:         ++i;
  2679     0629  3001               	movlw	1
  2680     062A  0020               	movlb	0	; select bank0
  2681     062B  07A5               	addwf	pad@i,f
  2682     062C  3000               	movlw	0
  2683     062D  3DA6               	addwfc	pad@i+1,f
  2684     062E                     l1478:
  2685                           
  2686                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 166:     while (i
      +                           < w) {
  2687     062E  0826               	movf	pad@i+1,w
  2688     062F  3A80               	xorlw	128
  2689     0630  00A4               	movwf	??_pad
  2690     0631  0828               	movf	pad@w+1,w
  2691     0632  3A80               	xorlw	128
  2692     0633  0224               	subwf	??_pad,w
  2693     0634  1D03               	skipz
  2694     0635  2E38               	goto	u1045
  2695     0636  0827               	movf	pad@w,w
  2696     0637  0225               	subwf	pad@i,w
  2697     0638                     u1045:
  2698     0638  1C03               	skipc
  2699     0639  2E3B               	goto	u1041
  2700     063A  2E3C               	goto	u1040
  2701     063B                     u1041:
  2702     063B  2E1F               	goto	l1474
  2703     063C                     u1040:
  2704     063C                     l661:
  2705                           
  2706                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 173:     if (!(fl
      +                          ags & (1 << 0))) {
  2707     063C  0020               	movlb	0	; select bank0
  2708     063D  1867               	btfsc	_flags,0
  2709     063E  2E40               	goto	u1051
  2710     063F  2E41               	goto	u1050
  2711     0640                     u1051:
  2712     0640  2E47               	goto	l663
  2713     0641                     u1050:
  2714     0641                     l1480:
  2715                           
  2716                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 175:         fput
      +                          s((const char *)buf, fp);
  2717     0641  0829               	movf	pad@fp,w
  2718     0642  00F8               	movwf	fputs@fp
  2719     0643  087B               	movf	pad@buf,w
  2720     0644  3186  26CE  3186   	fcall	_fputs
  2721     0647                     l663:
  2722     0647  0008               	return
  2723     0648                     __end_of_pad:
  2724                           
  2725                           	psect	text8
  2726     06CE                     __ptext8:	
  2727 ;; *************** function _fputs *****************
  2728 ;; Defined at:
  2729 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_fputs.c"
  2730 ;; Parameters:    Size  Location     Type
  2731 ;;  s               1    wreg     PTR const unsigned char 
  2732 ;;		 -> dbuf(32), 
  2733 ;;  fp              1    8[COMMON] PTR struct _IO_FILE
  2734 ;;		 -> sprintf@f(11), 
  2735 ;; Auto vars:     Size  Location     Type
  2736 ;;  s               1    3[BANK0 ] PTR const unsigned char 
  2737 ;;		 -> dbuf(32), 
  2738 ;;  i               2    1[BANK0 ] int 
  2739 ;;  c               1    0[BANK0 ] unsigned char 
  2740 ;; Return value:  Size  Location     Type
  2741 ;;                  2    8[COMMON] int 
  2742 ;; Registers used:
  2743 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2744 ;; Tracked objects:
  2745 ;;		On entry : 0/0
  2746 ;;		On exit  : 0/0
  2747 ;;		Unchanged: 0/0
  2748 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2749 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2750 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2751 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2752 ;;      Totals:         3       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2753 ;;Total ram usage:        7 bytes
  2754 ;; Hardware stack levels used: 1
  2755 ;; Hardware stack levels required when called: 3
  2756 ;; This function calls:
  2757 ;;		_fputc
  2758 ;; This function is called by:
  2759 ;;		_pad
  2760 ;; This function uses a non-reentrant model
  2761 ;;
  2762                           
  2763     06CE                     _fputs:	
  2764                           ;psect for function _fputs
  2765                           
  2766                           
  2767                           ;incstack = 0
  2768                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2769                           ;fputs@s stored from wreg
  2770     06CE  0020               	movlb	0	; select bank0
  2771     06CF  00A3               	movwf	fputs@s
  2772     06D0                     l1360:
  2773     06D0  01A1               	clrf	fputs@i
  2774     06D1  01A2               	clrf	fputs@i+1
  2775     06D2  2EE4               	goto	l1366
  2776     06D3                     l1362:
  2777     06D3  0820               	movf	fputs@c,w
  2778     06D4  00F9               	movwf	??_fputs
  2779     06D5  01FA               	clrf	??_fputs+1
  2780     06D6  0879               	movf	??_fputs,w
  2781     06D7  00F0               	movwf	fputc@c
  2782     06D8  087A               	movf	??_fputs+1,w
  2783     06D9  00F1               	movwf	fputc@c+1
  2784     06DA  0878               	movf	fputs@fp,w
  2785     06DB  00F2               	movwf	fputc@fp
  2786     06DC  3185  25B3  3186   	fcall	_fputc
  2787     06DF                     l1364:
  2788     06DF  3001               	movlw	1
  2789     06E0  0020               	movlb	0	; select bank0
  2790     06E1  07A1               	addwf	fputs@i,f
  2791     06E2  3000               	movlw	0
  2792     06E3  3DA2               	addwfc	fputs@i+1,f
  2793     06E4                     l1366:
  2794     06E4  0821               	movf	fputs@i,w
  2795     06E5  0723               	addwf	fputs@s,w
  2796     06E6  00F9               	movwf	??_fputs
  2797     06E7  0879               	movf	??_fputs,w
  2798     06E8  0086               	movwf	6
  2799     06E9  0187               	clrf	7
  2800     06EA  0801               	movf	1,w
  2801     06EB  00A0               	movwf	fputs@c
  2802     06EC  0820               	movf	fputs@c,w
  2803     06ED  1D03               	btfss	3,2
  2804     06EE  2EF0               	goto	u781
  2805     06EF  2EF1               	goto	u780
  2806     06F0                     u781:
  2807     06F0  2ED3               	goto	l1362
  2808     06F1                     u780:
  2809     06F1                     l741:
  2810     06F1  0008               	return
  2811     06F2                     __end_of_fputs:
  2812                           
  2813                           	psect	text9
  2814     05B3                     __ptext9:	
  2815 ;; *************** function _fputc *****************
  2816 ;; Defined at:
  2817 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_fputc.c"
  2818 ;; Parameters:    Size  Location     Type
  2819 ;;  c               2    0[COMMON] int 
  2820 ;;  fp              1    2[COMMON] PTR struct _IO_FILE
  2821 ;;		 -> sprintf@f(11), 
  2822 ;; Auto vars:     Size  Location     Type
  2823 ;;		None
  2824 ;; Return value:  Size  Location     Type
  2825 ;;                  2    0[COMMON] int 
  2826 ;; Registers used:
  2827 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2828 ;; Tracked objects:
  2829 ;;		On entry : 0/0
  2830 ;;		On exit  : 0/0
  2831 ;;		Unchanged: 0/0
  2832 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2833 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2834 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2835 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2836 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2837 ;;Total ram usage:        8 bytes
  2838 ;; Hardware stack levels used: 1
  2839 ;; Hardware stack levels required when called: 2
  2840 ;; This function calls:
  2841 ;;		_putch
  2842 ;; This function is called by:
  2843 ;;		_pad
  2844 ;;		_vfpfcnvrt
  2845 ;;		_fputs
  2846 ;; This function uses a non-reentrant model
  2847 ;;
  2848                           
  2849     05B3                     _fputc:	
  2850                           ;psect for function _fputc
  2851                           
  2852     05B3                     l1344:	
  2853                           ;incstack = 0
  2854                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2855                           
  2856     05B3  0872               	movf	fputc@fp,w
  2857     05B4  1903               	btfsc	3,2
  2858     05B5  2DB7               	goto	u741
  2859     05B6  2DB8               	goto	u740
  2860     05B7                     u741:
  2861     05B7  2DBD               	goto	l1348
  2862     05B8                     u740:
  2863     05B8                     l1346:
  2864     05B8  0872               	movf	fputc@fp,w
  2865     05B9  1D03               	btfss	3,2
  2866     05BA  2DBC               	goto	u751
  2867     05BB  2DBD               	goto	u750
  2868     05BC                     u751:
  2869     05BC  2DC2               	goto	l1350
  2870     05BD                     u750:
  2871     05BD                     l1348:
  2872     05BD  0870               	movf	fputc@c,w
  2873     05BE  3187  27A2  3185   	fcall	_putch
  2874     05C1  2E02               	goto	l733
  2875     05C2                     l1350:
  2876     05C2  0872               	movf	fputc@fp,w
  2877     05C3  3E09               	addlw	9
  2878     05C4  0086               	movwf	6
  2879     05C5  0187               	clrf	7
  2880     05C6  0016               	moviw fsr1++
  2881     05C7  0401               	iorwf	1,w
  2882     05C8  1903               	btfsc	3,2
  2883     05C9  2DCB               	goto	u761
  2884     05CA  2DCC               	goto	u760
  2885     05CB                     u761:
  2886     05CB  2DEA               	goto	l1354
  2887     05CC                     u760:
  2888     05CC                     l1352:
  2889     05CC  0872               	movf	fputc@fp,w
  2890     05CD  3E09               	addlw	9
  2891     05CE  0086               	movwf	6
  2892     05CF  0187               	clrf	7
  2893     05D0  3F40               	moviw [0]fsr1
  2894     05D1  00F3               	movwf	??_fputc
  2895     05D2  3F41               	moviw [1]fsr1
  2896     05D3  00F4               	movwf	??_fputc+1
  2897     05D4  0872               	movf	fputc@fp,w
  2898     05D5  3E02               	addlw	2
  2899     05D6  0086               	movwf	6
  2900     05D7  0187               	clrf	7
  2901     05D8  3F40               	moviw [0]fsr1
  2902     05D9  00F5               	movwf	??_fputc+2
  2903     05DA  3F41               	moviw [1]fsr1
  2904     05DB  00F6               	movwf	??_fputc+3
  2905     05DC  0876               	movf	??_fputc+3,w
  2906     05DD  3A80               	xorlw	128
  2907     05DE  00F7               	movwf	??_fputc+4
  2908     05DF  0874               	movf	??_fputc+1,w
  2909     05E0  3A80               	xorlw	128
  2910     05E1  0277               	subwf	??_fputc+4,w
  2911     05E2  1D03               	skipz
  2912     05E3  2DE6               	goto	u775
  2913     05E4  0873               	movf	??_fputc,w
  2914     05E5  0275               	subwf	??_fputc+2,w
  2915     05E6                     u775:
  2916     05E6  1803               	skipnc
  2917     05E7  2DE9               	goto	u771
  2918     05E8  2DEA               	goto	u770
  2919     05E9                     u771:
  2920     05E9  2E02               	goto	l733
  2921     05EA                     u770:
  2922     05EA                     l1354:
  2923     05EA  0872               	movf	fputc@fp,w
  2924     05EB  0086               	movwf	6
  2925     05EC  0187               	clrf	7
  2926     05ED  0872               	movf	fputc@fp,w
  2927     05EE  3E02               	addlw	2
  2928     05EF  0084               	movwf	4
  2929     05F0  0185               	clrf	5
  2930     05F1  0800               	movf	0,w
  2931     05F2  0701               	addwf	1,w
  2932     05F3  00F3               	movwf	??_fputc
  2933     05F4  0873               	movf	??_fputc,w
  2934     05F5  0086               	movwf	6
  2935     05F6  0187               	clrf	7
  2936     05F7  0870               	movf	fputc@c,w
  2937     05F8  0081               	movwf	1
  2938     05F9                     l1356:
  2939     05F9  0872               	movf	fputc@fp,w
  2940     05FA  3E02               	addlw	2
  2941     05FB  0086               	movwf	6
  2942     05FC  0187               	clrf	7
  2943     05FD  3001               	movlw	1
  2944     05FE  0781               	addwf	1,f
  2945     05FF  3141               	addfsr 1,1
  2946     0600  1803               	skipnc
  2947     0601  0A81               	incf	1,f
  2948     0602                     l733:
  2949     0602  0008               	return
  2950     0603                     __end_of_fputc:
  2951                           
  2952                           	psect	text10
  2953     07A2                     __ptext10:	
  2954 ;; *************** function _putch *****************
  2955 ;; Defined at:
  2956 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\putch.c"
  2957 ;; Parameters:    Size  Location     Type
  2958 ;;  c               1    wreg     unsigned char 
  2959 ;; Auto vars:     Size  Location     Type
  2960 ;;  c               1    0[COMMON] unsigned char 
  2961 ;; Return value:  Size  Location     Type
  2962 ;;                  1    wreg      void 
  2963 ;; Registers used:
  2964 ;;		wreg
  2965 ;; Tracked objects:
  2966 ;;		On entry : 0/0
  2967 ;;		On exit  : 0/0
  2968 ;;		Unchanged: 0/0
  2969 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2970 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2971 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2972 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2973 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2974 ;;Total ram usage:        0 bytes
  2975 ;; Hardware stack levels used: 1
  2976 ;; Hardware stack levels required when called: 1
  2977 ;; This function calls:
  2978 ;;		Nothing
  2979 ;; This function is called by:
  2980 ;;		_fputc
  2981 ;; This function uses a non-reentrant model
  2982 ;;
  2983                           
  2984     07A2                     _putch:	
  2985                           ;psect for function _putch
  2986                           
  2987     07A2                     l744:	
  2988                           ;incstack = 0
  2989                           ; Regs used in _putch: [wreg]
  2990                           
  2991     07A2  0008               	return
  2992     07A3                     __end_of_putch:
  2993                           
  2994                           	psect	text11
  2995     074A                     __ptext11:	
  2996 ;; *************** function _abs *****************
  2997 ;; Defined at:
  2998 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\abs.c"
  2999 ;; Parameters:    Size  Location     Type
  3000 ;;  a               2    7[COMMON] int 
  3001 ;; Auto vars:     Size  Location     Type
  3002 ;;		None
  3003 ;; Return value:  Size  Location     Type
  3004 ;;                  2    7[COMMON] int 
  3005 ;; Registers used:
  3006 ;;		wreg, status,2, status,0
  3007 ;; Tracked objects:
  3008 ;;		On entry : 0/0
  3009 ;;		On exit  : 0/0
  3010 ;;		Unchanged: 0/0
  3011 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3012 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3013 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3014 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3015 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3016 ;;Total ram usage:        4 bytes
  3017 ;; Hardware stack levels used: 1
  3018 ;; Hardware stack levels required when called: 1
  3019 ;; This function calls:
  3020 ;;		Nothing
  3021 ;; This function is called by:
  3022 ;;		_dtoa
  3023 ;; This function uses a non-reentrant model
  3024 ;;
  3025                           
  3026     074A                     _abs:	
  3027                           ;psect for function _abs
  3028                           
  3029     074A                     l1482:	
  3030                           ;incstack = 0
  3031                           ; Regs used in _abs: [wreg+status,2+status,0]
  3032                           
  3033     074A  0878               	movf	abs@a+1,w
  3034     074B  3A80               	xorlw	128
  3035     074C  00F9               	movwf	??_abs
  3036     074D  3080               	movlw	128
  3037     074E  0279               	subwf	??_abs,w
  3038     074F  1D03               	skipz
  3039     0750  2F53               	goto	u1065
  3040     0751  3001               	movlw	1
  3041     0752  0277               	subwf	abs@a,w
  3042     0753                     u1065:
  3043     0753  1803               	skipnc
  3044     0754  2F56               	goto	u1061
  3045     0755  2F57               	goto	u1060
  3046     0756                     u1061:
  3047     0756  2F63               	goto	l718
  3048     0757                     u1060:
  3049     0757                     l1484:
  3050     0757  0977               	comf	abs@a,w
  3051     0758  00F9               	movwf	??_abs
  3052     0759  0978               	comf	abs@a+1,w
  3053     075A  00FA               	movwf	??_abs+1
  3054     075B  0AF9               	incf	??_abs,f
  3055     075C  1903               	skipnz
  3056     075D  0AFA               	incf	??_abs+1,f
  3057     075E  0879               	movf	??_abs,w
  3058     075F  00F7               	movwf	?_abs
  3059     0760  087A               	movf	??_abs+1,w
  3060     0761  00F8               	movwf	?_abs+1
  3061     0762  2F63               	goto	l721
  3062     0763                     l718:
  3063     0763                     l721:
  3064     0763  0008               	return
  3065     0764                     __end_of_abs:
  3066                           
  3067                           	psect	text12
  3068     0560                     __ptext12:	
  3069 ;; *************** function ___awmod *****************
  3070 ;; Defined at:
  3071 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awmod.c"
  3072 ;; Parameters:    Size  Location     Type
  3073 ;;  divisor         2    0[COMMON] int 
  3074 ;;  dividend        2    2[COMMON] int 
  3075 ;; Auto vars:     Size  Location     Type
  3076 ;;  sign            1    6[COMMON] unsigned char 
  3077 ;;  counter         1    5[COMMON] unsigned char 
  3078 ;; Return value:  Size  Location     Type
  3079 ;;                  2    0[COMMON] int 
  3080 ;; Registers used:
  3081 ;;		wreg, status,2, status,0
  3082 ;; Tracked objects:
  3083 ;;		On entry : 0/0
  3084 ;;		On exit  : 0/0
  3085 ;;		Unchanged: 0/0
  3086 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3087 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3088 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3089 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3090 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3091 ;;Total ram usage:        7 bytes
  3092 ;; Hardware stack levels used: 1
  3093 ;; Hardware stack levels required when called: 1
  3094 ;; This function calls:
  3095 ;;		Nothing
  3096 ;; This function is called by:
  3097 ;;		_dtoa
  3098 ;; This function uses a non-reentrant model
  3099 ;;
  3100                           
  3101     0560                     ___awmod:	
  3102                           ;psect for function ___awmod
  3103                           
  3104     0560                     l1426:	
  3105                           ;incstack = 0
  3106                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3107                           
  3108     0560  01F6               	clrf	___awmod@sign
  3109     0561                     l1428:
  3110     0561  1FF3               	btfss	___awmod@dividend+1,7
  3111     0562  2D64               	goto	u931
  3112     0563  2D65               	goto	u930
  3113     0564                     u931:
  3114     0564  2D6C               	goto	l1434
  3115     0565                     u930:
  3116     0565                     l1430:
  3117     0565  09F2               	comf	___awmod@dividend,f
  3118     0566  09F3               	comf	___awmod@dividend+1,f
  3119     0567  0AF2               	incf	___awmod@dividend,f
  3120     0568  1903               	skipnz
  3121     0569  0AF3               	incf	___awmod@dividend+1,f
  3122     056A                     l1432:
  3123     056A  01F6               	clrf	___awmod@sign
  3124     056B  0AF6               	incf	___awmod@sign,f
  3125     056C                     l1434:
  3126     056C  1FF1               	btfss	___awmod@divisor+1,7
  3127     056D  2D6F               	goto	u941
  3128     056E  2D70               	goto	u940
  3129     056F                     u941:
  3130     056F  2D75               	goto	l1438
  3131     0570                     u940:
  3132     0570                     l1436:
  3133     0570  09F0               	comf	___awmod@divisor,f
  3134     0571  09F1               	comf	___awmod@divisor+1,f
  3135     0572  0AF0               	incf	___awmod@divisor,f
  3136     0573  1903               	skipnz
  3137     0574  0AF1               	incf	___awmod@divisor+1,f
  3138     0575                     l1438:
  3139     0575  0870               	movf	___awmod@divisor,w
  3140     0576  0471               	iorwf	___awmod@divisor+1,w
  3141     0577  1903               	btfsc	3,2
  3142     0578  2D7A               	goto	u951
  3143     0579  2D7B               	goto	u950
  3144     057A                     u951:
  3145     057A  2DA4               	goto	l1456
  3146     057B                     u950:
  3147     057B                     l1440:
  3148     057B  01F5               	clrf	___awmod@counter
  3149     057C  0AF5               	incf	___awmod@counter,f
  3150     057D  2D87               	goto	l1446
  3151     057E                     l1442:
  3152     057E  3001               	movlw	1
  3153     057F                     u965:
  3154     057F  35F0               	lslf	___awmod@divisor,f
  3155     0580  0DF1               	rlf	___awmod@divisor+1,f
  3156     0581  0B89               	decfsz	9,f
  3157     0582  2D7F               	goto	u965
  3158     0583                     l1444:
  3159     0583  3001               	movlw	1
  3160     0584  00F4               	movwf	??___awmod
  3161     0585  0874               	movf	??___awmod,w
  3162     0586  07F5               	addwf	___awmod@counter,f
  3163     0587                     l1446:
  3164     0587  1FF1               	btfss	___awmod@divisor+1,7
  3165     0588  2D8A               	goto	u971
  3166     0589  2D8B               	goto	u970
  3167     058A                     u971:
  3168     058A  2D7E               	goto	l1442
  3169     058B                     u970:
  3170     058B                     l1448:
  3171     058B  0871               	movf	___awmod@divisor+1,w
  3172     058C  0273               	subwf	___awmod@dividend+1,w
  3173     058D  1D03               	skipz
  3174     058E  2D91               	goto	u985
  3175     058F  0870               	movf	___awmod@divisor,w
  3176     0590  0272               	subwf	___awmod@dividend,w
  3177     0591                     u985:
  3178     0591  1C03               	skipc
  3179     0592  2D94               	goto	u981
  3180     0593  2D95               	goto	u980
  3181     0594                     u981:
  3182     0594  2D99               	goto	l1452
  3183     0595                     u980:
  3184     0595                     l1450:
  3185     0595  0870               	movf	___awmod@divisor,w
  3186     0596  02F2               	subwf	___awmod@dividend,f
  3187     0597  0871               	movf	___awmod@divisor+1,w
  3188     0598  3BF3               	subwfb	___awmod@dividend+1,f
  3189     0599                     l1452:
  3190     0599  3001               	movlw	1
  3191     059A                     u995:
  3192     059A  36F1               	lsrf	___awmod@divisor+1,f
  3193     059B  0CF0               	rrf	___awmod@divisor,f
  3194     059C  0B89               	decfsz	9,f
  3195     059D  2D9A               	goto	u995
  3196     059E                     l1454:
  3197     059E  3001               	movlw	1
  3198     059F  02F5               	subwf	___awmod@counter,f
  3199     05A0  1D03               	btfss	3,2
  3200     05A1  2DA3               	goto	u1001
  3201     05A2  2DA4               	goto	u1000
  3202     05A3                     u1001:
  3203     05A3  2D8B               	goto	l1448
  3204     05A4                     u1000:
  3205     05A4                     l1456:
  3206     05A4  0876               	movf	___awmod@sign,w
  3207     05A5  1903               	btfsc	3,2
  3208     05A6  2DA8               	goto	u1011
  3209     05A7  2DA9               	goto	u1010
  3210     05A8                     u1011:
  3211     05A8  2DAE               	goto	l1460
  3212     05A9                     u1010:
  3213     05A9                     l1458:
  3214     05A9  09F2               	comf	___awmod@dividend,f
  3215     05AA  09F3               	comf	___awmod@dividend+1,f
  3216     05AB  0AF2               	incf	___awmod@dividend,f
  3217     05AC  1903               	skipnz
  3218     05AD  0AF3               	incf	___awmod@dividend+1,f
  3219     05AE                     l1460:
  3220     05AE  0873               	movf	___awmod@dividend+1,w
  3221     05AF  00F1               	movwf	?___awmod+1
  3222     05B0  0872               	movf	___awmod@dividend,w
  3223     05B1  00F0               	movwf	?___awmod
  3224     05B2                     l338:
  3225     05B2  0008               	return
  3226     05B3                     __end_of___awmod:
  3227                           
  3228                           	psect	text13
  3229     0501                     __ptext13:	
  3230 ;; *************** function ___awdiv *****************
  3231 ;; Defined at:
  3232 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awdiv.c"
  3233 ;; Parameters:    Size  Location     Type
  3234 ;;  divisor         2    0[COMMON] int 
  3235 ;;  dividend        2    2[COMMON] int 
  3236 ;; Auto vars:     Size  Location     Type
  3237 ;;  quotient        2    7[COMMON] int 
  3238 ;;  sign            1    6[COMMON] unsigned char 
  3239 ;;  counter         1    5[COMMON] unsigned char 
  3240 ;; Return value:  Size  Location     Type
  3241 ;;                  2    0[COMMON] int 
  3242 ;; Registers used:
  3243 ;;		wreg, status,2, status,0
  3244 ;; Tracked objects:
  3245 ;;		On entry : 0/0
  3246 ;;		On exit  : 0/0
  3247 ;;		Unchanged: 0/0
  3248 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3249 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3250 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3251 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3252 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3253 ;;Total ram usage:        9 bytes
  3254 ;; Hardware stack levels used: 1
  3255 ;; Hardware stack levels required when called: 1
  3256 ;; This function calls:
  3257 ;;		Nothing
  3258 ;; This function is called by:
  3259 ;;		_dtoa
  3260 ;; This function uses a non-reentrant model
  3261 ;;
  3262                           
  3263     0501                     ___awdiv:	
  3264                           ;psect for function ___awdiv
  3265                           
  3266     0501                     l1382:	
  3267                           ;incstack = 0
  3268                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3269                           
  3270     0501  01F6               	clrf	___awdiv@sign
  3271     0502                     l1384:
  3272     0502  1FF1               	btfss	___awdiv@divisor+1,7
  3273     0503  2D05               	goto	u831
  3274     0504  2D06               	goto	u830
  3275     0505                     u831:
  3276     0505  2D0D               	goto	l1390
  3277     0506                     u830:
  3278     0506                     l1386:
  3279     0506  09F0               	comf	___awdiv@divisor,f
  3280     0507  09F1               	comf	___awdiv@divisor+1,f
  3281     0508  0AF0               	incf	___awdiv@divisor,f
  3282     0509  1903               	skipnz
  3283     050A  0AF1               	incf	___awdiv@divisor+1,f
  3284     050B                     l1388:
  3285     050B  01F6               	clrf	___awdiv@sign
  3286     050C  0AF6               	incf	___awdiv@sign,f
  3287     050D                     l1390:
  3288     050D  1FF3               	btfss	___awdiv@dividend+1,7
  3289     050E  2D10               	goto	u841
  3290     050F  2D11               	goto	u840
  3291     0510                     u841:
  3292     0510  2D1A               	goto	l1396
  3293     0511                     u840:
  3294     0511                     l1392:
  3295     0511  09F2               	comf	___awdiv@dividend,f
  3296     0512  09F3               	comf	___awdiv@dividend+1,f
  3297     0513  0AF2               	incf	___awdiv@dividend,f
  3298     0514  1903               	skipnz
  3299     0515  0AF3               	incf	___awdiv@dividend+1,f
  3300     0516                     l1394:
  3301     0516  3001               	movlw	1
  3302     0517  00F4               	movwf	??___awdiv
  3303     0518  0874               	movf	??___awdiv,w
  3304     0519  06F6               	xorwf	___awdiv@sign,f
  3305     051A                     l1396:
  3306     051A  01F7               	clrf	___awdiv@quotient
  3307     051B  01F8               	clrf	___awdiv@quotient+1
  3308     051C                     l1398:
  3309     051C  0870               	movf	___awdiv@divisor,w
  3310     051D  0471               	iorwf	___awdiv@divisor+1,w
  3311     051E  1903               	btfsc	3,2
  3312     051F  2D21               	goto	u851
  3313     0520  2D22               	goto	u850
  3314     0521                     u851:
  3315     0521  2D51               	goto	l1418
  3316     0522                     u850:
  3317     0522                     l1400:
  3318     0522  01F5               	clrf	___awdiv@counter
  3319     0523  0AF5               	incf	___awdiv@counter,f
  3320     0524  2D2E               	goto	l1406
  3321     0525                     l1402:
  3322     0525  3001               	movlw	1
  3323     0526                     u865:
  3324     0526  35F0               	lslf	___awdiv@divisor,f
  3325     0527  0DF1               	rlf	___awdiv@divisor+1,f
  3326     0528  0B89               	decfsz	9,f
  3327     0529  2D26               	goto	u865
  3328     052A                     l1404:
  3329     052A  3001               	movlw	1
  3330     052B  00F4               	movwf	??___awdiv
  3331     052C  0874               	movf	??___awdiv,w
  3332     052D  07F5               	addwf	___awdiv@counter,f
  3333     052E                     l1406:
  3334     052E  1FF1               	btfss	___awdiv@divisor+1,7
  3335     052F  2D31               	goto	u871
  3336     0530  2D32               	goto	u870
  3337     0531                     u871:
  3338     0531  2D25               	goto	l1402
  3339     0532                     u870:
  3340     0532                     l1408:
  3341     0532  3001               	movlw	1
  3342     0533                     u885:
  3343     0533  35F7               	lslf	___awdiv@quotient,f
  3344     0534  0DF8               	rlf	___awdiv@quotient+1,f
  3345     0535  0B89               	decfsz	9,f
  3346     0536  2D33               	goto	u885
  3347     0537  0871               	movf	___awdiv@divisor+1,w
  3348     0538  0273               	subwf	___awdiv@dividend+1,w
  3349     0539  1D03               	skipz
  3350     053A  2D3D               	goto	u895
  3351     053B  0870               	movf	___awdiv@divisor,w
  3352     053C  0272               	subwf	___awdiv@dividend,w
  3353     053D                     u895:
  3354     053D  1C03               	skipc
  3355     053E  2D40               	goto	u891
  3356     053F  2D41               	goto	u890
  3357     0540                     u891:
  3358     0540  2D46               	goto	l1414
  3359     0541                     u890:
  3360     0541                     l1410:
  3361     0541  0870               	movf	___awdiv@divisor,w
  3362     0542  02F2               	subwf	___awdiv@dividend,f
  3363     0543  0871               	movf	___awdiv@divisor+1,w
  3364     0544  3BF3               	subwfb	___awdiv@dividend+1,f
  3365     0545                     l1412:
  3366     0545  1477               	bsf	___awdiv@quotient,0
  3367     0546                     l1414:
  3368     0546  3001               	movlw	1
  3369     0547                     u905:
  3370     0547  36F1               	lsrf	___awdiv@divisor+1,f
  3371     0548  0CF0               	rrf	___awdiv@divisor,f
  3372     0549  0B89               	decfsz	9,f
  3373     054A  2D47               	goto	u905
  3374     054B                     l1416:
  3375     054B  3001               	movlw	1
  3376     054C  02F5               	subwf	___awdiv@counter,f
  3377     054D  1D03               	btfss	3,2
  3378     054E  2D50               	goto	u911
  3379     054F  2D51               	goto	u910
  3380     0550                     u911:
  3381     0550  2D32               	goto	l1408
  3382     0551                     u910:
  3383     0551                     l1418:
  3384     0551  0876               	movf	___awdiv@sign,w
  3385     0552  1903               	btfsc	3,2
  3386     0553  2D55               	goto	u921
  3387     0554  2D56               	goto	u920
  3388     0555                     u921:
  3389     0555  2D5B               	goto	l1422
  3390     0556                     u920:
  3391     0556                     l1420:
  3392     0556  09F7               	comf	___awdiv@quotient,f
  3393     0557  09F8               	comf	___awdiv@quotient+1,f
  3394     0558  0AF7               	incf	___awdiv@quotient,f
  3395     0559  1903               	skipnz
  3396     055A  0AF8               	incf	___awdiv@quotient+1,f
  3397     055B                     l1422:
  3398     055B  0878               	movf	___awdiv@quotient+1,w
  3399     055C  00F1               	movwf	?___awdiv+1
  3400     055D  0877               	movf	___awdiv@quotient,w
  3401     055E  00F0               	movwf	?___awdiv
  3402     055F                     l325:
  3403     055F  0008               	return
  3404     0560                     __end_of___awdiv:
  3405                           
  3406                           	psect	text14
  3407     0786                     __ptext14:	
  3408 ;; *************** function _TMR0_temporizador *****************
  3409 ;; Defined at:
  3410 ;;		line 17 in file "main.c"
  3411 ;; Parameters:    Size  Location     Type
  3412 ;;		None
  3413 ;; Auto vars:     Size  Location     Type
  3414 ;;		None
  3415 ;; Return value:  Size  Location     Type
  3416 ;;                  1    wreg      void 
  3417 ;; Registers used:
  3418 ;;		wreg
  3419 ;; Tracked objects:
  3420 ;;		On entry : 0/0
  3421 ;;		On exit  : 0/0
  3422 ;;		Unchanged: 0/0
  3423 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3424 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3425 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3426 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3427 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3428 ;;Total ram usage:        0 bytes
  3429 ;; Hardware stack levels used: 1
  3430 ;; Hardware stack levels required when called: 1
  3431 ;; This function calls:
  3432 ;;		Nothing
  3433 ;; This function is called by:
  3434 ;;		_main
  3435 ;; This function uses a non-reentrant model
  3436 ;;
  3437                           
  3438     0786                     _TMR0_temporizador:	
  3439                           ;psect for function _TMR0_temporizador
  3440                           
  3441     0786                     l1768:	
  3442                           ;incstack = 0
  3443                           ; Regs used in _TMR0_temporizador: [wreg]
  3444                           
  3445                           
  3446                           ;main.c: 18: 
  3447     0786  3006               	movlw	6
  3448     0787  0021               	movlb	1	; select bank1
  3449     0788  0095               	movwf	21	;volatile
  3450                           
  3451                           ;main.c: 19: 
  3452     0789  307D               	movlw	125
  3453     078A  0020               	movlb	0	; select bank0
  3454     078B  0095               	movwf	21	;volatile
  3455     078C                     l1770:
  3456                           
  3457                           ;main.c: 20: void main(void) {
  3458     078C  110B               	bcf	11,2	;volatile
  3459     078D                     l1772:
  3460                           
  3461                           ;main.c: 21: 
  3462     078D  168B               	bsf	11,5	;volatile
  3463     078E                     l88:
  3464     078E  0008               	return
  3465     078F                     __end_of_TMR0_temporizador:
  3466                           
  3467                           	psect	text15
  3468     0648                     __ptext15:	
  3469 ;; *************** function _Lcd_Out2 *****************
  3470 ;; Defined at:
  3471 ;;		line 115 in file "./flex_lcd.h"
  3472 ;; Parameters:    Size  Location     Type
  3473 ;;  y               1    wreg     unsigned char 
  3474 ;;  x               1    3[COMMON] unsigned char 
  3475 ;;  buffer          2    4[COMMON] PTR unsigned char 
  3476 ;;		 -> STR_4(12), buffer2(20), buffer1(20), 
  3477 ;; Auto vars:     Size  Location     Type
  3478 ;;  y               1    8[COMMON] unsigned char 
  3479 ;;  data            1    9[COMMON] unsigned char 
  3480 ;; Return value:  Size  Location     Type
  3481 ;;                  1    wreg      void 
  3482 ;; Registers used:
  3483 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3484 ;; Tracked objects:
  3485 ;;		On entry : 0/0
  3486 ;;		On exit  : 0/0
  3487 ;;		Unchanged: 0/0
  3488 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3489 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3490 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3491 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3492 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3493 ;;Total ram usage:        7 bytes
  3494 ;; Hardware stack levels used: 1
  3495 ;; Hardware stack levels required when called: 2
  3496 ;; This function calls:
  3497 ;;		_Lcd_Chr_CP
  3498 ;;		_Lcd_Cmd
  3499 ;; This function is called by:
  3500 ;;		_main
  3501 ;; This function uses a non-reentrant model
  3502 ;;
  3503                           
  3504     0648                     _Lcd_Out2:	
  3505                           ;psect for function _Lcd_Out2
  3506                           
  3507                           
  3508                           ;incstack = 0
  3509                           ; Regs used in _Lcd_Out2: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3510                           ;Lcd_Out2@y stored from wreg
  3511     0648  00F8               	movwf	Lcd_Out2@y
  3512     0649                     l1742:
  3513                           
  3514                           ;./flex_lcd.h: 115: void Lcd_Out2(unsigned char y, unsigned char x, char *buffer);./flex
      +                          _lcd.h: 116: {;./flex_lcd.h: 117: unsigned char data;;./flex_lcd.h: 118: switch (y)
  3515     0649  2E5A               	goto	l1754
  3516     064A                     l1744:
  3517     064A  0873               	movf	Lcd_Out2@x,w
  3518     064B  3E80               	addlw	128
  3519     064C  00F9               	movwf	Lcd_Out2@data
  3520     064D  2E70               	goto	l1756
  3521     064E                     l1746:
  3522     064E  0873               	movf	Lcd_Out2@x,w
  3523     064F  3EC0               	addlw	192
  3524     0650  00F9               	movwf	Lcd_Out2@data
  3525     0651  2E70               	goto	l1756
  3526     0652                     l1748:
  3527     0652  0873               	movf	Lcd_Out2@x,w
  3528     0653  3E94               	addlw	148
  3529     0654  00F9               	movwf	Lcd_Out2@data
  3530     0655  2E70               	goto	l1756
  3531     0656                     l1750:
  3532     0656  0873               	movf	Lcd_Out2@x,w
  3533     0657  3ED4               	addlw	212
  3534     0658  00F9               	movwf	Lcd_Out2@data
  3535     0659  2E70               	goto	l1756
  3536     065A                     l1754:
  3537     065A  0878               	movf	Lcd_Out2@y,w
  3538     065B  00F6               	movwf	??_Lcd_Out2
  3539     065C  01F7               	clrf	??_Lcd_Out2+1
  3540                           
  3541                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3542                           ; Switch size 1, requested type "simple"
  3543                           ; Number of cases is 1, Range of values is 0 to 0
  3544                           ; switch strategies available:
  3545                           ; Name         Instructions Cycles
  3546                           ; simple_byte            4     3 (average)
  3547                           ; direct_byte            8     6 (fixed)
  3548                           ; jumptable            260     6 (fixed)
  3549                           ;	Chosen strategy is simple_byte
  3550     065D  0877               	movf	??_Lcd_Out2+1,w
  3551     065E  3A00               	xorlw	0	; case 0
  3552     065F  1903               	skipnz
  3553     0660  2E62               	goto	l1936
  3554     0661  2E70               	goto	l1756
  3555     0662                     l1936:
  3556                           
  3557                           ; Switch size 1, requested type "simple"
  3558                           ; Number of cases is 4, Range of values is 1 to 4
  3559                           ; switch strategies available:
  3560                           ; Name         Instructions Cycles
  3561                           ; simple_byte           13     7 (average)
  3562                           ; direct_byte           17     9 (fixed)
  3563                           ; jumptable            263     9 (fixed)
  3564                           ;	Chosen strategy is simple_byte
  3565     0662  0876               	movf	??_Lcd_Out2,w
  3566     0663  3A01               	xorlw	1	; case 1
  3567     0664  1903               	skipnz
  3568     0665  2E4A               	goto	l1744
  3569     0666  3A03               	xorlw	3	; case 2
  3570     0667  1903               	skipnz
  3571     0668  2E4E               	goto	l1746
  3572     0669  3A01               	xorlw	1	; case 3
  3573     066A  1903               	skipnz
  3574     066B  2E52               	goto	l1748
  3575     066C  3A07               	xorlw	7	; case 4
  3576     066D  1903               	skipnz
  3577     066E  2E56               	goto	l1750
  3578     066F  2E70               	goto	l1756
  3579     0670                     l1756:
  3580                           
  3581                           ;./flex_lcd.h: 126: Lcd_Cmd(data);
  3582     0670  0879               	movf	Lcd_Out2@data,w
  3583     0671  3184  240E  3186   	fcall	_Lcd_Cmd
  3584                           
  3585                           ;./flex_lcd.h: 127: while(*buffer)
  3586     0674  2E81               	goto	l1762
  3587     0675                     l1758:
  3588                           
  3589                           ;./flex_lcd.h: 128: {;./flex_lcd.h: 129:     Lcd_Chr_CP(*buffer);
  3590     0675  0874               	movf	Lcd_Out2@buffer,w
  3591     0676  0084               	movwf	4
  3592     0677  0875               	movf	Lcd_Out2@buffer+1,w
  3593     0678  0085               	movwf	5
  3594     0679  0800               	movf	0,w	;code access
  3595     067A  3183  2378  3186   	fcall	_Lcd_Chr_CP
  3596     067D                     l1760:
  3597                           
  3598                           ;./flex_lcd.h: 130:     buffer++;
  3599     067D  3001               	movlw	1
  3600     067E  07F4               	addwf	Lcd_Out2@buffer,f
  3601     067F  3000               	movlw	0
  3602     0680  3DF5               	addwfc	Lcd_Out2@buffer+1,f
  3603     0681                     l1762:
  3604                           
  3605                           ;./flex_lcd.h: 127: while(*buffer)
  3606     0681  0874               	movf	Lcd_Out2@buffer,w
  3607     0682  0084               	movwf	4
  3608     0683  0875               	movf	Lcd_Out2@buffer+1,w
  3609     0684  0085               	movwf	5
  3610     0685  0012               	moviw fsr0++
  3611     0686  1D03               	btfss	3,2
  3612     0687  2E89               	goto	u1421
  3613     0688  2E8A               	goto	u1420
  3614     0689                     u1421:
  3615     0689  2E75               	goto	l1758
  3616     068A                     u1420:
  3617     068A                     l73:
  3618     068A  0008               	return
  3619     068B                     __end_of_Lcd_Out2:
  3620                           
  3621                           	psect	text16
  3622     068B                     __ptext16:	
  3623 ;; *************** function _Lcd_Out *****************
  3624 ;; Defined at:
  3625 ;;		line 94 in file "./flex_lcd.h"
  3626 ;; Parameters:    Size  Location     Type
  3627 ;;  y               1    wreg     unsigned char 
  3628 ;;  x               1    3[COMMON] unsigned char 
  3629 ;;  buffer          2    4[COMMON] PTR const unsigned char 
  3630 ;;		 -> STR_6(6), STR_5(7), 
  3631 ;; Auto vars:     Size  Location     Type
  3632 ;;  y               1    8[COMMON] unsigned char 
  3633 ;;  data            1    9[COMMON] unsigned char 
  3634 ;; Return value:  Size  Location     Type
  3635 ;;                  1    wreg      void 
  3636 ;; Registers used:
  3637 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3638 ;; Tracked objects:
  3639 ;;		On entry : 0/0
  3640 ;;		On exit  : 0/0
  3641 ;;		Unchanged: 0/0
  3642 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3643 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3644 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3645 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3646 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3647 ;;Total ram usage:        7 bytes
  3648 ;; Hardware stack levels used: 1
  3649 ;; Hardware stack levels required when called: 2
  3650 ;; This function calls:
  3651 ;;		_Lcd_Chr_CP
  3652 ;;		_Lcd_Cmd
  3653 ;; This function is called by:
  3654 ;;		_main
  3655 ;; This function uses a non-reentrant model
  3656 ;;
  3657                           
  3658     068B                     _Lcd_Out:	
  3659                           ;psect for function _Lcd_Out
  3660                           
  3661                           
  3662                           ;incstack = 0
  3663                           ; Regs used in _Lcd_Out: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3664                           ;Lcd_Out@y stored from wreg
  3665     068B  00F8               	movwf	Lcd_Out@y
  3666     068C                     l1716:
  3667                           
  3668                           ;./flex_lcd.h: 94: void Lcd_Out(unsigned char y, unsigned char x, const char *buffer);./
      +                          flex_lcd.h: 95: {;./flex_lcd.h: 96: unsigned char data;;./flex_lcd.h: 97: switch (y)
  3669     068C  2E9D               	goto	l1728
  3670     068D                     l1718:
  3671     068D  0873               	movf	Lcd_Out@x,w
  3672     068E  3E80               	addlw	128
  3673     068F  00F9               	movwf	Lcd_Out@data
  3674     0690  2EB3               	goto	l1730
  3675     0691                     l1720:
  3676     0691  0873               	movf	Lcd_Out@x,w
  3677     0692  3EC0               	addlw	192
  3678     0693  00F9               	movwf	Lcd_Out@data
  3679     0694  2EB3               	goto	l1730
  3680     0695                     l1722:
  3681     0695  0873               	movf	Lcd_Out@x,w
  3682     0696  3E94               	addlw	148
  3683     0697  00F9               	movwf	Lcd_Out@data
  3684     0698  2EB3               	goto	l1730
  3685     0699                     l1724:
  3686     0699  0873               	movf	Lcd_Out@x,w
  3687     069A  3ED4               	addlw	212
  3688     069B  00F9               	movwf	Lcd_Out@data
  3689     069C  2EB3               	goto	l1730
  3690     069D                     l1728:
  3691     069D  0878               	movf	Lcd_Out@y,w
  3692     069E  00F6               	movwf	??_Lcd_Out
  3693     069F  01F7               	clrf	??_Lcd_Out+1
  3694                           
  3695                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3696                           ; Switch size 1, requested type "simple"
  3697                           ; Number of cases is 1, Range of values is 0 to 0
  3698                           ; switch strategies available:
  3699                           ; Name         Instructions Cycles
  3700                           ; simple_byte            4     3 (average)
  3701                           ; direct_byte            8     6 (fixed)
  3702                           ; jumptable            260     6 (fixed)
  3703                           ;	Chosen strategy is simple_byte
  3704     06A0  0877               	movf	??_Lcd_Out+1,w
  3705     06A1  3A00               	xorlw	0	; case 0
  3706     06A2  1903               	skipnz
  3707     06A3  2EA5               	goto	l1938
  3708     06A4  2EB3               	goto	l1730
  3709     06A5                     l1938:
  3710                           
  3711                           ; Switch size 1, requested type "simple"
  3712                           ; Number of cases is 4, Range of values is 1 to 4
  3713                           ; switch strategies available:
  3714                           ; Name         Instructions Cycles
  3715                           ; simple_byte           13     7 (average)
  3716                           ; direct_byte           17     9 (fixed)
  3717                           ; jumptable            263     9 (fixed)
  3718                           ;	Chosen strategy is simple_byte
  3719     06A5  0876               	movf	??_Lcd_Out,w
  3720     06A6  3A01               	xorlw	1	; case 1
  3721     06A7  1903               	skipnz
  3722     06A8  2E8D               	goto	l1718
  3723     06A9  3A03               	xorlw	3	; case 2
  3724     06AA  1903               	skipnz
  3725     06AB  2E91               	goto	l1720
  3726     06AC  3A01               	xorlw	1	; case 3
  3727     06AD  1903               	skipnz
  3728     06AE  2E95               	goto	l1722
  3729     06AF  3A07               	xorlw	7	; case 4
  3730     06B0  1903               	skipnz
  3731     06B1  2E99               	goto	l1724
  3732     06B2  2EB3               	goto	l1730
  3733     06B3                     l1730:
  3734                           
  3735                           ;./flex_lcd.h: 105: Lcd_Cmd(data);
  3736     06B3  0879               	movf	Lcd_Out@data,w
  3737     06B4  3184  240E  3186   	fcall	_Lcd_Cmd
  3738                           
  3739                           ;./flex_lcd.h: 106: while(*buffer)
  3740     06B7  2EC4               	goto	l1736
  3741     06B8                     l1732:
  3742                           
  3743                           ;./flex_lcd.h: 107: {;./flex_lcd.h: 108:     Lcd_Chr_CP(*buffer);
  3744     06B8  0874               	movf	Lcd_Out@buffer,w
  3745     06B9  0084               	movwf	4
  3746     06BA  0875               	movf	Lcd_Out@buffer+1,w
  3747     06BB  0085               	movwf	5
  3748     06BC  0800               	movf	0,w	;code access
  3749     06BD  3183  2378  3186   	fcall	_Lcd_Chr_CP
  3750     06C0                     l1734:
  3751                           
  3752                           ;./flex_lcd.h: 109:     buffer++;
  3753     06C0  3001               	movlw	1
  3754     06C1  07F4               	addwf	Lcd_Out@buffer,f
  3755     06C2  3000               	movlw	0
  3756     06C3  3DF5               	addwfc	Lcd_Out@buffer+1,f
  3757     06C4                     l1736:
  3758                           
  3759                           ;./flex_lcd.h: 106: while(*buffer)
  3760     06C4  0874               	movf	Lcd_Out@buffer,w
  3761     06C5  0084               	movwf	4
  3762     06C6  0875               	movf	Lcd_Out@buffer+1,w
  3763     06C7  0085               	movwf	5
  3764     06C8  0012               	moviw fsr0++
  3765     06C9  1D03               	btfss	3,2
  3766     06CA  2ECC               	goto	u1411
  3767     06CB  2ECD               	goto	u1410
  3768     06CC                     u1411:
  3769     06CC  2EB8               	goto	l1732
  3770     06CD                     u1410:
  3771     06CD                     l60:
  3772     06CD  0008               	return
  3773     06CE                     __end_of_Lcd_Out:
  3774                           
  3775                           	psect	text17
  3776     0378                     __ptext17:	
  3777 ;; *************** function _Lcd_Chr_CP *****************
  3778 ;; Defined at:
  3779 ;;		line 136 in file "./flex_lcd.h"
  3780 ;; Parameters:    Size  Location     Type
  3781 ;;  data            1    wreg     unsigned char 
  3782 ;; Auto vars:     Size  Location     Type
  3783 ;;  data            1    2[COMMON] unsigned char 
  3784 ;; Return value:  Size  Location     Type
  3785 ;;                  1    wreg      void 
  3786 ;; Registers used:
  3787 ;;		wreg, status,2, status,0
  3788 ;; Tracked objects:
  3789 ;;		On entry : 0/0
  3790 ;;		On exit  : 0/0
  3791 ;;		Unchanged: 0/0
  3792 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3793 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3794 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3795 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3796 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3797 ;;Total ram usage:        3 bytes
  3798 ;; Hardware stack levels used: 1
  3799 ;; Hardware stack levels required when called: 1
  3800 ;; This function calls:
  3801 ;;		Nothing
  3802 ;; This function is called by:
  3803 ;;		_Lcd_Out
  3804 ;;		_Lcd_Out2
  3805 ;; This function uses a non-reentrant model
  3806 ;;
  3807                           
  3808     0378                     _Lcd_Chr_CP:	
  3809                           ;psect for function _Lcd_Chr_CP
  3810                           
  3811                           
  3812                           ;incstack = 0
  3813                           ; Regs used in _Lcd_Chr_CP: [wreg+status,2+status,0]
  3814                           ;Lcd_Chr_CP@data stored from wreg
  3815     0378  00F2               	movwf	Lcd_Chr_CP@data
  3816     0379                     l1648:
  3817                           
  3818                           ;./flex_lcd.h: 137: PORTCbits.RC4 = 0; PORTCbits.RC5 = 1;
  3819     0379  0020               	movlb	0	; select bank0
  3820     037A  120E               	bcf	14,4	;volatile
  3821     037B  168E               	bsf	14,5	;volatile
  3822     037C                     l1650:
  3823                           
  3824                           ;./flex_lcd.h: 138: PORTCbits.RC0 = (data & 0b10000000)>>7; PORTCbits.RC1 = (data & 0b01
      +                          000000)>>6;
  3825     037C  0872               	movf	Lcd_Chr_CP@data,w
  3826     037D  00F0               	movwf	??_Lcd_Chr_CP
  3827     037E  3007               	movlw	7
  3828     037F                     u1335:
  3829     037F  36F0               	lsrf	??_Lcd_Chr_CP,f
  3830     0380  0B89               	decfsz	9,f
  3831     0381  2B7F               	goto	u1335
  3832     0382  3001               	movlw	1
  3833     0383  0570               	andwf	??_Lcd_Chr_CP,w
  3834     0384  00F1               	movwf	??_Lcd_Chr_CP+1
  3835     0385  080E               	movf	14,w	;volatile
  3836     0386  0671               	xorwf	??_Lcd_Chr_CP+1,w
  3837     0387  39FE               	andlw	-2
  3838     0388  0671               	xorwf	??_Lcd_Chr_CP+1,w
  3839     0389  008E               	movwf	14	;volatile
  3840     038A  0872               	movf	Lcd_Chr_CP@data,w
  3841     038B  00F0               	movwf	??_Lcd_Chr_CP
  3842     038C  3006               	movlw	6
  3843     038D                     u1345:
  3844     038D  36F0               	lsrf	??_Lcd_Chr_CP,f
  3845     038E  0B89               	decfsz	9,f
  3846     038F  2B8D               	goto	u1345
  3847     0390  0870               	movf	??_Lcd_Chr_CP,w
  3848     0391  3901               	andlw	1
  3849     0392  00F1               	movwf	??_Lcd_Chr_CP+1
  3850     0393  0DF1               	rlf	??_Lcd_Chr_CP+1,f
  3851     0394  080E               	movf	14,w	;volatile
  3852     0395  0671               	xorwf	??_Lcd_Chr_CP+1,w
  3853     0396  39FD               	andlw	-3
  3854     0397  0671               	xorwf	??_Lcd_Chr_CP+1,w
  3855     0398  008E               	movwf	14	;volatile
  3856                           
  3857                           ;./flex_lcd.h: 139: PORTCbits.RC2 = (data & 0b00100000)>>5; PORTCbits.RC3 = (data & 0b00
      +                          010000)>>4;
  3858     0399  0872               	movf	Lcd_Chr_CP@data,w
  3859     039A  00F0               	movwf	??_Lcd_Chr_CP
  3860     039B  3005               	movlw	5
  3861     039C                     u1355:
  3862     039C  36F0               	lsrf	??_Lcd_Chr_CP,f
  3863     039D  0B89               	decfsz	9,f
  3864     039E  2B9C               	goto	u1355
  3865     039F  0870               	movf	??_Lcd_Chr_CP,w
  3866     03A0  3901               	andlw	1
  3867     03A1  00F1               	movwf	??_Lcd_Chr_CP+1
  3868     03A2  0DF1               	rlf	??_Lcd_Chr_CP+1,f
  3869     03A3  0DF1               	rlf	??_Lcd_Chr_CP+1,f
  3870     03A4  080E               	movf	14,w	;volatile
  3871     03A5  0671               	xorwf	??_Lcd_Chr_CP+1,w
  3872     03A6  39FB               	andlw	-5
  3873     03A7  0671               	xorwf	??_Lcd_Chr_CP+1,w
  3874     03A8  008E               	movwf	14	;volatile
  3875     03A9  0872               	movf	Lcd_Chr_CP@data,w
  3876     03AA  00F0               	movwf	??_Lcd_Chr_CP
  3877     03AB  3004               	movlw	4
  3878     03AC                     u1365:
  3879     03AC  36F0               	lsrf	??_Lcd_Chr_CP,f
  3880     03AD  0B89               	decfsz	9,f
  3881     03AE  2BAC               	goto	u1365
  3882     03AF  0870               	movf	??_Lcd_Chr_CP,w
  3883     03B0  3901               	andlw	1
  3884     03B1  00F1               	movwf	??_Lcd_Chr_CP+1
  3885     03B2  0DF1               	rlf	??_Lcd_Chr_CP+1,f
  3886     03B3  0DF1               	rlf	??_Lcd_Chr_CP+1,f
  3887     03B4  0DF1               	rlf	??_Lcd_Chr_CP+1,f
  3888     03B5  080E               	movf	14,w	;volatile
  3889     03B6  0671               	xorwf	??_Lcd_Chr_CP+1,w
  3890     03B7  39F7               	andlw	-9
  3891     03B8  0671               	xorwf	??_Lcd_Chr_CP+1,w
  3892     03B9  008E               	movwf	14	;volatile
  3893     03BA                     l1652:
  3894                           
  3895                           ;./flex_lcd.h: 140: _delay(10);
  3896     03BA  3003               	movlw	3
  3897     03BB                     u1527:
  3898     03BB  0B89               	decfsz	9,f
  3899     03BC  2BBB               	goto	u1527
  3900     03BD  0000               	nop
  3901     03BE                     l1654:
  3902                           
  3903                           ;./flex_lcd.h: 141: PORTCbits.RC4 = 1; _delay((unsigned long)((5)*(4000000/4000000.0)));
      +                           PORTCbits.RC4 = 0;
  3904     03BE  0020               	movlb	0	; select bank0
  3905     03BF  160E               	bsf	14,4	;volatile
  3906     03C0                     l1656:
  3907     03C0  3200               	nop2	;2 cycle nop
  3908     03C1  3200               	nop2	;2 cycle nop
  3909     03C2  0000               	nop
  3910     03C3                     l1658:
  3911     03C3  0020               	movlb	0	; select bank0
  3912     03C4  120E               	bcf	14,4	;volatile
  3913     03C5                     l1660:
  3914                           
  3915                           ;./flex_lcd.h: 142: PORTCbits.RC0 = (data & 0b00001000)>>3; PORTCbits.RC1 = (data & 0b00
      +                          000100)>>2;
  3916     03C5  0872               	movf	Lcd_Chr_CP@data,w
  3917     03C6  00F0               	movwf	??_Lcd_Chr_CP
  3918     03C7  3003               	movlw	3
  3919     03C8                     u1375:
  3920     03C8  36F0               	lsrf	??_Lcd_Chr_CP,f
  3921     03C9  0B89               	decfsz	9,f
  3922     03CA  2BC8               	goto	u1375
  3923     03CB  3001               	movlw	1
  3924     03CC  0570               	andwf	??_Lcd_Chr_CP,w
  3925     03CD  00F1               	movwf	??_Lcd_Chr_CP+1
  3926     03CE  080E               	movf	14,w	;volatile
  3927     03CF  0671               	xorwf	??_Lcd_Chr_CP+1,w
  3928     03D0  39FE               	andlw	-2
  3929     03D1  0671               	xorwf	??_Lcd_Chr_CP+1,w
  3930     03D2  008E               	movwf	14	;volatile
  3931     03D3                     l1662:
  3932     03D3  0872               	movf	Lcd_Chr_CP@data,w
  3933     03D4  00F0               	movwf	??_Lcd_Chr_CP
  3934     03D5  3002               	movlw	2
  3935     03D6                     u1385:
  3936     03D6  36F0               	lsrf	??_Lcd_Chr_CP,f
  3937     03D7  0B89               	decfsz	9,f
  3938     03D8  2BD6               	goto	u1385
  3939     03D9  0870               	movf	??_Lcd_Chr_CP,w
  3940     03DA  3901               	andlw	1
  3941     03DB  00F1               	movwf	??_Lcd_Chr_CP+1
  3942     03DC  0DF1               	rlf	??_Lcd_Chr_CP+1,f
  3943     03DD  080E               	movf	14,w	;volatile
  3944     03DE  0671               	xorwf	??_Lcd_Chr_CP+1,w
  3945     03DF  39FD               	andlw	-3
  3946     03E0  0671               	xorwf	??_Lcd_Chr_CP+1,w
  3947     03E1  008E               	movwf	14	;volatile
  3948     03E2                     l1664:
  3949                           
  3950                           ;./flex_lcd.h: 143: PORTCbits.RC2 = (data & 0b00000010)>>1; PORTCbits.RC3 = (data & 0b00
      +                          000001);
  3951     03E2  3672               	lsrf	Lcd_Chr_CP@data,w
  3952     03E3  3901               	andlw	1
  3953     03E4  00F0               	movwf	??_Lcd_Chr_CP
  3954     03E5  0DF0               	rlf	??_Lcd_Chr_CP,f
  3955     03E6  0DF0               	rlf	??_Lcd_Chr_CP,f
  3956     03E7  080E               	movf	14,w	;volatile
  3957     03E8  0670               	xorwf	??_Lcd_Chr_CP,w
  3958     03E9  39FB               	andlw	-5
  3959     03EA  0670               	xorwf	??_Lcd_Chr_CP,w
  3960     03EB  008E               	movwf	14	;volatile
  3961     03EC                     l1666:
  3962     03EC  0872               	movf	Lcd_Chr_CP@data,w
  3963     03ED  3901               	andlw	1
  3964     03EE  00F0               	movwf	??_Lcd_Chr_CP
  3965     03EF  0DF0               	rlf	??_Lcd_Chr_CP,f
  3966     03F0  0DF0               	rlf	??_Lcd_Chr_CP,f
  3967     03F1  0DF0               	rlf	??_Lcd_Chr_CP,f
  3968     03F2  080E               	movf	14,w	;volatile
  3969     03F3  0670               	xorwf	??_Lcd_Chr_CP,w
  3970     03F4  39F7               	andlw	-9
  3971     03F5  0670               	xorwf	??_Lcd_Chr_CP,w
  3972     03F6  008E               	movwf	14	;volatile
  3973     03F7                     l1668:
  3974                           
  3975                           ;./flex_lcd.h: 144: _delay(10);
  3976     03F7  3003               	movlw	3
  3977     03F8                     u1537:
  3978     03F8  0B89               	decfsz	9,f
  3979     03F9  2BF8               	goto	u1537
  3980     03FA  0000               	nop
  3981     03FB                     l1670:
  3982                           
  3983                           ;./flex_lcd.h: 145: PORTCbits.RC4 = 1; _delay((unsigned long)((5)*(4000000/4000000.0)));
      +                           PORTCbits.RC4 = 0;
  3984     03FB  0020               	movlb	0	; select bank0
  3985     03FC  160E               	bsf	14,4	;volatile
  3986     03FD                     l1672:
  3987     03FD  3200               	nop2	;2 cycle nop
  3988     03FE  3200               	nop2	;2 cycle nop
  3989     03FF  0000               	nop
  3990     0400                     l1674:
  3991     0400  0020               	movlb	0	; select bank0
  3992     0401  120E               	bcf	14,4	;volatile
  3993     0402                     l1676:
  3994                           
  3995                           ;./flex_lcd.h: 146: _delay((unsigned long)((5)*(4000000/4000000.0))); _delay((unsigned l
      +                          ong)((5500)*(4000000/4000000.0)));
  3996     0402  3200               	nop2	;2 cycle nop
  3997     0403  3200               	nop2	;2 cycle nop
  3998     0404  0000               	nop
  3999     0405                     l1678:
  4000     0405  3008               	movlw	8
  4001     0406  00F0               	movwf	??_Lcd_Chr_CP
  4002     0407  3023               	movlw	35
  4003     0408                     u1547:
  4004     0408  0B89               	decfsz	9,f
  4005     0409  2C08               	goto	u1547
  4006     040A  0BF0               	decfsz	??_Lcd_Chr_CP,f
  4007     040B  2C08               	goto	u1547
  4008     040C  0000               	nop
  4009     040D                     l76:
  4010     040D  0008               	return
  4011     040E                     __end_of_Lcd_Chr_CP:
  4012                           
  4013                           	psect	text18
  4014     02DF                     __ptext18:	
  4015 ;; *************** function _Lcd_Init *****************
  4016 ;; Defined at:
  4017 ;;		line 52 in file "./flex_lcd.h"
  4018 ;; Parameters:    Size  Location     Type
  4019 ;;		None
  4020 ;; Auto vars:     Size  Location     Type
  4021 ;;  data            1    4[COMMON] unsigned char 
  4022 ;; Return value:  Size  Location     Type
  4023 ;;                  1    wreg      void 
  4024 ;; Registers used:
  4025 ;;		wreg, status,2, status,0, pclath, cstack
  4026 ;; Tracked objects:
  4027 ;;		On entry : 0/0
  4028 ;;		On exit  : 0/0
  4029 ;;		Unchanged: 0/0
  4030 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4031 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4032 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4033 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4034 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4035 ;;Total ram usage:        2 bytes
  4036 ;; Hardware stack levels used: 1
  4037 ;; Hardware stack levels required when called: 2
  4038 ;; This function calls:
  4039 ;;		_Lcd_Cmd
  4040 ;; This function is called by:
  4041 ;;		_main
  4042 ;; This function uses a non-reentrant model
  4043 ;;
  4044                           
  4045     02DF                     _Lcd_Init:	
  4046                           ;psect for function _Lcd_Init
  4047                           
  4048     02DF                     l1690:	
  4049                           ;incstack = 0
  4050                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  4051                           
  4052                           
  4053                           ;./flex_lcd.h: 53: unsigned char data;;./flex_lcd.h: 54: TRISCbits.TRISC0 = 0;
  4054     02DF  0021               	movlb	1	; select bank1
  4055     02E0  100E               	bcf	14,0	;volatile
  4056                           
  4057                           ;./flex_lcd.h: 55: TRISCbits.TRISC1 = 0;
  4058     02E1  108E               	bcf	14,1	;volatile
  4059                           
  4060                           ;./flex_lcd.h: 56: TRISCbits.TRISC2 = 0;
  4061     02E2  110E               	bcf	14,2	;volatile
  4062                           
  4063                           ;./flex_lcd.h: 57: TRISCbits.TRISC3 = 0;
  4064     02E3  118E               	bcf	14,3	;volatile
  4065                           
  4066                           ;./flex_lcd.h: 58: TRISCbits.TRISC4 = 0;
  4067     02E4  120E               	bcf	14,4	;volatile
  4068                           
  4069                           ;./flex_lcd.h: 59: TRISCbits.TRISC5 = 0;
  4070     02E5  128E               	bcf	14,5	;volatile
  4071                           
  4072                           ;./flex_lcd.h: 60: PORTCbits.RC0 = 0;
  4073     02E6  0020               	movlb	0	; select bank0
  4074     02E7  100E               	bcf	14,0	;volatile
  4075                           
  4076                           ;./flex_lcd.h: 61: PORTCbits.RC1 = 0;
  4077     02E8  108E               	bcf	14,1	;volatile
  4078                           
  4079                           ;./flex_lcd.h: 62: PORTCbits.RC2 = 0;
  4080     02E9  110E               	bcf	14,2	;volatile
  4081                           
  4082                           ;./flex_lcd.h: 63: PORTCbits.RC3 = 0;
  4083     02EA  118E               	bcf	14,3	;volatile
  4084                           
  4085                           ;./flex_lcd.h: 64: PORTCbits.RC4 = 0;
  4086     02EB  120E               	bcf	14,4	;volatile
  4087                           
  4088                           ;./flex_lcd.h: 65: PORTCbits.RC5 = 0;
  4089     02EC  128E               	bcf	14,5	;volatile
  4090     02ED                     l1692:
  4091                           
  4092                           ;./flex_lcd.h: 66: _delay((unsigned long)((5500)*(4000000/4000000.0)));
  4093     02ED  3008               	movlw	8
  4094     02EE  00F3               	movwf	??_Lcd_Init
  4095     02EF  3023               	movlw	35
  4096     02F0                     u1557:
  4097     02F0  0B89               	decfsz	9,f
  4098     02F1  2AF0               	goto	u1557
  4099     02F2  0BF3               	decfsz	??_Lcd_Init,f
  4100     02F3  2AF0               	goto	u1557
  4101     02F4  0000               	nop
  4102                           
  4103                           ;./flex_lcd.h: 67: _delay((unsigned long)((5500)*(4000000/4000000.0)));
  4104     02F5  3008               	movlw	8
  4105     02F6  00F3               	movwf	??_Lcd_Init
  4106     02F7  3023               	movlw	35
  4107     02F8                     u1567:
  4108     02F8  0B89               	decfsz	9,f
  4109     02F9  2AF8               	goto	u1567
  4110     02FA  0BF3               	decfsz	??_Lcd_Init,f
  4111     02FB  2AF8               	goto	u1567
  4112     02FC  0000               	nop
  4113                           
  4114                           ;./flex_lcd.h: 68: _delay((unsigned long)((5500)*(4000000/4000000.0)));
  4115     02FD  3008               	movlw	8
  4116     02FE  00F3               	movwf	??_Lcd_Init
  4117     02FF  3023               	movlw	35
  4118     0300                     u1577:
  4119     0300  0B89               	decfsz	9,f
  4120     0301  2B00               	goto	u1577
  4121     0302  0BF3               	decfsz	??_Lcd_Init,f
  4122     0303  2B00               	goto	u1577
  4123     0304  0000               	nop
  4124                           
  4125                           ;./flex_lcd.h: 69: _delay((unsigned long)((5500)*(4000000/4000000.0)));
  4126     0305  3008               	movlw	8
  4127     0306  00F3               	movwf	??_Lcd_Init
  4128     0307  3023               	movlw	35
  4129     0308                     u1587:
  4130     0308  0B89               	decfsz	9,f
  4131     0309  2B08               	goto	u1587
  4132     030A  0BF3               	decfsz	??_Lcd_Init,f
  4133     030B  2B08               	goto	u1587
  4134     030C  0000               	nop
  4135                           
  4136                           ;./flex_lcd.h: 70: _delay((unsigned long)((5500)*(4000000/4000000.0)));
  4137     030D  3008               	movlw	8
  4138     030E  00F3               	movwf	??_Lcd_Init
  4139     030F  3023               	movlw	35
  4140     0310                     u1597:
  4141     0310  0B89               	decfsz	9,f
  4142     0311  2B10               	goto	u1597
  4143     0312  0BF3               	decfsz	??_Lcd_Init,f
  4144     0313  2B10               	goto	u1597
  4145     0314  0000               	nop
  4146                           
  4147                           ;./flex_lcd.h: 71: _delay((unsigned long)((5500)*(4000000/4000000.0)));
  4148     0315  3008               	movlw	8
  4149     0316  00F3               	movwf	??_Lcd_Init
  4150     0317  3023               	movlw	35
  4151     0318                     u1607:
  4152     0318  0B89               	decfsz	9,f
  4153     0319  2B18               	goto	u1607
  4154     031A  0BF3               	decfsz	??_Lcd_Init,f
  4155     031B  2B18               	goto	u1607
  4156     031C  0000               	nop
  4157     031D                     l1694:
  4158                           
  4159                           ;./flex_lcd.h: 72: for(data = 1; data < 4; data ++)
  4160     031D  01F4               	clrf	Lcd_Init@data
  4161     031E  0AF4               	incf	Lcd_Init@data,f
  4162     031F                     l45:
  4163                           
  4164                           ;./flex_lcd.h: 73: {;./flex_lcd.h: 74:     PORTCbits.RC0 = 0; PORTCbits.RC1 = 0; PORTCbi
      +                          ts.RC2 = 1; PORTCbits.RC3 = 1; PORTCbits.RC4 = 0;
  4165     031F  0020               	movlb	0	; select bank0
  4166     0320  100E               	bcf	14,0	;volatile
  4167     0321  108E               	bcf	14,1	;volatile
  4168     0322  150E               	bsf	14,2	;volatile
  4169     0323  158E               	bsf	14,3	;volatile
  4170     0324  120E               	bcf	14,4	;volatile
  4171                           
  4172                           ;./flex_lcd.h: 75:     PORTCbits.RC5 = 0; PORTCbits.RC0 = 0; PORTCbits.RC1 = 0; PORTCbit
      +                          s.RC2 = 1; PORTCbits.RC3 = 1;
  4173     0325  128E               	bcf	14,5	;volatile
  4174     0326  100E               	bcf	14,0	;volatile
  4175     0327  108E               	bcf	14,1	;volatile
  4176     0328  150E               	bsf	14,2	;volatile
  4177     0329  158E               	bsf	14,3	;volatile
  4178                           
  4179                           ;./flex_lcd.h: 76:     PORTCbits.RC4 = 1; PORTCbits.RC5 = 0;
  4180     032A  160E               	bsf	14,4	;volatile
  4181     032B  128E               	bcf	14,5	;volatile
  4182                           
  4183                           ;./flex_lcd.h: 77:     _delay((unsigned long)((5)*(4000000/4000000.0)));
  4184     032C  3200               	nop2	;2 cycle nop
  4185     032D  3200               	nop2	;2 cycle nop
  4186     032E  0000               	nop
  4187                           
  4188                           ;./flex_lcd.h: 78:     PORTCbits.RC0 = 0; PORTCbits.RC1 = 0; PORTCbits.RC2 = 1; PORTCbit
      +                          s.RC3 = 1; PORTCbits.RC4 = 0;
  4189     032F  0020               	movlb	0	; select bank0
  4190     0330  100E               	bcf	14,0	;volatile
  4191     0331  108E               	bcf	14,1	;volatile
  4192     0332  150E               	bsf	14,2	;volatile
  4193     0333  158E               	bsf	14,3	;volatile
  4194     0334  120E               	bcf	14,4	;volatile
  4195                           
  4196                           ;./flex_lcd.h: 79:     PORTCbits.RC5 = 0;
  4197     0335  128E               	bcf	14,5	;volatile
  4198     0336                     l1698:
  4199                           
  4200                           ;./flex_lcd.h: 80:     _delay((unsigned long)((5500)*(4000000/4000000.0)));
  4201     0336  3008               	movlw	8
  4202     0337  00F3               	movwf	??_Lcd_Init
  4203     0338  3023               	movlw	35
  4204     0339                     u1617:
  4205     0339  0B89               	decfsz	9,f
  4206     033A  2B39               	goto	u1617
  4207     033B  0BF3               	decfsz	??_Lcd_Init,f
  4208     033C  2B39               	goto	u1617
  4209     033D  0000               	nop
  4210     033E                     l1700:
  4211                           
  4212                           ;./flex_lcd.h: 81: }
  4213     033E  3001               	movlw	1
  4214     033F  00F3               	movwf	??_Lcd_Init
  4215     0340  0873               	movf	??_Lcd_Init,w
  4216     0341  07F4               	addwf	Lcd_Init@data,f
  4217     0342                     l1702:
  4218     0342  3004               	movlw	4
  4219     0343  0274               	subwf	Lcd_Init@data,w
  4220     0344  1C03               	skipc
  4221     0345  2B47               	goto	u1401
  4222     0346  2B48               	goto	u1400
  4223     0347                     u1401:
  4224     0347  2B1F               	goto	l45
  4225     0348                     u1400:
  4226     0348                     l46:
  4227                           
  4228                           ;./flex_lcd.h: 82: PORTCbits.RC0 = 0; PORTCbits.RC1 = 0; PORTCbits.RC2 = 1; PORTCbits.RC
      +                          3 = 0; PORTCbits.RC4 = 0; PORTCbits.RC5 = 0;
  4229     0348  0020               	movlb	0	; select bank0
  4230     0349  100E               	bcf	14,0	;volatile
  4231     034A  108E               	bcf	14,1	;volatile
  4232     034B  150E               	bsf	14,2	;volatile
  4233     034C  118E               	bcf	14,3	;volatile
  4234     034D  120E               	bcf	14,4	;volatile
  4235     034E  128E               	bcf	14,5	;volatile
  4236                           
  4237                           ;./flex_lcd.h: 83: PORTCbits.RC0 = 0; PORTCbits.RC1 = 0; PORTCbits.RC2 = 1; PORTCbits.RC
      +                          3 = 0; PORTCbits.RC4 = 1; PORTCbits.RC5 = 0;
  4238     034F  100E               	bcf	14,0	;volatile
  4239     0350  108E               	bcf	14,1	;volatile
  4240     0351  150E               	bsf	14,2	;volatile
  4241     0352  118E               	bcf	14,3	;volatile
  4242     0353  160E               	bsf	14,4	;volatile
  4243     0354  128E               	bcf	14,5	;volatile
  4244                           
  4245                           ;./flex_lcd.h: 84: _delay((unsigned long)((5)*(4000000/4000000.0)));
  4246     0355  3200               	nop2	;2 cycle nop
  4247     0356  3200               	nop2	;2 cycle nop
  4248     0357  0000               	nop
  4249                           
  4250                           ;./flex_lcd.h: 85: PORTCbits.RC0 = 0; PORTCbits.RC1 = 0; PORTCbits.RC2 = 1; PORTCbits.RC
      +                          3 = 0; PORTCbits.RC4 = 0; PORTCbits.RC5 = 0;
  4251     0358  0020               	movlb	0	; select bank0
  4252     0359  100E               	bcf	14,0	;volatile
  4253     035A  108E               	bcf	14,1	;volatile
  4254     035B  150E               	bsf	14,2	;volatile
  4255     035C  118E               	bcf	14,3	;volatile
  4256     035D  120E               	bcf	14,4	;volatile
  4257     035E  128E               	bcf	14,5	;volatile
  4258     035F                     l1704:
  4259                           
  4260                           ;./flex_lcd.h: 86: _delay((unsigned long)((5500)*(4000000/4000000.0)));
  4261     035F  3008               	movlw	8
  4262     0360  00F3               	movwf	??_Lcd_Init
  4263     0361  3023               	movlw	35
  4264     0362                     u1627:
  4265     0362  0B89               	decfsz	9,f
  4266     0363  2B62               	goto	u1627
  4267     0364  0BF3               	decfsz	??_Lcd_Init,f
  4268     0365  2B62               	goto	u1627
  4269     0366  0000               	nop
  4270     0367                     l1706:
  4271     0367  3028               	movlw	40
  4272     0368  3184  240E  3182   	fcall	_Lcd_Cmd
  4273     036B                     l1708:
  4274     036B  3010               	movlw	16
  4275     036C  3184  240E  3182   	fcall	_Lcd_Cmd
  4276     036F                     l1710:
  4277     036F  3001               	movlw	1
  4278     0370  3184  240E  3182   	fcall	_Lcd_Cmd
  4279     0373                     l1712:
  4280     0373                     l1714:
  4281     0373  300F               	movlw	15
  4282     0374  3184  240E  3182   	fcall	_Lcd_Cmd
  4283     0377                     l47:
  4284     0377  0008               	return
  4285     0378                     __end_of_Lcd_Init:
  4286                           
  4287                           	psect	text19
  4288     040E                     __ptext19:	
  4289 ;; *************** function _Lcd_Cmd *****************
  4290 ;; Defined at:
  4291 ;;		line 150 in file "./flex_lcd.h"
  4292 ;; Parameters:    Size  Location     Type
  4293 ;;  data            1    wreg     unsigned char 
  4294 ;; Auto vars:     Size  Location     Type
  4295 ;;  data            1    2[COMMON] unsigned char 
  4296 ;; Return value:  Size  Location     Type
  4297 ;;                  1    wreg      void 
  4298 ;; Registers used:
  4299 ;;		wreg, status,2, status,0
  4300 ;; Tracked objects:
  4301 ;;		On entry : 0/0
  4302 ;;		On exit  : 0/0
  4303 ;;		Unchanged: 0/0
  4304 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4305 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4306 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4307 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4308 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4309 ;;Total ram usage:        3 bytes
  4310 ;; Hardware stack levels used: 1
  4311 ;; Hardware stack levels required when called: 1
  4312 ;; This function calls:
  4313 ;;		Nothing
  4314 ;; This function is called by:
  4315 ;;		_Lcd_Init
  4316 ;;		_Lcd_Out
  4317 ;;		_Lcd_Out2
  4318 ;;		_main
  4319 ;; This function uses a non-reentrant model
  4320 ;;
  4321                           
  4322     040E                     _Lcd_Cmd:	
  4323                           ;psect for function _Lcd_Cmd
  4324                           
  4325                           
  4326                           ;incstack = 0
  4327                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0]
  4328                           ;Lcd_Cmd@data stored from wreg
  4329     040E  00F2               	movwf	Lcd_Cmd@data
  4330     040F                     l1618:
  4331                           
  4332                           ;./flex_lcd.h: 151: PORTCbits.RC4 = 0; PORTCbits.RC5 = 0;
  4333     040F  0020               	movlb	0	; select bank0
  4334     0410  120E               	bcf	14,4	;volatile
  4335     0411  128E               	bcf	14,5	;volatile
  4336     0412                     l1620:
  4337                           
  4338                           ;./flex_lcd.h: 152: PORTCbits.RC0 = (data & 0b10000000)>>7; PORTCbits.RC1 = (data & 0b01
      +                          000000)>>6;
  4339     0412  0872               	movf	Lcd_Cmd@data,w
  4340     0413  00F0               	movwf	??_Lcd_Cmd
  4341     0414  3007               	movlw	7
  4342     0415                     u1275:
  4343     0415  36F0               	lsrf	??_Lcd_Cmd,f
  4344     0416  0B89               	decfsz	9,f
  4345     0417  2C15               	goto	u1275
  4346     0418  3001               	movlw	1
  4347     0419  0570               	andwf	??_Lcd_Cmd,w
  4348     041A  00F1               	movwf	??_Lcd_Cmd+1
  4349     041B  080E               	movf	14,w	;volatile
  4350     041C  0671               	xorwf	??_Lcd_Cmd+1,w
  4351     041D  39FE               	andlw	-2
  4352     041E  0671               	xorwf	??_Lcd_Cmd+1,w
  4353     041F  008E               	movwf	14	;volatile
  4354     0420  0872               	movf	Lcd_Cmd@data,w
  4355     0421  00F0               	movwf	??_Lcd_Cmd
  4356     0422  3006               	movlw	6
  4357     0423                     u1285:
  4358     0423  36F0               	lsrf	??_Lcd_Cmd,f
  4359     0424  0B89               	decfsz	9,f
  4360     0425  2C23               	goto	u1285
  4361     0426  0870               	movf	??_Lcd_Cmd,w
  4362     0427  3901               	andlw	1
  4363     0428  00F1               	movwf	??_Lcd_Cmd+1
  4364     0429  0DF1               	rlf	??_Lcd_Cmd+1,f
  4365     042A  080E               	movf	14,w	;volatile
  4366     042B  0671               	xorwf	??_Lcd_Cmd+1,w
  4367     042C  39FD               	andlw	-3
  4368     042D  0671               	xorwf	??_Lcd_Cmd+1,w
  4369     042E  008E               	movwf	14	;volatile
  4370                           
  4371                           ;./flex_lcd.h: 153: PORTCbits.RC2 = (data & 0b00100000)>>5; PORTCbits.RC3 = (data & 0b00
      +                          010000)>>4;
  4372     042F  0872               	movf	Lcd_Cmd@data,w
  4373     0430  00F0               	movwf	??_Lcd_Cmd
  4374     0431  3005               	movlw	5
  4375     0432                     u1295:
  4376     0432  36F0               	lsrf	??_Lcd_Cmd,f
  4377     0433  0B89               	decfsz	9,f
  4378     0434  2C32               	goto	u1295
  4379     0435  0870               	movf	??_Lcd_Cmd,w
  4380     0436  3901               	andlw	1
  4381     0437  00F1               	movwf	??_Lcd_Cmd+1
  4382     0438  0DF1               	rlf	??_Lcd_Cmd+1,f
  4383     0439  0DF1               	rlf	??_Lcd_Cmd+1,f
  4384     043A  080E               	movf	14,w	;volatile
  4385     043B  0671               	xorwf	??_Lcd_Cmd+1,w
  4386     043C  39FB               	andlw	-5
  4387     043D  0671               	xorwf	??_Lcd_Cmd+1,w
  4388     043E  008E               	movwf	14	;volatile
  4389     043F  0872               	movf	Lcd_Cmd@data,w
  4390     0440  00F0               	movwf	??_Lcd_Cmd
  4391     0441  3004               	movlw	4
  4392     0442                     u1305:
  4393     0442  36F0               	lsrf	??_Lcd_Cmd,f
  4394     0443  0B89               	decfsz	9,f
  4395     0444  2C42               	goto	u1305
  4396     0445  0870               	movf	??_Lcd_Cmd,w
  4397     0446  3901               	andlw	1
  4398     0447  00F1               	movwf	??_Lcd_Cmd+1
  4399     0448  0DF1               	rlf	??_Lcd_Cmd+1,f
  4400     0449  0DF1               	rlf	??_Lcd_Cmd+1,f
  4401     044A  0DF1               	rlf	??_Lcd_Cmd+1,f
  4402     044B  080E               	movf	14,w	;volatile
  4403     044C  0671               	xorwf	??_Lcd_Cmd+1,w
  4404     044D  39F7               	andlw	-9
  4405     044E  0671               	xorwf	??_Lcd_Cmd+1,w
  4406     044F  008E               	movwf	14	;volatile
  4407     0450                     l1622:
  4408                           
  4409                           ;./flex_lcd.h: 154: _delay(10);
  4410     0450  3003               	movlw	3
  4411     0451                     u1637:
  4412     0451  0B89               	decfsz	9,f
  4413     0452  2C51               	goto	u1637
  4414     0453  0000               	nop
  4415     0454                     l1624:
  4416                           
  4417                           ;./flex_lcd.h: 155: PORTCbits.RC4 = 1; _delay((unsigned long)((5)*(4000000/4000000.0)));
      +                           PORTCbits.RC4 = 0;
  4418     0454  0020               	movlb	0	; select bank0
  4419     0455  160E               	bsf	14,4	;volatile
  4420     0456                     l1626:
  4421     0456  3200               	nop2	;2 cycle nop
  4422     0457  3200               	nop2	;2 cycle nop
  4423     0458  0000               	nop
  4424     0459                     l1628:
  4425     0459  0020               	movlb	0	; select bank0
  4426     045A  120E               	bcf	14,4	;volatile
  4427     045B                     l1630:
  4428                           
  4429                           ;./flex_lcd.h: 156: PORTCbits.RC0 = (data & 0b00001000)>>3; PORTCbits.RC1 = (data & 0b00
      +                          000100)>>2;
  4430     045B  0872               	movf	Lcd_Cmd@data,w
  4431     045C  00F0               	movwf	??_Lcd_Cmd
  4432     045D  3003               	movlw	3
  4433     045E                     u1315:
  4434     045E  36F0               	lsrf	??_Lcd_Cmd,f
  4435     045F  0B89               	decfsz	9,f
  4436     0460  2C5E               	goto	u1315
  4437     0461  3001               	movlw	1
  4438     0462  0570               	andwf	??_Lcd_Cmd,w
  4439     0463  00F1               	movwf	??_Lcd_Cmd+1
  4440     0464  080E               	movf	14,w	;volatile
  4441     0465  0671               	xorwf	??_Lcd_Cmd+1,w
  4442     0466  39FE               	andlw	-2
  4443     0467  0671               	xorwf	??_Lcd_Cmd+1,w
  4444     0468  008E               	movwf	14	;volatile
  4445     0469                     l1632:
  4446     0469  0872               	movf	Lcd_Cmd@data,w
  4447     046A  00F0               	movwf	??_Lcd_Cmd
  4448     046B  3002               	movlw	2
  4449     046C                     u1325:
  4450     046C  36F0               	lsrf	??_Lcd_Cmd,f
  4451     046D  0B89               	decfsz	9,f
  4452     046E  2C6C               	goto	u1325
  4453     046F  0870               	movf	??_Lcd_Cmd,w
  4454     0470  3901               	andlw	1
  4455     0471  00F1               	movwf	??_Lcd_Cmd+1
  4456     0472  0DF1               	rlf	??_Lcd_Cmd+1,f
  4457     0473  080E               	movf	14,w	;volatile
  4458     0474  0671               	xorwf	??_Lcd_Cmd+1,w
  4459     0475  39FD               	andlw	-3
  4460     0476  0671               	xorwf	??_Lcd_Cmd+1,w
  4461     0477  008E               	movwf	14	;volatile
  4462     0478                     l1634:
  4463                           
  4464                           ;./flex_lcd.h: 157: PORTCbits.RC2 = (data & 0b00000010)>>1; PORTCbits.RC3 = (data & 0b00
      +                          000001);
  4465     0478  3672               	lsrf	Lcd_Cmd@data,w
  4466     0479  3901               	andlw	1
  4467     047A  00F0               	movwf	??_Lcd_Cmd
  4468     047B  0DF0               	rlf	??_Lcd_Cmd,f
  4469     047C  0DF0               	rlf	??_Lcd_Cmd,f
  4470     047D  080E               	movf	14,w	;volatile
  4471     047E  0670               	xorwf	??_Lcd_Cmd,w
  4472     047F  39FB               	andlw	-5
  4473     0480  0670               	xorwf	??_Lcd_Cmd,w
  4474     0481  008E               	movwf	14	;volatile
  4475     0482                     l1636:
  4476     0482  0872               	movf	Lcd_Cmd@data,w
  4477     0483  3901               	andlw	1
  4478     0484  00F0               	movwf	??_Lcd_Cmd
  4479     0485  0DF0               	rlf	??_Lcd_Cmd,f
  4480     0486  0DF0               	rlf	??_Lcd_Cmd,f
  4481     0487  0DF0               	rlf	??_Lcd_Cmd,f
  4482     0488  080E               	movf	14,w	;volatile
  4483     0489  0670               	xorwf	??_Lcd_Cmd,w
  4484     048A  39F7               	andlw	-9
  4485     048B  0670               	xorwf	??_Lcd_Cmd,w
  4486     048C  008E               	movwf	14	;volatile
  4487     048D                     l1638:
  4488                           
  4489                           ;./flex_lcd.h: 158: _delay(10);
  4490     048D  3003               	movlw	3
  4491     048E                     u1647:
  4492     048E  0B89               	decfsz	9,f
  4493     048F  2C8E               	goto	u1647
  4494     0490  0000               	nop
  4495     0491                     l1640:
  4496                           
  4497                           ;./flex_lcd.h: 159: PORTCbits.RC4 = 1; _delay((unsigned long)((5)*(4000000/4000000.0)));
      +                           PORTCbits.RC4 = 0;
  4498     0491  0020               	movlb	0	; select bank0
  4499     0492  160E               	bsf	14,4	;volatile
  4500     0493                     l1642:
  4501     0493  3200               	nop2	;2 cycle nop
  4502     0494  3200               	nop2	;2 cycle nop
  4503     0495  0000               	nop
  4504     0496                     l1644:
  4505     0496  0020               	movlb	0	; select bank0
  4506     0497  120E               	bcf	14,4	;volatile
  4507     0498                     l1646:
  4508                           
  4509                           ;./flex_lcd.h: 160: _delay((unsigned long)((5500)*(4000000/4000000.0)));
  4510     0498  3008               	movlw	8
  4511     0499  00F0               	movwf	??_Lcd_Cmd
  4512     049A  3023               	movlw	35
  4513     049B                     u1657:
  4514     049B  0B89               	decfsz	9,f
  4515     049C  2C9B               	goto	u1657
  4516     049D  0BF0               	decfsz	??_Lcd_Cmd,f
  4517     049E  2C9B               	goto	u1657
  4518     049F  0000               	nop
  4519     04A0                     l79:
  4520     04A0  0008               	return
  4521     04A1                     __end_of_Lcd_Cmd:
  4522                           
  4523                           	psect	intentry
  4524     0004                     __pintentry:	
  4525 ;; *************** function _ISR_TIMER0 *****************
  4526 ;; Defined at:
  4527 ;;		line 24 in file "main.c"
  4528 ;; Parameters:    Size  Location     Type
  4529 ;;		None
  4530 ;; Auto vars:     Size  Location     Type
  4531 ;;		None
  4532 ;; Return value:  Size  Location     Type
  4533 ;;                  1    wreg      void 
  4534 ;; Registers used:
  4535 ;;		wreg, status,0
  4536 ;; Tracked objects:
  4537 ;;		On entry : 0/0
  4538 ;;		On exit  : 0/0
  4539 ;;		Unchanged: 0/0
  4540 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4541 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4542 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4543 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4544 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4545 ;;Total ram usage:        0 bytes
  4546 ;; Hardware stack levels used: 1
  4547 ;; This function calls:
  4548 ;;		Nothing
  4549 ;; This function is called by:
  4550 ;;		Interrupt level 1
  4551 ;; This function uses a non-reentrant model
  4552 ;;
  4553                           
  4554     0004                     _ISR_TIMER0:
  4555                           
  4556                           ;incstack = 0
  4557     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  4558                           
  4559                           ; Regs used in _ISR_TIMER0: [wreg+status,0]
  4560     0005  3180               	pagesel	$
  4561     0006                     i1l1188:
  4562                           
  4563                           ;main.c: 25: 
  4564     0006  1D0B               	btfss	11,2	;volatile
  4565     0007  2809               	goto	u70_21
  4566     0008  280A               	goto	u70_20
  4567     0009                     u70_21:
  4568     0009  281A               	goto	i1l94
  4569     000A                     u70_20:
  4570     000A                     i1l1190:
  4571                           
  4572                           ;main.c: 26: 
  4573     000A  1003               	clrc
  4574     000B  0022               	movlb	2	; select bank2
  4575     000C  1E0D               	btfss	13,4	;volatile
  4576     000D  1403               	setc
  4577     000E  1803               	btfsc	3,0
  4578     000F  2811               	goto	u71_21
  4579     0010  2814               	goto	u71_20
  4580     0011                     u71_21:
  4581     0011  0022               	movlb	2	; select bank2
  4582     0012  160D               	bsf	13,4	;volatile
  4583     0013  2816               	goto	u72_24
  4584     0014                     u71_20:
  4585     0014  0022               	movlb	2	; select bank2
  4586     0015  120D               	bcf	13,4	;volatile
  4587     0016                     u72_24:
  4588     0016                     i1l1192:
  4589                           
  4590                           ;main.c: 27:     ANSELA = 0b0000000;
  4591     0016  307D               	movlw	125
  4592     0017  0020               	movlb	0	; select bank0
  4593     0018  0095               	movwf	21	;volatile
  4594     0019                     i1l1194:
  4595                           
  4596                           ;main.c: 28:     ANSELB = 0b0000000;
  4597     0019  110B               	bcf	11,2	;volatile
  4598     001A                     i1l94:
  4599     001A  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  4600     001B  0009               	retfie
  4601     001C                     __end_of_ISR_TIMER0:
  4602     007E                     btemp	set	126	;btemp
  4603     007E                     int$flags	set	126
  4604     007E                     wtemp0	set	126
  4605                           
  4606                           	psect	config
  4607                           
  4608                           ;Config register CONFIG1 @ 0x8007
  4609                           ;	Oscillator Selection Bits
  4610                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  4611                           ;	Power-up Timer Enable
  4612                           ;	PWRTE = ON, PWRT enabled
  4613                           ;	MCLR Pin Function Select
  4614                           ;	MCLRE = OFF, MCLR/VPP pin function is digital input
  4615                           ;	Flash Program Memory Code Protection
  4616                           ;	CP = 0x1, unprogrammed default
  4617                           ;	Brown-out Reset Enable
  4618                           ;	BOREN = 0x3, unprogrammed default
  4619                           ;	Clock Out Enable
  4620                           ;	CLKOUTEN = 0x1, unprogrammed default
  4621                           ;	Internal/External Switch Over
  4622                           ;	IESO = 0x1, unprogrammed default
  4623                           ;	Fail-Safe Clock Monitor Enable
  4624                           ;	FCMEN = 0x1, unprogrammed default
  4625     8007                     	org	32775
  4626     8007  3F9C               	dw	16284
  4627                           
  4628                           ;Config register CONFIG2 @ 0x8008
  4629                           ;	Flash Memory Self-Write Protection
  4630                           ;	WRT = 0x3, unprogrammed default
  4631                           ;	Peripheral Pin Select one-way control
  4632                           ;	PPS1WAY = 0x1, unprogrammed default
  4633                           ;	Zero Cross Detect Disable Bit
  4634                           ;	ZCD = 0x1, unprogrammed default
  4635                           ;	PLL Enable Bit
  4636                           ;	PLLEN = OFF, 4x PLL is enabled when software sets the SPLLEN bit
  4637                           ;	Stack Overflow/Underflow Reset Enable
  4638                           ;	STVREN = 0x1, unprogrammed default
  4639                           ;	Brown-out Reset Voltage Selection
  4640                           ;	BORV = 0x1, unprogrammed default
  4641                           ;	Low-Power Brown Out Reset
  4642                           ;	LPBOR = 0x1, unprogrammed default
  4643                           ;	Low-Voltage Programming Enable
  4644                           ;	LVP = 0x1, unprogrammed default
  4645     8008                     	org	32776
  4646     8008  3EFF               	dw	16127
  4647                           
  4648                           ;Config register CONFIG3 @ 0x8009
  4649                           ;	WDT Period Select
  4650                           ;	WDTCPS = 0x1F, unprogrammed default
  4651                           ;	Watchdog Timer Enable
  4652                           ;	WDTE = OFF, WDT disabled
  4653                           ;	WDT Window Select
  4654                           ;	WDTCWS = 0x7, unprogrammed default
  4655                           ;	WDT Input Clock Selector
  4656                           ;	WDTCCS = 0x7, unprogrammed default
  4657     8009                     	org	32777
  4658     8009  3F9F               	dw	16287

Data Sizes:
    Strings     47
    Constant    0
    Data        0
    BSS         79
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     65      72
    BANK1            80      0      72
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_3(CODE[12]), STR_2(CODE[10]), STR_1(CODE[12]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 12
		 -> STR_3(CODE[12]), STR_2(CODE[10]), STR_1(CODE[12]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 12
		 -> STR_3(CODE[12]), STR_2(CODE[10]), STR_1(CODE[12]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    S623$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_3(CODE[12]), STR_2(CODE[10]), STR_1(CODE[12]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 20
		 -> buffer2(BANK1[20]), buffer1(BANK1[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S564$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S564$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    Lcd_Out2@buffer	PTR unsigned char  size(2) Largest target is 20
		 -> STR_4(CODE[12]), buffer2(BANK1[20]), buffer1(BANK1[20]), 

    Lcd_Out@buffer	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_6(CODE[6]), STR_5(CODE[7]), 


Critical Paths under _main in COMMON

    _read_prec_or_width->___wmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___awmod
    _Lcd_Out2->_Lcd_Chr_CP
    _Lcd_Out2->_Lcd_Cmd
    _Lcd_Out->_Lcd_Chr_CP
    _Lcd_Out->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd

Critical Paths under _ISR_TIMER0 in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs

Critical Paths under _ISR_TIMER0 in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR_TIMER0 in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_TIMER0 in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR_TIMER0 in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR_TIMER0 in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR_TIMER0 in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR_TIMER0 in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR_TIMER0 in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR_TIMER0 in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR_TIMER0 in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR_TIMER0 in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR_TIMER0 in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR_TIMER0 in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    8806
                                             63 BANK0      2     2      0
                            _Lcd_Cmd
                           _Lcd_Init
                            _Lcd_Out
                           _Lcd_Out2
                  _TMR0_temporizador
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             20    16      4    6338
                                             45 BANK0     18    14      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             7     4      3    5810
                                             38 BANK0      7     4      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           18    16      2    5494
                                             23 BANK0     15    13      2
                               _dtoa
                              _fputc
                 _read_prec_or_width
 ---------------------------------------------------------------------------------
 (4) _read_prec_or_width                                   9     7      2     533
                                              6 COMMON     5     3      2
                                              0 BANK0      4     4      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     244
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                13    11      2    3672
                                             10 BANK0     13    11      2
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                  9     6      3    2066
                                             11 COMMON     3     0      3
                                              4 BANK0      6     6      0
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     6      1     997
                                              8 COMMON     3     2      1
                                              0 BANK0      4     4      0
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3     682
                                              0 COMMON     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                              7 COMMON     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              7     3      4     448
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              9     5      4     452
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _TMR0_temporizador                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Out2                                             7     4      3    1141
                                              3 COMMON     7     4      3
                         _Lcd_Chr_CP
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Out                                              7     4      3     837
                                              3 COMMON     7     4      3
                         _Lcd_Chr_CP
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Chr_CP                                           3     3      0     176
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     314
                                              3 COMMON     2     2      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     176
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _ISR_TIMER0                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Cmd
   _Lcd_Init
     _Lcd_Cmd
   _Lcd_Out
     _Lcd_Chr_CP
     _Lcd_Cmd
   _Lcd_Out2
     _Lcd_Chr_CP
     _Lcd_Cmd
   _TMR0_temporizador
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___awdiv
           ___awmod
           _abs
             ___awmod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
         _fputc
         _read_prec_or_width
           ___wmul

 _ISR_TIMER0 (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     41      48       5       90.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      48       7       90.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      9E      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      9E      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Fri May 26 10:47:42 2023

                         _i 0065                          l60 06CD                          l45 031F  
                        l46 0348                          l47 0377                          l73 068A  
                        l76 040D                          l79 04A0                          l88 078E  
              ___awdiv@sign 0076         ___wmul@multiplicand 0072                         l172 06FC  
                       l325 055F                         l174 0710                         l338 05B2  
                       l700 023D                         l721 0763                         l714 0749  
                       l635 072D                         l708 02DE                         l733 0602  
                       l741 06F1                         l661 063C                         l718 0763  
                       l663 0647                         l671 0168                         l744 07A2  
                       l672 0185                         l658 061C                         l676 0183  
                       l685 0213                         l693 0500                         u740 05B8  
                       u820 070C                         u741 05B7                         u821 070B  
                       u805 06FD                         u910 0551                         u830 0506  
                       u750 05BD                         u911 0550                         u831 0505  
                       u751 05BC                         u815 0702                         u920 0556  
                       u840 0511                         u760 05CC                         u921 0555  
                       u905 0547                         u841 0510                         u761 05CB  
                       u850 0522                         u930 0565                         u770 05EA  
                       u851 0521                         u931 0564                         u771 05E9  
                       u940 0570                         u780 06F1                         u941 056F  
                       u781 06F0                         u870 0532                         u950 057B  
                       u790 06F8                         u871 0531                         u951 057A  
                       u775 05E6                         u791 06F7                         u865 0526  
                       u890 0541                         u970 058B                         u891 0540  
                       u971 058A                         u980 0595                         u885 0533  
                       u981 0594                         u965 057F                         u895 053D  
                       u985 0591                         u995 059A                         _abs 074A  
                       _pad 0603                ___awmod@sign 0076                         wreg 0009  
                      ?_abs 0077                        l1400 0522                        l1410 0541  
                      l1402 0525                        l1420 0556                        l1412 0545  
                      l1404 052A                        l1500 0164                        l1422 055B  
                      l1414 0546                        l1406 052E                        l1430 0565  
                      l1350 05C2                        l1510 017F                        l1502 016C  
                      l1416 054B                        l1408 0532                        l1440 057B  
                      l1432 056A                        l1352 05CC                        l1344 05B3  
                      l1360 06D0                        l1520 01AF                        l1512 0189  
                      l1504 0171                        l1600 02B3                        l1418 0551  
                      l1450 0595                        l1442 057E                        l1434 056C  
                      l1426 0560                        l1354 05EA                        l1346 05B8  
                      l1362 06D3                        l1530 01E5                        l1522 01B3  
                      l1514 018C                        l1506 0175                        l1370 06F4  
                      l1620 0412                        l1700 033E                        l1460 05AE  
                      l1452 0599                        l1444 0583                        l1436 0570  
                      l1428 0561                        l1356 05F9                        l1348 05BD  
                      l1364 06DF                        l1540 0208                        l1532 01F3  
                      l1516 0191                        l1524 01C3                        l1508 017A  
                      l1372 06F8                        l1604 02BC                        l1630 045B  
                      l1622 0450                        l1710 036F                        l1702 0342  
                      l1390 050D                        l1382 0501                        l1454 059E  
                      l1446 0587                        l1438 0575                        l1366 06E4  
                      l1470 0613                        l1526 01D1                        l1534 01F8  
                      l1518 01AA                        l1374 0701                        l1550 04BE  
                      l1640 0491                        l1632 0469                        l1624 0454  
                      l1712 0373                        l1704 035F                        l1720 0691  
                      l1392 0511                        l1384 0502                        l1448 058B  
                      l1456 05A4                        l1480 0641                        l1472 0619  
                      l1464 0605                        l1536 01FE                        l1528 01D8  
                      l1376 0706                        l1368 06F2                        l1552 04CB  
                      l1544 04A3                        l1608 02C6                        l1800 0041  
                      l1642 0493                        l1634 0478                        l1626 0456  
                      l1618 040F                        l1714 0373                        l1706 0367  
                      l1650 037C                        l1722 0695                        l1730 06B3  
                      l1394 0516                        l1386 0506                        l1458 05A9  
                      l1482 074A                        l1474 061F                        l1466 0609  
                      l1538 0202                        l1490 014E                        l1378 070C  
                      l1554 04E0                        l1546 04A5                        l1570 023A  
                      l1562 0216                        l1810 0047                        l1802 0042  
                      l1644 0496                        l1636 0482                        l1628 0459  
                      l1708 036B                        l1660 03C5                        l1652 03BA  
                      l1732 06B8                        l1724 0699                        l1716 068C  
                      l1396 051A                        l1388 050B                        l1484 0757  
                      l1476 0629                        l1468 060F                        l1492 0153  
                      l1548 04B6                        l1556 04E8                        l1572 023E  
                      l1580 0264                        l1564 0227                        l1820 0053  
                      l1812 0048                        l1804 0044                        l1646 0498  
                      l1638 048D                        l1670 03FB                        l1662 03D3  
                      l1654 03BE                        l1734 06C0                        l1718 068D  
                      l1750 0656                        l1742 0649                        l1398 051C  
                      l1478 062E                        l1494 0157                        l1486 0142  
                      l1558 04FC                        l1590 027F                        l1582 026A  
                      l1574 0247                        l1566 022F                        l1830 0084  
                      l1822 0057                        l1814 0049                        l1806 0045  
                      l1672 03FD                        l1664 03E2                        l1656 03C0  
                      l1648 0379                        l1736 06C4                        l1728 069D  
                      l1760 067D                        l1744 064A                        l1496 015B  
                      l1488 0149                        l1592 0286                        l1584 0275  
                      l1568 0236                        l1680 0730                        l1840 009C  
                      l1832 008E                        l1824 0060                        l1816 004C  
                      l1808 0046                        l1690 02DF                        l1674 0400  
                      l1666 03EC                        l1658 03C3                        l1762 0681  
                      l1746 064E                        l1754 065A                        l1770 078C  
                      l1498 015F                        l1594 0290                        l1586 0279  
                      l1578 024C                        l1682 0735                        l1850 00CE  
                      l1842 00A9                        l1834 0097                        l1826 006D  
                      l1818 004F                        l1692 02ED                        l1676 0402  
                      l1668 03F7                        l1748 0652                        l1756 0670  
                      l1772 078D                        l1596 029A                        l1588 027A  
                      l1684 073D                        l1780 071B                        l1860 00FA  
                      l1852 00D8                        l1844 00B3                        l1828 007A  
                      l1694 031D                        l1678 0405                        l1758 0675  
                      l1598 02A6                        l1934 025F                        l1686 0747  
                      l1782 0725                        l1774 0713                        l1870 0129  
                      l1862 0107                        l1854 00E5                        l1846 00BC  
                      l1790 003A                        l1936 0662                        l1768 0786  
                      l1776 0717                        l1872 0133                        l1864 010B  
                      l1856 00E9                        l1848 00C1                        l1792 003C  
                      l1698 0336                        l1938 06A5                        l1778 0719  
                      l1866 0118                        l1858 00F6                        l1794 003D  
                      l1786 0032                        l1868 011C                        l1796 003E  
                      l1788 0039                        l1798 0040                        ?_pad 007B  
                      STR_1 0770                        STR_2 077C                        STR_3 0770  
                      STR_4 0764                        STR_5 078F                        STR_6 0796  
                      u1000 05A4                        u1001 05A3                        u1010 05A9  
                      u1011 05A8                        u1020 0609                        u1100 0157  
                      u1021 0608                        u1101 0156                        u1030 0613  
                      u1110 015F                        u1031 0612                        u1111 015E  
                      u1040 063C                        u1120 0171                        u1200 04B6  
                      u1041 063B                        u1121 0170                        u1201 04B5  
                      u1050 0641                        u1130 017A                        u1210 04FC  
                      u1051 0640                        u1131 0179                        u1211 04FB  
                      u1060 0757                        u1140 01D1                        u1220 0227  
                      u1061 0756                        u1045 0638                        u1141 01D0  
                      u1221 0226                        u1150 01D8                        u1070 0147  
                      u1230 026A                        u1151 01D7                        u1071 0145  
                      u1231 0269                        u1400 0348                        u1160 01E5  
                      u1080 0148                        u1240 0279                        u1305 0442  
                      u1401 0347                        u1065 0753                        u1161 01E4  
                      u1145 01CD                        u1241 0278                        u1410 06CD  
                      u1170 01F3                        u1090 014E                        u1250 0290  
                      u1315 045E                        u1411 06CC                        u1171 01F2  
                      u1091 014D                        u1251 028F                        u1420 068A  
                      u1180 01F8                        u1260 029A                        u1325 046C  
                      u1421 0689                        u1181 01F7                        u1165 01E1  
                      u1261 0299                        u1190 01FE                        u1430 00CE  
                      u1335 037F                        u1191 01FD                        u1175 01EF  
                      u1431 00CD                        u1345 038D                        u1275 0415  
                      u1355 039C                        u1507 0111                        u1435 00CA  
                      u1285 0423                        u1365 03AC                        u1517 0122  
                      u1390 0747                        u1295 0432                        u1607 0318  
                      u1375 03C8                        u1527 03BB                        u1391 0746  
                      u1447 005B                        u1617 0339                        u1537 03F8  
                      u1385 03D6                        u1457 0092                        u1627 0362  
                      u1547 0408                        u1467 00B7                        u1637 0451  
                      u1557 02F0                        u1477 00DE                        u1647 048E  
                      u1567 02F8                        u1487 00EF                        u1657 049B  
                      u1577 0300                        u1497 0100                        u1587 0308  
                      u1597 0310                        i1l94 001A                        _TMR0 0015  
                      abs@a 0077                        _dbuf 00A0                        _main 0032  
                      _dtoa 0140                        _prec 0063                        pad@i 0025  
                      pad@p 007C                        fsr0h 0005                        fsr1h 0007  
                      indf0 0000                        fsr0l 0004                        indf1 0001  
                      fsr1l 0006                        pad@w 0027                        btemp 007E  
                      start 001C             __end_of_Lcd_Cmd 04A1             __end_of_Lcd_Out 06CE  
               ?_ISR_TIMER0 0070                  _Lcd_Chr_CP 0378                       ??_abs 0079  
                     ??_pad 0024              Lcd_Out2@buffer 0074                       ?_main 0070  
                     ?_dtoa 002A             __end_of___awdiv 0560             __end_of___awmod 05B3  
           ___awdiv@divisor 0070             ___awdiv@counter 0075                vfpfcnvrt@fmt 0037  
                     _PORTA 000C                       _PORTB 000D                       _PORTC 000E  
                     u70_20 000A                       u70_21 0009                       u71_20 0014  
                     u71_21 0011                       u72_24 0016                       _TRISA 008C  
                     _TRISB 008D                       _TRISC 008E                       _flags 0067  
       read_prec_or_width@c 0020         read_prec_or_width@n 0021                       _fputc 05B3  
                     _fputs 06CE                       pad@fp 0029                       _width 0061  
                     _putch 07A2                       dtoa@d 002A                       dtoa@i 0034  
                     dtoa@p 0030                       dtoa@s 0036                       dtoa@w 0032  
                     status 0003                       wtemp0 007E             __end_of_sprintf 072E  
          __end_of_Lcd_Init 0378            __end_of_Lcd_Out2 068B             __initialization 001E  
              __end_of_main 0140                __end_of_dtoa 0214                      ??_main 005F  
                    ??_dtoa 002C  __end_of_read_prec_or_width 0501                      ?_fputc 0070  
                    ?_fputs 0078            ___awdiv@dividend 0072                      _ANSELA 018C  
                    ?_putch 0070                      _ANSELB 018D                      _ANSELC 018E  
                    i1l1190 000A                      i1l1192 0016                      i1l1194 0019  
                    i1l1188 0006                   ??_Lcd_Cmd 0070               vfpfcnvrt@done 0041  
                 ??_Lcd_Out 0076           _TMR0_temporizador 0786                vfprintf@cfmt 004B  
        ?_TMR0_temporizador 0070                 ?_Lcd_Chr_CP 0070                      ___wmul 06F2  
                 ??___awdiv 0074                   ??___awmod 0074        read_prec_or_width@ap 0076  
          ___awdiv@quotient 0077             ___awmod@divisor 0070             ___awmod@counter 0075  
                    pad@buf 007B                      dtoa@fp 002F         ??_TMR0_temporizador 0070  
                    fputc@c 0070                      fputs@c 0020                      fputs@i 0021  
                    fputs@s 0023                      putch@c 0070            __end_of_vfprintf 074A  
                 ??_sprintf 0051     __end_of__initialization 002E   __end_of_TMR0_temporizador 078F  
            __pcstackCOMMON 0070               __end_of_fputc 0603               __end_of_fputs 06F2  
             __end_of_putch 07A3                   ?_Lcd_Init 0070                   ?_Lcd_Out2 0073  
                   ??_fputc 0073                     ??_fputs 0079                     ??_putch 0070  
                __pbssBANK0 0061                  __pbssBANK1 00A0                ??_ISR_TIMER0 0070  
                __pmaintext 0032                     ?___wmul 0070                  __pintentry 0004  
                   _OSCTUNE 0098                  ??_Lcd_Init 0073                  ??_Lcd_Out2 0076  
        __end_of_ISR_TIMER0 001C                     _Lcd_Cmd 040E                     _Lcd_Out 068B  
                   ___awdiv 0501                     ___awmod 0560                   ?_vfprintf 0046  
                   __ptext1 0711                     __ptext2 072E                     __ptext3 0214  
                   __ptext4 04A1                     __ptext5 06F2                     __ptext6 0140  
                   __ptext7 0603                     __ptext8 06CE                     __ptext9 05B3  
                   _buffer1 00D4                     _buffer2 00C0       read_prec_or_width@fmt 0023  
          ___awmod@dividend 0072                     _sprintf 0711                     clrloop0 079D  
      end_of_initialization 002E                     fputc@fp 0072                     fputs@fp 0078  
        _read_prec_or_width 04A1           __end_of_vfpfcnvrt 02DF                ??_Lcd_Chr_CP 0070  
                 Lcd_Out2@x 0073                   Lcd_Out2@y 0078         ?_read_prec_or_width 0076  
          vfpfcnvrt@convarg 003D                  ??_vfprintf 0049                   _PORTCbits 000E  
                 _TRISCbits 008E        ??_read_prec_or_width 0078          __end_of_Lcd_Chr_CP 040E  
               vfpfcnvrt@ap 0038                 vfpfcnvrt@cp 0044                 vfpfcnvrt@fp 0043  
            __end_of___wmul 0711         start_initialization 001E                 __end_of_abs 0764  
               __end_of_pad 0648               Lcd_Out@buffer 0074                 vfprintf@fmt 0046  
                  ??___wmul 0074                   ___latbits 0002               __pcstackBANK0 0020  
                  ?_Lcd_Cmd 0070                    ?_Lcd_Out 0073                    ?___awdiv 0070  
                  ?___awmod 0070                    ?_sprintf 004D              ___wmul@product 0074  
                  _LATBbits 010D                   clear_ram0 079C                    Lcd_Out@x 0073  
                  Lcd_Out@y 0078                   _vfpfcnvrt 0214                Lcd_Init@data 0074  
         ___wmul@multiplier 0070                Lcd_Out2@data 0079                    _Lcd_Init 02DF  
                  _Lcd_Out2 0648                  vfprintf@ap 0048                  vfprintf@fp 004A  
                ?_vfpfcnvrt 0037                  sprintf@fmt 004D              Lcd_Chr_CP@data 0072  
                  _dtoa$645 002D                    __ptext10 07A2                    __ptext11 074A  
                  __ptext12 0560                    __ptext13 0501                    __ptext14 0786  
                  __ptext15 0648                    __ptext16 068B                    __ptext17 0378  
                  __ptext18 02DF                    __ptext19 040E                 Lcd_Cmd@data 0072  
                  int$flags 007E                    _vfprintf 072E                 Lcd_Out@data 0079  
                _INTCONbits 000B                    intlevel1 0000                   sprintf@ap 0052  
                _OSCCONbits 0099                  _ISR_TIMER0 0004                 ??_vfpfcnvrt 0039  
             __pstringtext1 0764               __pstringtext2 0770               __pstringtext3 077C  
             __pstringtext4 078F               __pstringtext5 0796               __pstringtext6 0000  
                _OPTION_REG 0095                    sprintf@f 0054                    sprintf@s 0053  
