

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Mon May 29 15:47:50 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F1619
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    10                           	psect	cinit,global,class=CODE,merge=1,delta=2
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2,group=3
    18                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text8,local,class=CODE,merge=1,delta=2,group=3
    25                           	psect	text9,local,class=CODE,merge=1,delta=2,group=3
    26                           	psect	text10,local,class=CODE,merge=1,delta=2,group=3
    27                           	psect	text11,local,class=CODE,merge=1,delta=2,group=3
    28                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text15,local,class=CODE,merge=1,delta=2
    32                           	psect	text16,local,class=CODE,merge=1,delta=2
    33                           	psect	text17,local,class=CODE,merge=1,delta=2
    34                           	psect	text18,local,class=CODE,merge=1,delta=2
    35                           	psect	text19,local,class=CODE,merge=1,delta=2
    36                           	psect	text20,local,class=CODE,merge=1,delta=2
    37                           	psect	text21,local,class=CODE,merge=1,delta=2
    38                           	psect	text22,local,class=CODE,merge=1,delta=2
    39                           	psect	intentry,global,class=CODE,delta=2
    40                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    41                           	dabs	1,0x7E,2
    42     0000                     
    43                           ; Generated 09/02/2023 GMT
    44                           ; 
    45                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    46                           ; All rights reserved.
    47                           ; 
    48                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    49                           ; 
    50                           ; Redistribution and use in source and binary forms, with or without modification, are
    51                           ; permitted provided that the following conditions are met:
    52                           ; 
    53                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    54                           ;        conditions and the following disclaimer.
    55                           ; 
    56                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    57                           ;        of conditions and the following disclaimer in the documentation and/or other
    58                           ;        materials provided with the distribution. Publication is not required when
    59                           ;        this file is used in an embedded application.
    60                           ; 
    61                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    62                           ;        software without specific prior written permission.
    63                           ; 
    64                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    65                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    66                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    67                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    68                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    69                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    70                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    71                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    72                           ; 
    73                           ; 
    74                           ; Code-generator required, PIC16F1619 Definitions
    75                           ; 
    76                           ; SFR Addresses
    77     0000                     	;# 
    78     0001                     	;# 
    79     0002                     	;# 
    80     0003                     	;# 
    81     0004                     	;# 
    82     0005                     	;# 
    83     0006                     	;# 
    84     0007                     	;# 
    85     0008                     	;# 
    86     0009                     	;# 
    87     000A                     	;# 
    88     000B                     	;# 
    89     000C                     	;# 
    90     000D                     	;# 
    91     000E                     	;# 
    92     0010                     	;# 
    93     0011                     	;# 
    94     0012                     	;# 
    95     0013                     	;# 
    96     0014                     	;# 
    97     0015                     	;# 
    98     0016                     	;# 
    99     0016                     	;# 
   100     0017                     	;# 
   101     0018                     	;# 
   102     0019                     	;# 
   103     001A                     	;# 
   104     001A                     	;# 
   105     001B                     	;# 
   106     001B                     	;# 
   107     001C                     	;# 
   108     001D                     	;# 
   109     001E                     	;# 
   110     001F                     	;# 
   111     008C                     	;# 
   112     008D                     	;# 
   113     008E                     	;# 
   114     0090                     	;# 
   115     0091                     	;# 
   116     0092                     	;# 
   117     0093                     	;# 
   118     0094                     	;# 
   119     0095                     	;# 
   120     0096                     	;# 
   121     0098                     	;# 
   122     0099                     	;# 
   123     009A                     	;# 
   124     009B                     	;# 
   125     009B                     	;# 
   126     009C                     	;# 
   127     009D                     	;# 
   128     009E                     	;# 
   129     009F                     	;# 
   130     010C                     	;# 
   131     010D                     	;# 
   132     010E                     	;# 
   133     0111                     	;# 
   134     0112                     	;# 
   135     0113                     	;# 
   136     0114                     	;# 
   137     0115                     	;# 
   138     0116                     	;# 
   139     0117                     	;# 
   140     0118                     	;# 
   141     0119                     	;# 
   142     011C                     	;# 
   143     018C                     	;# 
   144     018D                     	;# 
   145     018E                     	;# 
   146     0191                     	;# 
   147     0191                     	;# 
   148     0192                     	;# 
   149     0193                     	;# 
   150     0193                     	;# 
   151     0194                     	;# 
   152     0195                     	;# 
   153     0196                     	;# 
   154     0197                     	;# 
   155     0199                     	;# 
   156     0199                     	;# 
   157     0199                     	;# 
   158     019A                     	;# 
   159     019A                     	;# 
   160     019A                     	;# 
   161     019B                     	;# 
   162     019B                     	;# 
   163     019B                     	;# 
   164     019B                     	;# 
   165     019B                     	;# 
   166     019C                     	;# 
   167     019C                     	;# 
   168     019C                     	;# 
   169     019D                     	;# 
   170     019D                     	;# 
   171     019D                     	;# 
   172     019E                     	;# 
   173     019E                     	;# 
   174     019E                     	;# 
   175     019F                     	;# 
   176     019F                     	;# 
   177     019F                     	;# 
   178     019F                     	;# 
   179     019F                     	;# 
   180     020C                     	;# 
   181     020D                     	;# 
   182     020E                     	;# 
   183     0211                     	;# 
   184     0211                     	;# 
   185     0212                     	;# 
   186     0212                     	;# 
   187     0213                     	;# 
   188     0213                     	;# 
   189     0214                     	;# 
   190     0214                     	;# 
   191     0215                     	;# 
   192     0215                     	;# 
   193     0215                     	;# 
   194     0215                     	;# 
   195     0216                     	;# 
   196     0216                     	;# 
   197     0217                     	;# 
   198     0217                     	;# 
   199     028C                     	;# 
   200     028D                     	;# 
   201     028E                     	;# 
   202     0291                     	;# 
   203     0291                     	;# 
   204     0292                     	;# 
   205     0293                     	;# 
   206     0294                     	;# 
   207     0298                     	;# 
   208     0298                     	;# 
   209     0299                     	;# 
   210     029A                     	;# 
   211     029B                     	;# 
   212     029E                     	;# 
   213     030C                     	;# 
   214     030D                     	;# 
   215     030E                     	;# 
   216     038C                     	;# 
   217     038D                     	;# 
   218     038E                     	;# 
   219     0391                     	;# 
   220     0392                     	;# 
   221     0393                     	;# 
   222     0394                     	;# 
   223     0395                     	;# 
   224     0396                     	;# 
   225     0397                     	;# 
   226     0398                     	;# 
   227     0399                     	;# 
   228     040E                     	;# 
   229     0413                     	;# 
   230     0413                     	;# 
   231     0414                     	;# 
   232     0414                     	;# 
   233     0415                     	;# 
   234     0416                     	;# 
   235     0417                     	;# 
   236     0418                     	;# 
   237     041A                     	;# 
   238     041A                     	;# 
   239     041B                     	;# 
   240     041B                     	;# 
   241     041C                     	;# 
   242     041D                     	;# 
   243     041E                     	;# 
   244     041F                     	;# 
   245     0493                     	;# 
   246     0494                     	;# 
   247     0495                     	;# 
   248     0496                     	;# 
   249     049A                     	;# 
   250     049B                     	;# 
   251     049C                     	;# 
   252     049D                     	;# 
   253     058C                     	;# 
   254     058C                     	;# 
   255     058D                     	;# 
   256     058E                     	;# 
   257     058E                     	;# 
   258     058F                     	;# 
   259     0590                     	;# 
   260     0590                     	;# 
   261     0591                     	;# 
   262     0592                     	;# 
   263     0592                     	;# 
   264     0593                     	;# 
   265     0594                     	;# 
   266     0594                     	;# 
   267     0595                     	;# 
   268     0596                     	;# 
   269     0596                     	;# 
   270     0597                     	;# 
   271     0598                     	;# 
   272     0599                     	;# 
   273     059A                     	;# 
   274     059B                     	;# 
   275     059B                     	;# 
   276     059C                     	;# 
   277     059D                     	;# 
   278     060C                     	;# 
   279     060C                     	;# 
   280     060D                     	;# 
   281     060E                     	;# 
   282     060F                     	;# 
   283     060F                     	;# 
   284     0610                     	;# 
   285     0611                     	;# 
   286     0612                     	;# 
   287     0613                     	;# 
   288     0614                     	;# 
   289     0617                     	;# 
   290     0617                     	;# 
   291     0618                     	;# 
   292     0619                     	;# 
   293     061A                     	;# 
   294     061A                     	;# 
   295     061B                     	;# 
   296     061C                     	;# 
   297     0691                     	;# 
   298     0692                     	;# 
   299     0693                     	;# 
   300     0694                     	;# 
   301     0695                     	;# 
   302     0696                     	;# 
   303     0697                     	;# 
   304     0699                     	;# 
   305     069A                     	;# 
   306     0711                     	;# 
   307     0712                     	;# 
   308     0713                     	;# 
   309     0714                     	;# 
   310     0715                     	;# 
   311     0718                     	;# 
   312     0718                     	;# 
   313     0719                     	;# 
   314     071A                     	;# 
   315     071A                     	;# 
   316     071B                     	;# 
   317     071C                     	;# 
   318     071D                     	;# 
   319     0791                     	;# 
   320     0791                     	;# 
   321     0792                     	;# 
   322     0793                     	;# 
   323     0793                     	;# 
   324     0794                     	;# 
   325     0795                     	;# 
   326     0795                     	;# 
   327     0796                     	;# 
   328     0797                     	;# 
   329     0797                     	;# 
   330     0798                     	;# 
   331     0799                     	;# 
   332     079A                     	;# 
   333     080C                     	;# 
   334     080C                     	;# 
   335     080D                     	;# 
   336     080E                     	;# 
   337     080E                     	;# 
   338     080F                     	;# 
   339     0810                     	;# 
   340     0810                     	;# 
   341     0811                     	;# 
   342     0812                     	;# 
   343     0812                     	;# 
   344     0813                     	;# 
   345     0814                     	;# 
   346     0815                     	;# 
   347     0816                     	;# 
   348     0817                     	;# 
   349     0818                     	;# 
   350     0819                     	;# 
   351     081A                     	;# 
   352     081A                     	;# 
   353     081B                     	;# 
   354     081C                     	;# 
   355     081C                     	;# 
   356     081D                     	;# 
   357     088C                     	;# 
   358     088D                     	;# 
   359     088E                     	;# 
   360     088F                     	;# 
   361     088F                     	;# 
   362     0890                     	;# 
   363     0891                     	;# 
   364     0892                     	;# 
   365     0893                     	;# 
   366     0893                     	;# 
   367     0894                     	;# 
   368     0895                     	;# 
   369     0896                     	;# 
   370     0897                     	;# 
   371     0897                     	;# 
   372     0898                     	;# 
   373     0899                     	;# 
   374     0D8C                     	;# 
   375     0D8C                     	;# 
   376     0D8D                     	;# 
   377     0D8E                     	;# 
   378     0D8F                     	;# 
   379     0D8F                     	;# 
   380     0D90                     	;# 
   381     0D91                     	;# 
   382     0D92                     	;# 
   383     0D92                     	;# 
   384     0D93                     	;# 
   385     0D94                     	;# 
   386     0D95                     	;# 
   387     0D95                     	;# 
   388     0D96                     	;# 
   389     0D97                     	;# 
   390     0D98                     	;# 
   391     0D99                     	;# 
   392     0D9A                     	;# 
   393     0D9B                     	;# 
   394     0D9C                     	;# 
   395     0D9D                     	;# 
   396     0D9E                     	;# 
   397     0D9E                     	;# 
   398     0D9F                     	;# 
   399     0DA0                     	;# 
   400     0DA1                     	;# 
   401     0DA1                     	;# 
   402     0DA2                     	;# 
   403     0DA3                     	;# 
   404     0DA4                     	;# 
   405     0DA4                     	;# 
   406     0DA5                     	;# 
   407     0DA6                     	;# 
   408     0DA7                     	;# 
   409     0DA7                     	;# 
   410     0DA8                     	;# 
   411     0DA9                     	;# 
   412     0DAA                     	;# 
   413     0DAB                     	;# 
   414     0DAC                     	;# 
   415     0DAD                     	;# 
   416     0DAE                     	;# 
   417     0DAF                     	;# 
   418     0E0F                     	;# 
   419     0E10                     	;# 
   420     0E11                     	;# 
   421     0E12                     	;# 
   422     0E13                     	;# 
   423     0E14                     	;# 
   424     0E15                     	;# 
   425     0E16                     	;# 
   426     0E17                     	;# 
   427     0E18                     	;# 
   428     0E19                     	;# 
   429     0E1A                     	;# 
   430     0E1B                     	;# 
   431     0E1C                     	;# 
   432     0E1D                     	;# 
   433     0E1E                     	;# 
   434     0E1F                     	;# 
   435     0E20                     	;# 
   436     0E21                     	;# 
   437     0E22                     	;# 
   438     0E23                     	;# 
   439     0E24                     	;# 
   440     0E25                     	;# 
   441     0E26                     	;# 
   442     0E27                     	;# 
   443     0E28                     	;# 
   444     0E29                     	;# 
   445     0E2A                     	;# 
   446     0E2B                     	;# 
   447     0E2C                     	;# 
   448     0E2D                     	;# 
   449     0E2E                     	;# 
   450     0E90                     	;# 
   451     0E91                     	;# 
   452     0E92                     	;# 
   453     0E94                     	;# 
   454     0E95                     	;# 
   455     0E9C                     	;# 
   456     0E9D                     	;# 
   457     0E9E                     	;# 
   458     0E9F                     	;# 
   459     0EA0                     	;# 
   460     0EA1                     	;# 
   461     0EA2                     	;# 
   462     0EA3                     	;# 
   463     0EA4                     	;# 
   464     0EA5                     	;# 
   465     0EA6                     	;# 
   466     0EA7                     	;# 
   467     0F0F                     	;# 
   468     0F10                     	;# 
   469     0F11                     	;# 
   470     0F12                     	;# 
   471     0F13                     	;# 
   472     0F14                     	;# 
   473     0F15                     	;# 
   474     0F16                     	;# 
   475     0F17                     	;# 
   476     0F18                     	;# 
   477     0F19                     	;# 
   478     0F1A                     	;# 
   479     0F1B                     	;# 
   480     0F1C                     	;# 
   481     0F1D                     	;# 
   482     0F1E                     	;# 
   483     0F1F                     	;# 
   484     0F20                     	;# 
   485     0F21                     	;# 
   486     0F22                     	;# 
   487     0F23                     	;# 
   488     0F24                     	;# 
   489     0F25                     	;# 
   490     0F26                     	;# 
   491     0F27                     	;# 
   492     0F28                     	;# 
   493     0F29                     	;# 
   494     0F2A                     	;# 
   495     0F2B                     	;# 
   496     0F2C                     	;# 
   497     0F2D                     	;# 
   498     0F2E                     	;# 
   499     0F2F                     	;# 
   500     0F30                     	;# 
   501     0F31                     	;# 
   502     0F32                     	;# 
   503     0F33                     	;# 
   504     0F34                     	;# 
   505     0F35                     	;# 
   506     0F36                     	;# 
   507     0F37                     	;# 
   508     0FE4                     	;# 
   509     0FE5                     	;# 
   510     0FE6                     	;# 
   511     0FE7                     	;# 
   512     0FE8                     	;# 
   513     0FE9                     	;# 
   514     0FEA                     	;# 
   515     0FEB                     	;# 
   516     0FED                     	;# 
   517     0FEE                     	;# 
   518     0FEF                     	;# 
   519     0016                     _TMR1	set	22
   520     000E                     _PORTC	set	14
   521     000D                     _PORTB	set	13
   522     000C                     _PORTA	set	12
   523     0010                     _PIR1bits	set	16
   524     001C                     _T2CON	set	28
   525     001B                     _PR2	set	27
   526     001A                     _TMR2	set	26
   527     0018                     _T1CON	set	24
   528     0019                     _T1GCONbits	set	25
   529     000B                     _INTCONbits	set	11
   530     0015                     _TMR0	set	21
   531     000E                     _PORTCbits	set	14
   532     008E                     _TRISC	set	142
   533     008D                     _TRISB	set	141
   534     008C                     _TRISA	set	140
   535     0098                     _OSCTUNE	set	152
   536     0099                     _OSCCONbits	set	153
   537     0095                     _OPTION_REG	set	149
   538     008E                     _TRISCbits	set	142
   539     010D                     _LATBbits	set	269
   540     018E                     _ANSELC	set	398
   541     018D                     _ANSELB	set	397
   542     018C                     _ANSELA	set	396
   543     0291                     _CCPR1L	set	657
   544     0293                     _CCP1CON	set	659
   545     0E12                     _T1CKIPPS	set	3602
   546     0EA6                     _RC6PPS	set	3750
   547                           
   548                           	psect	stringtext1
   549     0783                     __pstringtext1:
   550     0783                     STR_2:
   551     0783  3446               	retlw	70	;'F'
   552     0784  3472               	retlw	114	;'r'
   553     0785  3465               	retlw	101	;'e'
   554     0786  3471               	retlw	113	;'q'
   555     0787  3475               	retlw	117	;'u'
   556     0788  3465               	retlw	101	;'e'
   557     0789  346E               	retlw	110	;'n'
   558     078A  3463               	retlw	99	;'c'
   559     078B  3479               	retlw	121	;'y'
   560     078C  343A               	retlw	58	;':'
   561     078D  3420               	retlw	32	;' '
   562     078E  3425               	retlw	37	;'%'
   563     078F  3430               	retlw	48	;'0'
   564     0790  3433               	retlw	51	;'3'
   565     0791  3464               	retlw	100	;'d'
   566     0792  3400               	retlw	0
   567                           
   568                           	psect	stringtext2
   569     07A3                     __pstringtext2:
   570     07A3                     STR_3:
   571     07A3  3454               	retlw	84	;'T'
   572     07A4  3465               	retlw	101	;'e'
   573     07A5  3473               	retlw	115	;'s'
   574     07A6  3474               	retlw	116	;'t'
   575     07A7  3469               	retlw	105	;'i'
   576     07A8  346E               	retlw	110	;'n'
   577     07A9  3467               	retlw	103	;'g'
   578     07AA  3420               	retlw	32	;' '
   579     07AB  344C               	retlw	76	;'L'
   580     07AC  3443               	retlw	67	;'C'
   581     07AD  3444               	retlw	68	;'D'
   582     07AE  3400               	retlw	0
   583                           
   584                           	psect	stringtext3
   585     07AF                     __pstringtext3:
   586     07AF                     STR_1:
   587     07AF  3454               	retlw	84	;'T'
   588     07B0  3469               	retlw	105	;'i'
   589     07B1  346D               	retlw	109	;'m'
   590     07B2  3465               	retlw	101	;'e'
   591     07B3  3472               	retlw	114	;'r'
   592     07B4  3431               	retlw	49	;'1'
   593     07B5  3420               	retlw	32	;' '
   594     07B6  3425               	retlw	37	;'%'
   595     07B7  3430               	retlw	48	;'0'
   596     07B8  3433               	retlw	51	;'3'
   597     07B9  3464               	retlw	100	;'d'
   598     07BA  3400               	retlw	0
   599                           
   600                           	psect	stringtext4
   601     07BB                     __pstringtext4:
   602     07BB                     STR_4:
   603     07BB  3452               	retlw	82	;'R'
   604     07BC  3465               	retlw	101	;'e'
   605     07BD  344C               	retlw	76	;'L'
   606     07BE  346F               	retlw	111	;'o'
   607     07BF  3461               	retlw	97	;'a'
   608     07C0  3464               	retlw	100	;'d'
   609     07C1  3446               	retlw	70	;'F'
   610     07C2  3472               	retlw	114	;'r'
   611     07C3  3465               	retlw	101	;'e'
   612     07C4  3471               	retlw	113	;'q'
   613     07C5  3400               	retlw	0
   614                           
   615                           	psect	stringtext5
   616     07CF                     __pstringtext5:
   617     07CF                     STR_5:
   618     07CF  3452               	retlw	82	;'R'
   619     07D0  3465               	retlw	101	;'e'
   620     07D1  3473               	retlw	115	;'s'
   621     07D2  3474               	retlw	116	;'t'
   622     07D3  3461               	retlw	97	;'a'
   623     07D4  3472               	retlw	114	;'r'
   624     07D5  3400               	retlw	0
   625                           
   626                           	psect	stringtext6
   627     0000                     __pstringtext6:
   628                           
   629                           	psect	cinit
   630     0021                     start_initialization:	
   631                           ; #config settings
   632                           
   633     0021                     __initialization:
   634                           
   635                           ; Clear objects allocated to BANK0
   636     0021  3061               	movlw	low __pbssBANK0
   637     0022  0084               	movwf	4
   638     0023  3000               	movlw	high __pbssBANK0
   639     0024  0085               	movwf	5
   640     0025  3009               	movlw	9
   641     0026  3187  27DD  3180   	fcall	clear_ram0
   642                           
   643                           ; Clear objects allocated to BANK1
   644     0029  30A0               	movlw	low __pbssBANK1
   645     002A  0084               	movwf	4
   646     002B  3000               	movlw	high __pbssBANK1
   647     002C  0085               	movwf	5
   648     002D  3048               	movlw	72
   649     002E  3187  27DD  3180   	fcall	clear_ram0
   650     0031                     end_of_initialization:	
   651                           ;End of C runtime variable initialization code
   652                           
   653     0031                     __end_of__initialization:
   654     0031  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   655     0032  0020               	movlb	0
   656     0033  3180  2835         	ljmp	_main	;jump to C main() function
   657                           
   658                           	psect	bssBANK0
   659     0061                     __pbssBANK0:
   660     0061                     _width:
   661     0061                     	ds	2
   662     0063                     _prec:
   663     0063                     	ds	2
   664     0065                     _Freq:
   665     0065                     	ds	2
   666     0067                     _i:
   667     0067                     	ds	2
   668     0069                     _flags:
   669     0069                     	ds	1
   670                           
   671                           	psect	bssBANK1
   672     00A0                     __pbssBANK1:
   673     00A0                     _dbuf:
   674     00A0                     	ds	32
   675     00C0                     _buffer2:
   676     00C0                     	ds	20
   677     00D4                     _buffer1:
   678     00D4                     	ds	20
   679                           
   680                           	psect	clrtext
   681     07DD                     clear_ram0:	
   682                           ;	Called with FSR0 containing the base address, and
   683                           ;	WREG with the size to clear
   684                           
   685     07DD  0064               	clrwdt	;clear the watchdog before getting into this loop
   686     07DE                     clrloop0:
   687     07DE  0180               	clrf	0	;clear RAM location pointed to by FSR
   688     07DF  3101               	addfsr 0,1
   689     07E0  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   690     07E1  2FDE               	goto	clrloop0	;have we reached the end yet?
   691     07E2  3400               	retlw	0	;all done for this memory range, return
   692                           
   693                           	psect	cstackCOMMON
   694     0070                     __pcstackCOMMON:
   695     0070                     ?_Lcd_Cmd:
   696     0070                     ??_Lcd_Cmd:	
   697                           ; 1 bytes @ 0x0
   698                           
   699     0070                     ?_Lcd_Chr_CP:	
   700                           ; 1 bytes @ 0x0
   701                           
   702     0070                     ??_Lcd_Chr_CP:	
   703                           ; 1 bytes @ 0x0
   704                           
   705     0070                     ?_putch:	
   706                           ; 1 bytes @ 0x0
   707                           
   708     0070                     ??_putch:	
   709                           ; 1 bytes @ 0x0
   710                           
   711     0070                     ?_Lcd_Init:	
   712                           ; 1 bytes @ 0x0
   713                           
   714     0070                     ?_TMR0_Timer:	
   715                           ; 1 bytes @ 0x0
   716                           
   717     0070                     ??_TMR0_Timer:	
   718                           ; 1 bytes @ 0x0
   719                           
   720     0070                     ?_TMR1_Counter:	
   721                           ; 1 bytes @ 0x0
   722                           
   723     0070                     ??_TMR1_Counter:	
   724                           ; 1 bytes @ 0x0
   725                           
   726     0070                     ?_TMR2_PWM:	
   727                           ; 1 bytes @ 0x0
   728                           
   729     0070                     ??_TMR2_PWM:	
   730                           ; 1 bytes @ 0x0
   731                           
   732     0070                     ?_ISR_TIMER0:	
   733                           ; 1 bytes @ 0x0
   734                           
   735     0070                     ??_ISR_TIMER0:	
   736                           ; 1 bytes @ 0x0
   737                           
   738     0070                     ?_main:	
   739                           ; 1 bytes @ 0x0
   740                           
   741     0070                     ?_fputc:	
   742                           ; 1 bytes @ 0x0
   743                           
   744     0070                     ?___wmul:	
   745                           ; 2 bytes @ 0x0
   746                           
   747     0070                     ?___awdiv:	
   748                           ; 2 bytes @ 0x0
   749                           
   750     0070                     ?___awmod:	
   751                           ; 2 bytes @ 0x0
   752                           
   753     0070                     ?___lwdiv:	
   754                           ; 2 bytes @ 0x0
   755                           
   756     0070                     putch@c:	
   757                           ; 2 bytes @ 0x0
   758                           
   759     0070                     ___wmul@multiplier:	
   760                           ; 1 bytes @ 0x0
   761                           
   762     0070                     ___awdiv@divisor:	
   763                           ; 2 bytes @ 0x0
   764                           
   765     0070                     ___awmod@divisor:	
   766                           ; 2 bytes @ 0x0
   767                           
   768     0070                     ___lwdiv@divisor:	
   769                           ; 2 bytes @ 0x0
   770                           
   771     0070                     fputc@c:	
   772                           ; 2 bytes @ 0x0
   773                           
   774                           
   775                           ; 2 bytes @ 0x0
   776     0070                     	ds	2
   777     0072                     Lcd_Chr_CP@data:
   778     0072                     Lcd_Cmd@data:	
   779                           ; 1 bytes @ 0x2
   780                           
   781     0072                     fputc@fp:	
   782                           ; 1 bytes @ 0x2
   783                           
   784     0072                     ___wmul@multiplicand:	
   785                           ; 1 bytes @ 0x2
   786                           
   787     0072                     ___awdiv@dividend:	
   788                           ; 2 bytes @ 0x2
   789                           
   790     0072                     ___awmod@dividend:	
   791                           ; 2 bytes @ 0x2
   792                           
   793     0072                     ___lwdiv@dividend:	
   794                           ; 2 bytes @ 0x2
   795                           
   796                           
   797                           ; 2 bytes @ 0x2
   798     0072                     	ds	1
   799     0073                     ??_fputc:
   800     0073                     ??_Lcd_Init:	
   801                           ; 1 bytes @ 0x3
   802                           
   803     0073                     ?_Lcd_Out:	
   804                           ; 1 bytes @ 0x3
   805                           
   806     0073                     ?_Lcd_Out2:	
   807                           ; 1 bytes @ 0x3
   808                           
   809     0073                     Lcd_Out@x:	
   810                           ; 1 bytes @ 0x3
   811                           
   812     0073                     Lcd_Out2@x:	
   813                           ; 1 bytes @ 0x3
   814                           
   815                           
   816                           ; 1 bytes @ 0x3
   817     0073                     	ds	1
   818     0074                     ??___wmul:
   819     0074                     ??___awdiv:	
   820                           ; 1 bytes @ 0x4
   821                           
   822     0074                     ??___awmod:	
   823                           ; 1 bytes @ 0x4
   824                           
   825     0074                     ??___lwdiv:	
   826                           ; 1 bytes @ 0x4
   827                           
   828     0074                     Lcd_Init@data:	
   829                           ; 1 bytes @ 0x4
   830                           
   831     0074                     Lcd_Out@buffer:	
   832                           ; 1 bytes @ 0x4
   833                           
   834     0074                     Lcd_Out2@buffer:	
   835                           ; 2 bytes @ 0x4
   836                           
   837     0074                     ___wmul@product:	
   838                           ; 2 bytes @ 0x4
   839                           
   840                           
   841                           ; 2 bytes @ 0x4
   842     0074                     	ds	1
   843     0075                     ___awdiv@counter:
   844     0075                     ___awmod@counter:	
   845                           ; 1 bytes @ 0x5
   846                           
   847     0075                     ___lwdiv@quotient:	
   848                           ; 1 bytes @ 0x5
   849                           
   850                           
   851                           ; 2 bytes @ 0x5
   852     0075                     	ds	1
   853     0076                     ??_Lcd_Out:
   854     0076                     ??_Lcd_Out2:	
   855                           ; 1 bytes @ 0x6
   856                           
   857     0076                     ?_read_prec_or_width:	
   858                           ; 1 bytes @ 0x6
   859                           
   860     0076                     ___awdiv@sign:	
   861                           ; 2 bytes @ 0x6
   862                           
   863     0076                     ___awmod@sign:	
   864                           ; 1 bytes @ 0x6
   865                           
   866     0076                     read_prec_or_width@ap:	
   867                           ; 1 bytes @ 0x6
   868                           
   869                           
   870                           ; 1 bytes @ 0x6
   871     0076                     	ds	1
   872     0077                     ?_abs:
   873     0077                     ___lwdiv@counter:	
   874                           ; 2 bytes @ 0x7
   875                           
   876     0077                     ___awdiv@quotient:	
   877                           ; 1 bytes @ 0x7
   878                           
   879     0077                     abs@a:	
   880                           ; 2 bytes @ 0x7
   881                           
   882                           
   883                           ; 2 bytes @ 0x7
   884     0077                     	ds	1
   885     0078                     ??_read_prec_or_width:
   886     0078                     ?_fputs:	
   887                           ; 1 bytes @ 0x8
   888                           
   889     0078                     Lcd_Out@y:	
   890                           ; 2 bytes @ 0x8
   891                           
   892     0078                     Lcd_Out2@y:	
   893                           ; 1 bytes @ 0x8
   894                           
   895     0078                     fputs@fp:	
   896                           ; 1 bytes @ 0x8
   897                           
   898                           
   899                           ; 1 bytes @ 0x8
   900     0078                     	ds	1
   901     0079                     ??_fputs:
   902     0079                     ??_abs:	
   903                           ; 1 bytes @ 0x9
   904                           
   905     0079                     Lcd_Out@data:	
   906                           ; 1 bytes @ 0x9
   907                           
   908     0079                     Lcd_Out2@data:	
   909                           ; 1 bytes @ 0x9
   910                           
   911                           
   912                           ; 1 bytes @ 0x9
   913     0079                     	ds	2
   914     007B                     ?_pad:
   915     007B                     pad@buf:	
   916                           ; 1 bytes @ 0xB
   917                           
   918                           
   919                           ; 1 bytes @ 0xB
   920     007B                     	ds	1
   921     007C                     pad@p:
   922                           
   923                           ; 2 bytes @ 0xC
   924     007C                     	ds	2
   925                           
   926                           	psect	cstackBANK0
   927     0020                     __pcstackBANK0:
   928     0020                     read_prec_or_width@c:
   929     0020                     fputs@c:	
   930                           ; 1 bytes @ 0x0
   931                           
   932                           
   933                           ; 1 bytes @ 0x0
   934     0020                     	ds	1
   935     0021                     read_prec_or_width@n:
   936     0021                     fputs@i:	
   937                           ; 2 bytes @ 0x1
   938                           
   939                           
   940                           ; 2 bytes @ 0x1
   941     0021                     	ds	2
   942     0023                     read_prec_or_width@fmt:
   943     0023                     fputs@s:	
   944                           ; 1 bytes @ 0x3
   945                           
   946                           
   947                           ; 1 bytes @ 0x3
   948     0023                     	ds	1
   949     0024                     ??_pad:
   950                           
   951                           ; 1 bytes @ 0x4
   952     0024                     	ds	1
   953     0025                     pad@i:
   954                           
   955                           ; 2 bytes @ 0x5
   956     0025                     	ds	2
   957     0027                     pad@w:
   958                           
   959                           ; 2 bytes @ 0x7
   960     0027                     	ds	2
   961     0029                     pad@fp:
   962                           
   963                           ; 1 bytes @ 0x9
   964     0029                     	ds	1
   965     002A                     ?_dtoa:
   966     002A                     dtoa@d:	
   967                           ; 1 bytes @ 0xA
   968                           
   969                           
   970                           ; 2 bytes @ 0xA
   971     002A                     	ds	2
   972     002C                     ??_dtoa:
   973                           
   974                           ; 1 bytes @ 0xC
   975     002C                     	ds	1
   976     002D                     _dtoa$723:
   977                           
   978                           ; 2 bytes @ 0xD
   979     002D                     	ds	2
   980     002F                     dtoa@fp:
   981                           
   982                           ; 1 bytes @ 0xF
   983     002F                     	ds	1
   984     0030                     dtoa@p:
   985                           
   986                           ; 2 bytes @ 0x10
   987     0030                     	ds	2
   988     0032                     dtoa@w:
   989                           
   990                           ; 2 bytes @ 0x12
   991     0032                     	ds	2
   992     0034                     dtoa@i:
   993                           
   994                           ; 2 bytes @ 0x14
   995     0034                     	ds	2
   996     0036                     dtoa@s:
   997                           
   998                           ; 1 bytes @ 0x16
   999     0036                     	ds	1
  1000     0037                     ?_vfpfcnvrt:
  1001     0037                     vfpfcnvrt@fmt:	
  1002                           ; 1 bytes @ 0x17
  1003                           
  1004                           
  1005                           ; 1 bytes @ 0x17
  1006     0037                     	ds	1
  1007     0038                     vfpfcnvrt@ap:
  1008                           
  1009                           ; 1 bytes @ 0x18
  1010     0038                     	ds	1
  1011     0039                     ??_vfpfcnvrt:
  1012                           
  1013                           ; 1 bytes @ 0x19
  1014     0039                     	ds	4
  1015     003D                     vfpfcnvrt@convarg:
  1016                           
  1017                           ; 4 bytes @ 0x1D
  1018     003D                     	ds	4
  1019     0041                     vfpfcnvrt@done:
  1020                           
  1021                           ; 2 bytes @ 0x21
  1022     0041                     	ds	2
  1023     0043                     vfpfcnvrt@fp:
  1024                           
  1025                           ; 1 bytes @ 0x23
  1026     0043                     	ds	1
  1027     0044                     vfpfcnvrt@cp:
  1028                           
  1029                           ; 2 bytes @ 0x24
  1030     0044                     	ds	2
  1031     0046                     ?_vfprintf:
  1032     0046                     vfprintf@fmt:	
  1033                           ; 2 bytes @ 0x26
  1034                           
  1035                           
  1036                           ; 2 bytes @ 0x26
  1037     0046                     	ds	2
  1038     0048                     vfprintf@ap:
  1039                           
  1040                           ; 1 bytes @ 0x28
  1041     0048                     	ds	1
  1042     0049                     ??_vfprintf:
  1043                           
  1044                           ; 1 bytes @ 0x29
  1045     0049                     	ds	1
  1046     004A                     vfprintf@fp:
  1047                           
  1048                           ; 1 bytes @ 0x2A
  1049     004A                     	ds	1
  1050     004B                     vfprintf@cfmt:
  1051                           
  1052                           ; 2 bytes @ 0x2B
  1053     004B                     	ds	2
  1054     004D                     ?_sprintf:
  1055     004D                     sprintf@fmt:	
  1056                           ; 2 bytes @ 0x2D
  1057                           
  1058                           
  1059                           ; 2 bytes @ 0x2D
  1060     004D                     	ds	4
  1061     0051                     ??_sprintf:
  1062                           
  1063                           ; 1 bytes @ 0x31
  1064     0051                     	ds	1
  1065     0052                     sprintf@ap:
  1066                           
  1067                           ; 1 bytes @ 0x32
  1068     0052                     	ds	1
  1069     0053                     sprintf@s:
  1070                           
  1071                           ; 1 bytes @ 0x33
  1072     0053                     	ds	1
  1073     0054                     sprintf@f:
  1074                           
  1075                           ; 11 bytes @ 0x34
  1076     0054                     	ds	11
  1077     005F                     ??_main:
  1078                           
  1079                           ; 1 bytes @ 0x3F
  1080     005F                     	ds	2
  1081                           
  1082                           	psect	maintext
  1083     0035                     __pmaintext:	
  1084 ;;
  1085 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1086 ;;
  1087 ;; *************** function _main *****************
  1088 ;; Defined at:
  1089 ;;		line 54 in file "main.c"
  1090 ;; Parameters:    Size  Location     Type
  1091 ;;		None
  1092 ;; Auto vars:     Size  Location     Type
  1093 ;;  DC              2    0        unsigned int 
  1094 ;; Return value:  Size  Location     Type
  1095 ;;                  1    wreg      void 
  1096 ;; Registers used:
  1097 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1098 ;; Tracked objects:
  1099 ;;		On entry : B1F/0
  1100 ;;		On exit  : 0/0
  1101 ;;		Unchanged: 0/0
  1102 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1103 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1104 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1105 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1106 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1107 ;;Total ram usage:        2 bytes
  1108 ;; Hardware stack levels required when called: 9
  1109 ;; This function calls:
  1110 ;;		_Lcd_Cmd
  1111 ;;		_Lcd_Init
  1112 ;;		_Lcd_Out
  1113 ;;		_Lcd_Out2
  1114 ;;		_TMR0_Timer
  1115 ;;		_TMR1_Counter
  1116 ;;		_TMR2_PWM
  1117 ;;		___lwdiv
  1118 ;;		_sprintf
  1119 ;; This function is called by:
  1120 ;;		Startup code after reset
  1121 ;; This function uses a non-reentrant model
  1122 ;;
  1123                           
  1124     0035                     _main:	
  1125                           ;psect for function _main
  1126                           
  1127     0035                     l1893:	
  1128                           ;incstack = 0
  1129                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1130                           
  1131                           
  1132                           ;main.c: 56:     PORTA = 0;
  1133     0035  0021               	movlb	1	; select bank1
  1134     0036  0819               	movf	25,w	;volatile
  1135     0037  3987               	andlw	-121
  1136     0038  3868               	iorlw	104
  1137     0039  0099               	movwf	25	;volatile
  1138                           
  1139                           ;main.c: 57:     PORTB = 0;
  1140     003A  30FC               	movlw	-4
  1141     003B  0599               	andwf	25,f	;volatile
  1142     003C                     l1895:
  1143                           
  1144                           ;main.c: 58:     PORTC = 0;
  1145     003C  0198               	clrf	24	;volatile
  1146     003D                     l1897:
  1147                           
  1148                           ;main.c: 61:     INTCONbits.GIE = 1;
  1149     003D  0023               	movlb	3	; select bank3
  1150     003E  018C               	clrf	12	;volatile
  1151     003F                     l1899:
  1152                           
  1153                           ;main.c: 62:     INTCONbits.T0IF = 0;
  1154     003F  018D               	clrf	13	;volatile
  1155     0040                     l1901:
  1156                           
  1157                           ;main.c: 63:     INTCONbits.TMR0IE = 1;
  1158     0040  018E               	clrf	14	;volatile
  1159     0041                     l1903:
  1160                           
  1161                           ;main.c: 64:     TMR0_Timer();
  1162     0041  3010               	movlw	16
  1163     0042  0021               	movlb	1	; select bank1
  1164     0043  008C               	movwf	12	;volatile
  1165     0044                     l1905:
  1166                           
  1167                           ;main.c: 65:     TMR1_Counter();
  1168     0044  018D               	clrf	13	;volatile
  1169     0045                     l1907:
  1170                           
  1171                           ;main.c: 66:     TMR2_PWM();
  1172     0045  018E               	clrf	14	;volatile
  1173     0046                     l1909:
  1174                           
  1175                           ;main.c: 69:     CCP1CON = 0b10001100;
  1176     0046  0020               	movlb	0	; select bank0
  1177     0047  018C               	clrf	12	;volatile
  1178     0048                     l1911:
  1179                           
  1180                           ;main.c: 70: 
  1181     0048  018D               	clrf	13	;volatile
  1182     0049                     l1913:
  1183                           
  1184                           ;main.c: 71:     unsigned int DC = 250;
  1185     0049  018E               	clrf	14	;volatile
  1186     004A                     l1915:
  1187                           
  1188                           ;main.c: 74: 
  1189     004A  178B               	bsf	11,7	;volatile
  1190     004B                     l1917:
  1191                           
  1192                           ;main.c: 75: 
  1193     004B  110B               	bcf	11,2	;volatile
  1194     004C                     l1919:
  1195                           
  1196                           ;main.c: 76: 
  1197     004C  168B               	bsf	11,5	;volatile
  1198     004D                     l1921:
  1199                           
  1200                           ;main.c: 77: 
  1201     004D  3187  27C6  3180   	fcall	_TMR0_Timer
  1202     0050                     l1923:
  1203                           
  1204                           ;main.c: 78:     Lcd_Init();
  1205     0050  3187  2793  3180   	fcall	_TMR1_Counter
  1206     0053                     l1925:
  1207                           
  1208                           ;main.c: 79:     Lcd_Cmd(1);
  1209     0053  3187  27D6  3180   	fcall	_TMR2_PWM
  1210     0056                     l1927:
  1211                           
  1212                           ;main.c: 81:     _delay((unsigned long)((100)*(4000000/4000.0)));
  1213     0056  300C               	movlw	12
  1214     0057  003D               	movlb	29	; select bank29
  1215     0058  00A6               	movwf	38	;volatile
  1216     0059                     l1929:
  1217                           
  1218                           ;main.c: 82: 
  1219     0059  308C               	movlw	140
  1220     005A  0025               	movlb	5	; select bank5
  1221     005B  0093               	movwf	19	;volatile
  1222     005C                     l1931:
  1223     005C                     l1933:
  1224     005C  30FA               	movlw	250
  1225     005D  0091               	movwf	17	;volatile
  1226     005E                     l1935:
  1227                           
  1228                           ;main.c: 91:         _delay((unsigned long)((500)*(4000000/4000.0)));
  1229     005E  3182  22C2  3180   	fcall	_Lcd_Init
  1230     0061                     l1937:
  1231                           
  1232                           ;main.c: 92:         Lcd_Out2(2,1,"Testing LCD");
  1233     0061  3001               	movlw	1
  1234     0062  3183  23F1  3180   	fcall	_Lcd_Cmd
  1235     0065                     l1939:
  1236                           
  1237                           ;main.c: 93:         _delay((unsigned long)((600)*(4000000/4000.0)));
  1238     0065  300C               	movlw	12
  1239     0066  3183  23F1  3180   	fcall	_Lcd_Cmd
  1240     0069                     l1941:
  1241                           
  1242                           ;main.c: 94:         Lcd_Cmd(15);
  1243     0069  3082               	movlw	130
  1244     006A  0020               	movlb	0	; select bank0
  1245     006B  00DF               	movwf	??_main
  1246     006C  30DD               	movlw	221
  1247     006D                     u1567:
  1248     006D  0B89               	decfsz	9,f
  1249     006E  286D               	goto	u1567
  1250     006F  0BDF               	decfsz	??_main,f
  1251     0070  286D               	goto	u1567
  1252     0071  3200               	nop2
  1253     0072                     l1943:
  1254                           
  1255                           ;main.c: 99:         _delay((unsigned long)((100)*(4000000/4000.0)));
  1256     0072  30A6               	movlw	166
  1257     0073  00F0               	movwf	___lwdiv@divisor
  1258     0074  3000               	movlw	0
  1259     0075  00F1               	movwf	___lwdiv@divisor+1
  1260     0076  0020               	movlb	0	; select bank0
  1261     0077  0817               	movf	23,w	;volatile
  1262     0078  00F3               	movwf	___lwdiv@dividend+1
  1263     0079  0816               	movf	22,w	;volatile
  1264     007A  00F2               	movwf	___lwdiv@dividend
  1265     007B  3186  26B1  3180   	fcall	___lwdiv
  1266     007E  0871               	movf	?___lwdiv+1,w
  1267     007F  0020               	movlb	0	; select bank0
  1268     0080  00E6               	movwf	_Freq+1
  1269     0081  0870               	movf	?___lwdiv,w
  1270     0082  00E5               	movwf	_Freq
  1271     0083                     l1945:
  1272                           
  1273                           ;main.c: 100:         Lcd_Cmd(1);
  1274     0083  30AF               	movlw	low (STR_1| (0+32768))
  1275     0084  00CD               	movwf	sprintf@fmt
  1276     0085  3087               	movlw	high (STR_1| (0+32768))
  1277     0086  00CE               	movwf	sprintf@fmt+1
  1278     0087  0817               	movf	23,w	;volatile
  1279     0088  00D0               	movwf	?_sprintf+3
  1280     0089  0816               	movf	22,w	;volatile
  1281     008A  00CF               	movwf	?_sprintf+2
  1282     008B  30D4               	movlw	(low (_buffer1| 0))& (0+255)
  1283     008C  3187  2730  3180   	fcall	_sprintf
  1284     008F                     l1947:
  1285                           
  1286                           ;main.c: 101:         _delay((unsigned long)((200)*(4000000/4000.0)));
  1287     008F  3083               	movlw	low (STR_2| (0+32768))
  1288     0090  0020               	movlb	0	; select bank0
  1289     0091  00CD               	movwf	sprintf@fmt
  1290     0092  3087               	movlw	high (STR_2| (0+32768))
  1291     0093  00CE               	movwf	sprintf@fmt+1
  1292     0094  0866               	movf	_Freq+1,w
  1293     0095  00D0               	movwf	?_sprintf+3
  1294     0096  0865               	movf	_Freq,w
  1295     0097  00CF               	movwf	?_sprintf+2
  1296     0098  30C0               	movlw	(low (_buffer2| 0))& (0+255)
  1297     0099  3187  2730  3180   	fcall	_sprintf
  1298     009C                     l1949:
  1299                           
  1300                           ;main.c: 102:         Lcd_Out(1, 4, "ReLoadFreq");
  1301     009C  01F3               	clrf	Lcd_Out2@x
  1302     009D  0AF3               	incf	Lcd_Out2@x,f
  1303     009E  30D4               	movlw	low _buffer1
  1304     009F  00F4               	movwf	Lcd_Out2@buffer
  1305     00A0  3000               	movlw	high _buffer1
  1306     00A1  00F5               	movwf	Lcd_Out2@buffer+1
  1307     00A2  3001               	movlw	1
  1308     00A3  3186  262B  3180   	fcall	_Lcd_Out2
  1309     00A6                     l1951:
  1310                           
  1311                           ;main.c: 103:         Lcd_Out(2, 4, "Restar");
  1312     00A6  01F3               	clrf	Lcd_Out2@x
  1313     00A7  0AF3               	incf	Lcd_Out2@x,f
  1314     00A8  30C0               	movlw	low _buffer2
  1315     00A9  00F4               	movwf	Lcd_Out2@buffer
  1316     00AA  3000               	movlw	high _buffer2
  1317     00AB  00F5               	movwf	Lcd_Out2@buffer+1
  1318     00AC  3002               	movlw	2
  1319     00AD  3186  262B  3180   	fcall	_Lcd_Out2
  1320     00B0                     l1953:
  1321                           
  1322                           ;main.c: 104:         }
  1323     00B0  3003               	movlw	3
  1324     00B1  0020               	movlb	0	; select bank0
  1325     00B2  00E0               	movwf	??_main+1
  1326     00B3  308A               	movlw	138
  1327     00B4  00DF               	movwf	??_main
  1328     00B5  3055               	movlw	85
  1329     00B6                     u1577:
  1330     00B6  0B89               	decfsz	9,f
  1331     00B7  28B6               	goto	u1577
  1332     00B8  0BDF               	decfsz	??_main,f
  1333     00B9  28B6               	goto	u1577
  1334     00BA  0BE0               	decfsz	??_main+1,f
  1335     00BB  28B6               	goto	u1577
  1336     00BC  3200               	nop2
  1337     00BD                     l1955:
  1338                           
  1339                           ;main.c: 105:  return;
  1340     00BD  01F3               	clrf	Lcd_Out2@x
  1341     00BE  0AF3               	incf	Lcd_Out2@x,f
  1342     00BF  30A3               	movlw	low (STR_3| (0+32768))
  1343     00C0  00F4               	movwf	Lcd_Out2@buffer
  1344     00C1  3087               	movlw	high (STR_3| (0+32768))
  1345     00C2  00F5               	movwf	Lcd_Out2@buffer+1
  1346     00C3  3002               	movlw	2
  1347     00C4  3186  262B  3180   	fcall	_Lcd_Out2
  1348     00C7                     l1957:
  1349                           
  1350                           ;main.c: 106: }
  1351     00C7  3004               	movlw	4
  1352     00C8  0020               	movlb	0	; select bank0
  1353     00C9  00E0               	movwf	??_main+1
  1354     00CA  300C               	movlw	12
  1355     00CB  00DF               	movwf	??_main
  1356     00CC  3033               	movlw	51
  1357     00CD                     u1587:
  1358     00CD  0B89               	decfsz	9,f
  1359     00CE  28CD               	goto	u1587
  1360     00CF  0BDF               	decfsz	??_main,f
  1361     00D0  28CD               	goto	u1587
  1362     00D1  0BE0               	decfsz	??_main+1,f
  1363     00D2  28CD               	goto	u1587
  1364     00D3  3200               	nop2
  1365     00D4                     l1959:
  1366     00D4  300F               	movlw	15
  1367     00D5  3183  23F1  3180   	fcall	_Lcd_Cmd
  1368     00D8                     l1961:
  1369     00D8  3082               	movlw	130
  1370     00D9  0020               	movlb	0	; select bank0
  1371     00DA  00DF               	movwf	??_main
  1372     00DB  30DD               	movlw	221
  1373     00DC                     u1597:
  1374     00DC  0B89               	decfsz	9,f
  1375     00DD  28DC               	goto	u1597
  1376     00DE  0BDF               	decfsz	??_main,f
  1377     00DF  28DC               	goto	u1597
  1378     00E0  3200               	nop2
  1379     00E1                     l1963:
  1380     00E1  300E               	movlw	14
  1381     00E2  3183  23F1  3180   	fcall	_Lcd_Cmd
  1382     00E5                     l1965:
  1383     00E5  3082               	movlw	130
  1384     00E6  0020               	movlb	0	; select bank0
  1385     00E7  00DF               	movwf	??_main
  1386     00E8  30DD               	movlw	221
  1387     00E9                     u1607:
  1388     00E9  0B89               	decfsz	9,f
  1389     00EA  28E9               	goto	u1607
  1390     00EB  0BDF               	decfsz	??_main,f
  1391     00EC  28E9               	goto	u1607
  1392     00ED  3200               	nop2
  1393     00EE                     l1967:
  1394     00EE  300C               	movlw	12
  1395     00EF  3183  23F1  3180   	fcall	_Lcd_Cmd
  1396     00F2                     l1969:
  1397     00F2  3082               	movlw	130
  1398     00F3  0020               	movlb	0	; select bank0
  1399     00F4  00DF               	movwf	??_main
  1400     00F5  30DD               	movlw	221
  1401     00F6                     u1617:
  1402     00F6  0B89               	decfsz	9,f
  1403     00F7  28F6               	goto	u1617
  1404     00F8  0BDF               	decfsz	??_main,f
  1405     00F9  28F6               	goto	u1617
  1406     00FA  3200               	nop2
  1407     00FB                     l1971:
  1408     00FB  3001               	movlw	1
  1409     00FC  3183  23F1  3180   	fcall	_Lcd_Cmd
  1410     00FF                     l1973:
  1411     00FF  3002               	movlw	2
  1412     0100  0020               	movlb	0	; select bank0
  1413     0101  00E0               	movwf	??_main+1
  1414     0102  3004               	movlw	4
  1415     0103  00DF               	movwf	??_main
  1416     0104  30BA               	movlw	186
  1417     0105                     u1627:
  1418     0105  0B89               	decfsz	9,f
  1419     0106  2905               	goto	u1627
  1420     0107  0BDF               	decfsz	??_main,f
  1421     0108  2905               	goto	u1627
  1422     0109  0BE0               	decfsz	??_main+1,f
  1423     010A  2905               	goto	u1627
  1424     010B  0000               	nop
  1425     010C                     l1975:
  1426     010C  3004               	movlw	4
  1427     010D  00F3               	movwf	Lcd_Out@x
  1428     010E  30BB               	movlw	low (STR_4| (0+32768))
  1429     010F  00F4               	movwf	Lcd_Out@buffer
  1430     0110  3087               	movlw	high (STR_4| (0+32768))
  1431     0111  00F5               	movwf	Lcd_Out@buffer+1
  1432     0112  3001               	movlw	1
  1433     0113  3186  266E  3180   	fcall	_Lcd_Out
  1434     0116                     l1977:
  1435     0116  3004               	movlw	4
  1436     0117  00F3               	movwf	Lcd_Out@x
  1437     0118  30CF               	movlw	low (STR_5| (0+32768))
  1438     0119  00F4               	movwf	Lcd_Out@buffer
  1439     011A  3087               	movlw	high (STR_5| (0+32768))
  1440     011B  00F5               	movwf	Lcd_Out@buffer+1
  1441     011C  3002               	movlw	2
  1442     011D  3186  266E  3180   	fcall	_Lcd_Out
  1443     0120  2872               	goto	l1943
  1444     0121  3180  281F         	ljmp	start
  1445     0123                     __end_of_main:
  1446                           
  1447                           	psect	text1
  1448     0730                     __ptext1:	
  1449 ;; *************** function _sprintf *****************
  1450 ;; Defined at:
  1451 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_sprintf.c"
  1452 ;; Parameters:    Size  Location     Type
  1453 ;;  s               1    wreg     PTR unsigned char 
  1454 ;;		 -> buffer2(20), buffer1(20), 
  1455 ;;  fmt             2   45[BANK0 ] PTR const unsigned char 
  1456 ;;		 -> STR_2(16), STR_1(12), 
  1457 ;; Auto vars:     Size  Location     Type
  1458 ;;  s               1   51[BANK0 ] PTR unsigned char 
  1459 ;;		 -> buffer2(20), buffer1(20), 
  1460 ;;  f              11   52[BANK0 ] struct _IO_FILE
  1461 ;;  ret             2    0        int 
  1462 ;;  ap              1   50[BANK0 ] PTR void [1]
  1463 ;;		 -> ?_sprintf(2), 
  1464 ;; Return value:  Size  Location     Type
  1465 ;;                  2   45[BANK0 ] int 
  1466 ;; Registers used:
  1467 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1468 ;; Tracked objects:
  1469 ;;		On entry : 0/0
  1470 ;;		On exit  : 0/0
  1471 ;;		Unchanged: 0/0
  1472 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1473 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1474 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1475 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1476 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1477 ;;Total ram usage:       18 bytes
  1478 ;; Hardware stack levels used: 1
  1479 ;; Hardware stack levels required when called: 8
  1480 ;; This function calls:
  1481 ;;		_vfprintf
  1482 ;; This function is called by:
  1483 ;;		_main
  1484 ;; This function uses a non-reentrant model
  1485 ;;
  1486                           
  1487     0730                     _sprintf:	
  1488                           ;psect for function _sprintf
  1489                           
  1490                           
  1491                           ;incstack = 0
  1492                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1493                           ;sprintf@s stored from wreg
  1494     0730  0020               	movlb	0	; select bank0
  1495     0731  00D3               	movwf	sprintf@s
  1496     0732                     l1855:
  1497     0732  304F               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  1498     0733  00D2               	movwf	sprintf@ap
  1499     0734  0853               	movf	sprintf@s,w
  1500     0735  00D4               	movwf	sprintf@f
  1501     0736                     l1857:
  1502     0736  01D6               	clrf	sprintf@f+2
  1503     0737  01D7               	clrf	sprintf@f+3
  1504     0738                     l1859:
  1505     0738  01DD               	clrf	sprintf@f+9
  1506     0739  01DE               	clrf	sprintf@f+10
  1507     073A                     l1861:
  1508     073A  084E               	movf	sprintf@fmt+1,w
  1509     073B  00C7               	movwf	vfprintf@fmt+1
  1510     073C  084D               	movf	sprintf@fmt,w
  1511     073D  00C6               	movwf	vfprintf@fmt
  1512     073E  3052               	movlw	(low (sprintf@ap| 0))& (0+255)
  1513     073F  00C8               	movwf	vfprintf@ap
  1514     0740  3054               	movlw	(low (sprintf@f| 0))& (0+255)
  1515     0741  3187  274D  3187   	fcall	_vfprintf
  1516     0744                     l1863:
  1517     0744  0020               	movlb	0	; select bank0
  1518     0745  0856               	movf	sprintf@f+2,w
  1519     0746  0753               	addwf	sprintf@s,w
  1520     0747  00D1               	movwf	??_sprintf
  1521     0748  0851               	movf	??_sprintf,w
  1522     0749  0086               	movwf	6
  1523     074A  0187               	clrf	7
  1524     074B  0181               	clrf	1
  1525     074C                     l664:
  1526     074C  0008               	return
  1527     074D                     __end_of_sprintf:
  1528                           
  1529                           	psect	text2
  1530     074D                     __ptext2:	
  1531 ;; *************** function _vfprintf *****************
  1532 ;; Defined at:
  1533 ;;		line 1546 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  1534 ;; Parameters:    Size  Location     Type
  1535 ;;  fp              1    wreg     PTR struct _IO_FILE
  1536 ;;		 -> sprintf@f(11), 
  1537 ;;  fmt             2   38[BANK0 ] PTR const unsigned char 
  1538 ;;		 -> STR_2(16), STR_1(12), 
  1539 ;;  ap              1   40[BANK0 ] PTR PTR void 
  1540 ;;		 -> sprintf@ap(1), 
  1541 ;; Auto vars:     Size  Location     Type
  1542 ;;  fp              1   42[BANK0 ] PTR struct _IO_FILE
  1543 ;;		 -> sprintf@f(11), 
  1544 ;;  cfmt            2   43[BANK0 ] PTR unsigned char 
  1545 ;;		 -> STR_2(16), STR_1(12), 
  1546 ;; Return value:  Size  Location     Type
  1547 ;;                  2   38[BANK0 ] int 
  1548 ;; Registers used:
  1549 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1550 ;; Tracked objects:
  1551 ;;		On entry : 0/0
  1552 ;;		On exit  : 0/0
  1553 ;;		Unchanged: 0/0
  1554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1555 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1556 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1557 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1558 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1559 ;;Total ram usage:        7 bytes
  1560 ;; Hardware stack levels used: 1
  1561 ;; Hardware stack levels required when called: 7
  1562 ;; This function calls:
  1563 ;;		_vfpfcnvrt
  1564 ;; This function is called by:
  1565 ;;		_sprintf
  1566 ;; This function uses a non-reentrant model
  1567 ;;
  1568                           
  1569     074D                     _vfprintf:	
  1570                           ;psect for function _vfprintf
  1571                           
  1572                           
  1573                           ;incstack = 0
  1574                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1575                           ;vfprintf@fp stored from wreg
  1576     074D  0020               	movlb	0	; select bank0
  1577     074E  00CA               	movwf	vfprintf@fp
  1578     074F                     l1749:
  1579                           
  1580                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1546: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.41\pic\source
      +                          s\c99\common\doprnt.c: 1547: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\comm
      +                          on\doprnt.c: 1549:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\
      +                          common\doprnt.c: 1551:     cfmt = (char *)fmt;
  1581     074F  0847               	movf	vfprintf@fmt+1,w
  1582     0750  00CC               	movwf	vfprintf@cfmt+1
  1583     0751  0846               	movf	vfprintf@fmt,w
  1584     0752  00CB               	movwf	vfprintf@cfmt
  1585                           
  1586                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1555:     while (
      +                          *cfmt) {
  1587     0753  2F5C               	goto	l1753
  1588     0754                     l1751:
  1589                           
  1590                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1559:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1591     0754  304B               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  1592     0755  00B7               	movwf	vfpfcnvrt@fmt
  1593     0756  0848               	movf	vfprintf@ap,w
  1594     0757  00B8               	movwf	vfpfcnvrt@ap
  1595     0758  084A               	movf	vfprintf@fp,w
  1596     0759  3181  21F7  3187   	fcall	_vfpfcnvrt
  1597     075C                     l1753:
  1598                           
  1599                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1555:     while (
      +                          *cfmt) {
  1600     075C  0020               	movlb	0	; select bank0
  1601     075D  084B               	movf	vfprintf@cfmt,w
  1602     075E  0084               	movwf	4
  1603     075F  084C               	movf	vfprintf@cfmt+1,w
  1604     0760  0085               	movwf	5
  1605     0761  0012               	moviw fsr0++
  1606     0762  1D03               	btfss	3,2
  1607     0763  2F65               	goto	u1451
  1608     0764  2F66               	goto	u1450
  1609     0765                     u1451:
  1610     0765  2F54               	goto	l1751
  1611     0766                     u1450:
  1612     0766                     l1755:
  1613                           
  1614                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1564:  return 0;
  1615     0766  01C6               	clrf	?_vfprintf
  1616     0767  01C7               	clrf	?_vfprintf+1
  1617     0768                     l743:
  1618     0768  0008               	return
  1619     0769                     __end_of_vfprintf:
  1620                           
  1621                           	psect	text3
  1622     01F7                     __ptext3:	
  1623 ;; *************** function _vfpfcnvrt *****************
  1624 ;; Defined at:
  1625 ;;		line 1048 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  1626 ;; Parameters:    Size  Location     Type
  1627 ;;  fp              1    wreg     PTR struct _IO_FILE
  1628 ;;		 -> sprintf@f(11), 
  1629 ;;  fmt             1   23[BANK0 ] PTR PTR unsigned char 
  1630 ;;		 -> vfprintf@cfmt(2), 
  1631 ;;  ap              1   24[BANK0 ] PTR PTR void 
  1632 ;;		 -> sprintf@ap(1), 
  1633 ;; Auto vars:     Size  Location     Type
  1634 ;;  fp              1   35[BANK0 ] PTR struct _IO_FILE
  1635 ;;		 -> sprintf@f(11), 
  1636 ;;  convarg         4   29[BANK0 ] struct .
  1637 ;;  cp              2   36[BANK0 ] PTR unsigned char 
  1638 ;;		 -> STR_2(16), STR_1(12), 
  1639 ;;  done            2   33[BANK0 ] int 
  1640 ;;  i               2    0        int 
  1641 ;;  c               1    0        unsigned char 
  1642 ;; Return value:  Size  Location     Type
  1643 ;;                  1    wreg      void 
  1644 ;; Registers used:
  1645 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1646 ;; Tracked objects:
  1647 ;;		On entry : 0/0
  1648 ;;		On exit  : 0/0
  1649 ;;		Unchanged: 0/0
  1650 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1651 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1652 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1653 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1654 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1655 ;;Total ram usage:       15 bytes
  1656 ;; Hardware stack levels used: 1
  1657 ;; Hardware stack levels required when called: 6
  1658 ;; This function calls:
  1659 ;;		_dtoa
  1660 ;;		_fputc
  1661 ;;		_read_prec_or_width
  1662 ;; This function is called by:
  1663 ;;		_vfprintf
  1664 ;; This function uses a non-reentrant model
  1665 ;;
  1666                           
  1667     01F7                     _vfpfcnvrt:	
  1668                           ;psect for function _vfpfcnvrt
  1669                           
  1670                           
  1671                           ;incstack = 0
  1672                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1673                           ;vfpfcnvrt@fp stored from wreg
  1674     01F7  0020               	movlb	0	; select bank0
  1675     01F8  00C3               	movwf	vfpfcnvrt@fp
  1676     01F9                     l1631:
  1677                           
  1678                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1048: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1049: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\dopr
      +                          nt.c: 1050:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common
      +                          \doprnt.c: 1051:     int done, i;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1059:  } convarg;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1062:     if ((*fmt)[0] == '%') {
  1679     01F9  0837               	movf	vfpfcnvrt@fmt,w
  1680     01FA  0086               	movwf	6
  1681     01FB  0187               	clrf	7
  1682     01FC  3F40               	moviw [0]fsr1
  1683     01FD  00B9               	movwf	??_vfpfcnvrt
  1684     01FE  3F41               	moviw [1]fsr1
  1685     01FF  00BA               	movwf	??_vfpfcnvrt+1
  1686     0200  0839               	movf	??_vfpfcnvrt,w
  1687     0201  0084               	movwf	4
  1688     0202  083A               	movf	??_vfpfcnvrt+1,w
  1689     0203  0085               	movwf	5
  1690     0204  0012               	moviw fsr0++
  1691     0205  3A25               	xorlw	37
  1692     0206  1D03               	btfss	3,2
  1693     0207  2A09               	goto	u1281
  1694     0208  2A0A               	goto	u1280
  1695     0209                     u1281:
  1696     0209  2AA9               	goto	l1677
  1697     020A                     u1280:
  1698     020A                     l1633:
  1699                           
  1700                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1063:         ++*
      +                          fmt;
  1701     020A  0837               	movf	vfpfcnvrt@fmt,w
  1702     020B  0086               	movwf	6
  1703     020C  0187               	clrf	7
  1704     020D  3001               	movlw	1
  1705     020E  0781               	addwf	1,f
  1706     020F  3141               	addfsr 1,1
  1707     0210  1803               	skipnc
  1708     0211  0A81               	incf	1,f
  1709     0212                     l1635:
  1710                           
  1711                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1065:         fla
      +                          gs = width = 0;
  1712     0212  01E1               	clrf	_width
  1713     0213  01E2               	clrf	_width+1
  1714     0214  1003               	clrc
  1715     0215  3000               	movlw	0
  1716     0216  1803               	btfsc	3,0
  1717     0217  3001               	movlw	1
  1718     0218  00E9               	movwf	_flags
  1719     0219                     l1637:
  1720                           
  1721                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1066:         pre
      +                          c = -1;
  1722     0219  30FF               	movlw	255
  1723     021A  00E3               	movwf	_prec
  1724     021B  30FF               	movlw	255
  1725     021C  00E4               	movwf	_prec+1
  1726     021D                     l1639:
  1727                           
  1728                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1070:         don
      +                          e = 0;
  1729     021D  01C1               	clrf	vfpfcnvrt@done
  1730     021E  01C2               	clrf	vfpfcnvrt@done+1
  1731                           
  1732                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1071:         whi
      +                          le (!done) {
  1733     021F  2A47               	goto	l1649
  1734     0220                     l729:	
  1735                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1080:            
      +                               case '0' :
  1736                           
  1737                           
  1738                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1081:            
      +                                   flags |= (1 << 1);
  1739     0220  14E9               	bsf	_flags,1
  1740     0221                     l1641:
  1741                           
  1742                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1082:            
      +                                   ++*fmt;
  1743     0221  0837               	movf	vfpfcnvrt@fmt,w
  1744     0222  0086               	movwf	6
  1745     0223  0187               	clrf	7
  1746     0224  3001               	movlw	1
  1747     0225  0781               	addwf	1,f
  1748     0226  3141               	addfsr 1,1
  1749     0227  1803               	skipnc
  1750     0228  0A81               	incf	1,f
  1751                           
  1752                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1083:            
      +                                   break;
  1753     0229  2A47               	goto	l1649
  1754     022A                     l1643:
  1755                           
  1756                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1104:            
      +                                   done = 1;
  1757     022A  3001               	movlw	1
  1758     022B  00C1               	movwf	vfpfcnvrt@done
  1759     022C  3000               	movlw	0
  1760     022D  00C2               	movwf	vfpfcnvrt@done+1
  1761                           
  1762                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1105:            
      +                                   break;
  1763     022E  2A47               	goto	l1649
  1764     022F                     l1647:
  1765     022F  0837               	movf	vfpfcnvrt@fmt,w
  1766     0230  0086               	movwf	6
  1767     0231  0187               	clrf	7
  1768     0232  3F40               	moviw [0]fsr1
  1769     0233  00B9               	movwf	??_vfpfcnvrt
  1770     0234  3F41               	moviw [1]fsr1
  1771     0235  00BA               	movwf	??_vfpfcnvrt+1
  1772     0236  0839               	movf	??_vfpfcnvrt,w
  1773     0237  0084               	movwf	4
  1774     0238  083A               	movf	??_vfpfcnvrt+1,w
  1775     0239  0085               	movwf	5
  1776     023A  0800               	movf	0,w	;code access
  1777     023B  00BB               	movwf	??_vfpfcnvrt+2
  1778     023C  01BC               	clrf	??_vfpfcnvrt+3
  1779                           
  1780                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1781                           ; Switch size 1, requested type "simple"
  1782                           ; Number of cases is 1, Range of values is 0 to 0
  1783                           ; switch strategies available:
  1784                           ; Name         Instructions Cycles
  1785                           ; simple_byte            4     3 (average)
  1786                           ; direct_byte            8     6 (fixed)
  1787                           ; jumptable            260     6 (fixed)
  1788                           ;	Chosen strategy is simple_byte
  1789     023D  083C               	movf	??_vfpfcnvrt+3,w
  1790     023E  3A00               	xorlw	0	; case 0
  1791     023F  1903               	skipnz
  1792     0240  2A42               	goto	l2039
  1793     0241  2A2A               	goto	l1643
  1794     0242                     l2039:
  1795                           
  1796                           ; Switch size 1, requested type "simple"
  1797                           ; Number of cases is 1, Range of values is 48 to 48
  1798                           ; switch strategies available:
  1799                           ; Name         Instructions Cycles
  1800                           ; simple_byte            4     3 (average)
  1801                           ; direct_byte           11     9 (fixed)
  1802                           ; jumptable            263     9 (fixed)
  1803                           ;	Chosen strategy is simple_byte
  1804     0242  083B               	movf	??_vfpfcnvrt+2,w
  1805     0243  3A30               	xorlw	48	; case 48
  1806     0244  1903               	skipnz
  1807     0245  2A20               	goto	l729
  1808     0246  2A2A               	goto	l1643
  1809     0247                     l1649:
  1810                           
  1811                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1071:         whi
      +                          le (!done) {
  1812     0247  0841               	movf	vfpfcnvrt@done,w
  1813     0248  0442               	iorwf	vfpfcnvrt@done+1,w
  1814     0249  1903               	btfsc	3,2
  1815     024A  2A4C               	goto	u1291
  1816     024B  2A4D               	goto	u1290
  1817     024C                     u1291:
  1818     024C  2A2F               	goto	l1647
  1819     024D                     u1290:
  1820     024D                     l1651:
  1821                           
  1822                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1117:   width = r
      +                          ead_prec_or_width(fmt, ap);
  1823     024D  0838               	movf	vfpfcnvrt@ap,w
  1824     024E  00F6               	movwf	read_prec_or_width@ap
  1825     024F  0837               	movf	vfpfcnvrt@fmt,w
  1826     0250  3184  2484  3181   	fcall	_read_prec_or_width
  1827     0253  0877               	movf	?_read_prec_or_width+1,w
  1828     0254  0020               	movlb	0	; select bank0
  1829     0255  00E2               	movwf	_width+1
  1830     0256  0876               	movf	?_read_prec_or_width,w
  1831     0257  00E1               	movwf	_width
  1832     0258                     l1653:
  1833                           
  1834                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1118:   if (width
      +                           < 0) {
  1835     0258  1FE2               	btfss	_width+1,7
  1836     0259  2A5B               	goto	u1301
  1837     025A  2A5C               	goto	u1300
  1838     025B                     u1301:
  1839     025B  2A62               	goto	l1659
  1840     025C                     u1300:
  1841     025C                     l1655:
  1842                           
  1843                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1119:    flags |=
      +                           (1 << 0);
  1844     025C  1469               	bsf	_flags,0
  1845     025D                     l1657:
  1846                           
  1847                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1120:    width = 
      +                          -width;
  1848     025D  09E1               	comf	_width,f
  1849     025E  09E2               	comf	_width+1,f
  1850     025F  0AE1               	incf	_width,f
  1851     0260  1903               	skipnz
  1852     0261  0AE2               	incf	_width+1,f
  1853     0262                     l1659:
  1854                           
  1855                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1143:   cp = *fmt
      +                          ;
  1856     0262  0837               	movf	vfpfcnvrt@fmt,w
  1857     0263  0086               	movwf	6
  1858     0264  0187               	clrf	7
  1859     0265  3F40               	moviw [0]fsr1
  1860     0266  00C4               	movwf	vfpfcnvrt@cp
  1861     0267  3F41               	moviw [1]fsr1
  1862     0268  00C5               	movwf	vfpfcnvrt@cp+1
  1863     0269                     l1661:
  1864                           
  1865                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1213:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  1866     0269  0844               	movf	vfpfcnvrt@cp,w
  1867     026A  0084               	movwf	4
  1868     026B  0845               	movf	vfpfcnvrt@cp+1,w
  1869     026C  0085               	movwf	5
  1870     026D  0012               	moviw fsr0++
  1871     026E  3A64               	xorlw	100
  1872     026F  1903               	btfsc	3,2
  1873     0270  2A72               	goto	u1311
  1874     0271  2A73               	goto	u1310
  1875     0272                     u1311:
  1876     0272  2A7D               	goto	l1665
  1877     0273                     u1310:
  1878     0273                     l1663:
  1879     0273  0844               	movf	vfpfcnvrt@cp,w
  1880     0274  0084               	movwf	4
  1881     0275  0845               	movf	vfpfcnvrt@cp+1,w
  1882     0276  0085               	movwf	5
  1883     0277  0012               	moviw fsr0++
  1884     0278  3A69               	xorlw	105
  1885     0279  1D03               	btfss	3,2
  1886     027A  2A7C               	goto	u1321
  1887     027B  2A7D               	goto	u1320
  1888     027C                     u1321:
  1889     027C  2A9F               	goto	l1673
  1890     027D                     u1320:
  1891     027D                     l1665:
  1892                           
  1893                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1256:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  1894     027D  0838               	movf	vfpfcnvrt@ap,w
  1895     027E  0086               	movwf	6
  1896     027F  0187               	clrf	7
  1897     0280  0801               	movf	1,w
  1898     0281  0084               	movwf	4
  1899     0282  0185               	clrf	5
  1900     0283  3002               	movlw	2
  1901     0284  0781               	addwf	1,f
  1902     0285  3F00               	moviw [0]fsr0
  1903     0286  00BD               	movwf	vfpfcnvrt@convarg
  1904     0287  3F01               	moviw [1]fsr0
  1905     0288  00BE               	movwf	vfpfcnvrt@convarg+1
  1906     0289                     l1667:
  1907                           
  1908                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1258:    *fmt = c
      +                          p+1;
  1909     0289  0844               	movf	vfpfcnvrt@cp,w
  1910     028A  3E01               	addlw	1
  1911     028B  00B9               	movwf	??_vfpfcnvrt
  1912     028C  3000               	movlw	0
  1913     028D  3D45               	addwfc	vfpfcnvrt@cp+1,w
  1914     028E  00BA               	movwf	??_vfpfcnvrt+1
  1915     028F  0837               	movf	vfpfcnvrt@fmt,w
  1916     0290  0086               	movwf	6
  1917     0291  0187               	clrf	7
  1918     0292  0839               	movf	??_vfpfcnvrt,w
  1919     0293  3FC0               	movwi [0]fsr1
  1920     0294  083A               	movf	??_vfpfcnvrt+1,w
  1921     0295  3FC1               	movwi [1]fsr1
  1922     0296                     l1669:
  1923                           
  1924                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1259:    return (
      +                          void) dtoa(fp, convarg.sint);;	Return value of _vfpfcnvrt is never used
  1925     0296  083E               	movf	vfpfcnvrt@convarg+1,w
  1926     0297  00AB               	movwf	dtoa@d+1
  1927     0298  083D               	movf	vfpfcnvrt@convarg,w
  1928     0299  00AA               	movwf	dtoa@d
  1929     029A  0843               	movf	vfpfcnvrt@fp,w
  1930     029B  3181  2123  3181   	fcall	_dtoa
  1931     029E  2AC1               	goto	l737
  1932     029F                     l1673:
  1933                           
  1934                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1535:         ++*
      +                          fmt;
  1935     029F  0020               	movlb	0	; select bank0
  1936     02A0  0837               	movf	vfpfcnvrt@fmt,w
  1937     02A1  0086               	movwf	6
  1938     02A2  0187               	clrf	7
  1939     02A3  3001               	movlw	1
  1940     02A4  0781               	addwf	1,f
  1941     02A5  3141               	addfsr 1,1
  1942     02A6  1803               	skipnc
  1943     02A7  0A81               	incf	1,f
  1944     02A8  2AC1               	goto	l737
  1945     02A9                     l1677:
  1946                           
  1947                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1540:     fputc((
      +                          int)(*fmt)[0], fp);
  1948     02A9  0837               	movf	vfpfcnvrt@fmt,w
  1949     02AA  0086               	movwf	6
  1950     02AB  0187               	clrf	7
  1951     02AC  3F40               	moviw [0]fsr1
  1952     02AD  00B9               	movwf	??_vfpfcnvrt
  1953     02AE  3F41               	moviw [1]fsr1
  1954     02AF  00BA               	movwf	??_vfpfcnvrt+1
  1955     02B0  0839               	movf	??_vfpfcnvrt,w
  1956     02B1  0084               	movwf	4
  1957     02B2  083A               	movf	??_vfpfcnvrt+1,w
  1958     02B3  0085               	movwf	5
  1959     02B4  0800               	movf	0,w	;code access
  1960     02B5  00BB               	movwf	??_vfpfcnvrt+2
  1961     02B6  01BC               	clrf	??_vfpfcnvrt+3
  1962     02B7  083B               	movf	??_vfpfcnvrt+2,w
  1963     02B8  00F0               	movwf	fputc@c
  1964     02B9  083C               	movf	??_vfpfcnvrt+3,w
  1965     02BA  00F1               	movwf	fputc@c+1
  1966     02BB  0843               	movf	vfpfcnvrt@fp,w
  1967     02BC  00F2               	movwf	fputc@fp
  1968     02BD  3185  2596  3181   	fcall	_fputc
  1969     02C0  2A9F               	goto	l1673
  1970     02C1                     l737:
  1971     02C1  0008               	return
  1972     02C2                     __end_of_vfpfcnvrt:
  1973                           
  1974                           	psect	text4
  1975     0484                     __ptext4:	
  1976 ;; *************** function _read_prec_or_width *****************
  1977 ;; Defined at:
  1978 ;;		line 1029 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  1979 ;; Parameters:    Size  Location     Type
  1980 ;;  fmt             1    wreg     PTR PTR const unsigned c
  1981 ;;		 -> vfprintf@cfmt(2), 
  1982 ;;  ap              1    6[COMMON] PTR PTR void [1]
  1983 ;;		 -> sprintf@ap(1), 
  1984 ;; Auto vars:     Size  Location     Type
  1985 ;;  fmt             1    3[BANK0 ] PTR PTR const unsigned c
  1986 ;;		 -> vfprintf@cfmt(2), 
  1987 ;;  c               1    0[BANK0 ] unsigned char 
  1988 ;;  n               2    1[BANK0 ] int 
  1989 ;; Return value:  Size  Location     Type
  1990 ;;                  2    6[COMMON] int 
  1991 ;; Registers used:
  1992 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1993 ;; Tracked objects:
  1994 ;;		On entry : 0/0
  1995 ;;		On exit  : 0/0
  1996 ;;		Unchanged: 0/0
  1997 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1998 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1999 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2000 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2001 ;;      Totals:         5       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2002 ;;Total ram usage:        9 bytes
  2003 ;; Hardware stack levels used: 1
  2004 ;; Hardware stack levels required when called: 2
  2005 ;; This function calls:
  2006 ;;		___wmul
  2007 ;; This function is called by:
  2008 ;;		_vfpfcnvrt
  2009 ;; This function uses a non-reentrant model
  2010 ;;
  2011                           
  2012     0484                     _read_prec_or_width:	
  2013                           ;psect for function _read_prec_or_width
  2014                           
  2015                           
  2016                           ;incstack = 0
  2017                           ; Regs used in _read_prec_or_width: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2018                           ;read_prec_or_width@fmt stored from wreg
  2019     0484  0020               	movlb	0	; select bank0
  2020     0485  00A3               	movwf	read_prec_or_width@fmt
  2021     0486                     l1613:
  2022                           
  2023                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1030:     int n =
      +                           0;
  2024     0486  01A1               	clrf	read_prec_or_width@n
  2025     0487  01A2               	clrf	read_prec_or_width@n+1
  2026     0488                     l1615:
  2027                           
  2028                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1031:     if ((*f
      +                          mt)[0] == '*') {
  2029     0488  0823               	movf	read_prec_or_width@fmt,w
  2030     0489  0086               	movwf	6
  2031     048A  0187               	clrf	7
  2032     048B  3F40               	moviw [0]fsr1
  2033     048C  00F8               	movwf	??_read_prec_or_width
  2034     048D  3F41               	moviw [1]fsr1
  2035     048E  00F9               	movwf	??_read_prec_or_width+1
  2036     048F  0878               	movf	??_read_prec_or_width,w
  2037     0490  0084               	movwf	4
  2038     0491  0879               	movf	??_read_prec_or_width+1,w
  2039     0492  0085               	movwf	5
  2040     0493  0012               	moviw fsr0++
  2041     0494  3A2A               	xorlw	42
  2042     0495  1D03               	btfss	3,2
  2043     0496  2C98               	goto	u1261
  2044     0497  2C99               	goto	u1260
  2045     0498                     u1261:
  2046     0498  2CCB               	goto	l1625
  2047     0499                     u1260:
  2048     0499                     l1617:
  2049                           
  2050                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1032:         ++*
      +                          fmt;
  2051     0499  0823               	movf	read_prec_or_width@fmt,w
  2052     049A  0086               	movwf	6
  2053     049B  0187               	clrf	7
  2054     049C  3001               	movlw	1
  2055     049D  0781               	addwf	1,f
  2056     049E  3141               	addfsr 1,1
  2057     049F  1803               	skipnc
  2058     04A0  0A81               	incf	1,f
  2059     04A1                     l1619:
  2060                           
  2061                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1033:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
  2062     04A1  0876               	movf	read_prec_or_width@ap,w
  2063     04A2  0086               	movwf	6
  2064     04A3  0187               	clrf	7
  2065     04A4  0801               	movf	1,w
  2066     04A5  0084               	movwf	4
  2067     04A6  0185               	clrf	5
  2068     04A7  3002               	movlw	2
  2069     04A8  0781               	addwf	1,f
  2070     04A9  3F00               	moviw [0]fsr0
  2071     04AA  00A1               	movwf	read_prec_or_width@n
  2072     04AB  3F01               	moviw [1]fsr0
  2073     04AC  00A2               	movwf	read_prec_or_width@n+1
  2074                           
  2075                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1034:     } else 
      +                          {
  2076     04AD  2CDF               	goto	l1627
  2077     04AE                     l1621:
  2078                           
  2079                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1037:            
      +                           n = n * 10 + c;
  2080     04AE  0820               	movf	read_prec_or_width@c,w
  2081     04AF  00F8               	movwf	??_read_prec_or_width
  2082     04B0  01F9               	clrf	??_read_prec_or_width+1
  2083     04B1  0822               	movf	read_prec_or_width@n+1,w
  2084     04B2  00F1               	movwf	___wmul@multiplier+1
  2085     04B3  0821               	movf	read_prec_or_width@n,w
  2086     04B4  00F0               	movwf	___wmul@multiplier
  2087     04B5  300A               	movlw	10
  2088     04B6  00F2               	movwf	___wmul@multiplicand
  2089     04B7  3000               	movlw	0
  2090     04B8  00F3               	movwf	___wmul@multiplicand+1
  2091     04B9  3187  2711  3184   	fcall	___wmul
  2092     04BC  0878               	movf	??_read_prec_or_width,w
  2093     04BD  0770               	addwf	?___wmul,w
  2094     04BE  0020               	movlb	0	; select bank0
  2095     04BF  00A1               	movwf	read_prec_or_width@n
  2096     04C0  0879               	movf	??_read_prec_or_width+1,w
  2097     04C1  3D71               	addwfc	?___wmul+1,w
  2098     04C2  00A2               	movwf	read_prec_or_width@n+1
  2099     04C3                     l1623:
  2100                           
  2101                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1038:            
      +                           ++*fmt;
  2102     04C3  0823               	movf	read_prec_or_width@fmt,w
  2103     04C4  0086               	movwf	6
  2104     04C5  0187               	clrf	7
  2105     04C6  3001               	movlw	1
  2106     04C7  0781               	addwf	1,f
  2107     04C8  3141               	addfsr 1,1
  2108     04C9  1803               	skipnc
  2109     04CA  0A81               	incf	1,f
  2110     04CB                     l1625:
  2111                           
  2112                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1036:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  2113     04CB  0823               	movf	read_prec_or_width@fmt,w
  2114     04CC  0086               	movwf	6
  2115     04CD  0187               	clrf	7
  2116     04CE  3F40               	moviw [0]fsr1
  2117     04CF  00F8               	movwf	??_read_prec_or_width
  2118     04D0  3F41               	moviw [1]fsr1
  2119     04D1  00F9               	movwf	??_read_prec_or_width+1
  2120     04D2  0878               	movf	??_read_prec_or_width,w
  2121     04D3  0084               	movwf	4
  2122     04D4  0879               	movf	??_read_prec_or_width+1,w
  2123     04D5  0085               	movwf	5
  2124     04D6  0800               	movf	0,w	;code access
  2125     04D7  3ED0               	addlw	208
  2126     04D8  00A0               	movwf	read_prec_or_width@c
  2127     04D9  300A               	movlw	10
  2128     04DA  0220               	subwf	read_prec_or_width@c,w
  2129     04DB  1C03               	skipc
  2130     04DC  2CDE               	goto	u1271
  2131     04DD  2CDF               	goto	u1270
  2132     04DE                     u1271:
  2133     04DE  2CAE               	goto	l1621
  2134     04DF                     u1270:
  2135     04DF                     l1627:
  2136                           
  2137                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1041:     return 
      +                          n;
  2138     04DF  0822               	movf	read_prec_or_width@n+1,w
  2139     04E0  00F7               	movwf	?_read_prec_or_width+1
  2140     04E1  0821               	movf	read_prec_or_width@n,w
  2141     04E2  00F6               	movwf	?_read_prec_or_width
  2142     04E3                     l722:
  2143     04E3  0008               	return
  2144     04E4                     __end_of_read_prec_or_width:
  2145                           
  2146                           	psect	text5
  2147     0711                     __ptext5:	
  2148 ;; *************** function ___wmul *****************
  2149 ;; Defined at:
  2150 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\Umul16.c"
  2151 ;; Parameters:    Size  Location     Type
  2152 ;;  multiplier      2    0[COMMON] unsigned int 
  2153 ;;  multiplicand    2    2[COMMON] unsigned int 
  2154 ;; Auto vars:     Size  Location     Type
  2155 ;;  product         2    4[COMMON] unsigned int 
  2156 ;; Return value:  Size  Location     Type
  2157 ;;                  2    0[COMMON] unsigned int 
  2158 ;; Registers used:
  2159 ;;		wreg, status,2, status,0
  2160 ;; Tracked objects:
  2161 ;;		On entry : 0/0
  2162 ;;		On exit  : 0/0
  2163 ;;		Unchanged: 0/0
  2164 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2165 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2166 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2167 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2168 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2169 ;;Total ram usage:        6 bytes
  2170 ;; Hardware stack levels used: 1
  2171 ;; Hardware stack levels required when called: 1
  2172 ;; This function calls:
  2173 ;;		Nothing
  2174 ;; This function is called by:
  2175 ;;		_read_prec_or_width
  2176 ;; This function uses a non-reentrant model
  2177 ;;
  2178                           
  2179     0711                     ___wmul:	
  2180                           ;psect for function ___wmul
  2181                           
  2182     0711                     l1437:	
  2183                           ;incstack = 0
  2184                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2185                           
  2186     0711  01F4               	clrf	___wmul@product
  2187     0712  01F5               	clrf	___wmul@product+1
  2188     0713                     l1439:
  2189     0713  1C70               	btfss	___wmul@multiplier,0
  2190     0714  2F16               	goto	u851
  2191     0715  2F17               	goto	u850
  2192     0716                     u851:
  2193     0716  2F1B               	goto	l201
  2194     0717                     u850:
  2195     0717                     l1441:
  2196     0717  0872               	movf	___wmul@multiplicand,w
  2197     0718  07F4               	addwf	___wmul@product,f
  2198     0719  0873               	movf	___wmul@multiplicand+1,w
  2199     071A  3DF5               	addwfc	___wmul@product+1,f
  2200     071B                     l201:
  2201     071B  3001               	movlw	1
  2202     071C                     u865:
  2203     071C  35F2               	lslf	___wmul@multiplicand,f
  2204     071D  0DF3               	rlf	___wmul@multiplicand+1,f
  2205     071E  0B89               	decfsz	9,f
  2206     071F  2F1C               	goto	u865
  2207     0720                     l1443:
  2208     0720  3001               	movlw	1
  2209     0721                     u875:
  2210     0721  36F1               	lsrf	___wmul@multiplier+1,f
  2211     0722  0CF0               	rrf	___wmul@multiplier,f
  2212     0723  0B89               	decfsz	9,f
  2213     0724  2F21               	goto	u875
  2214     0725                     l1445:
  2215     0725  0870               	movf	___wmul@multiplier,w
  2216     0726  0471               	iorwf	___wmul@multiplier+1,w
  2217     0727  1D03               	btfss	3,2
  2218     0728  2F2A               	goto	u881
  2219     0729  2F2B               	goto	u880
  2220     072A                     u881:
  2221     072A  2F13               	goto	l1439
  2222     072B                     u880:
  2223     072B                     l1447:
  2224     072B  0875               	movf	___wmul@product+1,w
  2225     072C  00F1               	movwf	?___wmul+1
  2226     072D  0874               	movf	___wmul@product,w
  2227     072E  00F0               	movwf	?___wmul
  2228     072F                     l203:
  2229     072F  0008               	return
  2230     0730                     __end_of___wmul:
  2231                           
  2232                           	psect	text6
  2233     0123                     __ptext6:	
  2234 ;; *************** function _dtoa *****************
  2235 ;; Defined at:
  2236 ;;		line 470 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  2237 ;; Parameters:    Size  Location     Type
  2238 ;;  fp              1    wreg     PTR struct _IO_FILE
  2239 ;;		 -> sprintf@f(11), 
  2240 ;;  d               2   10[BANK0 ] int 
  2241 ;; Auto vars:     Size  Location     Type
  2242 ;;  fp              1   15[BANK0 ] PTR struct _IO_FILE
  2243 ;;		 -> sprintf@f(11), 
  2244 ;;  i               2   20[BANK0 ] int 
  2245 ;;  w               2   18[BANK0 ] int 
  2246 ;;  p               2   16[BANK0 ] int 
  2247 ;;  s               1   22[BANK0 ] unsigned char 
  2248 ;; Return value:  Size  Location     Type
  2249 ;;                  1    wreg      void 
  2250 ;; Registers used:
  2251 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2252 ;; Tracked objects:
  2253 ;;		On entry : 0/0
  2254 ;;		On exit  : 0/0
  2255 ;;		Unchanged: 0/0
  2256 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2257 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2258 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2259 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2260 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2261 ;;Total ram usage:       13 bytes
  2262 ;; Hardware stack levels used: 1
  2263 ;; Hardware stack levels required when called: 5
  2264 ;; This function calls:
  2265 ;;		___awdiv
  2266 ;;		___awmod
  2267 ;;		_abs
  2268 ;;		_pad
  2269 ;; This function is called by:
  2270 ;;		_vfpfcnvrt
  2271 ;; This function uses a non-reentrant model
  2272 ;;
  2273                           
  2274     0123                     _dtoa:	
  2275                           ;psect for function _dtoa
  2276                           
  2277                           
  2278                           ;incstack = 0
  2279                           ; Regs used in _dtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2280                           ;dtoa@fp stored from wreg
  2281     0123  0020               	movlb	0	; select bank0
  2282     0124  00AF               	movwf	dtoa@fp
  2283     0125                     l1555:
  2284                           
  2285                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 470: static void 
      +                          dtoa(FILE *fp, vfpf_sint_t d);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\commo
      +                          n\doprnt.c: 471: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c:
      +                           472:  char s;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 473
      +                          :     int i, p, w;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c:
      +                           476:     s = d < 0 ? 1 : 0;
  2286     0125  1BAB               	btfsc	dtoa@d+1,7
  2287     0126  2928               	goto	u1131
  2288     0127  292A               	goto	u1130
  2289     0128                     u1131:
  2290     0128  3001               	movlw	1
  2291     0129  292B               	goto	u1140
  2292     012A                     u1130:
  2293     012A  3000               	movlw	0
  2294     012B                     u1140:
  2295     012B  00B6               	movwf	dtoa@s
  2296     012C                     l1557:
  2297                           
  2298                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 477:     if (s) {
  2299     012C  0836               	movf	dtoa@s,w
  2300     012D  1903               	btfsc	3,2
  2301     012E  2930               	goto	u1151
  2302     012F  2931               	goto	u1150
  2303     0130                     u1151:
  2304     0130  2936               	goto	l1561
  2305     0131                     u1150:
  2306     0131                     l1559:
  2307                           
  2308                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 478:         d = 
      +                          -d;
  2309     0131  09AA               	comf	dtoa@d,f
  2310     0132  09AB               	comf	dtoa@d+1,f
  2311     0133  0AAA               	incf	dtoa@d,f
  2312     0134  1903               	skipnz
  2313     0135  0AAB               	incf	dtoa@d+1,f
  2314     0136                     l1561:
  2315                           
  2316                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 483:     if (!(pr
      +                          ec < 0)) {
  2317     0136  1BE4               	btfsc	_prec+1,7
  2318     0137  2939               	goto	u1161
  2319     0138  293A               	goto	u1160
  2320     0139                     u1161:
  2321     0139  293E               	goto	l1565
  2322     013A                     u1160:
  2323     013A                     l1563:
  2324                           
  2325                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 484:         flag
      +                          s &= ~(1 << 1);
  2326     013A  30FD               	movlw	253
  2327     013B  00AC               	movwf	??_dtoa
  2328     013C  082C               	movf	??_dtoa,w
  2329     013D  05E9               	andwf	_flags,f
  2330     013E                     l1565:
  2331                           
  2332                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 487:     p = (0 <
      +                          = prec) ? prec : 1;
  2333     013E  1FE4               	btfss	_prec+1,7
  2334     013F  2941               	goto	u1171
  2335     0140  2942               	goto	u1170
  2336     0141                     u1171:
  2337     0141  2947               	goto	l1569
  2338     0142                     u1170:
  2339     0142                     l1567:
  2340     0142  3001               	movlw	1
  2341     0143  00B0               	movwf	dtoa@p
  2342     0144  3000               	movlw	0
  2343     0145  00B1               	movwf	dtoa@p+1
  2344     0146  294B               	goto	l700
  2345     0147                     l1569:
  2346     0147  0864               	movf	_prec+1,w
  2347     0148  00B1               	movwf	dtoa@p+1
  2348     0149  0863               	movf	_prec,w
  2349     014A  00B0               	movwf	dtoa@p
  2350     014B                     l700:
  2351                           
  2352                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 488:     w = widt
      +                          h;
  2353     014B  0862               	movf	_width+1,w
  2354     014C  00B3               	movwf	dtoa@w+1
  2355     014D  0861               	movf	_width,w
  2356     014E  00B2               	movwf	dtoa@w
  2357     014F                     l1571:
  2358                           
  2359                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 489:     if (s
  2360     014F  0836               	movf	dtoa@s,w
  2361     0150  1903               	btfsc	3,2
  2362     0151  2953               	goto	u1181
  2363     0152  2954               	goto	u1180
  2364     0153                     u1181:
  2365     0153  2968               	goto	l701
  2366     0154                     u1180:
  2367     0154                     l1573:
  2368                           
  2369                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 493:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 494:         --w;
  2370     0154  30FF               	movlw	255
  2371     0155  07B2               	addwf	dtoa@w,f
  2372     0156  30FF               	movlw	255
  2373     0157  3DB3               	addwfc	dtoa@w+1,f
  2374     0158                     l1575:
  2375                           
  2376                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 495:   s = s ? '-
      +                          ' : '+';
  2377     0158  0836               	movf	dtoa@s,w
  2378     0159  1D03               	btfss	3,2
  2379     015A  295C               	goto	u1191
  2380     015B  295D               	goto	u1190
  2381     015C                     u1191:
  2382     015C  2962               	goto	l1579
  2383     015D                     u1190:
  2384     015D                     l1577:
  2385     015D  302B               	movlw	43
  2386     015E  00AD               	movwf	_dtoa$723
  2387     015F  3000               	movlw	0
  2388     0160  00AE               	movwf	_dtoa$723+1
  2389     0161  2966               	goto	l705
  2390     0162                     l1579:
  2391     0162  302D               	movlw	45
  2392     0163  00AD               	movwf	_dtoa$723
  2393     0164  3000               	movlw	0
  2394     0165  00AE               	movwf	_dtoa$723+1
  2395     0166                     l705:
  2396     0166  082D               	movf	_dtoa$723,w
  2397     0167  00B6               	movwf	dtoa@s
  2398     0168                     l701:	
  2399                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 496:     }
  2400                           
  2401                           
  2402                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 505:     i = size
      +                          of(dbuf) - 1;
  2403     0168  301F               	movlw	31
  2404     0169  00B4               	movwf	dtoa@i
  2405     016A  3000               	movlw	0
  2406     016B  00B5               	movwf	dtoa@i+1
  2407     016C                     l1581:
  2408                           
  2409                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 506:     dbuf[i] 
      +                          = '\0';
  2410     016C  0021               	movlb	1	; select bank1
  2411     016D  01BF               	clrf	(_dbuf^(0+128)+31)
  2412                           
  2413                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 507:     while (!
      +                          (i < 1) && (d || (0 < p)
  2414     016E  29A6               	goto	l1593
  2415     016F                     l1583:
  2416                           
  2417                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 511:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 512:         --i;
  2418     016F  30FF               	movlw	255
  2419     0170  0020               	movlb	0	; select bank0
  2420     0171  07B4               	addwf	dtoa@i,f
  2421     0172  30FF               	movlw	255
  2422     0173  3DB5               	addwfc	dtoa@i+1,f
  2423     0174                     l1585:
  2424                           
  2425                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 513:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
  2426     0174  0834               	movf	dtoa@i,w
  2427     0175  3EA0               	addlw	(low (_dbuf| 0))& (0+255)
  2428     0176  0086               	movwf	6
  2429     0177  0187               	clrf	7
  2430     0178  300A               	movlw	10
  2431     0179  00F0               	movwf	___awmod@divisor
  2432     017A  3000               	movlw	0
  2433     017B  00F1               	movwf	___awmod@divisor+1
  2434     017C  082B               	movf	dtoa@d+1,w
  2435     017D  00F3               	movwf	___awmod@dividend+1
  2436     017E  082A               	movf	dtoa@d,w
  2437     017F  00F2               	movwf	___awmod@dividend
  2438     0180  3185  2543  3181   	fcall	___awmod
  2439     0183  0871               	movf	?___awmod+1,w
  2440     0184  00F8               	movwf	abs@a+1
  2441     0185  0870               	movf	?___awmod,w
  2442     0186  00F7               	movwf	abs@a
  2443     0187  3187  2769  3181   	fcall	_abs
  2444     018A  0877               	movf	?_abs,w
  2445     018B  3E30               	addlw	48
  2446     018C  0081               	movwf	1
  2447     018D                     l1587:
  2448                           
  2449                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 514:         --p;
  2450     018D  30FF               	movlw	255
  2451     018E  0020               	movlb	0	; select bank0
  2452     018F  07B0               	addwf	dtoa@p,f
  2453     0190  30FF               	movlw	255
  2454     0191  3DB1               	addwfc	dtoa@p+1,f
  2455     0192                     l1589:
  2456                           
  2457                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 515:         --w;
  2458     0192  30FF               	movlw	255
  2459     0193  07B2               	addwf	dtoa@w,f
  2460     0194  30FF               	movlw	255
  2461     0195  3DB3               	addwfc	dtoa@w+1,f
  2462     0196                     l1591:
  2463                           
  2464                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 516:         d = 
      +                          d / 10;
  2465     0196  300A               	movlw	10
  2466     0197  00F0               	movwf	___awdiv@divisor
  2467     0198  3000               	movlw	0
  2468     0199  00F1               	movwf	___awdiv@divisor+1
  2469     019A  082B               	movf	dtoa@d+1,w
  2470     019B  00F3               	movwf	___awdiv@dividend+1
  2471     019C  082A               	movf	dtoa@d,w
  2472     019D  00F2               	movwf	___awdiv@dividend
  2473     019E  3184  24E4  3181   	fcall	___awdiv
  2474     01A1  0871               	movf	?___awdiv+1,w
  2475     01A2  0020               	movlb	0	; select bank0
  2476     01A3  00AB               	movwf	dtoa@d+1
  2477     01A4  0870               	movf	?___awdiv,w
  2478     01A5  00AA               	movwf	dtoa@d
  2479     01A6                     l1593:
  2480                           
  2481                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 507:     while (!
      +                          (i < 1) && (d || (0 < p)
  2482     01A6  0020               	movlb	0	; select bank0
  2483     01A7  0835               	movf	dtoa@i+1,w
  2484     01A8  3A80               	xorlw	128
  2485     01A9  00AC               	movwf	??_dtoa
  2486     01AA  3080               	movlw	128
  2487     01AB  022C               	subwf	??_dtoa,w
  2488     01AC  1D03               	skipz
  2489     01AD  29B0               	goto	u1205
  2490     01AE  3001               	movlw	1
  2491     01AF  0234               	subwf	dtoa@i,w
  2492     01B0                     u1205:
  2493     01B0  1C03               	skipc
  2494     01B1  29B3               	goto	u1201
  2495     01B2  29B4               	goto	u1200
  2496     01B3                     u1201:
  2497     01B3  29DB               	goto	l1603
  2498     01B4                     u1200:
  2499     01B4                     l1595:
  2500     01B4  0020               	movlb	0	; select bank0
  2501     01B5  082A               	movf	dtoa@d,w
  2502     01B6  042B               	iorwf	dtoa@d+1,w
  2503     01B7  1D03               	btfss	3,2
  2504     01B8  29BA               	goto	u1211
  2505     01B9  29BB               	goto	u1210
  2506     01BA                     u1211:
  2507     01BA  296F               	goto	l1583
  2508     01BB                     u1210:
  2509     01BB                     l1597:
  2510     01BB  0831               	movf	dtoa@p+1,w
  2511     01BC  3A80               	xorlw	128
  2512     01BD  00AC               	movwf	??_dtoa
  2513     01BE  3080               	movlw	128
  2514     01BF  022C               	subwf	??_dtoa,w
  2515     01C0  1D03               	skipz
  2516     01C1  29C4               	goto	u1225
  2517     01C2  3001               	movlw	1
  2518     01C3  0230               	subwf	dtoa@p,w
  2519     01C4                     u1225:
  2520     01C4  1803               	skipnc
  2521     01C5  29C7               	goto	u1221
  2522     01C6  29C8               	goto	u1220
  2523     01C7                     u1221:
  2524     01C7  296F               	goto	l1583
  2525     01C8                     u1220:
  2526     01C8                     l1599:
  2527     01C8  0020               	movlb	0	; select bank0
  2528     01C9  0833               	movf	dtoa@w+1,w
  2529     01CA  3A80               	xorlw	128
  2530     01CB  00AC               	movwf	??_dtoa
  2531     01CC  3080               	movlw	128
  2532     01CD  022C               	subwf	??_dtoa,w
  2533     01CE  1D03               	skipz
  2534     01CF  29D2               	goto	u1235
  2535     01D0  3001               	movlw	1
  2536     01D1  0232               	subwf	dtoa@w,w
  2537     01D2                     u1235:
  2538     01D2  1C03               	skipc
  2539     01D3  29D5               	goto	u1231
  2540     01D4  29D6               	goto	u1230
  2541     01D5                     u1231:
  2542     01D5  29DB               	goto	l1603
  2543     01D6                     u1230:
  2544     01D6                     l1601:
  2545     01D6  0020               	movlb	0	; select bank0
  2546     01D7  18E9               	btfsc	_flags,1
  2547     01D8  29DA               	goto	u1241
  2548     01D9  29DB               	goto	u1240
  2549     01DA                     u1241:
  2550     01DA  296F               	goto	l1583
  2551     01DB                     u1240:
  2552     01DB                     l1603:
  2553                           
  2554                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 520:     if (s !=
      +                           0) {
  2555     01DB  0020               	movlb	0	; select bank0
  2556     01DC  0836               	movf	dtoa@s,w
  2557     01DD  1903               	btfsc	3,2
  2558     01DE  29E0               	goto	u1251
  2559     01DF  29E1               	goto	u1250
  2560     01E0                     u1251:
  2561     01E0  29EB               	goto	l1609
  2562     01E1                     u1250:
  2563     01E1                     l1605:
  2564                           
  2565                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 521:         --i;
  2566     01E1  30FF               	movlw	255
  2567     01E2  07B4               	addwf	dtoa@i,f
  2568     01E3  30FF               	movlw	255
  2569     01E4  3DB5               	addwfc	dtoa@i+1,f
  2570     01E5                     l1607:
  2571                           
  2572                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 522:         dbuf
      +                          [i] = s;
  2573     01E5  0834               	movf	dtoa@i,w
  2574     01E6  3EA0               	addlw	(low (_dbuf| 0))& (0+255)
  2575     01E7  0086               	movwf	6
  2576     01E8  0187               	clrf	7
  2577     01E9  0836               	movf	dtoa@s,w
  2578     01EA  0081               	movwf	1
  2579     01EB                     l1609:
  2580                           
  2581                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 526:     return (
      +                          void) pad(fp, &dbuf[i], w);
  2582     01EB  0834               	movf	dtoa@i,w
  2583     01EC  3EA0               	addlw	(low (_dbuf| 0))& (0+255)
  2584     01ED  00FB               	movwf	pad@buf
  2585     01EE  0833               	movf	dtoa@w+1,w
  2586     01EF  00FD               	movwf	pad@p+1
  2587     01F0  0832               	movf	dtoa@w,w
  2588     01F1  00FC               	movwf	pad@p
  2589     01F2  082F               	movf	dtoa@fp,w
  2590     01F3  3185  25E6  3181   	fcall	_pad
  2591     01F6                     l714:
  2592     01F6  0008               	return
  2593     01F7                     __end_of_dtoa:
  2594                           
  2595                           	psect	text7
  2596     05E6                     __ptext7:	
  2597 ;; *************** function _pad *****************
  2598 ;; Defined at:
  2599 ;;		line 152 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  2600 ;; Parameters:    Size  Location     Type
  2601 ;;  fp              1    wreg     PTR struct _IO_FILE
  2602 ;;		 -> sprintf@f(11), 
  2603 ;;  buf             1   11[COMMON] PTR unsigned char 
  2604 ;;		 -> dbuf(32), 
  2605 ;;  p               2   12[COMMON] int 
  2606 ;; Auto vars:     Size  Location     Type
  2607 ;;  fp              1    9[BANK0 ] PTR struct _IO_FILE
  2608 ;;		 -> sprintf@f(11), 
  2609 ;;  w               2    7[BANK0 ] int 
  2610 ;;  i               2    5[BANK0 ] int 
  2611 ;; Return value:  Size  Location     Type
  2612 ;;                  1    wreg      void 
  2613 ;; Registers used:
  2614 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2615 ;; Tracked objects:
  2616 ;;		On entry : 0/0
  2617 ;;		On exit  : 0/0
  2618 ;;		Unchanged: 0/0
  2619 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2620 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2621 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2622 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2623 ;;      Totals:         3       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2624 ;;Total ram usage:        9 bytes
  2625 ;; Hardware stack levels used: 1
  2626 ;; Hardware stack levels required when called: 4
  2627 ;; This function calls:
  2628 ;;		_fputc
  2629 ;;		_fputs
  2630 ;; This function is called by:
  2631 ;;		_dtoa
  2632 ;; This function uses a non-reentrant model
  2633 ;;
  2634                           
  2635     05E6                     _pad:	
  2636                           ;psect for function _pad
  2637                           
  2638                           
  2639                           ;incstack = 0
  2640                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2641                           ;pad@fp stored from wreg
  2642     05E6  0020               	movlb	0	; select bank0
  2643     05E7  00A9               	movwf	pad@fp
  2644     05E8                     l1533:
  2645                           
  2646                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 152: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\com
      +                          mon\doprnt.c: 153: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.
      +                          c: 154:     int i, w;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt
      +                          .c: 158:     if (flags & (1 << 0)) {
  2647     05E8  1C69               	btfss	_flags,0
  2648     05E9  2DEB               	goto	u1081
  2649     05EA  2DEC               	goto	u1080
  2650     05EB                     u1081:
  2651     05EB  2DF2               	goto	l1537
  2652     05EC                     u1080:
  2653     05EC                     l1535:
  2654                           
  2655                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 159:         fput
      +                          s((const char *)buf, fp);
  2656     05EC  0829               	movf	pad@fp,w
  2657     05ED  00F8               	movwf	fputs@fp
  2658     05EE  087B               	movf	pad@buf,w
  2659     05EF  3186  26ED  3185   	fcall	_fputs
  2660     05F2                     l1537:
  2661                           
  2662                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 164:     w = (p <
      +                           0) ? 0 : p;
  2663     05F2  1BFD               	btfsc	pad@p+1,7
  2664     05F3  2DF5               	goto	u1091
  2665     05F4  2DF6               	goto	u1090
  2666     05F5                     u1091:
  2667     05F5  2DFC               	goto	l1541
  2668     05F6                     u1090:
  2669     05F6                     l1539:
  2670     05F6  087D               	movf	pad@p+1,w
  2671     05F7  0020               	movlb	0	; select bank0
  2672     05F8  00A8               	movwf	pad@w+1
  2673     05F9  087C               	movf	pad@p,w
  2674     05FA  00A7               	movwf	pad@w
  2675     05FB  2DFF               	goto	l687
  2676     05FC                     l1541:
  2677     05FC  0020               	movlb	0	; select bank0
  2678     05FD  01A7               	clrf	pad@w
  2679     05FE  01A8               	clrf	pad@w+1
  2680     05FF                     l687:
  2681                           
  2682                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 165:     i = 0;
  2683     05FF  01A5               	clrf	pad@i
  2684     0600  01A6               	clrf	pad@i+1
  2685                           
  2686                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 166:     while (i
      +                           < w) {
  2687     0601  2E11               	goto	l1547
  2688     0602                     l1543:
  2689                           
  2690                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 167:         fput
      +                          c(' ', fp);
  2691     0602  3020               	movlw	32
  2692     0603  00F0               	movwf	fputc@c
  2693     0604  3000               	movlw	0
  2694     0605  00F1               	movwf	fputc@c+1
  2695     0606  0020               	movlb	0	; select bank0
  2696     0607  0829               	movf	pad@fp,w
  2697     0608  00F2               	movwf	fputc@fp
  2698     0609  3185  2596  3185   	fcall	_fputc
  2699     060C                     l1545:
  2700                           
  2701                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 168:         ++i;
  2702     060C  3001               	movlw	1
  2703     060D  0020               	movlb	0	; select bank0
  2704     060E  07A5               	addwf	pad@i,f
  2705     060F  3000               	movlw	0
  2706     0610  3DA6               	addwfc	pad@i+1,f
  2707     0611                     l1547:
  2708                           
  2709                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 166:     while (i
      +                           < w) {
  2710     0611  0826               	movf	pad@i+1,w
  2711     0612  3A80               	xorlw	128
  2712     0613  00A4               	movwf	??_pad
  2713     0614  0828               	movf	pad@w+1,w
  2714     0615  3A80               	xorlw	128
  2715     0616  0224               	subwf	??_pad,w
  2716     0617  1D03               	skipz
  2717     0618  2E1B               	goto	u1105
  2718     0619  0827               	movf	pad@w,w
  2719     061A  0225               	subwf	pad@i,w
  2720     061B                     u1105:
  2721     061B  1C03               	skipc
  2722     061C  2E1E               	goto	u1101
  2723     061D  2E1F               	goto	u1100
  2724     061E                     u1101:
  2725     061E  2E02               	goto	l1543
  2726     061F                     u1100:
  2727     061F                     l690:
  2728                           
  2729                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 173:     if (!(fl
      +                          ags & (1 << 0))) {
  2730     061F  0020               	movlb	0	; select bank0
  2731     0620  1869               	btfsc	_flags,0
  2732     0621  2E23               	goto	u1111
  2733     0622  2E24               	goto	u1110
  2734     0623                     u1111:
  2735     0623  2E2A               	goto	l692
  2736     0624                     u1110:
  2737     0624                     l1549:
  2738                           
  2739                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 175:         fput
      +                          s((const char *)buf, fp);
  2740     0624  0829               	movf	pad@fp,w
  2741     0625  00F8               	movwf	fputs@fp
  2742     0626  087B               	movf	pad@buf,w
  2743     0627  3186  26ED  3185   	fcall	_fputs
  2744     062A                     l692:
  2745     062A  0008               	return
  2746     062B                     __end_of_pad:
  2747                           
  2748                           	psect	text8
  2749     06ED                     __ptext8:	
  2750 ;; *************** function _fputs *****************
  2751 ;; Defined at:
  2752 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_fputs.c"
  2753 ;; Parameters:    Size  Location     Type
  2754 ;;  s               1    wreg     PTR const unsigned char 
  2755 ;;		 -> dbuf(32), 
  2756 ;;  fp              1    8[COMMON] PTR struct _IO_FILE
  2757 ;;		 -> sprintf@f(11), 
  2758 ;; Auto vars:     Size  Location     Type
  2759 ;;  s               1    3[BANK0 ] PTR const unsigned char 
  2760 ;;		 -> dbuf(32), 
  2761 ;;  i               2    1[BANK0 ] int 
  2762 ;;  c               1    0[BANK0 ] unsigned char 
  2763 ;; Return value:  Size  Location     Type
  2764 ;;                  2    8[COMMON] int 
  2765 ;; Registers used:
  2766 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2767 ;; Tracked objects:
  2768 ;;		On entry : 0/0
  2769 ;;		On exit  : 0/0
  2770 ;;		Unchanged: 0/0
  2771 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2772 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2773 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2774 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2775 ;;      Totals:         3       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2776 ;;Total ram usage:        7 bytes
  2777 ;; Hardware stack levels used: 1
  2778 ;; Hardware stack levels required when called: 3
  2779 ;; This function calls:
  2780 ;;		_fputc
  2781 ;; This function is called by:
  2782 ;;		_pad
  2783 ;; This function uses a non-reentrant model
  2784 ;;
  2785                           
  2786     06ED                     _fputs:	
  2787                           ;psect for function _fputs
  2788                           
  2789                           
  2790                           ;incstack = 0
  2791                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2792                           ;fputs@s stored from wreg
  2793     06ED  0020               	movlb	0	; select bank0
  2794     06EE  00A3               	movwf	fputs@s
  2795     06EF                     l1429:
  2796     06EF  01A1               	clrf	fputs@i
  2797     06F0  01A2               	clrf	fputs@i+1
  2798     06F1  2F03               	goto	l1435
  2799     06F2                     l1431:
  2800     06F2  0820               	movf	fputs@c,w
  2801     06F3  00F9               	movwf	??_fputs
  2802     06F4  01FA               	clrf	??_fputs+1
  2803     06F5  0879               	movf	??_fputs,w
  2804     06F6  00F0               	movwf	fputc@c
  2805     06F7  087A               	movf	??_fputs+1,w
  2806     06F8  00F1               	movwf	fputc@c+1
  2807     06F9  0878               	movf	fputs@fp,w
  2808     06FA  00F2               	movwf	fputc@fp
  2809     06FB  3185  2596  3186   	fcall	_fputc
  2810     06FE                     l1433:
  2811     06FE  3001               	movlw	1
  2812     06FF  0020               	movlb	0	; select bank0
  2813     0700  07A1               	addwf	fputs@i,f
  2814     0701  3000               	movlw	0
  2815     0702  3DA2               	addwfc	fputs@i+1,f
  2816     0703                     l1435:
  2817     0703  0821               	movf	fputs@i,w
  2818     0704  0723               	addwf	fputs@s,w
  2819     0705  00F9               	movwf	??_fputs
  2820     0706  0879               	movf	??_fputs,w
  2821     0707  0086               	movwf	6
  2822     0708  0187               	clrf	7
  2823     0709  0801               	movf	1,w
  2824     070A  00A0               	movwf	fputs@c
  2825     070B  0820               	movf	fputs@c,w
  2826     070C  1D03               	btfss	3,2
  2827     070D  2F0F               	goto	u841
  2828     070E  2F10               	goto	u840
  2829     070F                     u841:
  2830     070F  2EF2               	goto	l1431
  2831     0710                     u840:
  2832     0710                     l770:
  2833     0710  0008               	return
  2834     0711                     __end_of_fputs:
  2835                           
  2836                           	psect	text9
  2837     0596                     __ptext9:	
  2838 ;; *************** function _fputc *****************
  2839 ;; Defined at:
  2840 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_fputc.c"
  2841 ;; Parameters:    Size  Location     Type
  2842 ;;  c               2    0[COMMON] int 
  2843 ;;  fp              1    2[COMMON] PTR struct _IO_FILE
  2844 ;;		 -> sprintf@f(11), 
  2845 ;; Auto vars:     Size  Location     Type
  2846 ;;		None
  2847 ;; Return value:  Size  Location     Type
  2848 ;;                  2    0[COMMON] int 
  2849 ;; Registers used:
  2850 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2851 ;; Tracked objects:
  2852 ;;		On entry : 0/0
  2853 ;;		On exit  : 0/0
  2854 ;;		Unchanged: 0/0
  2855 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2856 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2857 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2858 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2859 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2860 ;;Total ram usage:        8 bytes
  2861 ;; Hardware stack levels used: 1
  2862 ;; Hardware stack levels required when called: 2
  2863 ;; This function calls:
  2864 ;;		_putch
  2865 ;; This function is called by:
  2866 ;;		_pad
  2867 ;;		_vfpfcnvrt
  2868 ;;		_fputs
  2869 ;; This function uses a non-reentrant model
  2870 ;;
  2871                           
  2872     0596                     _fputc:	
  2873                           ;psect for function _fputc
  2874                           
  2875     0596                     l1413:	
  2876                           ;incstack = 0
  2877                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2878                           
  2879     0596  0872               	movf	fputc@fp,w
  2880     0597  1903               	btfsc	3,2
  2881     0598  2D9A               	goto	u801
  2882     0599  2D9B               	goto	u800
  2883     059A                     u801:
  2884     059A  2DA0               	goto	l1417
  2885     059B                     u800:
  2886     059B                     l1415:
  2887     059B  0872               	movf	fputc@fp,w
  2888     059C  1D03               	btfss	3,2
  2889     059D  2D9F               	goto	u811
  2890     059E  2DA0               	goto	u810
  2891     059F                     u811:
  2892     059F  2DA5               	goto	l1419
  2893     05A0                     u810:
  2894     05A0                     l1417:
  2895     05A0  0870               	movf	fputc@c,w
  2896     05A1  3187  27E3  3185   	fcall	_putch
  2897     05A4  2DE5               	goto	l762
  2898     05A5                     l1419:
  2899     05A5  0872               	movf	fputc@fp,w
  2900     05A6  3E09               	addlw	9
  2901     05A7  0086               	movwf	6
  2902     05A8  0187               	clrf	7
  2903     05A9  0016               	moviw fsr1++
  2904     05AA  0401               	iorwf	1,w
  2905     05AB  1903               	btfsc	3,2
  2906     05AC  2DAE               	goto	u821
  2907     05AD  2DAF               	goto	u820
  2908     05AE                     u821:
  2909     05AE  2DCD               	goto	l1423
  2910     05AF                     u820:
  2911     05AF                     l1421:
  2912     05AF  0872               	movf	fputc@fp,w
  2913     05B0  3E09               	addlw	9
  2914     05B1  0086               	movwf	6
  2915     05B2  0187               	clrf	7
  2916     05B3  3F40               	moviw [0]fsr1
  2917     05B4  00F3               	movwf	??_fputc
  2918     05B5  3F41               	moviw [1]fsr1
  2919     05B6  00F4               	movwf	??_fputc+1
  2920     05B7  0872               	movf	fputc@fp,w
  2921     05B8  3E02               	addlw	2
  2922     05B9  0086               	movwf	6
  2923     05BA  0187               	clrf	7
  2924     05BB  3F40               	moviw [0]fsr1
  2925     05BC  00F5               	movwf	??_fputc+2
  2926     05BD  3F41               	moviw [1]fsr1
  2927     05BE  00F6               	movwf	??_fputc+3
  2928     05BF  0876               	movf	??_fputc+3,w
  2929     05C0  3A80               	xorlw	128
  2930     05C1  00F7               	movwf	??_fputc+4
  2931     05C2  0874               	movf	??_fputc+1,w
  2932     05C3  3A80               	xorlw	128
  2933     05C4  0277               	subwf	??_fputc+4,w
  2934     05C5  1D03               	skipz
  2935     05C6  2DC9               	goto	u835
  2936     05C7  0873               	movf	??_fputc,w
  2937     05C8  0275               	subwf	??_fputc+2,w
  2938     05C9                     u835:
  2939     05C9  1803               	skipnc
  2940     05CA  2DCC               	goto	u831
  2941     05CB  2DCD               	goto	u830
  2942     05CC                     u831:
  2943     05CC  2DE5               	goto	l762
  2944     05CD                     u830:
  2945     05CD                     l1423:
  2946     05CD  0872               	movf	fputc@fp,w
  2947     05CE  0086               	movwf	6
  2948     05CF  0187               	clrf	7
  2949     05D0  0872               	movf	fputc@fp,w
  2950     05D1  3E02               	addlw	2
  2951     05D2  0084               	movwf	4
  2952     05D3  0185               	clrf	5
  2953     05D4  0800               	movf	0,w
  2954     05D5  0701               	addwf	1,w
  2955     05D6  00F3               	movwf	??_fputc
  2956     05D7  0873               	movf	??_fputc,w
  2957     05D8  0086               	movwf	6
  2958     05D9  0187               	clrf	7
  2959     05DA  0870               	movf	fputc@c,w
  2960     05DB  0081               	movwf	1
  2961     05DC                     l1425:
  2962     05DC  0872               	movf	fputc@fp,w
  2963     05DD  3E02               	addlw	2
  2964     05DE  0086               	movwf	6
  2965     05DF  0187               	clrf	7
  2966     05E0  3001               	movlw	1
  2967     05E1  0781               	addwf	1,f
  2968     05E2  3141               	addfsr 1,1
  2969     05E3  1803               	skipnc
  2970     05E4  0A81               	incf	1,f
  2971     05E5                     l762:
  2972     05E5  0008               	return
  2973     05E6                     __end_of_fputc:
  2974                           
  2975                           	psect	text10
  2976     07E3                     __ptext10:	
  2977 ;; *************** function _putch *****************
  2978 ;; Defined at:
  2979 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\putch.c"
  2980 ;; Parameters:    Size  Location     Type
  2981 ;;  c               1    wreg     unsigned char 
  2982 ;; Auto vars:     Size  Location     Type
  2983 ;;  c               1    0[COMMON] unsigned char 
  2984 ;; Return value:  Size  Location     Type
  2985 ;;                  1    wreg      void 
  2986 ;; Registers used:
  2987 ;;		wreg
  2988 ;; Tracked objects:
  2989 ;;		On entry : 0/0
  2990 ;;		On exit  : 0/0
  2991 ;;		Unchanged: 0/0
  2992 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2993 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2994 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2996 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2997 ;;Total ram usage:        0 bytes
  2998 ;; Hardware stack levels used: 1
  2999 ;; Hardware stack levels required when called: 1
  3000 ;; This function calls:
  3001 ;;		Nothing
  3002 ;; This function is called by:
  3003 ;;		_fputc
  3004 ;; This function uses a non-reentrant model
  3005 ;;
  3006                           
  3007     07E3                     _putch:	
  3008                           ;psect for function _putch
  3009                           
  3010     07E3                     l773:	
  3011                           ;incstack = 0
  3012                           ; Regs used in _putch: [wreg]
  3013                           
  3014     07E3  0008               	return
  3015     07E4                     __end_of_putch:
  3016                           
  3017                           	psect	text11
  3018     0769                     __ptext11:	
  3019 ;; *************** function _abs *****************
  3020 ;; Defined at:
  3021 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\abs.c"
  3022 ;; Parameters:    Size  Location     Type
  3023 ;;  a               2    7[COMMON] int 
  3024 ;; Auto vars:     Size  Location     Type
  3025 ;;		None
  3026 ;; Return value:  Size  Location     Type
  3027 ;;                  2    7[COMMON] int 
  3028 ;; Registers used:
  3029 ;;		wreg, status,2, status,0
  3030 ;; Tracked objects:
  3031 ;;		On entry : 0/0
  3032 ;;		On exit  : 0/0
  3033 ;;		Unchanged: 0/0
  3034 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3035 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3036 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3037 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3038 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3039 ;;Total ram usage:        4 bytes
  3040 ;; Hardware stack levels used: 1
  3041 ;; Hardware stack levels required when called: 1
  3042 ;; This function calls:
  3043 ;;		Nothing
  3044 ;; This function is called by:
  3045 ;;		_dtoa
  3046 ;; This function uses a non-reentrant model
  3047 ;;
  3048                           
  3049     0769                     _abs:	
  3050                           ;psect for function _abs
  3051                           
  3052     0769                     l1551:	
  3053                           ;incstack = 0
  3054                           ; Regs used in _abs: [wreg+status,2+status,0]
  3055                           
  3056     0769  0878               	movf	abs@a+1,w
  3057     076A  3A80               	xorlw	128
  3058     076B  00F9               	movwf	??_abs
  3059     076C  3080               	movlw	128
  3060     076D  0279               	subwf	??_abs,w
  3061     076E  1D03               	skipz
  3062     076F  2F72               	goto	u1125
  3063     0770  3001               	movlw	1
  3064     0771  0277               	subwf	abs@a,w
  3065     0772                     u1125:
  3066     0772  1803               	skipnc
  3067     0773  2F75               	goto	u1121
  3068     0774  2F76               	goto	u1120
  3069     0775                     u1121:
  3070     0775  2F82               	goto	l747
  3071     0776                     u1120:
  3072     0776                     l1553:
  3073     0776  0977               	comf	abs@a,w
  3074     0777  00F9               	movwf	??_abs
  3075     0778  0978               	comf	abs@a+1,w
  3076     0779  00FA               	movwf	??_abs+1
  3077     077A  0AF9               	incf	??_abs,f
  3078     077B  1903               	skipnz
  3079     077C  0AFA               	incf	??_abs+1,f
  3080     077D  0879               	movf	??_abs,w
  3081     077E  00F7               	movwf	?_abs
  3082     077F  087A               	movf	??_abs+1,w
  3083     0780  00F8               	movwf	?_abs+1
  3084     0781  2F82               	goto	l750
  3085     0782                     l747:
  3086     0782                     l750:
  3087     0782  0008               	return
  3088     0783                     __end_of_abs:
  3089                           
  3090                           	psect	text12
  3091     0543                     __ptext12:	
  3092 ;; *************** function ___awmod *****************
  3093 ;; Defined at:
  3094 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awmod.c"
  3095 ;; Parameters:    Size  Location     Type
  3096 ;;  divisor         2    0[COMMON] int 
  3097 ;;  dividend        2    2[COMMON] int 
  3098 ;; Auto vars:     Size  Location     Type
  3099 ;;  sign            1    6[COMMON] unsigned char 
  3100 ;;  counter         1    5[COMMON] unsigned char 
  3101 ;; Return value:  Size  Location     Type
  3102 ;;                  2    0[COMMON] int 
  3103 ;; Registers used:
  3104 ;;		wreg, status,2, status,0
  3105 ;; Tracked objects:
  3106 ;;		On entry : 0/0
  3107 ;;		On exit  : 0/0
  3108 ;;		Unchanged: 0/0
  3109 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3110 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3111 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3112 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3113 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3114 ;;Total ram usage:        7 bytes
  3115 ;; Hardware stack levels used: 1
  3116 ;; Hardware stack levels required when called: 1
  3117 ;; This function calls:
  3118 ;;		Nothing
  3119 ;; This function is called by:
  3120 ;;		_dtoa
  3121 ;; This function uses a non-reentrant model
  3122 ;;
  3123                           
  3124     0543                     ___awmod:	
  3125                           ;psect for function ___awmod
  3126                           
  3127     0543                     l1495:	
  3128                           ;incstack = 0
  3129                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3130                           
  3131     0543  01F6               	clrf	___awmod@sign
  3132     0544                     l1497:
  3133     0544  1FF3               	btfss	___awmod@dividend+1,7
  3134     0545  2D47               	goto	u991
  3135     0546  2D48               	goto	u990
  3136     0547                     u991:
  3137     0547  2D4F               	goto	l1503
  3138     0548                     u990:
  3139     0548                     l1499:
  3140     0548  09F2               	comf	___awmod@dividend,f
  3141     0549  09F3               	comf	___awmod@dividend+1,f
  3142     054A  0AF2               	incf	___awmod@dividend,f
  3143     054B  1903               	skipnz
  3144     054C  0AF3               	incf	___awmod@dividend+1,f
  3145     054D                     l1501:
  3146     054D  01F6               	clrf	___awmod@sign
  3147     054E  0AF6               	incf	___awmod@sign,f
  3148     054F                     l1503:
  3149     054F  1FF1               	btfss	___awmod@divisor+1,7
  3150     0550  2D52               	goto	u1001
  3151     0551  2D53               	goto	u1000
  3152     0552                     u1001:
  3153     0552  2D58               	goto	l1507
  3154     0553                     u1000:
  3155     0553                     l1505:
  3156     0553  09F0               	comf	___awmod@divisor,f
  3157     0554  09F1               	comf	___awmod@divisor+1,f
  3158     0555  0AF0               	incf	___awmod@divisor,f
  3159     0556  1903               	skipnz
  3160     0557  0AF1               	incf	___awmod@divisor+1,f
  3161     0558                     l1507:
  3162     0558  0870               	movf	___awmod@divisor,w
  3163     0559  0471               	iorwf	___awmod@divisor+1,w
  3164     055A  1903               	btfsc	3,2
  3165     055B  2D5D               	goto	u1011
  3166     055C  2D5E               	goto	u1010
  3167     055D                     u1011:
  3168     055D  2D87               	goto	l1525
  3169     055E                     u1010:
  3170     055E                     l1509:
  3171     055E  01F5               	clrf	___awmod@counter
  3172     055F  0AF5               	incf	___awmod@counter,f
  3173     0560  2D6A               	goto	l1515
  3174     0561                     l1511:
  3175     0561  3001               	movlw	1
  3176     0562                     u1025:
  3177     0562  35F0               	lslf	___awmod@divisor,f
  3178     0563  0DF1               	rlf	___awmod@divisor+1,f
  3179     0564  0B89               	decfsz	9,f
  3180     0565  2D62               	goto	u1025
  3181     0566                     l1513:
  3182     0566  3001               	movlw	1
  3183     0567  00F4               	movwf	??___awmod
  3184     0568  0874               	movf	??___awmod,w
  3185     0569  07F5               	addwf	___awmod@counter,f
  3186     056A                     l1515:
  3187     056A  1FF1               	btfss	___awmod@divisor+1,7
  3188     056B  2D6D               	goto	u1031
  3189     056C  2D6E               	goto	u1030
  3190     056D                     u1031:
  3191     056D  2D61               	goto	l1511
  3192     056E                     u1030:
  3193     056E                     l1517:
  3194     056E  0871               	movf	___awmod@divisor+1,w
  3195     056F  0273               	subwf	___awmod@dividend+1,w
  3196     0570  1D03               	skipz
  3197     0571  2D74               	goto	u1045
  3198     0572  0870               	movf	___awmod@divisor,w
  3199     0573  0272               	subwf	___awmod@dividend,w
  3200     0574                     u1045:
  3201     0574  1C03               	skipc
  3202     0575  2D77               	goto	u1041
  3203     0576  2D78               	goto	u1040
  3204     0577                     u1041:
  3205     0577  2D7C               	goto	l1521
  3206     0578                     u1040:
  3207     0578                     l1519:
  3208     0578  0870               	movf	___awmod@divisor,w
  3209     0579  02F2               	subwf	___awmod@dividend,f
  3210     057A  0871               	movf	___awmod@divisor+1,w
  3211     057B  3BF3               	subwfb	___awmod@dividend+1,f
  3212     057C                     l1521:
  3213     057C  3001               	movlw	1
  3214     057D                     u1055:
  3215     057D  36F1               	lsrf	___awmod@divisor+1,f
  3216     057E  0CF0               	rrf	___awmod@divisor,f
  3217     057F  0B89               	decfsz	9,f
  3218     0580  2D7D               	goto	u1055
  3219     0581                     l1523:
  3220     0581  3001               	movlw	1
  3221     0582  02F5               	subwf	___awmod@counter,f
  3222     0583  1D03               	btfss	3,2
  3223     0584  2D86               	goto	u1061
  3224     0585  2D87               	goto	u1060
  3225     0586                     u1061:
  3226     0586  2D6E               	goto	l1517
  3227     0587                     u1060:
  3228     0587                     l1525:
  3229     0587  0876               	movf	___awmod@sign,w
  3230     0588  1903               	btfsc	3,2
  3231     0589  2D8B               	goto	u1071
  3232     058A  2D8C               	goto	u1070
  3233     058B                     u1071:
  3234     058B  2D91               	goto	l1529
  3235     058C                     u1070:
  3236     058C                     l1527:
  3237     058C  09F2               	comf	___awmod@dividend,f
  3238     058D  09F3               	comf	___awmod@dividend+1,f
  3239     058E  0AF2               	incf	___awmod@dividend,f
  3240     058F  1903               	skipnz
  3241     0590  0AF3               	incf	___awmod@dividend+1,f
  3242     0591                     l1529:
  3243     0591  0873               	movf	___awmod@dividend+1,w
  3244     0592  00F1               	movwf	?___awmod+1
  3245     0593  0872               	movf	___awmod@dividend,w
  3246     0594  00F0               	movwf	?___awmod
  3247     0595                     l367:
  3248     0595  0008               	return
  3249     0596                     __end_of___awmod:
  3250                           
  3251                           	psect	text13
  3252     04E4                     __ptext13:	
  3253 ;; *************** function ___awdiv *****************
  3254 ;; Defined at:
  3255 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awdiv.c"
  3256 ;; Parameters:    Size  Location     Type
  3257 ;;  divisor         2    0[COMMON] int 
  3258 ;;  dividend        2    2[COMMON] int 
  3259 ;; Auto vars:     Size  Location     Type
  3260 ;;  quotient        2    7[COMMON] int 
  3261 ;;  sign            1    6[COMMON] unsigned char 
  3262 ;;  counter         1    5[COMMON] unsigned char 
  3263 ;; Return value:  Size  Location     Type
  3264 ;;                  2    0[COMMON] int 
  3265 ;; Registers used:
  3266 ;;		wreg, status,2, status,0
  3267 ;; Tracked objects:
  3268 ;;		On entry : 0/0
  3269 ;;		On exit  : 0/0
  3270 ;;		Unchanged: 0/0
  3271 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3272 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3273 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3274 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3275 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3276 ;;Total ram usage:        9 bytes
  3277 ;; Hardware stack levels used: 1
  3278 ;; Hardware stack levels required when called: 1
  3279 ;; This function calls:
  3280 ;;		Nothing
  3281 ;; This function is called by:
  3282 ;;		_dtoa
  3283 ;; This function uses a non-reentrant model
  3284 ;;
  3285                           
  3286     04E4                     ___awdiv:	
  3287                           ;psect for function ___awdiv
  3288                           
  3289     04E4                     l1451:	
  3290                           ;incstack = 0
  3291                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3292                           
  3293     04E4  01F6               	clrf	___awdiv@sign
  3294     04E5                     l1453:
  3295     04E5  1FF1               	btfss	___awdiv@divisor+1,7
  3296     04E6  2CE8               	goto	u891
  3297     04E7  2CE9               	goto	u890
  3298     04E8                     u891:
  3299     04E8  2CF0               	goto	l1459
  3300     04E9                     u890:
  3301     04E9                     l1455:
  3302     04E9  09F0               	comf	___awdiv@divisor,f
  3303     04EA  09F1               	comf	___awdiv@divisor+1,f
  3304     04EB  0AF0               	incf	___awdiv@divisor,f
  3305     04EC  1903               	skipnz
  3306     04ED  0AF1               	incf	___awdiv@divisor+1,f
  3307     04EE                     l1457:
  3308     04EE  01F6               	clrf	___awdiv@sign
  3309     04EF  0AF6               	incf	___awdiv@sign,f
  3310     04F0                     l1459:
  3311     04F0  1FF3               	btfss	___awdiv@dividend+1,7
  3312     04F1  2CF3               	goto	u901
  3313     04F2  2CF4               	goto	u900
  3314     04F3                     u901:
  3315     04F3  2CFD               	goto	l1465
  3316     04F4                     u900:
  3317     04F4                     l1461:
  3318     04F4  09F2               	comf	___awdiv@dividend,f
  3319     04F5  09F3               	comf	___awdiv@dividend+1,f
  3320     04F6  0AF2               	incf	___awdiv@dividend,f
  3321     04F7  1903               	skipnz
  3322     04F8  0AF3               	incf	___awdiv@dividend+1,f
  3323     04F9                     l1463:
  3324     04F9  3001               	movlw	1
  3325     04FA  00F4               	movwf	??___awdiv
  3326     04FB  0874               	movf	??___awdiv,w
  3327     04FC  06F6               	xorwf	___awdiv@sign,f
  3328     04FD                     l1465:
  3329     04FD  01F7               	clrf	___awdiv@quotient
  3330     04FE  01F8               	clrf	___awdiv@quotient+1
  3331     04FF                     l1467:
  3332     04FF  0870               	movf	___awdiv@divisor,w
  3333     0500  0471               	iorwf	___awdiv@divisor+1,w
  3334     0501  1903               	btfsc	3,2
  3335     0502  2D04               	goto	u911
  3336     0503  2D05               	goto	u910
  3337     0504                     u911:
  3338     0504  2D34               	goto	l1487
  3339     0505                     u910:
  3340     0505                     l1469:
  3341     0505  01F5               	clrf	___awdiv@counter
  3342     0506  0AF5               	incf	___awdiv@counter,f
  3343     0507  2D11               	goto	l1475
  3344     0508                     l1471:
  3345     0508  3001               	movlw	1
  3346     0509                     u925:
  3347     0509  35F0               	lslf	___awdiv@divisor,f
  3348     050A  0DF1               	rlf	___awdiv@divisor+1,f
  3349     050B  0B89               	decfsz	9,f
  3350     050C  2D09               	goto	u925
  3351     050D                     l1473:
  3352     050D  3001               	movlw	1
  3353     050E  00F4               	movwf	??___awdiv
  3354     050F  0874               	movf	??___awdiv,w
  3355     0510  07F5               	addwf	___awdiv@counter,f
  3356     0511                     l1475:
  3357     0511  1FF1               	btfss	___awdiv@divisor+1,7
  3358     0512  2D14               	goto	u931
  3359     0513  2D15               	goto	u930
  3360     0514                     u931:
  3361     0514  2D08               	goto	l1471
  3362     0515                     u930:
  3363     0515                     l1477:
  3364     0515  3001               	movlw	1
  3365     0516                     u945:
  3366     0516  35F7               	lslf	___awdiv@quotient,f
  3367     0517  0DF8               	rlf	___awdiv@quotient+1,f
  3368     0518  0B89               	decfsz	9,f
  3369     0519  2D16               	goto	u945
  3370     051A  0871               	movf	___awdiv@divisor+1,w
  3371     051B  0273               	subwf	___awdiv@dividend+1,w
  3372     051C  1D03               	skipz
  3373     051D  2D20               	goto	u955
  3374     051E  0870               	movf	___awdiv@divisor,w
  3375     051F  0272               	subwf	___awdiv@dividend,w
  3376     0520                     u955:
  3377     0520  1C03               	skipc
  3378     0521  2D23               	goto	u951
  3379     0522  2D24               	goto	u950
  3380     0523                     u951:
  3381     0523  2D29               	goto	l1483
  3382     0524                     u950:
  3383     0524                     l1479:
  3384     0524  0870               	movf	___awdiv@divisor,w
  3385     0525  02F2               	subwf	___awdiv@dividend,f
  3386     0526  0871               	movf	___awdiv@divisor+1,w
  3387     0527  3BF3               	subwfb	___awdiv@dividend+1,f
  3388     0528                     l1481:
  3389     0528  1477               	bsf	___awdiv@quotient,0
  3390     0529                     l1483:
  3391     0529  3001               	movlw	1
  3392     052A                     u965:
  3393     052A  36F1               	lsrf	___awdiv@divisor+1,f
  3394     052B  0CF0               	rrf	___awdiv@divisor,f
  3395     052C  0B89               	decfsz	9,f
  3396     052D  2D2A               	goto	u965
  3397     052E                     l1485:
  3398     052E  3001               	movlw	1
  3399     052F  02F5               	subwf	___awdiv@counter,f
  3400     0530  1D03               	btfss	3,2
  3401     0531  2D33               	goto	u971
  3402     0532  2D34               	goto	u970
  3403     0533                     u971:
  3404     0533  2D15               	goto	l1477
  3405     0534                     u970:
  3406     0534                     l1487:
  3407     0534  0876               	movf	___awdiv@sign,w
  3408     0535  1903               	btfsc	3,2
  3409     0536  2D38               	goto	u981
  3410     0537  2D39               	goto	u980
  3411     0538                     u981:
  3412     0538  2D3E               	goto	l1491
  3413     0539                     u980:
  3414     0539                     l1489:
  3415     0539  09F7               	comf	___awdiv@quotient,f
  3416     053A  09F8               	comf	___awdiv@quotient+1,f
  3417     053B  0AF7               	incf	___awdiv@quotient,f
  3418     053C  1903               	skipnz
  3419     053D  0AF8               	incf	___awdiv@quotient+1,f
  3420     053E                     l1491:
  3421     053E  0878               	movf	___awdiv@quotient+1,w
  3422     053F  00F1               	movwf	?___awdiv+1
  3423     0540  0877               	movf	___awdiv@quotient,w
  3424     0541  00F0               	movwf	?___awdiv
  3425     0542                     l354:
  3426     0542  0008               	return
  3427     0543                     __end_of___awdiv:
  3428                           
  3429                           	psect	text14
  3430     06B1                     __ptext14:	
  3431 ;; *************** function ___lwdiv *****************
  3432 ;; Defined at:
  3433 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\lwdiv.c"
  3434 ;; Parameters:    Size  Location     Type
  3435 ;;  divisor         2    0[COMMON] unsigned int 
  3436 ;;  dividend        2    2[COMMON] unsigned int 
  3437 ;; Auto vars:     Size  Location     Type
  3438 ;;  quotient        2    5[COMMON] unsigned int 
  3439 ;;  counter         1    7[COMMON] unsigned char 
  3440 ;; Return value:  Size  Location     Type
  3441 ;;                  2    0[COMMON] unsigned int 
  3442 ;; Registers used:
  3443 ;;		wreg, status,2, status,0
  3444 ;; Tracked objects:
  3445 ;;		On entry : 0/0
  3446 ;;		On exit  : 0/0
  3447 ;;		Unchanged: 0/0
  3448 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3449 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3450 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3451 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3452 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3453 ;;Total ram usage:        8 bytes
  3454 ;; Hardware stack levels used: 1
  3455 ;; Hardware stack levels required when called: 1
  3456 ;; This function calls:
  3457 ;;		Nothing
  3458 ;; This function is called by:
  3459 ;;		_main
  3460 ;; This function uses a non-reentrant model
  3461 ;;
  3462                           
  3463     06B1                     ___lwdiv:	
  3464                           ;psect for function ___lwdiv
  3465                           
  3466     06B1                     l1867:	
  3467                           ;incstack = 0
  3468                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3469                           
  3470     06B1  01F5               	clrf	___lwdiv@quotient
  3471     06B2  01F6               	clrf	___lwdiv@quotient+1
  3472     06B3                     l1869:
  3473     06B3  0870               	movf	___lwdiv@divisor,w
  3474     06B4  0471               	iorwf	___lwdiv@divisor+1,w
  3475     06B5  1903               	btfsc	3,2
  3476     06B6  2EB8               	goto	u1491
  3477     06B7  2EB9               	goto	u1490
  3478     06B8                     u1491:
  3479     06B8  2EE8               	goto	l1889
  3480     06B9                     u1490:
  3481     06B9                     l1871:
  3482     06B9  01F7               	clrf	___lwdiv@counter
  3483     06BA  0AF7               	incf	___lwdiv@counter,f
  3484     06BB  2EC5               	goto	l1877
  3485     06BC                     l1873:
  3486     06BC  3001               	movlw	1
  3487     06BD                     u1505:
  3488     06BD  35F0               	lslf	___lwdiv@divisor,f
  3489     06BE  0DF1               	rlf	___lwdiv@divisor+1,f
  3490     06BF  0B89               	decfsz	9,f
  3491     06C0  2EBD               	goto	u1505
  3492     06C1                     l1875:
  3493     06C1  3001               	movlw	1
  3494     06C2  00F4               	movwf	??___lwdiv
  3495     06C3  0874               	movf	??___lwdiv,w
  3496     06C4  07F7               	addwf	___lwdiv@counter,f
  3497     06C5                     l1877:
  3498     06C5  1FF1               	btfss	___lwdiv@divisor+1,7
  3499     06C6  2EC8               	goto	u1511
  3500     06C7  2EC9               	goto	u1510
  3501     06C8                     u1511:
  3502     06C8  2EBC               	goto	l1873
  3503     06C9                     u1510:
  3504     06C9                     l1879:
  3505     06C9  3001               	movlw	1
  3506     06CA                     u1525:
  3507     06CA  35F5               	lslf	___lwdiv@quotient,f
  3508     06CB  0DF6               	rlf	___lwdiv@quotient+1,f
  3509     06CC  0B89               	decfsz	9,f
  3510     06CD  2ECA               	goto	u1525
  3511     06CE  0871               	movf	___lwdiv@divisor+1,w
  3512     06CF  0273               	subwf	___lwdiv@dividend+1,w
  3513     06D0  1D03               	skipz
  3514     06D1  2ED4               	goto	u1535
  3515     06D2  0870               	movf	___lwdiv@divisor,w
  3516     06D3  0272               	subwf	___lwdiv@dividend,w
  3517     06D4                     u1535:
  3518     06D4  1C03               	skipc
  3519     06D5  2ED7               	goto	u1531
  3520     06D6  2ED8               	goto	u1530
  3521     06D7                     u1531:
  3522     06D7  2EDD               	goto	l1885
  3523     06D8                     u1530:
  3524     06D8                     l1881:
  3525     06D8  0870               	movf	___lwdiv@divisor,w
  3526     06D9  02F2               	subwf	___lwdiv@dividend,f
  3527     06DA  0871               	movf	___lwdiv@divisor+1,w
  3528     06DB  3BF3               	subwfb	___lwdiv@dividend+1,f
  3529     06DC                     l1883:
  3530     06DC  1475               	bsf	___lwdiv@quotient,0
  3531     06DD                     l1885:
  3532     06DD  3001               	movlw	1
  3533     06DE                     u1545:
  3534     06DE  36F1               	lsrf	___lwdiv@divisor+1,f
  3535     06DF  0CF0               	rrf	___lwdiv@divisor,f
  3536     06E0  0B89               	decfsz	9,f
  3537     06E1  2EDE               	goto	u1545
  3538     06E2                     l1887:
  3539     06E2  3001               	movlw	1
  3540     06E3  02F7               	subwf	___lwdiv@counter,f
  3541     06E4  1D03               	btfss	3,2
  3542     06E5  2EE7               	goto	u1551
  3543     06E6  2EE8               	goto	u1550
  3544     06E7                     u1551:
  3545     06E7  2EC9               	goto	l1879
  3546     06E8                     u1550:
  3547     06E8                     l1889:
  3548     06E8  0876               	movf	___lwdiv@quotient+1,w
  3549     06E9  00F1               	movwf	?___lwdiv+1
  3550     06EA  0875               	movf	___lwdiv@quotient,w
  3551     06EB  00F0               	movwf	?___lwdiv
  3552     06EC                     l481:
  3553     06EC  0008               	return
  3554     06ED                     __end_of___lwdiv:
  3555                           
  3556                           	psect	text15
  3557     07D6                     __ptext15:	
  3558 ;; *************** function _TMR2_PWM *****************
  3559 ;; Defined at:
  3560 ;;		line 37 in file "main.c"
  3561 ;; Parameters:    Size  Location     Type
  3562 ;;		None
  3563 ;; Auto vars:     Size  Location     Type
  3564 ;;		None
  3565 ;; Return value:  Size  Location     Type
  3566 ;;                  1    wreg      void 
  3567 ;; Registers used:
  3568 ;;		wreg, status,2
  3569 ;; Tracked objects:
  3570 ;;		On entry : 0/0
  3571 ;;		On exit  : 0/0
  3572 ;;		Unchanged: 0/0
  3573 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3574 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3575 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3576 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3577 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3578 ;;Total ram usage:        0 bytes
  3579 ;; Hardware stack levels used: 1
  3580 ;; Hardware stack levels required when called: 1
  3581 ;; This function calls:
  3582 ;;		Nothing
  3583 ;; This function is called by:
  3584 ;;		_main
  3585 ;; This function uses a non-reentrant model
  3586 ;;
  3587                           
  3588     07D6                     _TMR2_PWM:	
  3589                           ;psect for function _TMR2_PWM
  3590                           
  3591     07D6                     l1849:	
  3592                           ;incstack = 0
  3593                           ; Regs used in _TMR2_PWM: [wreg+status,2]
  3594                           
  3595                           
  3596                           ;main.c: 38: }
  3597     07D6  0020               	movlb	0	; select bank0
  3598     07D7  019A               	clrf	26	;volatile
  3599     07D8                     l1851:
  3600                           
  3601                           ;main.c: 39: 
  3602     07D8  307C               	movlw	124
  3603     07D9  009B               	movwf	27	;volatile
  3604     07DA                     l1853:
  3605                           
  3606                           ;main.c: 40: 
  3607     07DA  30E0               	movlw	224
  3608     07DB  009C               	movwf	28	;volatile
  3609     07DC                     l118:
  3610     07DC  0008               	return
  3611     07DD                     __end_of_TMR2_PWM:
  3612                           
  3613                           	psect	text16
  3614     0793                     __ptext16:	
  3615 ;; *************** function _TMR1_Counter *****************
  3616 ;; Defined at:
  3617 ;;		line 25 in file "main.c"
  3618 ;; Parameters:    Size  Location     Type
  3619 ;;		None
  3620 ;; Auto vars:     Size  Location     Type
  3621 ;;		None
  3622 ;; Return value:  Size  Location     Type
  3623 ;;                  1    wreg      void 
  3624 ;; Registers used:
  3625 ;;		wreg, status,2
  3626 ;; Tracked objects:
  3627 ;;		On entry : 0/0
  3628 ;;		On exit  : 0/0
  3629 ;;		Unchanged: 0/0
  3630 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3631 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3632 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3633 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3634 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3635 ;;Total ram usage:        0 bytes
  3636 ;; Hardware stack levels used: 1
  3637 ;; Hardware stack levels required when called: 1
  3638 ;; This function calls:
  3639 ;;		Nothing
  3640 ;; This function is called by:
  3641 ;;		_main
  3642 ;; This function uses a non-reentrant model
  3643 ;;
  3644                           
  3645     0793                     _TMR1_Counter:	
  3646                           ;psect for function _TMR1_Counter
  3647                           
  3648     0793                     l1843:	
  3649                           ;incstack = 0
  3650                           ; Regs used in _TMR1_Counter: [wreg+status,2]
  3651                           
  3652                           
  3653                           ;main.c: 26:     PR2 = 124;
  3654     0793  0020               	movlb	0	; select bank0
  3655     0794  1099               	bcf	25,1	;volatile
  3656                           
  3657                           ;main.c: 27:     T2CON = 0b11100000;
  3658     0795  1419               	bsf	25,0	;volatile
  3659                           
  3660                           ;main.c: 28: }
  3661     0796  1319               	bcf	25,6	;volatile
  3662                           
  3663                           ;main.c: 29: 
  3664     0797  1299               	bcf	25,5	;volatile
  3665                           
  3666                           ;main.c: 30: void __attribute__((picinterrupt(("")))) ISR_TIMER0(void){
  3667     0798  1619               	bsf	25,4	;volatile
  3668                           
  3669                           ;main.c: 31:     if(INTCONbits.TMR0IF ==1){
  3670     0799  1799               	bsf	25,7	;volatile
  3671     079A                     l1845:
  3672                           
  3673                           ;main.c: 32:         LATBbits.LATB4 = ! LATBbits.LATB4;
  3674     079A  3095               	movlw	149
  3675     079B  0098               	movwf	24	;volatile
  3676                           
  3677                           ;main.c: 33:         TMR0 = 0x7D;
  3678     079C  3005               	movlw	5
  3679     079D  003C               	movlb	28	; select bank28
  3680     079E  0092               	movwf	18	;volatile
  3681     079F                     l1847:
  3682                           
  3683                           ;main.c: 34:         TMR1 = 0;
  3684     079F  0020               	movlb	0	; select bank0
  3685     07A0  0196               	clrf	22	;volatile
  3686     07A1  0197               	clrf	23	;volatile
  3687     07A2                     l115:
  3688     07A2  0008               	return
  3689     07A3                     __end_of_TMR1_Counter:
  3690                           
  3691                           	psect	text17
  3692     07C6                     __ptext17:	
  3693 ;; *************** function _TMR0_Timer *****************
  3694 ;; Defined at:
  3695 ;;		line 18 in file "main.c"
  3696 ;; Parameters:    Size  Location     Type
  3697 ;;		None
  3698 ;; Auto vars:     Size  Location     Type
  3699 ;;		None
  3700 ;; Return value:  Size  Location     Type
  3701 ;;                  1    wreg      void 
  3702 ;; Registers used:
  3703 ;;		wreg
  3704 ;; Tracked objects:
  3705 ;;		On entry : 0/0
  3706 ;;		On exit  : 0/0
  3707 ;;		Unchanged: 0/0
  3708 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3709 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3710 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3711 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3712 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3713 ;;Total ram usage:        0 bytes
  3714 ;; Hardware stack levels used: 1
  3715 ;; Hardware stack levels required when called: 1
  3716 ;; This function calls:
  3717 ;;		Nothing
  3718 ;; This function is called by:
  3719 ;;		_main
  3720 ;; This function uses a non-reentrant model
  3721 ;;
  3722                           
  3723     07C6                     _TMR0_Timer:	
  3724                           ;psect for function _TMR0_Timer
  3725                           
  3726     07C6                     l1837:	
  3727                           ;incstack = 0
  3728                           ; Regs used in _TMR0_Timer: [wreg]
  3729                           
  3730                           
  3731                           ;main.c: 19:     T1CON = 0b10010101;
  3732     07C6  3006               	movlw	6
  3733     07C7  0021               	movlb	1	; select bank1
  3734     07C8  0095               	movwf	21	;volatile
  3735                           
  3736                           ;main.c: 20:     T1CKIPPS = 0b00000101;
  3737     07C9  307D               	movlw	125
  3738     07CA  0020               	movlb	0	; select bank0
  3739     07CB  0095               	movwf	21	;volatile
  3740     07CC                     l1839:
  3741                           
  3742                           ;main.c: 21:     TMR1 = 0;
  3743     07CC  110B               	bcf	11,2	;volatile
  3744     07CD                     l1841:
  3745                           
  3746                           ;main.c: 22: }
  3747     07CD  168B               	bsf	11,5	;volatile
  3748     07CE                     l112:
  3749     07CE  0008               	return
  3750     07CF                     __end_of_TMR0_Timer:
  3751                           
  3752                           	psect	text18
  3753     062B                     __ptext18:	
  3754 ;; *************** function _Lcd_Out2 *****************
  3755 ;; Defined at:
  3756 ;;		line 115 in file "./flex_lcd.h"
  3757 ;; Parameters:    Size  Location     Type
  3758 ;;  y               1    wreg     unsigned char 
  3759 ;;  x               1    3[COMMON] unsigned char 
  3760 ;;  buffer          2    4[COMMON] PTR unsigned char 
  3761 ;;		 -> STR_3(12), buffer2(20), buffer1(20), 
  3762 ;; Auto vars:     Size  Location     Type
  3763 ;;  y               1    8[COMMON] unsigned char 
  3764 ;;  data            1    9[COMMON] unsigned char 
  3765 ;; Return value:  Size  Location     Type
  3766 ;;                  1    wreg      void 
  3767 ;; Registers used:
  3768 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3769 ;; Tracked objects:
  3770 ;;		On entry : 0/0
  3771 ;;		On exit  : 0/0
  3772 ;;		Unchanged: 0/0
  3773 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3774 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3775 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3776 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3777 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3778 ;;Total ram usage:        7 bytes
  3779 ;; Hardware stack levels used: 1
  3780 ;; Hardware stack levels required when called: 2
  3781 ;; This function calls:
  3782 ;;		_Lcd_Chr_CP
  3783 ;;		_Lcd_Cmd
  3784 ;; This function is called by:
  3785 ;;		_main
  3786 ;; This function uses a non-reentrant model
  3787 ;;
  3788                           
  3789     062B                     _Lcd_Out2:	
  3790                           ;psect for function _Lcd_Out2
  3791                           
  3792                           
  3793                           ;incstack = 0
  3794                           ; Regs used in _Lcd_Out2: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3795                           ;Lcd_Out2@y stored from wreg
  3796     062B  00F8               	movwf	Lcd_Out2@y
  3797     062C                     l1811:
  3798                           
  3799                           ;./flex_lcd.h: 115: void Lcd_Out2(unsigned char y, unsigned char x, char *buffer);./flex
      +                          _lcd.h: 116: {;./flex_lcd.h: 117: unsigned char data;;./flex_lcd.h: 118: switch (y)
  3800     062C  2E3D               	goto	l1823
  3801     062D                     l1813:
  3802     062D  0873               	movf	Lcd_Out2@x,w
  3803     062E  3E80               	addlw	128
  3804     062F  00F9               	movwf	Lcd_Out2@data
  3805     0630  2E53               	goto	l1825
  3806     0631                     l1815:
  3807     0631  0873               	movf	Lcd_Out2@x,w
  3808     0632  3EC0               	addlw	192
  3809     0633  00F9               	movwf	Lcd_Out2@data
  3810     0634  2E53               	goto	l1825
  3811     0635                     l1817:
  3812     0635  0873               	movf	Lcd_Out2@x,w
  3813     0636  3E94               	addlw	148
  3814     0637  00F9               	movwf	Lcd_Out2@data
  3815     0638  2E53               	goto	l1825
  3816     0639                     l1819:
  3817     0639  0873               	movf	Lcd_Out2@x,w
  3818     063A  3ED4               	addlw	212
  3819     063B  00F9               	movwf	Lcd_Out2@data
  3820     063C  2E53               	goto	l1825
  3821     063D                     l1823:
  3822     063D  0878               	movf	Lcd_Out2@y,w
  3823     063E  00F6               	movwf	??_Lcd_Out2
  3824     063F  01F7               	clrf	??_Lcd_Out2+1
  3825                           
  3826                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3827                           ; Switch size 1, requested type "simple"
  3828                           ; Number of cases is 1, Range of values is 0 to 0
  3829                           ; switch strategies available:
  3830                           ; Name         Instructions Cycles
  3831                           ; simple_byte            4     3 (average)
  3832                           ; direct_byte            8     6 (fixed)
  3833                           ; jumptable            260     6 (fixed)
  3834                           ;	Chosen strategy is simple_byte
  3835     0640  0877               	movf	??_Lcd_Out2+1,w
  3836     0641  3A00               	xorlw	0	; case 0
  3837     0642  1903               	skipnz
  3838     0643  2E45               	goto	l2041
  3839     0644  2E53               	goto	l1825
  3840     0645                     l2041:
  3841                           
  3842                           ; Switch size 1, requested type "simple"
  3843                           ; Number of cases is 4, Range of values is 1 to 4
  3844                           ; switch strategies available:
  3845                           ; Name         Instructions Cycles
  3846                           ; simple_byte           13     7 (average)
  3847                           ; direct_byte           17     9 (fixed)
  3848                           ; jumptable            263     9 (fixed)
  3849                           ;	Chosen strategy is simple_byte
  3850     0645  0876               	movf	??_Lcd_Out2,w
  3851     0646  3A01               	xorlw	1	; case 1
  3852     0647  1903               	skipnz
  3853     0648  2E2D               	goto	l1813
  3854     0649  3A03               	xorlw	3	; case 2
  3855     064A  1903               	skipnz
  3856     064B  2E31               	goto	l1815
  3857     064C  3A01               	xorlw	1	; case 3
  3858     064D  1903               	skipnz
  3859     064E  2E35               	goto	l1817
  3860     064F  3A07               	xorlw	7	; case 4
  3861     0650  1903               	skipnz
  3862     0651  2E39               	goto	l1819
  3863     0652  2E53               	goto	l1825
  3864     0653                     l1825:
  3865                           
  3866                           ;./flex_lcd.h: 126: Lcd_Cmd(data);
  3867     0653  0879               	movf	Lcd_Out2@data,w
  3868     0654  3183  23F1  3186   	fcall	_Lcd_Cmd
  3869                           
  3870                           ;./flex_lcd.h: 127: while(*buffer)
  3871     0657  2E64               	goto	l1831
  3872     0658                     l1827:
  3873                           
  3874                           ;./flex_lcd.h: 128: {;./flex_lcd.h: 129:     Lcd_Chr_CP(*buffer);
  3875     0658  0874               	movf	Lcd_Out2@buffer,w
  3876     0659  0084               	movwf	4
  3877     065A  0875               	movf	Lcd_Out2@buffer+1,w
  3878     065B  0085               	movwf	5
  3879     065C  0800               	movf	0,w	;code access
  3880     065D  3183  235B  3186   	fcall	_Lcd_Chr_CP
  3881     0660                     l1829:
  3882                           
  3883                           ;./flex_lcd.h: 130:     buffer++;
  3884     0660  3001               	movlw	1
  3885     0661  07F4               	addwf	Lcd_Out2@buffer,f
  3886     0662  3000               	movlw	0
  3887     0663  3DF5               	addwfc	Lcd_Out2@buffer+1,f
  3888     0664                     l1831:
  3889                           
  3890                           ;./flex_lcd.h: 127: while(*buffer)
  3891     0664  0874               	movf	Lcd_Out2@buffer,w
  3892     0665  0084               	movwf	4
  3893     0666  0875               	movf	Lcd_Out2@buffer+1,w
  3894     0667  0085               	movwf	5
  3895     0668  0012               	moviw fsr0++
  3896     0669  1D03               	btfss	3,2
  3897     066A  2E6C               	goto	u1481
  3898     066B  2E6D               	goto	u1480
  3899     066C                     u1481:
  3900     066C  2E58               	goto	l1827
  3901     066D                     u1480:
  3902     066D                     l95:
  3903     066D  0008               	return
  3904     066E                     __end_of_Lcd_Out2:
  3905                           
  3906                           	psect	text19
  3907     066E                     __ptext19:	
  3908 ;; *************** function _Lcd_Out *****************
  3909 ;; Defined at:
  3910 ;;		line 94 in file "./flex_lcd.h"
  3911 ;; Parameters:    Size  Location     Type
  3912 ;;  y               1    wreg     unsigned char 
  3913 ;;  x               1    3[COMMON] unsigned char 
  3914 ;;  buffer          2    4[COMMON] PTR const unsigned char 
  3915 ;;		 -> STR_5(7), STR_4(11), 
  3916 ;; Auto vars:     Size  Location     Type
  3917 ;;  y               1    8[COMMON] unsigned char 
  3918 ;;  data            1    9[COMMON] unsigned char 
  3919 ;; Return value:  Size  Location     Type
  3920 ;;                  1    wreg      void 
  3921 ;; Registers used:
  3922 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3923 ;; Tracked objects:
  3924 ;;		On entry : 0/0
  3925 ;;		On exit  : 0/0
  3926 ;;		Unchanged: 0/0
  3927 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3928 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3929 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3930 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3931 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3932 ;;Total ram usage:        7 bytes
  3933 ;; Hardware stack levels used: 1
  3934 ;; Hardware stack levels required when called: 2
  3935 ;; This function calls:
  3936 ;;		_Lcd_Chr_CP
  3937 ;;		_Lcd_Cmd
  3938 ;; This function is called by:
  3939 ;;		_main
  3940 ;; This function uses a non-reentrant model
  3941 ;;
  3942                           
  3943     066E                     _Lcd_Out:	
  3944                           ;psect for function _Lcd_Out
  3945                           
  3946                           
  3947                           ;incstack = 0
  3948                           ; Regs used in _Lcd_Out: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3949                           ;Lcd_Out@y stored from wreg
  3950     066E  00F8               	movwf	Lcd_Out@y
  3951     066F                     l1785:
  3952                           
  3953                           ;./flex_lcd.h: 94: void Lcd_Out(unsigned char y, unsigned char x, const char *buffer);./
      +                          flex_lcd.h: 95: {;./flex_lcd.h: 96: unsigned char data;;./flex_lcd.h: 97: switch (y)
  3954     066F  2E80               	goto	l1797
  3955     0670                     l1787:
  3956     0670  0873               	movf	Lcd_Out@x,w
  3957     0671  3E80               	addlw	128
  3958     0672  00F9               	movwf	Lcd_Out@data
  3959     0673  2E96               	goto	l1799
  3960     0674                     l1789:
  3961     0674  0873               	movf	Lcd_Out@x,w
  3962     0675  3EC0               	addlw	192
  3963     0676  00F9               	movwf	Lcd_Out@data
  3964     0677  2E96               	goto	l1799
  3965     0678                     l1791:
  3966     0678  0873               	movf	Lcd_Out@x,w
  3967     0679  3E94               	addlw	148
  3968     067A  00F9               	movwf	Lcd_Out@data
  3969     067B  2E96               	goto	l1799
  3970     067C                     l1793:
  3971     067C  0873               	movf	Lcd_Out@x,w
  3972     067D  3ED4               	addlw	212
  3973     067E  00F9               	movwf	Lcd_Out@data
  3974     067F  2E96               	goto	l1799
  3975     0680                     l1797:
  3976     0680  0878               	movf	Lcd_Out@y,w
  3977     0681  00F6               	movwf	??_Lcd_Out
  3978     0682  01F7               	clrf	??_Lcd_Out+1
  3979                           
  3980                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3981                           ; Switch size 1, requested type "simple"
  3982                           ; Number of cases is 1, Range of values is 0 to 0
  3983                           ; switch strategies available:
  3984                           ; Name         Instructions Cycles
  3985                           ; simple_byte            4     3 (average)
  3986                           ; direct_byte            8     6 (fixed)
  3987                           ; jumptable            260     6 (fixed)
  3988                           ;	Chosen strategy is simple_byte
  3989     0683  0877               	movf	??_Lcd_Out+1,w
  3990     0684  3A00               	xorlw	0	; case 0
  3991     0685  1903               	skipnz
  3992     0686  2E88               	goto	l2043
  3993     0687  2E96               	goto	l1799
  3994     0688                     l2043:
  3995                           
  3996                           ; Switch size 1, requested type "simple"
  3997                           ; Number of cases is 4, Range of values is 1 to 4
  3998                           ; switch strategies available:
  3999                           ; Name         Instructions Cycles
  4000                           ; simple_byte           13     7 (average)
  4001                           ; direct_byte           17     9 (fixed)
  4002                           ; jumptable            263     9 (fixed)
  4003                           ;	Chosen strategy is simple_byte
  4004     0688  0876               	movf	??_Lcd_Out,w
  4005     0689  3A01               	xorlw	1	; case 1
  4006     068A  1903               	skipnz
  4007     068B  2E70               	goto	l1787
  4008     068C  3A03               	xorlw	3	; case 2
  4009     068D  1903               	skipnz
  4010     068E  2E74               	goto	l1789
  4011     068F  3A01               	xorlw	1	; case 3
  4012     0690  1903               	skipnz
  4013     0691  2E78               	goto	l1791
  4014     0692  3A07               	xorlw	7	; case 4
  4015     0693  1903               	skipnz
  4016     0694  2E7C               	goto	l1793
  4017     0695  2E96               	goto	l1799
  4018     0696                     l1799:
  4019                           
  4020                           ;./flex_lcd.h: 105: Lcd_Cmd(data);
  4021     0696  0879               	movf	Lcd_Out@data,w
  4022     0697  3183  23F1  3186   	fcall	_Lcd_Cmd
  4023                           
  4024                           ;./flex_lcd.h: 106: while(*buffer)
  4025     069A  2EA7               	goto	l1805
  4026     069B                     l1801:
  4027                           
  4028                           ;./flex_lcd.h: 107: {;./flex_lcd.h: 108:     Lcd_Chr_CP(*buffer);
  4029     069B  0874               	movf	Lcd_Out@buffer,w
  4030     069C  0084               	movwf	4
  4031     069D  0875               	movf	Lcd_Out@buffer+1,w
  4032     069E  0085               	movwf	5
  4033     069F  0800               	movf	0,w	;code access
  4034     06A0  3183  235B  3186   	fcall	_Lcd_Chr_CP
  4035     06A3                     l1803:
  4036                           
  4037                           ;./flex_lcd.h: 109:     buffer++;
  4038     06A3  3001               	movlw	1
  4039     06A4  07F4               	addwf	Lcd_Out@buffer,f
  4040     06A5  3000               	movlw	0
  4041     06A6  3DF5               	addwfc	Lcd_Out@buffer+1,f
  4042     06A7                     l1805:
  4043                           
  4044                           ;./flex_lcd.h: 106: while(*buffer)
  4045     06A7  0874               	movf	Lcd_Out@buffer,w
  4046     06A8  0084               	movwf	4
  4047     06A9  0875               	movf	Lcd_Out@buffer+1,w
  4048     06AA  0085               	movwf	5
  4049     06AB  0012               	moviw fsr0++
  4050     06AC  1D03               	btfss	3,2
  4051     06AD  2EAF               	goto	u1471
  4052     06AE  2EB0               	goto	u1470
  4053     06AF                     u1471:
  4054     06AF  2E9B               	goto	l1801
  4055     06B0                     u1470:
  4056     06B0                     l82:
  4057     06B0  0008               	return
  4058     06B1                     __end_of_Lcd_Out:
  4059                           
  4060                           	psect	text20
  4061     035B                     __ptext20:	
  4062 ;; *************** function _Lcd_Chr_CP *****************
  4063 ;; Defined at:
  4064 ;;		line 136 in file "./flex_lcd.h"
  4065 ;; Parameters:    Size  Location     Type
  4066 ;;  data            1    wreg     unsigned char 
  4067 ;; Auto vars:     Size  Location     Type
  4068 ;;  data            1    2[COMMON] unsigned char 
  4069 ;; Return value:  Size  Location     Type
  4070 ;;                  1    wreg      void 
  4071 ;; Registers used:
  4072 ;;		wreg, status,2, status,0
  4073 ;; Tracked objects:
  4074 ;;		On entry : 0/0
  4075 ;;		On exit  : 0/0
  4076 ;;		Unchanged: 0/0
  4077 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4078 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4079 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4080 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4081 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4082 ;;Total ram usage:        3 bytes
  4083 ;; Hardware stack levels used: 1
  4084 ;; Hardware stack levels required when called: 1
  4085 ;; This function calls:
  4086 ;;		Nothing
  4087 ;; This function is called by:
  4088 ;;		_Lcd_Out
  4089 ;;		_Lcd_Out2
  4090 ;; This function uses a non-reentrant model
  4091 ;;
  4092                           
  4093     035B                     _Lcd_Chr_CP:	
  4094                           ;psect for function _Lcd_Chr_CP
  4095                           
  4096                           
  4097                           ;incstack = 0
  4098                           ; Regs used in _Lcd_Chr_CP: [wreg+status,2+status,0]
  4099                           ;Lcd_Chr_CP@data stored from wreg
  4100     035B  00F2               	movwf	Lcd_Chr_CP@data
  4101     035C                     l1717:
  4102                           
  4103                           ;./flex_lcd.h: 137: PORTCbits.RC4 = 0; PORTCbits.RC5 = 1;
  4104     035C  0020               	movlb	0	; select bank0
  4105     035D  120E               	bcf	14,4	;volatile
  4106     035E  168E               	bsf	14,5	;volatile
  4107     035F                     l1719:
  4108                           
  4109                           ;./flex_lcd.h: 138: PORTCbits.RC0 = (data & 0b10000000)>>7; PORTCbits.RC1 = (data & 0b01
      +                          000000)>>6;
  4110     035F  0872               	movf	Lcd_Chr_CP@data,w
  4111     0360  00F0               	movwf	??_Lcd_Chr_CP
  4112     0361  3007               	movlw	7
  4113     0362                     u1395:
  4114     0362  36F0               	lsrf	??_Lcd_Chr_CP,f
  4115     0363  0B89               	decfsz	9,f
  4116     0364  2B62               	goto	u1395
  4117     0365  3001               	movlw	1
  4118     0366  0570               	andwf	??_Lcd_Chr_CP,w
  4119     0367  00F1               	movwf	??_Lcd_Chr_CP+1
  4120     0368  080E               	movf	14,w	;volatile
  4121     0369  0671               	xorwf	??_Lcd_Chr_CP+1,w
  4122     036A  39FE               	andlw	-2
  4123     036B  0671               	xorwf	??_Lcd_Chr_CP+1,w
  4124     036C  008E               	movwf	14	;volatile
  4125     036D  0872               	movf	Lcd_Chr_CP@data,w
  4126     036E  00F0               	movwf	??_Lcd_Chr_CP
  4127     036F  3006               	movlw	6
  4128     0370                     u1405:
  4129     0370  36F0               	lsrf	??_Lcd_Chr_CP,f
  4130     0371  0B89               	decfsz	9,f
  4131     0372  2B70               	goto	u1405
  4132     0373  0870               	movf	??_Lcd_Chr_CP,w
  4133     0374  3901               	andlw	1
  4134     0375  00F1               	movwf	??_Lcd_Chr_CP+1
  4135     0376  0DF1               	rlf	??_Lcd_Chr_CP+1,f
  4136     0377  080E               	movf	14,w	;volatile
  4137     0378  0671               	xorwf	??_Lcd_Chr_CP+1,w
  4138     0379  39FD               	andlw	-3
  4139     037A  0671               	xorwf	??_Lcd_Chr_CP+1,w
  4140     037B  008E               	movwf	14	;volatile
  4141                           
  4142                           ;./flex_lcd.h: 139: PORTCbits.RC2 = (data & 0b00100000)>>5; PORTCbits.RC3 = (data & 0b00
      +                          010000)>>4;
  4143     037C  0872               	movf	Lcd_Chr_CP@data,w
  4144     037D  00F0               	movwf	??_Lcd_Chr_CP
  4145     037E  3005               	movlw	5
  4146     037F                     u1415:
  4147     037F  36F0               	lsrf	??_Lcd_Chr_CP,f
  4148     0380  0B89               	decfsz	9,f
  4149     0381  2B7F               	goto	u1415
  4150     0382  0870               	movf	??_Lcd_Chr_CP,w
  4151     0383  3901               	andlw	1
  4152     0384  00F1               	movwf	??_Lcd_Chr_CP+1
  4153     0385  0DF1               	rlf	??_Lcd_Chr_CP+1,f
  4154     0386  0DF1               	rlf	??_Lcd_Chr_CP+1,f
  4155     0387  080E               	movf	14,w	;volatile
  4156     0388  0671               	xorwf	??_Lcd_Chr_CP+1,w
  4157     0389  39FB               	andlw	-5
  4158     038A  0671               	xorwf	??_Lcd_Chr_CP+1,w
  4159     038B  008E               	movwf	14	;volatile
  4160     038C  0872               	movf	Lcd_Chr_CP@data,w
  4161     038D  00F0               	movwf	??_Lcd_Chr_CP
  4162     038E  3004               	movlw	4
  4163     038F                     u1425:
  4164     038F  36F0               	lsrf	??_Lcd_Chr_CP,f
  4165     0390  0B89               	decfsz	9,f
  4166     0391  2B8F               	goto	u1425
  4167     0392  0870               	movf	??_Lcd_Chr_CP,w
  4168     0393  3901               	andlw	1
  4169     0394  00F1               	movwf	??_Lcd_Chr_CP+1
  4170     0395  0DF1               	rlf	??_Lcd_Chr_CP+1,f
  4171     0396  0DF1               	rlf	??_Lcd_Chr_CP+1,f
  4172     0397  0DF1               	rlf	??_Lcd_Chr_CP+1,f
  4173     0398  080E               	movf	14,w	;volatile
  4174     0399  0671               	xorwf	??_Lcd_Chr_CP+1,w
  4175     039A  39F7               	andlw	-9
  4176     039B  0671               	xorwf	??_Lcd_Chr_CP+1,w
  4177     039C  008E               	movwf	14	;volatile
  4178     039D                     l1721:
  4179                           
  4180                           ;./flex_lcd.h: 140: _delay(10);
  4181     039D  3003               	movlw	3
  4182     039E                     u1637:
  4183     039E  0B89               	decfsz	9,f
  4184     039F  2B9E               	goto	u1637
  4185     03A0  0000               	nop
  4186     03A1                     l1723:
  4187                           
  4188                           ;./flex_lcd.h: 141: PORTCbits.RC4 = 1; _delay((unsigned long)((5)*(4000000/4000000.0)));
      +                           PORTCbits.RC4 = 0;
  4189     03A1  0020               	movlb	0	; select bank0
  4190     03A2  160E               	bsf	14,4	;volatile
  4191     03A3                     l1725:
  4192     03A3  3200               	nop2	;2 cycle nop
  4193     03A4  3200               	nop2	;2 cycle nop
  4194     03A5  0000               	nop
  4195     03A6                     l1727:
  4196     03A6  0020               	movlb	0	; select bank0
  4197     03A7  120E               	bcf	14,4	;volatile
  4198     03A8                     l1729:
  4199                           
  4200                           ;./flex_lcd.h: 142: PORTCbits.RC0 = (data & 0b00001000)>>3; PORTCbits.RC1 = (data & 0b00
      +                          000100)>>2;
  4201     03A8  0872               	movf	Lcd_Chr_CP@data,w
  4202     03A9  00F0               	movwf	??_Lcd_Chr_CP
  4203     03AA  3003               	movlw	3
  4204     03AB                     u1435:
  4205     03AB  36F0               	lsrf	??_Lcd_Chr_CP,f
  4206     03AC  0B89               	decfsz	9,f
  4207     03AD  2BAB               	goto	u1435
  4208     03AE  3001               	movlw	1
  4209     03AF  0570               	andwf	??_Lcd_Chr_CP,w
  4210     03B0  00F1               	movwf	??_Lcd_Chr_CP+1
  4211     03B1  080E               	movf	14,w	;volatile
  4212     03B2  0671               	xorwf	??_Lcd_Chr_CP+1,w
  4213     03B3  39FE               	andlw	-2
  4214     03B4  0671               	xorwf	??_Lcd_Chr_CP+1,w
  4215     03B5  008E               	movwf	14	;volatile
  4216     03B6                     l1731:
  4217     03B6  0872               	movf	Lcd_Chr_CP@data,w
  4218     03B7  00F0               	movwf	??_Lcd_Chr_CP
  4219     03B8  3002               	movlw	2
  4220     03B9                     u1445:
  4221     03B9  36F0               	lsrf	??_Lcd_Chr_CP,f
  4222     03BA  0B89               	decfsz	9,f
  4223     03BB  2BB9               	goto	u1445
  4224     03BC  0870               	movf	??_Lcd_Chr_CP,w
  4225     03BD  3901               	andlw	1
  4226     03BE  00F1               	movwf	??_Lcd_Chr_CP+1
  4227     03BF  0DF1               	rlf	??_Lcd_Chr_CP+1,f
  4228     03C0  080E               	movf	14,w	;volatile
  4229     03C1  0671               	xorwf	??_Lcd_Chr_CP+1,w
  4230     03C2  39FD               	andlw	-3
  4231     03C3  0671               	xorwf	??_Lcd_Chr_CP+1,w
  4232     03C4  008E               	movwf	14	;volatile
  4233     03C5                     l1733:
  4234                           
  4235                           ;./flex_lcd.h: 143: PORTCbits.RC2 = (data & 0b00000010)>>1; PORTCbits.RC3 = (data & 0b00
      +                          000001);
  4236     03C5  3672               	lsrf	Lcd_Chr_CP@data,w
  4237     03C6  3901               	andlw	1
  4238     03C7  00F0               	movwf	??_Lcd_Chr_CP
  4239     03C8  0DF0               	rlf	??_Lcd_Chr_CP,f
  4240     03C9  0DF0               	rlf	??_Lcd_Chr_CP,f
  4241     03CA  080E               	movf	14,w	;volatile
  4242     03CB  0670               	xorwf	??_Lcd_Chr_CP,w
  4243     03CC  39FB               	andlw	-5
  4244     03CD  0670               	xorwf	??_Lcd_Chr_CP,w
  4245     03CE  008E               	movwf	14	;volatile
  4246     03CF                     l1735:
  4247     03CF  0872               	movf	Lcd_Chr_CP@data,w
  4248     03D0  3901               	andlw	1
  4249     03D1  00F0               	movwf	??_Lcd_Chr_CP
  4250     03D2  0DF0               	rlf	??_Lcd_Chr_CP,f
  4251     03D3  0DF0               	rlf	??_Lcd_Chr_CP,f
  4252     03D4  0DF0               	rlf	??_Lcd_Chr_CP,f
  4253     03D5  080E               	movf	14,w	;volatile
  4254     03D6  0670               	xorwf	??_Lcd_Chr_CP,w
  4255     03D7  39F7               	andlw	-9
  4256     03D8  0670               	xorwf	??_Lcd_Chr_CP,w
  4257     03D9  008E               	movwf	14	;volatile
  4258     03DA                     l1737:
  4259                           
  4260                           ;./flex_lcd.h: 144: _delay(10);
  4261     03DA  3003               	movlw	3
  4262     03DB                     u1647:
  4263     03DB  0B89               	decfsz	9,f
  4264     03DC  2BDB               	goto	u1647
  4265     03DD  0000               	nop
  4266     03DE                     l1739:
  4267                           
  4268                           ;./flex_lcd.h: 145: PORTCbits.RC4 = 1; _delay((unsigned long)((5)*(4000000/4000000.0)));
      +                           PORTCbits.RC4 = 0;
  4269     03DE  0020               	movlb	0	; select bank0
  4270     03DF  160E               	bsf	14,4	;volatile
  4271     03E0                     l1741:
  4272     03E0  3200               	nop2	;2 cycle nop
  4273     03E1  3200               	nop2	;2 cycle nop
  4274     03E2  0000               	nop
  4275     03E3                     l1743:
  4276     03E3  0020               	movlb	0	; select bank0
  4277     03E4  120E               	bcf	14,4	;volatile
  4278     03E5                     l1745:
  4279                           
  4280                           ;./flex_lcd.h: 146: _delay((unsigned long)((5)*(4000000/4000000.0))); _delay((unsigned l
      +                          ong)((5500)*(4000000/4000000.0)));
  4281     03E5  3200               	nop2	;2 cycle nop
  4282     03E6  3200               	nop2	;2 cycle nop
  4283     03E7  0000               	nop
  4284     03E8                     l1747:
  4285     03E8  3008               	movlw	8
  4286     03E9  00F0               	movwf	??_Lcd_Chr_CP
  4287     03EA  3023               	movlw	35
  4288     03EB                     u1657:
  4289     03EB  0B89               	decfsz	9,f
  4290     03EC  2BEB               	goto	u1657
  4291     03ED  0BF0               	decfsz	??_Lcd_Chr_CP,f
  4292     03EE  2BEB               	goto	u1657
  4293     03EF  0000               	nop
  4294     03F0                     l98:
  4295     03F0  0008               	return
  4296     03F1                     __end_of_Lcd_Chr_CP:
  4297                           
  4298                           	psect	text21
  4299     02C2                     __ptext21:	
  4300 ;; *************** function _Lcd_Init *****************
  4301 ;; Defined at:
  4302 ;;		line 52 in file "./flex_lcd.h"
  4303 ;; Parameters:    Size  Location     Type
  4304 ;;		None
  4305 ;; Auto vars:     Size  Location     Type
  4306 ;;  data            1    4[COMMON] unsigned char 
  4307 ;; Return value:  Size  Location     Type
  4308 ;;                  1    wreg      void 
  4309 ;; Registers used:
  4310 ;;		wreg, status,2, status,0, pclath, cstack
  4311 ;; Tracked objects:
  4312 ;;		On entry : 0/0
  4313 ;;		On exit  : 0/0
  4314 ;;		Unchanged: 0/0
  4315 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4316 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4317 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4318 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4319 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4320 ;;Total ram usage:        2 bytes
  4321 ;; Hardware stack levels used: 1
  4322 ;; Hardware stack levels required when called: 2
  4323 ;; This function calls:
  4324 ;;		_Lcd_Cmd
  4325 ;; This function is called by:
  4326 ;;		_main
  4327 ;; This function uses a non-reentrant model
  4328 ;;
  4329                           
  4330     02C2                     _Lcd_Init:	
  4331                           ;psect for function _Lcd_Init
  4332                           
  4333     02C2                     l1759:	
  4334                           ;incstack = 0
  4335                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  4336                           
  4337                           
  4338                           ;./flex_lcd.h: 53: unsigned char data;;./flex_lcd.h: 54: TRISCbits.TRISC0 = 0;
  4339     02C2  0021               	movlb	1	; select bank1
  4340     02C3  100E               	bcf	14,0	;volatile
  4341                           
  4342                           ;./flex_lcd.h: 55: TRISCbits.TRISC1 = 0;
  4343     02C4  108E               	bcf	14,1	;volatile
  4344                           
  4345                           ;./flex_lcd.h: 56: TRISCbits.TRISC2 = 0;
  4346     02C5  110E               	bcf	14,2	;volatile
  4347                           
  4348                           ;./flex_lcd.h: 57: TRISCbits.TRISC3 = 0;
  4349     02C6  118E               	bcf	14,3	;volatile
  4350                           
  4351                           ;./flex_lcd.h: 58: TRISCbits.TRISC4 = 0;
  4352     02C7  120E               	bcf	14,4	;volatile
  4353                           
  4354                           ;./flex_lcd.h: 59: TRISCbits.TRISC5 = 0;
  4355     02C8  128E               	bcf	14,5	;volatile
  4356                           
  4357                           ;./flex_lcd.h: 60: PORTCbits.RC0 = 0;
  4358     02C9  0020               	movlb	0	; select bank0
  4359     02CA  100E               	bcf	14,0	;volatile
  4360                           
  4361                           ;./flex_lcd.h: 61: PORTCbits.RC1 = 0;
  4362     02CB  108E               	bcf	14,1	;volatile
  4363                           
  4364                           ;./flex_lcd.h: 62: PORTCbits.RC2 = 0;
  4365     02CC  110E               	bcf	14,2	;volatile
  4366                           
  4367                           ;./flex_lcd.h: 63: PORTCbits.RC3 = 0;
  4368     02CD  118E               	bcf	14,3	;volatile
  4369                           
  4370                           ;./flex_lcd.h: 64: PORTCbits.RC4 = 0;
  4371     02CE  120E               	bcf	14,4	;volatile
  4372                           
  4373                           ;./flex_lcd.h: 65: PORTCbits.RC5 = 0;
  4374     02CF  128E               	bcf	14,5	;volatile
  4375     02D0                     l1761:
  4376                           
  4377                           ;./flex_lcd.h: 66: _delay((unsigned long)((5500)*(4000000/4000000.0)));
  4378     02D0  3008               	movlw	8
  4379     02D1  00F3               	movwf	??_Lcd_Init
  4380     02D2  3023               	movlw	35
  4381     02D3                     u1667:
  4382     02D3  0B89               	decfsz	9,f
  4383     02D4  2AD3               	goto	u1667
  4384     02D5  0BF3               	decfsz	??_Lcd_Init,f
  4385     02D6  2AD3               	goto	u1667
  4386     02D7  0000               	nop
  4387                           
  4388                           ;./flex_lcd.h: 67: _delay((unsigned long)((5500)*(4000000/4000000.0)));
  4389     02D8  3008               	movlw	8
  4390     02D9  00F3               	movwf	??_Lcd_Init
  4391     02DA  3023               	movlw	35
  4392     02DB                     u1677:
  4393     02DB  0B89               	decfsz	9,f
  4394     02DC  2ADB               	goto	u1677
  4395     02DD  0BF3               	decfsz	??_Lcd_Init,f
  4396     02DE  2ADB               	goto	u1677
  4397     02DF  0000               	nop
  4398                           
  4399                           ;./flex_lcd.h: 68: _delay((unsigned long)((5500)*(4000000/4000000.0)));
  4400     02E0  3008               	movlw	8
  4401     02E1  00F3               	movwf	??_Lcd_Init
  4402     02E2  3023               	movlw	35
  4403     02E3                     u1687:
  4404     02E3  0B89               	decfsz	9,f
  4405     02E4  2AE3               	goto	u1687
  4406     02E5  0BF3               	decfsz	??_Lcd_Init,f
  4407     02E6  2AE3               	goto	u1687
  4408     02E7  0000               	nop
  4409                           
  4410                           ;./flex_lcd.h: 69: _delay((unsigned long)((5500)*(4000000/4000000.0)));
  4411     02E8  3008               	movlw	8
  4412     02E9  00F3               	movwf	??_Lcd_Init
  4413     02EA  3023               	movlw	35
  4414     02EB                     u1697:
  4415     02EB  0B89               	decfsz	9,f
  4416     02EC  2AEB               	goto	u1697
  4417     02ED  0BF3               	decfsz	??_Lcd_Init,f
  4418     02EE  2AEB               	goto	u1697
  4419     02EF  0000               	nop
  4420                           
  4421                           ;./flex_lcd.h: 70: _delay((unsigned long)((5500)*(4000000/4000000.0)));
  4422     02F0  3008               	movlw	8
  4423     02F1  00F3               	movwf	??_Lcd_Init
  4424     02F2  3023               	movlw	35
  4425     02F3                     u1707:
  4426     02F3  0B89               	decfsz	9,f
  4427     02F4  2AF3               	goto	u1707
  4428     02F5  0BF3               	decfsz	??_Lcd_Init,f
  4429     02F6  2AF3               	goto	u1707
  4430     02F7  0000               	nop
  4431                           
  4432                           ;./flex_lcd.h: 71: _delay((unsigned long)((5500)*(4000000/4000000.0)));
  4433     02F8  3008               	movlw	8
  4434     02F9  00F3               	movwf	??_Lcd_Init
  4435     02FA  3023               	movlw	35
  4436     02FB                     u1717:
  4437     02FB  0B89               	decfsz	9,f
  4438     02FC  2AFB               	goto	u1717
  4439     02FD  0BF3               	decfsz	??_Lcd_Init,f
  4440     02FE  2AFB               	goto	u1717
  4441     02FF  0000               	nop
  4442     0300                     l1763:
  4443                           
  4444                           ;./flex_lcd.h: 72: for(data = 1; data < 4; data ++)
  4445     0300  01F4               	clrf	Lcd_Init@data
  4446     0301  0AF4               	incf	Lcd_Init@data,f
  4447     0302                     l67:
  4448                           
  4449                           ;./flex_lcd.h: 73: {;./flex_lcd.h: 74:     PORTCbits.RC0 = 0; PORTCbits.RC1 = 0; PORTCbi
      +                          ts.RC2 = 1; PORTCbits.RC3 = 1; PORTCbits.RC4 = 0;
  4450     0302  0020               	movlb	0	; select bank0
  4451     0303  100E               	bcf	14,0	;volatile
  4452     0304  108E               	bcf	14,1	;volatile
  4453     0305  150E               	bsf	14,2	;volatile
  4454     0306  158E               	bsf	14,3	;volatile
  4455     0307  120E               	bcf	14,4	;volatile
  4456                           
  4457                           ;./flex_lcd.h: 75:     PORTCbits.RC5 = 0; PORTCbits.RC0 = 0; PORTCbits.RC1 = 0; PORTCbit
      +                          s.RC2 = 1; PORTCbits.RC3 = 1;
  4458     0308  128E               	bcf	14,5	;volatile
  4459     0309  100E               	bcf	14,0	;volatile
  4460     030A  108E               	bcf	14,1	;volatile
  4461     030B  150E               	bsf	14,2	;volatile
  4462     030C  158E               	bsf	14,3	;volatile
  4463                           
  4464                           ;./flex_lcd.h: 76:     PORTCbits.RC4 = 1; PORTCbits.RC5 = 0;
  4465     030D  160E               	bsf	14,4	;volatile
  4466     030E  128E               	bcf	14,5	;volatile
  4467                           
  4468                           ;./flex_lcd.h: 77:     _delay((unsigned long)((5)*(4000000/4000000.0)));
  4469     030F  3200               	nop2	;2 cycle nop
  4470     0310  3200               	nop2	;2 cycle nop
  4471     0311  0000               	nop
  4472                           
  4473                           ;./flex_lcd.h: 78:     PORTCbits.RC0 = 0; PORTCbits.RC1 = 0; PORTCbits.RC2 = 1; PORTCbit
      +                          s.RC3 = 1; PORTCbits.RC4 = 0;
  4474     0312  0020               	movlb	0	; select bank0
  4475     0313  100E               	bcf	14,0	;volatile
  4476     0314  108E               	bcf	14,1	;volatile
  4477     0315  150E               	bsf	14,2	;volatile
  4478     0316  158E               	bsf	14,3	;volatile
  4479     0317  120E               	bcf	14,4	;volatile
  4480                           
  4481                           ;./flex_lcd.h: 79:     PORTCbits.RC5 = 0;
  4482     0318  128E               	bcf	14,5	;volatile
  4483     0319                     l1767:
  4484                           
  4485                           ;./flex_lcd.h: 80:     _delay((unsigned long)((5500)*(4000000/4000000.0)));
  4486     0319  3008               	movlw	8
  4487     031A  00F3               	movwf	??_Lcd_Init
  4488     031B  3023               	movlw	35
  4489     031C                     u1727:
  4490     031C  0B89               	decfsz	9,f
  4491     031D  2B1C               	goto	u1727
  4492     031E  0BF3               	decfsz	??_Lcd_Init,f
  4493     031F  2B1C               	goto	u1727
  4494     0320  0000               	nop
  4495     0321                     l1769:
  4496                           
  4497                           ;./flex_lcd.h: 81: }
  4498     0321  3001               	movlw	1
  4499     0322  00F3               	movwf	??_Lcd_Init
  4500     0323  0873               	movf	??_Lcd_Init,w
  4501     0324  07F4               	addwf	Lcd_Init@data,f
  4502     0325                     l1771:
  4503     0325  3004               	movlw	4
  4504     0326  0274               	subwf	Lcd_Init@data,w
  4505     0327  1C03               	skipc
  4506     0328  2B2A               	goto	u1461
  4507     0329  2B2B               	goto	u1460
  4508     032A                     u1461:
  4509     032A  2B02               	goto	l67
  4510     032B                     u1460:
  4511     032B                     l68:
  4512                           
  4513                           ;./flex_lcd.h: 82: PORTCbits.RC0 = 0; PORTCbits.RC1 = 0; PORTCbits.RC2 = 1; PORTCbits.RC
      +                          3 = 0; PORTCbits.RC4 = 0; PORTCbits.RC5 = 0;
  4514     032B  0020               	movlb	0	; select bank0
  4515     032C  100E               	bcf	14,0	;volatile
  4516     032D  108E               	bcf	14,1	;volatile
  4517     032E  150E               	bsf	14,2	;volatile
  4518     032F  118E               	bcf	14,3	;volatile
  4519     0330  120E               	bcf	14,4	;volatile
  4520     0331  128E               	bcf	14,5	;volatile
  4521                           
  4522                           ;./flex_lcd.h: 83: PORTCbits.RC0 = 0; PORTCbits.RC1 = 0; PORTCbits.RC2 = 1; PORTCbits.RC
      +                          3 = 0; PORTCbits.RC4 = 1; PORTCbits.RC5 = 0;
  4523     0332  100E               	bcf	14,0	;volatile
  4524     0333  108E               	bcf	14,1	;volatile
  4525     0334  150E               	bsf	14,2	;volatile
  4526     0335  118E               	bcf	14,3	;volatile
  4527     0336  160E               	bsf	14,4	;volatile
  4528     0337  128E               	bcf	14,5	;volatile
  4529                           
  4530                           ;./flex_lcd.h: 84: _delay((unsigned long)((5)*(4000000/4000000.0)));
  4531     0338  3200               	nop2	;2 cycle nop
  4532     0339  3200               	nop2	;2 cycle nop
  4533     033A  0000               	nop
  4534                           
  4535                           ;./flex_lcd.h: 85: PORTCbits.RC0 = 0; PORTCbits.RC1 = 0; PORTCbits.RC2 = 1; PORTCbits.RC
      +                          3 = 0; PORTCbits.RC4 = 0; PORTCbits.RC5 = 0;
  4536     033B  0020               	movlb	0	; select bank0
  4537     033C  100E               	bcf	14,0	;volatile
  4538     033D  108E               	bcf	14,1	;volatile
  4539     033E  150E               	bsf	14,2	;volatile
  4540     033F  118E               	bcf	14,3	;volatile
  4541     0340  120E               	bcf	14,4	;volatile
  4542     0341  128E               	bcf	14,5	;volatile
  4543     0342                     l1773:
  4544                           
  4545                           ;./flex_lcd.h: 86: _delay((unsigned long)((5500)*(4000000/4000000.0)));
  4546     0342  3008               	movlw	8
  4547     0343  00F3               	movwf	??_Lcd_Init
  4548     0344  3023               	movlw	35
  4549     0345                     u1737:
  4550     0345  0B89               	decfsz	9,f
  4551     0346  2B45               	goto	u1737
  4552     0347  0BF3               	decfsz	??_Lcd_Init,f
  4553     0348  2B45               	goto	u1737
  4554     0349  0000               	nop
  4555     034A                     l1775:
  4556     034A  3028               	movlw	40
  4557     034B  3183  23F1  3182   	fcall	_Lcd_Cmd
  4558     034E                     l1777:
  4559     034E  3010               	movlw	16
  4560     034F  3183  23F1  3182   	fcall	_Lcd_Cmd
  4561     0352                     l1779:
  4562     0352  3001               	movlw	1
  4563     0353  3183  23F1  3182   	fcall	_Lcd_Cmd
  4564     0356                     l1781:
  4565     0356                     l1783:
  4566     0356  300F               	movlw	15
  4567     0357  3183  23F1  3182   	fcall	_Lcd_Cmd
  4568     035A                     l69:
  4569     035A  0008               	return
  4570     035B                     __end_of_Lcd_Init:
  4571                           
  4572                           	psect	text22
  4573     03F1                     __ptext22:	
  4574 ;; *************** function _Lcd_Cmd *****************
  4575 ;; Defined at:
  4576 ;;		line 150 in file "./flex_lcd.h"
  4577 ;; Parameters:    Size  Location     Type
  4578 ;;  data            1    wreg     unsigned char 
  4579 ;; Auto vars:     Size  Location     Type
  4580 ;;  data            1    2[COMMON] unsigned char 
  4581 ;; Return value:  Size  Location     Type
  4582 ;;                  1    wreg      void 
  4583 ;; Registers used:
  4584 ;;		wreg, status,2, status,0
  4585 ;; Tracked objects:
  4586 ;;		On entry : 0/0
  4587 ;;		On exit  : 0/0
  4588 ;;		Unchanged: 0/0
  4589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4590 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4591 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4592 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4593 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4594 ;;Total ram usage:        3 bytes
  4595 ;; Hardware stack levels used: 1
  4596 ;; Hardware stack levels required when called: 1
  4597 ;; This function calls:
  4598 ;;		Nothing
  4599 ;; This function is called by:
  4600 ;;		_Lcd_Init
  4601 ;;		_Lcd_Out
  4602 ;;		_Lcd_Out2
  4603 ;;		_main
  4604 ;; This function uses a non-reentrant model
  4605 ;;
  4606                           
  4607     03F1                     _Lcd_Cmd:	
  4608                           ;psect for function _Lcd_Cmd
  4609                           
  4610                           
  4611                           ;incstack = 0
  4612                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0]
  4613                           ;Lcd_Cmd@data stored from wreg
  4614     03F1  00F2               	movwf	Lcd_Cmd@data
  4615     03F2                     l1687:
  4616                           
  4617                           ;./flex_lcd.h: 151: PORTCbits.RC4 = 0; PORTCbits.RC5 = 0;
  4618     03F2  0020               	movlb	0	; select bank0
  4619     03F3  120E               	bcf	14,4	;volatile
  4620     03F4  128E               	bcf	14,5	;volatile
  4621     03F5                     l1689:
  4622                           
  4623                           ;./flex_lcd.h: 152: PORTCbits.RC0 = (data & 0b10000000)>>7; PORTCbits.RC1 = (data & 0b01
      +                          000000)>>6;
  4624     03F5  0872               	movf	Lcd_Cmd@data,w
  4625     03F6  00F0               	movwf	??_Lcd_Cmd
  4626     03F7  3007               	movlw	7
  4627     03F8                     u1335:
  4628     03F8  36F0               	lsrf	??_Lcd_Cmd,f
  4629     03F9  0B89               	decfsz	9,f
  4630     03FA  2BF8               	goto	u1335
  4631     03FB  3001               	movlw	1
  4632     03FC  0570               	andwf	??_Lcd_Cmd,w
  4633     03FD  00F1               	movwf	??_Lcd_Cmd+1
  4634     03FE  080E               	movf	14,w	;volatile
  4635     03FF  0671               	xorwf	??_Lcd_Cmd+1,w
  4636     0400  39FE               	andlw	-2
  4637     0401  0671               	xorwf	??_Lcd_Cmd+1,w
  4638     0402  008E               	movwf	14	;volatile
  4639     0403  0872               	movf	Lcd_Cmd@data,w
  4640     0404  00F0               	movwf	??_Lcd_Cmd
  4641     0405  3006               	movlw	6
  4642     0406                     u1345:
  4643     0406  36F0               	lsrf	??_Lcd_Cmd,f
  4644     0407  0B89               	decfsz	9,f
  4645     0408  2C06               	goto	u1345
  4646     0409  0870               	movf	??_Lcd_Cmd,w
  4647     040A  3901               	andlw	1
  4648     040B  00F1               	movwf	??_Lcd_Cmd+1
  4649     040C  0DF1               	rlf	??_Lcd_Cmd+1,f
  4650     040D  080E               	movf	14,w	;volatile
  4651     040E  0671               	xorwf	??_Lcd_Cmd+1,w
  4652     040F  39FD               	andlw	-3
  4653     0410  0671               	xorwf	??_Lcd_Cmd+1,w
  4654     0411  008E               	movwf	14	;volatile
  4655                           
  4656                           ;./flex_lcd.h: 153: PORTCbits.RC2 = (data & 0b00100000)>>5; PORTCbits.RC3 = (data & 0b00
      +                          010000)>>4;
  4657     0412  0872               	movf	Lcd_Cmd@data,w
  4658     0413  00F0               	movwf	??_Lcd_Cmd
  4659     0414  3005               	movlw	5
  4660     0415                     u1355:
  4661     0415  36F0               	lsrf	??_Lcd_Cmd,f
  4662     0416  0B89               	decfsz	9,f
  4663     0417  2C15               	goto	u1355
  4664     0418  0870               	movf	??_Lcd_Cmd,w
  4665     0419  3901               	andlw	1
  4666     041A  00F1               	movwf	??_Lcd_Cmd+1
  4667     041B  0DF1               	rlf	??_Lcd_Cmd+1,f
  4668     041C  0DF1               	rlf	??_Lcd_Cmd+1,f
  4669     041D  080E               	movf	14,w	;volatile
  4670     041E  0671               	xorwf	??_Lcd_Cmd+1,w
  4671     041F  39FB               	andlw	-5
  4672     0420  0671               	xorwf	??_Lcd_Cmd+1,w
  4673     0421  008E               	movwf	14	;volatile
  4674     0422  0872               	movf	Lcd_Cmd@data,w
  4675     0423  00F0               	movwf	??_Lcd_Cmd
  4676     0424  3004               	movlw	4
  4677     0425                     u1365:
  4678     0425  36F0               	lsrf	??_Lcd_Cmd,f
  4679     0426  0B89               	decfsz	9,f
  4680     0427  2C25               	goto	u1365
  4681     0428  0870               	movf	??_Lcd_Cmd,w
  4682     0429  3901               	andlw	1
  4683     042A  00F1               	movwf	??_Lcd_Cmd+1
  4684     042B  0DF1               	rlf	??_Lcd_Cmd+1,f
  4685     042C  0DF1               	rlf	??_Lcd_Cmd+1,f
  4686     042D  0DF1               	rlf	??_Lcd_Cmd+1,f
  4687     042E  080E               	movf	14,w	;volatile
  4688     042F  0671               	xorwf	??_Lcd_Cmd+1,w
  4689     0430  39F7               	andlw	-9
  4690     0431  0671               	xorwf	??_Lcd_Cmd+1,w
  4691     0432  008E               	movwf	14	;volatile
  4692     0433                     l1691:
  4693                           
  4694                           ;./flex_lcd.h: 154: _delay(10);
  4695     0433  3003               	movlw	3
  4696     0434                     u1747:
  4697     0434  0B89               	decfsz	9,f
  4698     0435  2C34               	goto	u1747
  4699     0436  0000               	nop
  4700     0437                     l1693:
  4701                           
  4702                           ;./flex_lcd.h: 155: PORTCbits.RC4 = 1; _delay((unsigned long)((5)*(4000000/4000000.0)));
      +                           PORTCbits.RC4 = 0;
  4703     0437  0020               	movlb	0	; select bank0
  4704     0438  160E               	bsf	14,4	;volatile
  4705     0439                     l1695:
  4706     0439  3200               	nop2	;2 cycle nop
  4707     043A  3200               	nop2	;2 cycle nop
  4708     043B  0000               	nop
  4709     043C                     l1697:
  4710     043C  0020               	movlb	0	; select bank0
  4711     043D  120E               	bcf	14,4	;volatile
  4712     043E                     l1699:
  4713                           
  4714                           ;./flex_lcd.h: 156: PORTCbits.RC0 = (data & 0b00001000)>>3; PORTCbits.RC1 = (data & 0b00
      +                          000100)>>2;
  4715     043E  0872               	movf	Lcd_Cmd@data,w
  4716     043F  00F0               	movwf	??_Lcd_Cmd
  4717     0440  3003               	movlw	3
  4718     0441                     u1375:
  4719     0441  36F0               	lsrf	??_Lcd_Cmd,f
  4720     0442  0B89               	decfsz	9,f
  4721     0443  2C41               	goto	u1375
  4722     0444  3001               	movlw	1
  4723     0445  0570               	andwf	??_Lcd_Cmd,w
  4724     0446  00F1               	movwf	??_Lcd_Cmd+1
  4725     0447  080E               	movf	14,w	;volatile
  4726     0448  0671               	xorwf	??_Lcd_Cmd+1,w
  4727     0449  39FE               	andlw	-2
  4728     044A  0671               	xorwf	??_Lcd_Cmd+1,w
  4729     044B  008E               	movwf	14	;volatile
  4730     044C                     l1701:
  4731     044C  0872               	movf	Lcd_Cmd@data,w
  4732     044D  00F0               	movwf	??_Lcd_Cmd
  4733     044E  3002               	movlw	2
  4734     044F                     u1385:
  4735     044F  36F0               	lsrf	??_Lcd_Cmd,f
  4736     0450  0B89               	decfsz	9,f
  4737     0451  2C4F               	goto	u1385
  4738     0452  0870               	movf	??_Lcd_Cmd,w
  4739     0453  3901               	andlw	1
  4740     0454  00F1               	movwf	??_Lcd_Cmd+1
  4741     0455  0DF1               	rlf	??_Lcd_Cmd+1,f
  4742     0456  080E               	movf	14,w	;volatile
  4743     0457  0671               	xorwf	??_Lcd_Cmd+1,w
  4744     0458  39FD               	andlw	-3
  4745     0459  0671               	xorwf	??_Lcd_Cmd+1,w
  4746     045A  008E               	movwf	14	;volatile
  4747     045B                     l1703:
  4748                           
  4749                           ;./flex_lcd.h: 157: PORTCbits.RC2 = (data & 0b00000010)>>1; PORTCbits.RC3 = (data & 0b00
      +                          000001);
  4750     045B  3672               	lsrf	Lcd_Cmd@data,w
  4751     045C  3901               	andlw	1
  4752     045D  00F0               	movwf	??_Lcd_Cmd
  4753     045E  0DF0               	rlf	??_Lcd_Cmd,f
  4754     045F  0DF0               	rlf	??_Lcd_Cmd,f
  4755     0460  080E               	movf	14,w	;volatile
  4756     0461  0670               	xorwf	??_Lcd_Cmd,w
  4757     0462  39FB               	andlw	-5
  4758     0463  0670               	xorwf	??_Lcd_Cmd,w
  4759     0464  008E               	movwf	14	;volatile
  4760     0465                     l1705:
  4761     0465  0872               	movf	Lcd_Cmd@data,w
  4762     0466  3901               	andlw	1
  4763     0467  00F0               	movwf	??_Lcd_Cmd
  4764     0468  0DF0               	rlf	??_Lcd_Cmd,f
  4765     0469  0DF0               	rlf	??_Lcd_Cmd,f
  4766     046A  0DF0               	rlf	??_Lcd_Cmd,f
  4767     046B  080E               	movf	14,w	;volatile
  4768     046C  0670               	xorwf	??_Lcd_Cmd,w
  4769     046D  39F7               	andlw	-9
  4770     046E  0670               	xorwf	??_Lcd_Cmd,w
  4771     046F  008E               	movwf	14	;volatile
  4772     0470                     l1707:
  4773                           
  4774                           ;./flex_lcd.h: 158: _delay(10);
  4775     0470  3003               	movlw	3
  4776     0471                     u1757:
  4777     0471  0B89               	decfsz	9,f
  4778     0472  2C71               	goto	u1757
  4779     0473  0000               	nop
  4780     0474                     l1709:
  4781                           
  4782                           ;./flex_lcd.h: 159: PORTCbits.RC4 = 1; _delay((unsigned long)((5)*(4000000/4000000.0)));
      +                           PORTCbits.RC4 = 0;
  4783     0474  0020               	movlb	0	; select bank0
  4784     0475  160E               	bsf	14,4	;volatile
  4785     0476                     l1711:
  4786     0476  3200               	nop2	;2 cycle nop
  4787     0477  3200               	nop2	;2 cycle nop
  4788     0478  0000               	nop
  4789     0479                     l1713:
  4790     0479  0020               	movlb	0	; select bank0
  4791     047A  120E               	bcf	14,4	;volatile
  4792     047B                     l1715:
  4793                           
  4794                           ;./flex_lcd.h: 160: _delay((unsigned long)((5500)*(4000000/4000000.0)));
  4795     047B  3008               	movlw	8
  4796     047C  00F0               	movwf	??_Lcd_Cmd
  4797     047D  3023               	movlw	35
  4798     047E                     u1767:
  4799     047E  0B89               	decfsz	9,f
  4800     047F  2C7E               	goto	u1767
  4801     0480  0BF0               	decfsz	??_Lcd_Cmd,f
  4802     0481  2C7E               	goto	u1767
  4803     0482  0000               	nop
  4804     0483                     l101:
  4805     0483  0008               	return
  4806     0484                     __end_of_Lcd_Cmd:
  4807                           
  4808                           	psect	intentry
  4809     0004                     __pintentry:	
  4810 ;; *************** function _ISR_TIMER0 *****************
  4811 ;; Defined at:
  4812 ;;		line 43 in file "main.c"
  4813 ;; Parameters:    Size  Location     Type
  4814 ;;		None
  4815 ;; Auto vars:     Size  Location     Type
  4816 ;;		None
  4817 ;; Return value:  Size  Location     Type
  4818 ;;                  1    wreg      void 
  4819 ;; Registers used:
  4820 ;;		wreg, status,2, status,0
  4821 ;; Tracked objects:
  4822 ;;		On entry : 0/0
  4823 ;;		On exit  : 0/0
  4824 ;;		Unchanged: 0/0
  4825 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4826 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4827 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4829 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4830 ;;Total ram usage:        0 bytes
  4831 ;; Hardware stack levels used: 1
  4832 ;; This function calls:
  4833 ;;		Nothing
  4834 ;; This function is called by:
  4835 ;;		Interrupt level 1
  4836 ;; This function uses a non-reentrant model
  4837 ;;
  4838                           
  4839     0004                     _ISR_TIMER0:
  4840                           
  4841                           ;incstack = 0
  4842     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  4843                           
  4844                           ; Regs used in _ISR_TIMER0: [wreg+status,2+status,0]
  4845     0005  3180               	pagesel	$
  4846     0006                     i1l1255:
  4847                           
  4848                           ;main.c: 44:     OSCCONbits.SCS = 0b00;
  4849     0006  1D0B               	btfss	11,2	;volatile
  4850     0007  2809               	goto	u77_21
  4851     0008  280A               	goto	u77_20
  4852     0009                     u77_21:
  4853     0009  281D               	goto	i1l124
  4854     000A                     u77_20:
  4855     000A                     i1l1257:
  4856                           
  4857                           ;main.c: 45:     OSCTUNE = 0;
  4858     000A  1003               	clrc
  4859     000B  0022               	movlb	2	; select bank2
  4860     000C  1E0D               	btfss	13,4	;volatile
  4861     000D  1403               	setc
  4862     000E  1803               	btfsc	3,0
  4863     000F  2811               	goto	u78_21
  4864     0010  2814               	goto	u78_20
  4865     0011                     u78_21:
  4866     0011  0022               	movlb	2	; select bank2
  4867     0012  160D               	bsf	13,4	;volatile
  4868     0013  2816               	goto	u79_24
  4869     0014                     u78_20:
  4870     0014  0022               	movlb	2	; select bank2
  4871     0015  120D               	bcf	13,4	;volatile
  4872     0016                     u79_24:
  4873     0016                     i1l1259:
  4874                           
  4875                           ;main.c: 46: 
  4876     0016  307D               	movlw	125
  4877     0017  0020               	movlb	0	; select bank0
  4878     0018  0095               	movwf	21	;volatile
  4879     0019                     i1l1261:
  4880                           
  4881                           ;main.c: 47: 
  4882     0019  0196               	clrf	22	;volatile
  4883     001A  0197               	clrf	23	;volatile
  4884     001B                     i1l1263:
  4885                           
  4886                           ;main.c: 48:     ANSELA = 0b00000000;
  4887     001B  110B               	bcf	11,2	;volatile
  4888     001C                     i1l1265:
  4889                           
  4890                           ;main.c: 49:     ANSELB = 0b00000000;
  4891     001C  1010               	bcf	16,0	;volatile
  4892     001D                     i1l124:
  4893     001D  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  4894     001E  0009               	retfie
  4895     001F                     __end_of_ISR_TIMER0:
  4896     007E                     btemp	set	126	;btemp
  4897     007E                     int$flags	set	126
  4898     007E                     wtemp0	set	126
  4899                           
  4900                           	psect	config
  4901                           
  4902                           ;Config register CONFIG1 @ 0x8007
  4903                           ;	Oscillator Selection Bits
  4904                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  4905                           ;	Power-up Timer Enable
  4906                           ;	PWRTE = ON, PWRT enabled
  4907                           ;	MCLR Pin Function Select
  4908                           ;	MCLRE = OFF, MCLR/VPP pin function is digital input
  4909                           ;	Flash Program Memory Code Protection
  4910                           ;	CP = 0x1, unprogrammed default
  4911                           ;	Brown-out Reset Enable
  4912                           ;	BOREN = 0x3, unprogrammed default
  4913                           ;	Clock Out Enable
  4914                           ;	CLKOUTEN = 0x1, unprogrammed default
  4915                           ;	Internal/External Switch Over
  4916                           ;	IESO = 0x1, unprogrammed default
  4917                           ;	Fail-Safe Clock Monitor Enable
  4918                           ;	FCMEN = 0x1, unprogrammed default
  4919     8007                     	org	32775
  4920     8007  3F9C               	dw	16284
  4921                           
  4922                           ;Config register CONFIG2 @ 0x8008
  4923                           ;	Flash Memory Self-Write Protection
  4924                           ;	WRT = 0x3, unprogrammed default
  4925                           ;	Peripheral Pin Select one-way control
  4926                           ;	PPS1WAY = 0x1, unprogrammed default
  4927                           ;	Zero Cross Detect Disable Bit
  4928                           ;	ZCD = 0x1, unprogrammed default
  4929                           ;	PLL Enable Bit
  4930                           ;	PLLEN = OFF, 4x PLL is enabled when software sets the SPLLEN bit
  4931                           ;	Stack Overflow/Underflow Reset Enable
  4932                           ;	STVREN = 0x1, unprogrammed default
  4933                           ;	Brown-out Reset Voltage Selection
  4934                           ;	BORV = 0x1, unprogrammed default
  4935                           ;	Low-Power Brown Out Reset
  4936                           ;	LPBOR = 0x1, unprogrammed default
  4937                           ;	Low-Voltage Programming Enable
  4938                           ;	LVP = 0x1, unprogrammed default
  4939     8008                     	org	32776
  4940     8008  3EFF               	dw	16127
  4941                           
  4942                           ;Config register CONFIG3 @ 0x8009
  4943                           ;	WDT Period Select
  4944                           ;	WDTCPS = 0x1F, unprogrammed default
  4945                           ;	Watchdog Timer Enable
  4946                           ;	WDTE = OFF, WDT disabled
  4947                           ;	WDT Window Select
  4948                           ;	WDTCWS = 0x7, unprogrammed default
  4949                           ;	WDT Input Clock Selector
  4950                           ;	WDTCCS = 0x7, unprogrammed default
  4951     8009                     	org	32777
  4952     8009  3F9F               	dw	16287

Data Sizes:
    Strings     58
    Constant    0
    Data        0
    BSS         81
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     65      74
    BANK1            80      0      72
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_2(CODE[16]), STR_1(CODE[12]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 16
		 -> STR_2(CODE[16]), STR_1(CODE[12]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 16
		 -> STR_2(CODE[16]), STR_1(CODE[12]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    S701$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_2(CODE[16]), STR_1(CODE[12]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 20
		 -> buffer2(BANK1[20]), buffer1(BANK1[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S642$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S642$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    Lcd_Out2@buffer	PTR unsigned char  size(2) Largest target is 20
		 -> STR_3(CODE[12]), buffer2(BANK1[20]), buffer1(BANK1[20]), 

    Lcd_Out@buffer	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_5(CODE[7]), STR_4(CODE[11]), 


Critical Paths under _main in COMMON

    _read_prec_or_width->___wmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___awmod
    _Lcd_Out2->_Lcd_Chr_CP
    _Lcd_Out2->_Lcd_Cmd
    _Lcd_Out->_Lcd_Chr_CP
    _Lcd_Out->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd

Critical Paths under _ISR_TIMER0 in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs

Critical Paths under _ISR_TIMER0 in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR_TIMER0 in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_TIMER0 in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR_TIMER0 in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR_TIMER0 in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR_TIMER0 in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR_TIMER0 in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR_TIMER0 in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR_TIMER0 in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR_TIMER0 in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR_TIMER0 in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR_TIMER0 in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR_TIMER0 in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    8860
                                             63 BANK0      2     2      0
                            _Lcd_Cmd
                           _Lcd_Init
                            _Lcd_Out
                           _Lcd_Out2
                         _TMR0_Timer
                       _TMR1_Counter
                           _TMR2_PWM
                            ___lwdiv
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             20    16      4    6229
                                             45 BANK0     18    14      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             7     4      3    5810
                                             38 BANK0      7     4      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           18    16      2    5494
                                             23 BANK0     15    13      2
                               _dtoa
                              _fputc
                 _read_prec_or_width
 ---------------------------------------------------------------------------------
 (4) _read_prec_or_width                                   9     7      2     533
                                              6 COMMON     5     3      2
                                              0 BANK0      4     4      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     244
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                13    11      2    3672
                                             10 BANK0     13    11      2
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                  9     6      3    2066
                                             11 COMMON     3     0      3
                                              4 BANK0      6     6      0
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     6      1     997
                                              8 COMMON     3     2      1
                                              0 BANK0      4     4      0
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3     682
                                              0 COMMON     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                              7 COMMON     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              7     3      4     448
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              9     5      4     452
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _TMR2_PWM                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR1_Counter                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR0_Timer                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Out2                                             7     4      3     989
                                              3 COMMON     7     4      3
                         _Lcd_Chr_CP
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Out                                              7     4      3     837
                                              3 COMMON     7     4      3
                         _Lcd_Chr_CP
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Chr_CP                                           3     3      0     176
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     314
                                              3 COMMON     2     2      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     176
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _ISR_TIMER0                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Cmd
   _Lcd_Init
     _Lcd_Cmd
   _Lcd_Out
     _Lcd_Chr_CP
     _Lcd_Cmd
   _Lcd_Out2
     _Lcd_Chr_CP
     _Lcd_Cmd
   _TMR0_Timer
   _TMR1_Counter
   _TMR2_PWM
   ___lwdiv
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___awdiv
           ___awmod
           _abs
             ___awmod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
         _fputc
         _read_prec_or_width
           ___wmul

 _ISR_TIMER0 (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     41      4A       5       92.5%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      48       7       90.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      A0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      A0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Mon May 29 15:47:50 2023

                         _i 0067                          l82 06B0                          l67 0302  
                        l68 032B                          l69 035A                          l95 066D  
                        l98 03F0                ___awdiv@sign 0076         ___wmul@multiplicand 0072  
                       l101 0483                         l112 07CE                         l201 071B  
                       l115 07A2                         l203 072F                         l118 07DC  
                       l354 0542                         l700 014B                         l701 0168  
                       l367 0595                         l481 06EC                         l705 0166  
                       l714 01F6                         l722 04E3                         l750 0782  
                       l743 0768                         l664 074C                         l737 02C1  
                       l729 0220                         l762 05E5                         l770 0710  
                       l690 061F                         l747 0782                         l692 062A  
                       l773 07E3                         l687 05FF                         _PR2 001B  
                       u800 059B                         u801 059A                         u810 05A0  
                       u811 059F                         u900 04F4                         u820 05AF  
                       u901 04F3                         u821 05AE                         u910 0505  
                       u830 05CD                         u911 0504                         u831 05CC  
                       u840 0710                         u841 070F                         u930 0515  
                       u850 0717                         u931 0514                         u835 05C9  
                       u851 0716                         u925 0509                         u950 0524  
                       u951 0523                         u880 072B                         u945 0516  
                       u881 072A                         u865 071C                         u970 0534  
                       u890 04E9                         u971 0533                         u955 0520  
                       u891 04E8                         u875 0721                         u980 0539  
                       u981 0538                         u965 052A                         u990 0548  
                       u991 0547                         _abs 0769                         _pad 05E6  
              ___awmod@sign 0076                         wreg 0009                        ?_abs 0077  
                      l2041 0645                        l2043 0688                        l1501 054D  
                      l1421 05AF                        l1413 0596                        l1511 0561  
                      l1503 054F                        l1423 05CD                        l1415 059B  
                      l1431 06F2                        l2039 0242                        l1521 057C  
                      l1513 0566                        l1505 0553                        l1425 05DC  
                      l1417 05A0                        l1433 06FE                        l1601 01D6  
                      l1441 0717                        l1451 04E4                        l1523 0581  
                      l1515 056A                        l1507 0558                        l1419 05A5  
                      l1435 0703                        l1603 01DB                        l1443 0720  
                      l1701 044C                        l1461 04F4                        l1453 04E5  
                      l1517 056E                        l1509 055E                        l1525 0587  
                      l1429 06EF                        l1541 05FC                        l1533 05E8  
                      l1605 01E1                        l1445 0725                        l1437 0711  
                      l1621 04AE                        l1613 0486                        l1711 0476  
                      l1703 045B                        l1471 0508                        l1463 04F9  
                      l1455 04E9                        l1527 058C                        l1519 0578  
                      l1551 0769                        l1543 0602                        l1535 05EC  
                      l1607 01E5                        l1447 072B                        l1439 0713  
                      l1623 04C3                        l1615 0488                        l1631 01F9  
                      l1713 0479                        l1705 0465                        l1721 039D  
                      l1801 069B                        l1481 0528                        l1473 050D  
                      l1465 04FD                        l1457 04EE                        l1529 0591  
                      l1553 0776                        l1545 060C                        l1537 05F2  
                      l1609 01EB                        l1561 0136                        l1617 0499  
                      l1625 04CB                        l1641 0221                        l1633 020A  
                      l1715 047B                        l1707 0470                        l1731 03B6  
                      l1723 03A1                        l1803 06A3                        l1811 062C  
                      l1491 053E                        l1483 0529                        l1475 0511  
                      l1467 04FF                        l1459 04F0                        l1547 0611  
                      l1539 05F6                        l1571 014F                        l1563 013A  
                      l1555 0125                        l1627 04DF                        l1619 04A1  
                      l1651 024D                        l1643 022A                        l1635 0212  
                      l1709 0474                        l1741 03E0                        l1733 03C5  
                      l1725 03A3                        l1717 035C                        l1805 06A7  
                      l1813 062D                        l1485 052E                        l1477 0515  
                      l1469 0505                        l1549 0624                        l1581 016C  
                      l1573 0154                        l1565 013E                        l1557 012C  
                      l1661 0269                        l1653 0258                        l1637 0219  
                      l1901 0040                        l1743 03E3                        l1735 03CF  
                      l1727 03A6                        l1719 035F                        l1831 0664  
                      l1815 0631                        l1823 063D                        l1479 0524  
                      l1487 0534                        l1495 0543                        l1591 0196  
                      l1583 016F                        l1575 0158                        l1567 0142  
                      l1559 0131                        l1663 0273                        l1655 025C  
                      l1647 022F                        l1639 021D                        l1751 0754  
                      l1911 0048                        l1903 0041                        l1761 02D0  
                      l1745 03E5                        l1737 03DA                        l1729 03A8  
                      l1817 0635                        l1825 0653                        l1841 07CD  
                      l1489 0539                        l1497 0544                        l1585 0174  
                      l1593 01A6                        l1577 015D                        l1569 0147  
                      l1673 029F                        l1665 027D                        l1657 025D  
                      l1649 0247                        l1753 075C                        l1921 004D  
                      l1913 0049                        l1905 0044                        l1691 0433  
                      l1771 0325                        l1763 0300                        l1747 03E8  
                      l1739 03DE                        l1827 0658                        l1819 0639  
                      l1843 0793                        l1851 07D8                        l1499 0548  
                      l1595 01B4                        l1587 018D                        l1579 0162  
                      l1667 0289                        l1659 0262                        l1755 0766  
                      l1931 005C                        l1923 0050                        l1915 004A  
                      l1907 0045                        l1693 0437                        l1781 0356  
                      l1773 0342                        l1829 0660                        l1837 07C6  
                      l1845 079A                        l1853 07DA                        l1597 01BB  
                      l1589 0192                        l1669 0296                        l1677 02A9  
                      l1749 074F                        l1861 073A                        l1941 0069  
                      l1933 005C                        l1925 0053                        l1917 004B  
                      l1909 0046                        l1695 0439                        l1687 03F2  
                      l1783 0356                        l1775 034A                        l1767 0319  
                      l1759 02C2                        l1791 0678                        l1839 07CC  
                      l1847 079F                        l1871 06B9                        l1599 01C8  
                      l1863 0744                        l1855 0732                        l1951 00A6  
                      l1943 0072                        l1935 005E                        l1927 0056  
                      l1919 004C                        l1697 043C                        l1689 03F5  
                      l1777 034E                        l1769 0321                        l1793 067C  
                      l1785 066F                        l1849 07D6                        l1881 06D8  
                      l1873 06BC                        l1857 0736                        l1961 00D8  
                      l1953 00B0                        l1945 0083                        l1937 0061  
                      l1929 0059                        l1699 043E                        l1779 0352  
                      l1787 0670                        l1883 06DC                        l1875 06C1  
                      l1867 06B1                        l1859 0738                        l1971 00FB  
                      l1963 00E1                        l1955 00BD                        l1947 008F  
                      l1939 0065                        l1789 0674                        l1797 0680  
                      l1885 06DD                        l1877 06C5                        l1869 06B3  
                      l1973 00FF                        l1965 00E5                        l1957 00C7  
                      l1949 009C                        l1893 0035                        ?_pad 007B  
                      l1799 0696                        l1887 06E2                        l1879 06C9  
                      l1975 010C                        l1967 00EE                        l1959 00D4  
                      l1895 003C                        l1889 06E8                        l1977 0116  
                      l1969 00F2                        l1897 003D                        l1899 003F  
                      STR_1 07AF                        STR_2 0783                        STR_3 07A3  
                      STR_4 07BB                        STR_5 07CF                        u1000 0553  
                      u1001 0552                        u1010 055E                        u1011 055D  
                      u1100 061F                        u1101 061E                        u1030 056E  
                      u1110 0624                        u1031 056D                        u1111 0623  
                      u1040 0578                        u1120 0776                        u1200 01B4  
                      u1041 0577                        u1025 0562                        u1121 0775  
                      u1105 061B                        u1201 01B3                        u1210 01BB  
                      u1130 012A                        u1211 01BA                        u1131 0128  
                      u1060 0587                        u1220 01C8                        u1140 012B  
                      u1300 025C                        u1061 0586                        u1045 0574  
                      u1125 0772                        u1221 01C7                        u1205 01B0  
                      u1301 025B                        u1070 058C                        u1230 01D6  
                      u1150 0131                        u1310 0273                        u1071 058B  
                      u1055 057D                        u1231 01D5                        u1151 0130  
                      u1311 0272                        u1080 05EC                        u1240 01DB  
                      u1160 013A                        u1320 027D                        u1081 05EB  
                      u1241 01DA                        u1225 01C4                        u1161 0139  
                      u1321 027C                        u1090 05F6                        u1250 01E1  
                      u1170 0142                        u1091 05F5                        u1251 01E0  
                      u1235 01D2                        u1171 0141                        u1180 0154  
                      u1260 0499                        u1405 0370                        u1181 0153  
                      u1261 0498                        u1510 06C9                        u1190 015D  
                      u1270 04DF                        u1335 03F8                        u1415 037F  
                      u1511 06C8                        u1191 015C                        u1271 04DE  
                      u1280 020A                        u1345 0406                        u1425 038F  
                      u1505 06BD                        u1281 0209                        u1530 06D8  
                      u1290 024D                        u1450 0766                        u1355 0415  
                      u1435 03AB                        u1531 06D7                        u1291 024C  
                      u1451 0765                        u1460 032B                        u1365 0425  
                      u1461 032A                        u1445 03B9                        u1525 06CA  
                      u1470 06B0                        u1550 06E8                        u1375 0441  
                      u1471 06AF                        u1551 06E7                        u1535 06D4  
                      u1607 00E9                        u1480 066D                        u1385 044F  
                      u1481 066C                        u1545 06DE                        u1617 00F6  
                      u1490 06B9                        u1707 02F3                        u1395 0362  
                      u1491 06B8                        u1627 0105                        u1717 02FB  
                      u1637 039E                        u1727 031C                        u1647 03DB  
                      u1567 006D                        u1737 0345                        u1657 03EB  
                      u1577 00B6                        u1747 0434                        u1667 02D3  
                      u1587 00CD                        u1757 0471                        u1677 02DB  
                      u1597 00DC                        u1767 047E                        u1687 02E3  
                      u1697 02EB                        _TMR0 0015                        _TMR1 0016  
                      _TMR2 001A                        _Freq 0065                        abs@a 0077  
                      _dbuf 00A0                        _main 0035                        _dtoa 0123  
                      _prec 0063                        pad@i 0025                        pad@p 007C  
                      fsr0h 0005                        fsr1h 0007                        indf0 0000  
                      fsr0l 0004                        indf1 0001                        fsr1l 0006  
                      pad@w 0027                        btemp 007E                        start 001F  
           __end_of_Lcd_Cmd 0484             __end_of_Lcd_Out 06B1                 ?_ISR_TIMER0 0070  
                _Lcd_Chr_CP 035B                       ??_abs 0079                       ??_pad 0024  
            Lcd_Out2@buffer 0074                       ?_main 0070                       ?_dtoa 002A  
           __end_of___awdiv 0543             __end_of___awmod 0596             ___awdiv@divisor 0070  
                     _T1CON 0018                       _T2CON 001C             __end_of___lwdiv 06ED  
                     i1l124 001D             ___awdiv@counter 0075                vfpfcnvrt@fmt 0037  
                     _PORTA 000C                       _PORTB 000D                       _PORTC 000E  
                     _TRISA 008C                       _TRISB 008D                       _TRISC 008E  
                     u77_20 000A                       u77_21 0009                       u78_20 0014  
                     u78_21 0011                       u79_24 0016            __end_of_TMR2_PWM 07DD  
               ?_TMR0_Timer 0070                       _flags 0069         read_prec_or_width@c 0020  
       read_prec_or_width@n 0021                       _fputc 0596                       _fputs 06ED  
                     pad@fp 0029                       _width 0061                       _putch 07E3  
                     dtoa@d 002A                       dtoa@i 0034                       dtoa@p 0030  
                     dtoa@s 0036                       dtoa@w 0032                       status 0003  
                     wtemp0 007E             __end_of_sprintf 074D            __end_of_Lcd_Init 035B  
          __end_of_Lcd_Out2 066E             __initialization 0021                __end_of_main 0123  
              __end_of_dtoa 01F7                      ??_main 005F                      ??_dtoa 002C  
__end_of_read_prec_or_width 04E4                      ?_fputc 0070                      ?_fputs 0078  
                    _CCPR1L 0291            ___awdiv@dividend 0072                      _ANSELA 018C  
                    ?_putch 0070                      _ANSELB 018D                      _ANSELC 018E  
                    i1l1261 0019                      i1l1263 001B                      i1l1255 0006  
                    i1l1265 001C                      i1l1257 000A                      i1l1259 0016  
                    _RC6PPS 0EA6                   ??_Lcd_Cmd 0070               vfpfcnvrt@done 0041  
                 ??_Lcd_Out 0076                vfprintf@cfmt 004B                 ?_Lcd_Chr_CP 0070  
                    ___wmul 0711                   ??___awdiv 0074                   ??___awmod 0074  
                 ??___lwdiv 0074        read_prec_or_width@ap 0076            ___awdiv@quotient 0077  
           ___awmod@divisor 0070             ___awmod@counter 0075                      pad@buf 007B  
                    dtoa@fp 002F                      fputc@c 0070                      fputs@c 0020  
                    fputs@i 0021                      fputs@s 0023                      putch@c 0070  
          __end_of_vfprintf 0769                   ??_sprintf 0051     __end_of__initialization 0031  
            __pcstackCOMMON 0070                   ?_TMR2_PWM 0070               __end_of_fputc 05E6  
             __end_of_fputs 0711               __end_of_putch 07E4                   ?_Lcd_Init 0070  
                 ?_Lcd_Out2 0073                     ??_fputc 0073                     ??_fputs 0079  
                   ??_putch 0070                  __pbssBANK0 0061                  __pbssBANK1 00A0  
              ??_ISR_TIMER0 0070                  __pmaintext 0035                     ?___wmul 0070  
                ??_TMR2_PWM 0070                  __pintentry 0004                     _CCP1CON 0293  
              ??_TMR0_Timer 0070                     _OSCTUNE 0098                  ??_Lcd_Init 0073  
                ??_Lcd_Out2 0076          __end_of_ISR_TIMER0 001F                     _Lcd_Cmd 03F1  
                   _Lcd_Out 066E               ?_TMR1_Counter 0070                     ___awdiv 04E4  
                   ___awmod 0543                     ___lwdiv 06B1                   ?_vfprintf 0046  
        __end_of_TMR0_Timer 07CF                     __ptext1 0730                     __ptext2 074D  
                   __ptext3 01F7                     __ptext4 0484                     __ptext5 0711  
                   __ptext6 0123                     __ptext7 05E6                     __ptext8 06ED  
                   __ptext9 0596                     _buffer1 00D4                     _buffer2 00C0  
     read_prec_or_width@fmt 0023            ___awmod@dividend 0072                     _sprintf 0730  
                   clrloop0 07DE        end_of_initialization 0031                     fputc@fp 0072  
                   fputs@fp 0078          _read_prec_or_width 0484              ??_TMR1_Counter 0070  
         __end_of_vfpfcnvrt 02C2                ??_Lcd_Chr_CP 0070                   Lcd_Out2@x 0073  
                 Lcd_Out2@y 0078         ?_read_prec_or_width 0076            vfpfcnvrt@convarg 003D  
                ??_vfprintf 0049                   _PORTCbits 000E                   _TRISCbits 008E  
      ??_read_prec_or_width 0078          __end_of_Lcd_Chr_CP 03F1                 vfpfcnvrt@ap 0038  
               vfpfcnvrt@cp 0044                 vfpfcnvrt@fp 0043              __end_of___wmul 0730  
       start_initialization 0021                 __end_of_abs 0783                 __end_of_pad 062B  
             Lcd_Out@buffer 0074                 vfprintf@fmt 0046                    ??___wmul 0074  
                 ___latbits 0002               __pcstackBANK0 0020        __end_of_TMR1_Counter 07A3  
                  ?_Lcd_Cmd 0070                    ?_Lcd_Out 0073            ___lwdiv@dividend 0072  
                  ?___awdiv 0070                    ?___awmod 0070                    ?___lwdiv 0070  
          ___lwdiv@quotient 0075                    ?_sprintf 004D                    _T1CKIPPS 0E12  
            ___wmul@product 0074                    _LATBbits 010D                   clear_ram0 07DD  
                  _PIR1bits 0010                    Lcd_Out@x 0073                    Lcd_Out@y 0078  
                  _TMR2_PWM 07D6                   _vfpfcnvrt 01F7                Lcd_Init@data 0074  
         ___wmul@multiplier 0070                Lcd_Out2@data 0079                    _Lcd_Init 02C2  
                  _Lcd_Out2 062B                  vfprintf@ap 0048                  vfprintf@fp 004A  
                ?_vfpfcnvrt 0037                  sprintf@fmt 004D              Lcd_Chr_CP@data 0072  
                  _dtoa$723 002D             ___lwdiv@divisor 0070             ___lwdiv@counter 0077  
                  __ptext10 07E3                    __ptext11 0769                    __ptext20 035B  
                  __ptext12 0543                    __ptext21 02C2                    __ptext13 04E4  
                _T1GCONbits 0019                    __ptext22 03F1                    __ptext14 06B1  
                  __ptext15 07D6                    __ptext16 0793                    __ptext17 07C6  
                  __ptext18 062B                    __ptext19 066E                 Lcd_Cmd@data 0072  
              _TMR1_Counter 0793                    int$flags 007E                    _vfprintf 074D  
               Lcd_Out@data 0079                  _INTCONbits 000B                    intlevel1 0000  
                 sprintf@ap 0052                  _OSCCONbits 0099                  _ISR_TIMER0 0004  
               ??_vfpfcnvrt 0039               __pstringtext1 0783               __pstringtext2 07A3  
             __pstringtext3 07AF               __pstringtext4 07BB               __pstringtext5 07CF  
             __pstringtext6 0000                  _OPTION_REG 0095                    sprintf@f 0054  
                  sprintf@s 0053                  _TMR0_Timer 07C6  
