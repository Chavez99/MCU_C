

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Wed May 31 18:03:50 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F1619
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    10                           	psect	cinit,global,class=CODE,merge=1,delta=2
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2,group=3
    18                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text8,local,class=CODE,merge=1,delta=2,group=3
    25                           	psect	text9,local,class=CODE,merge=1,delta=2,group=3
    26                           	psect	text10,local,class=CODE,merge=1,delta=2,group=3
    27                           	psect	text11,local,class=CODE,merge=1,delta=2,group=3
    28                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text14,local,class=CODE,merge=1,delta=2
    31                           	psect	text15,local,class=CODE,merge=1,delta=2
    32                           	psect	text16,local,class=CODE,merge=1,delta=2
    33                           	psect	text17,local,class=CODE,merge=1,delta=2
    34                           	psect	text18,local,class=CODE,merge=1,delta=2
    35                           	psect	text19,local,class=CODE,merge=1,delta=2
    36                           	psect	text20,local,class=CODE,merge=1,delta=2
    37                           	psect	text21,local,class=CODE,merge=1,delta=2
    38                           	psect	text22,local,class=CODE,merge=1,delta=2
    39                           	psect	text23,local,class=CODE,merge=1,delta=2
    40                           	psect	text24,local,class=CODE,merge=1,delta=2
    41                           	psect	text25,local,class=CODE,merge=1,delta=2
    42                           	psect	intentry,global,class=CODE,delta=2
    43                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    44                           	dabs	1,0x7E,2
    45     0000                     
    46                           ; Generated 09/02/2023 GMT
    47                           ; 
    48                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    49                           ; All rights reserved.
    50                           ; 
    51                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    52                           ; 
    53                           ; Redistribution and use in source and binary forms, with or without modification, are
    54                           ; permitted provided that the following conditions are met:
    55                           ; 
    56                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    57                           ;        conditions and the following disclaimer.
    58                           ; 
    59                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    60                           ;        of conditions and the following disclaimer in the documentation and/or other
    61                           ;        materials provided with the distribution. Publication is not required when
    62                           ;        this file is used in an embedded application.
    63                           ; 
    64                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    65                           ;        software without specific prior written permission.
    66                           ; 
    67                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    68                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    69                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    70                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    71                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    72                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    73                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    74                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    75                           ; 
    76                           ; 
    77                           ; Code-generator required, PIC16F1619 Definitions
    78                           ; 
    79                           ; SFR Addresses
    80     0000                     	;# 
    81     0001                     	;# 
    82     0002                     	;# 
    83     0003                     	;# 
    84     0004                     	;# 
    85     0005                     	;# 
    86     0006                     	;# 
    87     0007                     	;# 
    88     0008                     	;# 
    89     0009                     	;# 
    90     000A                     	;# 
    91     000B                     	;# 
    92     000C                     	;# 
    93     000D                     	;# 
    94     000E                     	;# 
    95     0010                     	;# 
    96     0011                     	;# 
    97     0012                     	;# 
    98     0013                     	;# 
    99     0014                     	;# 
   100     0015                     	;# 
   101     0016                     	;# 
   102     0016                     	;# 
   103     0017                     	;# 
   104     0018                     	;# 
   105     0019                     	;# 
   106     001A                     	;# 
   107     001A                     	;# 
   108     001B                     	;# 
   109     001B                     	;# 
   110     001C                     	;# 
   111     001D                     	;# 
   112     001E                     	;# 
   113     001F                     	;# 
   114     008C                     	;# 
   115     008D                     	;# 
   116     008E                     	;# 
   117     0090                     	;# 
   118     0091                     	;# 
   119     0092                     	;# 
   120     0093                     	;# 
   121     0094                     	;# 
   122     0095                     	;# 
   123     0096                     	;# 
   124     0098                     	;# 
   125     0099                     	;# 
   126     009A                     	;# 
   127     009B                     	;# 
   128     009B                     	;# 
   129     009C                     	;# 
   130     009D                     	;# 
   131     009E                     	;# 
   132     009F                     	;# 
   133     010C                     	;# 
   134     010D                     	;# 
   135     010E                     	;# 
   136     0111                     	;# 
   137     0112                     	;# 
   138     0113                     	;# 
   139     0114                     	;# 
   140     0115                     	;# 
   141     0116                     	;# 
   142     0117                     	;# 
   143     0118                     	;# 
   144     0119                     	;# 
   145     011C                     	;# 
   146     018C                     	;# 
   147     018D                     	;# 
   148     018E                     	;# 
   149     0191                     	;# 
   150     0191                     	;# 
   151     0192                     	;# 
   152     0193                     	;# 
   153     0193                     	;# 
   154     0194                     	;# 
   155     0195                     	;# 
   156     0196                     	;# 
   157     0197                     	;# 
   158     0199                     	;# 
   159     0199                     	;# 
   160     0199                     	;# 
   161     019A                     	;# 
   162     019A                     	;# 
   163     019A                     	;# 
   164     019B                     	;# 
   165     019B                     	;# 
   166     019B                     	;# 
   167     019B                     	;# 
   168     019B                     	;# 
   169     019C                     	;# 
   170     019C                     	;# 
   171     019C                     	;# 
   172     019D                     	;# 
   173     019D                     	;# 
   174     019D                     	;# 
   175     019E                     	;# 
   176     019E                     	;# 
   177     019E                     	;# 
   178     019F                     	;# 
   179     019F                     	;# 
   180     019F                     	;# 
   181     019F                     	;# 
   182     019F                     	;# 
   183     020C                     	;# 
   184     020D                     	;# 
   185     020E                     	;# 
   186     0211                     	;# 
   187     0211                     	;# 
   188     0212                     	;# 
   189     0212                     	;# 
   190     0213                     	;# 
   191     0213                     	;# 
   192     0214                     	;# 
   193     0214                     	;# 
   194     0215                     	;# 
   195     0215                     	;# 
   196     0215                     	;# 
   197     0215                     	;# 
   198     0216                     	;# 
   199     0216                     	;# 
   200     0217                     	;# 
   201     0217                     	;# 
   202     028C                     	;# 
   203     028D                     	;# 
   204     028E                     	;# 
   205     0291                     	;# 
   206     0291                     	;# 
   207     0292                     	;# 
   208     0293                     	;# 
   209     0294                     	;# 
   210     0298                     	;# 
   211     0298                     	;# 
   212     0299                     	;# 
   213     029A                     	;# 
   214     029B                     	;# 
   215     029E                     	;# 
   216     030C                     	;# 
   217     030D                     	;# 
   218     030E                     	;# 
   219     038C                     	;# 
   220     038D                     	;# 
   221     038E                     	;# 
   222     0391                     	;# 
   223     0392                     	;# 
   224     0393                     	;# 
   225     0394                     	;# 
   226     0395                     	;# 
   227     0396                     	;# 
   228     0397                     	;# 
   229     0398                     	;# 
   230     0399                     	;# 
   231     040E                     	;# 
   232     0413                     	;# 
   233     0413                     	;# 
   234     0414                     	;# 
   235     0414                     	;# 
   236     0415                     	;# 
   237     0416                     	;# 
   238     0417                     	;# 
   239     0418                     	;# 
   240     041A                     	;# 
   241     041A                     	;# 
   242     041B                     	;# 
   243     041B                     	;# 
   244     041C                     	;# 
   245     041D                     	;# 
   246     041E                     	;# 
   247     041F                     	;# 
   248     0493                     	;# 
   249     0494                     	;# 
   250     0495                     	;# 
   251     0496                     	;# 
   252     049A                     	;# 
   253     049B                     	;# 
   254     049C                     	;# 
   255     049D                     	;# 
   256     058C                     	;# 
   257     058C                     	;# 
   258     058D                     	;# 
   259     058E                     	;# 
   260     058E                     	;# 
   261     058F                     	;# 
   262     0590                     	;# 
   263     0590                     	;# 
   264     0591                     	;# 
   265     0592                     	;# 
   266     0592                     	;# 
   267     0593                     	;# 
   268     0594                     	;# 
   269     0594                     	;# 
   270     0595                     	;# 
   271     0596                     	;# 
   272     0596                     	;# 
   273     0597                     	;# 
   274     0598                     	;# 
   275     0599                     	;# 
   276     059A                     	;# 
   277     059B                     	;# 
   278     059B                     	;# 
   279     059C                     	;# 
   280     059D                     	;# 
   281     060C                     	;# 
   282     060C                     	;# 
   283     060D                     	;# 
   284     060E                     	;# 
   285     060F                     	;# 
   286     060F                     	;# 
   287     0610                     	;# 
   288     0611                     	;# 
   289     0612                     	;# 
   290     0613                     	;# 
   291     0614                     	;# 
   292     0617                     	;# 
   293     0617                     	;# 
   294     0618                     	;# 
   295     0619                     	;# 
   296     061A                     	;# 
   297     061A                     	;# 
   298     061B                     	;# 
   299     061C                     	;# 
   300     0691                     	;# 
   301     0692                     	;# 
   302     0693                     	;# 
   303     0694                     	;# 
   304     0695                     	;# 
   305     0696                     	;# 
   306     0697                     	;# 
   307     0699                     	;# 
   308     069A                     	;# 
   309     0711                     	;# 
   310     0712                     	;# 
   311     0713                     	;# 
   312     0714                     	;# 
   313     0715                     	;# 
   314     0718                     	;# 
   315     0718                     	;# 
   316     0719                     	;# 
   317     071A                     	;# 
   318     071A                     	;# 
   319     071B                     	;# 
   320     071C                     	;# 
   321     071D                     	;# 
   322     0791                     	;# 
   323     0791                     	;# 
   324     0792                     	;# 
   325     0793                     	;# 
   326     0793                     	;# 
   327     0794                     	;# 
   328     0795                     	;# 
   329     0795                     	;# 
   330     0796                     	;# 
   331     0797                     	;# 
   332     0797                     	;# 
   333     0798                     	;# 
   334     0799                     	;# 
   335     079A                     	;# 
   336     080C                     	;# 
   337     080C                     	;# 
   338     080D                     	;# 
   339     080E                     	;# 
   340     080E                     	;# 
   341     080F                     	;# 
   342     0810                     	;# 
   343     0810                     	;# 
   344     0811                     	;# 
   345     0812                     	;# 
   346     0812                     	;# 
   347     0813                     	;# 
   348     0814                     	;# 
   349     0815                     	;# 
   350     0816                     	;# 
   351     0817                     	;# 
   352     0818                     	;# 
   353     0819                     	;# 
   354     081A                     	;# 
   355     081A                     	;# 
   356     081B                     	;# 
   357     081C                     	;# 
   358     081C                     	;# 
   359     081D                     	;# 
   360     088C                     	;# 
   361     088D                     	;# 
   362     088E                     	;# 
   363     088F                     	;# 
   364     088F                     	;# 
   365     0890                     	;# 
   366     0891                     	;# 
   367     0892                     	;# 
   368     0893                     	;# 
   369     0893                     	;# 
   370     0894                     	;# 
   371     0895                     	;# 
   372     0896                     	;# 
   373     0897                     	;# 
   374     0897                     	;# 
   375     0898                     	;# 
   376     0899                     	;# 
   377     0D8C                     	;# 
   378     0D8C                     	;# 
   379     0D8D                     	;# 
   380     0D8E                     	;# 
   381     0D8F                     	;# 
   382     0D8F                     	;# 
   383     0D90                     	;# 
   384     0D91                     	;# 
   385     0D92                     	;# 
   386     0D92                     	;# 
   387     0D93                     	;# 
   388     0D94                     	;# 
   389     0D95                     	;# 
   390     0D95                     	;# 
   391     0D96                     	;# 
   392     0D97                     	;# 
   393     0D98                     	;# 
   394     0D99                     	;# 
   395     0D9A                     	;# 
   396     0D9B                     	;# 
   397     0D9C                     	;# 
   398     0D9D                     	;# 
   399     0D9E                     	;# 
   400     0D9E                     	;# 
   401     0D9F                     	;# 
   402     0DA0                     	;# 
   403     0DA1                     	;# 
   404     0DA1                     	;# 
   405     0DA2                     	;# 
   406     0DA3                     	;# 
   407     0DA4                     	;# 
   408     0DA4                     	;# 
   409     0DA5                     	;# 
   410     0DA6                     	;# 
   411     0DA7                     	;# 
   412     0DA7                     	;# 
   413     0DA8                     	;# 
   414     0DA9                     	;# 
   415     0DAA                     	;# 
   416     0DAB                     	;# 
   417     0DAC                     	;# 
   418     0DAD                     	;# 
   419     0DAE                     	;# 
   420     0DAF                     	;# 
   421     0E0F                     	;# 
   422     0E10                     	;# 
   423     0E11                     	;# 
   424     0E12                     	;# 
   425     0E13                     	;# 
   426     0E14                     	;# 
   427     0E15                     	;# 
   428     0E16                     	;# 
   429     0E17                     	;# 
   430     0E18                     	;# 
   431     0E19                     	;# 
   432     0E1A                     	;# 
   433     0E1B                     	;# 
   434     0E1C                     	;# 
   435     0E1D                     	;# 
   436     0E1E                     	;# 
   437     0E1F                     	;# 
   438     0E20                     	;# 
   439     0E21                     	;# 
   440     0E22                     	;# 
   441     0E23                     	;# 
   442     0E24                     	;# 
   443     0E25                     	;# 
   444     0E26                     	;# 
   445     0E27                     	;# 
   446     0E28                     	;# 
   447     0E29                     	;# 
   448     0E2A                     	;# 
   449     0E2B                     	;# 
   450     0E2C                     	;# 
   451     0E2D                     	;# 
   452     0E2E                     	;# 
   453     0E90                     	;# 
   454     0E91                     	;# 
   455     0E92                     	;# 
   456     0E94                     	;# 
   457     0E95                     	;# 
   458     0E9C                     	;# 
   459     0E9D                     	;# 
   460     0E9E                     	;# 
   461     0E9F                     	;# 
   462     0EA0                     	;# 
   463     0EA1                     	;# 
   464     0EA2                     	;# 
   465     0EA3                     	;# 
   466     0EA4                     	;# 
   467     0EA5                     	;# 
   468     0EA6                     	;# 
   469     0EA7                     	;# 
   470     0F0F                     	;# 
   471     0F10                     	;# 
   472     0F11                     	;# 
   473     0F12                     	;# 
   474     0F13                     	;# 
   475     0F14                     	;# 
   476     0F15                     	;# 
   477     0F16                     	;# 
   478     0F17                     	;# 
   479     0F18                     	;# 
   480     0F19                     	;# 
   481     0F1A                     	;# 
   482     0F1B                     	;# 
   483     0F1C                     	;# 
   484     0F1D                     	;# 
   485     0F1E                     	;# 
   486     0F1F                     	;# 
   487     0F20                     	;# 
   488     0F21                     	;# 
   489     0F22                     	;# 
   490     0F23                     	;# 
   491     0F24                     	;# 
   492     0F25                     	;# 
   493     0F26                     	;# 
   494     0F27                     	;# 
   495     0F28                     	;# 
   496     0F29                     	;# 
   497     0F2A                     	;# 
   498     0F2B                     	;# 
   499     0F2C                     	;# 
   500     0F2D                     	;# 
   501     0F2E                     	;# 
   502     0F2F                     	;# 
   503     0F30                     	;# 
   504     0F31                     	;# 
   505     0F32                     	;# 
   506     0F33                     	;# 
   507     0F34                     	;# 
   508     0F35                     	;# 
   509     0F36                     	;# 
   510     0F37                     	;# 
   511     0FE4                     	;# 
   512     0FE5                     	;# 
   513     0FE6                     	;# 
   514     0FE7                     	;# 
   515     0FE8                     	;# 
   516     0FE9                     	;# 
   517     0FEA                     	;# 
   518     0FEB                     	;# 
   519     0FED                     	;# 
   520     0FEE                     	;# 
   521     0FEF                     	;# 
   522     0000                     	;# 
   523     0001                     	;# 
   524     0002                     	;# 
   525     0003                     	;# 
   526     0004                     	;# 
   527     0005                     	;# 
   528     0006                     	;# 
   529     0007                     	;# 
   530     0008                     	;# 
   531     0009                     	;# 
   532     000A                     	;# 
   533     000B                     	;# 
   534     000C                     	;# 
   535     000D                     	;# 
   536     000E                     	;# 
   537     0010                     	;# 
   538     0011                     	;# 
   539     0012                     	;# 
   540     0013                     	;# 
   541     0014                     	;# 
   542     0015                     	;# 
   543     0016                     	;# 
   544     0016                     	;# 
   545     0017                     	;# 
   546     0018                     	;# 
   547     0019                     	;# 
   548     001A                     	;# 
   549     001A                     	;# 
   550     001B                     	;# 
   551     001B                     	;# 
   552     001C                     	;# 
   553     001D                     	;# 
   554     001E                     	;# 
   555     001F                     	;# 
   556     008C                     	;# 
   557     008D                     	;# 
   558     008E                     	;# 
   559     0090                     	;# 
   560     0091                     	;# 
   561     0092                     	;# 
   562     0093                     	;# 
   563     0094                     	;# 
   564     0095                     	;# 
   565     0096                     	;# 
   566     0098                     	;# 
   567     0099                     	;# 
   568     009A                     	;# 
   569     009B                     	;# 
   570     009B                     	;# 
   571     009C                     	;# 
   572     009D                     	;# 
   573     009E                     	;# 
   574     009F                     	;# 
   575     010C                     	;# 
   576     010D                     	;# 
   577     010E                     	;# 
   578     0111                     	;# 
   579     0112                     	;# 
   580     0113                     	;# 
   581     0114                     	;# 
   582     0115                     	;# 
   583     0116                     	;# 
   584     0117                     	;# 
   585     0118                     	;# 
   586     0119                     	;# 
   587     011C                     	;# 
   588     018C                     	;# 
   589     018D                     	;# 
   590     018E                     	;# 
   591     0191                     	;# 
   592     0191                     	;# 
   593     0192                     	;# 
   594     0193                     	;# 
   595     0193                     	;# 
   596     0194                     	;# 
   597     0195                     	;# 
   598     0196                     	;# 
   599     0197                     	;# 
   600     0199                     	;# 
   601     0199                     	;# 
   602     0199                     	;# 
   603     019A                     	;# 
   604     019A                     	;# 
   605     019A                     	;# 
   606     019B                     	;# 
   607     019B                     	;# 
   608     019B                     	;# 
   609     019B                     	;# 
   610     019B                     	;# 
   611     019C                     	;# 
   612     019C                     	;# 
   613     019C                     	;# 
   614     019D                     	;# 
   615     019D                     	;# 
   616     019D                     	;# 
   617     019E                     	;# 
   618     019E                     	;# 
   619     019E                     	;# 
   620     019F                     	;# 
   621     019F                     	;# 
   622     019F                     	;# 
   623     019F                     	;# 
   624     019F                     	;# 
   625     020C                     	;# 
   626     020D                     	;# 
   627     020E                     	;# 
   628     0211                     	;# 
   629     0211                     	;# 
   630     0212                     	;# 
   631     0212                     	;# 
   632     0213                     	;# 
   633     0213                     	;# 
   634     0214                     	;# 
   635     0214                     	;# 
   636     0215                     	;# 
   637     0215                     	;# 
   638     0215                     	;# 
   639     0215                     	;# 
   640     0216                     	;# 
   641     0216                     	;# 
   642     0217                     	;# 
   643     0217                     	;# 
   644     028C                     	;# 
   645     028D                     	;# 
   646     028E                     	;# 
   647     0291                     	;# 
   648     0291                     	;# 
   649     0292                     	;# 
   650     0293                     	;# 
   651     0294                     	;# 
   652     0298                     	;# 
   653     0298                     	;# 
   654     0299                     	;# 
   655     029A                     	;# 
   656     029B                     	;# 
   657     029E                     	;# 
   658     030C                     	;# 
   659     030D                     	;# 
   660     030E                     	;# 
   661     038C                     	;# 
   662     038D                     	;# 
   663     038E                     	;# 
   664     0391                     	;# 
   665     0392                     	;# 
   666     0393                     	;# 
   667     0394                     	;# 
   668     0395                     	;# 
   669     0396                     	;# 
   670     0397                     	;# 
   671     0398                     	;# 
   672     0399                     	;# 
   673     040E                     	;# 
   674     0413                     	;# 
   675     0413                     	;# 
   676     0414                     	;# 
   677     0414                     	;# 
   678     0415                     	;# 
   679     0416                     	;# 
   680     0417                     	;# 
   681     0418                     	;# 
   682     041A                     	;# 
   683     041A                     	;# 
   684     041B                     	;# 
   685     041B                     	;# 
   686     041C                     	;# 
   687     041D                     	;# 
   688     041E                     	;# 
   689     041F                     	;# 
   690     0493                     	;# 
   691     0494                     	;# 
   692     0495                     	;# 
   693     0496                     	;# 
   694     049A                     	;# 
   695     049B                     	;# 
   696     049C                     	;# 
   697     049D                     	;# 
   698     058C                     	;# 
   699     058C                     	;# 
   700     058D                     	;# 
   701     058E                     	;# 
   702     058E                     	;# 
   703     058F                     	;# 
   704     0590                     	;# 
   705     0590                     	;# 
   706     0591                     	;# 
   707     0592                     	;# 
   708     0592                     	;# 
   709     0593                     	;# 
   710     0594                     	;# 
   711     0594                     	;# 
   712     0595                     	;# 
   713     0596                     	;# 
   714     0596                     	;# 
   715     0597                     	;# 
   716     0598                     	;# 
   717     0599                     	;# 
   718     059A                     	;# 
   719     059B                     	;# 
   720     059B                     	;# 
   721     059C                     	;# 
   722     059D                     	;# 
   723     060C                     	;# 
   724     060C                     	;# 
   725     060D                     	;# 
   726     060E                     	;# 
   727     060F                     	;# 
   728     060F                     	;# 
   729     0610                     	;# 
   730     0611                     	;# 
   731     0612                     	;# 
   732     0613                     	;# 
   733     0614                     	;# 
   734     0617                     	;# 
   735     0617                     	;# 
   736     0618                     	;# 
   737     0619                     	;# 
   738     061A                     	;# 
   739     061A                     	;# 
   740     061B                     	;# 
   741     061C                     	;# 
   742     0691                     	;# 
   743     0692                     	;# 
   744     0693                     	;# 
   745     0694                     	;# 
   746     0695                     	;# 
   747     0696                     	;# 
   748     0697                     	;# 
   749     0699                     	;# 
   750     069A                     	;# 
   751     0711                     	;# 
   752     0712                     	;# 
   753     0713                     	;# 
   754     0714                     	;# 
   755     0715                     	;# 
   756     0718                     	;# 
   757     0718                     	;# 
   758     0719                     	;# 
   759     071A                     	;# 
   760     071A                     	;# 
   761     071B                     	;# 
   762     071C                     	;# 
   763     071D                     	;# 
   764     0791                     	;# 
   765     0791                     	;# 
   766     0792                     	;# 
   767     0793                     	;# 
   768     0793                     	;# 
   769     0794                     	;# 
   770     0795                     	;# 
   771     0795                     	;# 
   772     0796                     	;# 
   773     0797                     	;# 
   774     0797                     	;# 
   775     0798                     	;# 
   776     0799                     	;# 
   777     079A                     	;# 
   778     080C                     	;# 
   779     080C                     	;# 
   780     080D                     	;# 
   781     080E                     	;# 
   782     080E                     	;# 
   783     080F                     	;# 
   784     0810                     	;# 
   785     0810                     	;# 
   786     0811                     	;# 
   787     0812                     	;# 
   788     0812                     	;# 
   789     0813                     	;# 
   790     0814                     	;# 
   791     0815                     	;# 
   792     0816                     	;# 
   793     0817                     	;# 
   794     0818                     	;# 
   795     0819                     	;# 
   796     081A                     	;# 
   797     081A                     	;# 
   798     081B                     	;# 
   799     081C                     	;# 
   800     081C                     	;# 
   801     081D                     	;# 
   802     088C                     	;# 
   803     088D                     	;# 
   804     088E                     	;# 
   805     088F                     	;# 
   806     088F                     	;# 
   807     0890                     	;# 
   808     0891                     	;# 
   809     0892                     	;# 
   810     0893                     	;# 
   811     0893                     	;# 
   812     0894                     	;# 
   813     0895                     	;# 
   814     0896                     	;# 
   815     0897                     	;# 
   816     0897                     	;# 
   817     0898                     	;# 
   818     0899                     	;# 
   819     0D8C                     	;# 
   820     0D8C                     	;# 
   821     0D8D                     	;# 
   822     0D8E                     	;# 
   823     0D8F                     	;# 
   824     0D8F                     	;# 
   825     0D90                     	;# 
   826     0D91                     	;# 
   827     0D92                     	;# 
   828     0D92                     	;# 
   829     0D93                     	;# 
   830     0D94                     	;# 
   831     0D95                     	;# 
   832     0D95                     	;# 
   833     0D96                     	;# 
   834     0D97                     	;# 
   835     0D98                     	;# 
   836     0D99                     	;# 
   837     0D9A                     	;# 
   838     0D9B                     	;# 
   839     0D9C                     	;# 
   840     0D9D                     	;# 
   841     0D9E                     	;# 
   842     0D9E                     	;# 
   843     0D9F                     	;# 
   844     0DA0                     	;# 
   845     0DA1                     	;# 
   846     0DA1                     	;# 
   847     0DA2                     	;# 
   848     0DA3                     	;# 
   849     0DA4                     	;# 
   850     0DA4                     	;# 
   851     0DA5                     	;# 
   852     0DA6                     	;# 
   853     0DA7                     	;# 
   854     0DA7                     	;# 
   855     0DA8                     	;# 
   856     0DA9                     	;# 
   857     0DAA                     	;# 
   858     0DAB                     	;# 
   859     0DAC                     	;# 
   860     0DAD                     	;# 
   861     0DAE                     	;# 
   862     0DAF                     	;# 
   863     0E0F                     	;# 
   864     0E10                     	;# 
   865     0E11                     	;# 
   866     0E12                     	;# 
   867     0E13                     	;# 
   868     0E14                     	;# 
   869     0E15                     	;# 
   870     0E16                     	;# 
   871     0E17                     	;# 
   872     0E18                     	;# 
   873     0E19                     	;# 
   874     0E1A                     	;# 
   875     0E1B                     	;# 
   876     0E1C                     	;# 
   877     0E1D                     	;# 
   878     0E1E                     	;# 
   879     0E1F                     	;# 
   880     0E20                     	;# 
   881     0E21                     	;# 
   882     0E22                     	;# 
   883     0E23                     	;# 
   884     0E24                     	;# 
   885     0E25                     	;# 
   886     0E26                     	;# 
   887     0E27                     	;# 
   888     0E28                     	;# 
   889     0E29                     	;# 
   890     0E2A                     	;# 
   891     0E2B                     	;# 
   892     0E2C                     	;# 
   893     0E2D                     	;# 
   894     0E2E                     	;# 
   895     0E90                     	;# 
   896     0E91                     	;# 
   897     0E92                     	;# 
   898     0E94                     	;# 
   899     0E95                     	;# 
   900     0E9C                     	;# 
   901     0E9D                     	;# 
   902     0E9E                     	;# 
   903     0E9F                     	;# 
   904     0EA0                     	;# 
   905     0EA1                     	;# 
   906     0EA2                     	;# 
   907     0EA3                     	;# 
   908     0EA4                     	;# 
   909     0EA5                     	;# 
   910     0EA6                     	;# 
   911     0EA7                     	;# 
   912     0F0F                     	;# 
   913     0F10                     	;# 
   914     0F11                     	;# 
   915     0F12                     	;# 
   916     0F13                     	;# 
   917     0F14                     	;# 
   918     0F15                     	;# 
   919     0F16                     	;# 
   920     0F17                     	;# 
   921     0F18                     	;# 
   922     0F19                     	;# 
   923     0F1A                     	;# 
   924     0F1B                     	;# 
   925     0F1C                     	;# 
   926     0F1D                     	;# 
   927     0F1E                     	;# 
   928     0F1F                     	;# 
   929     0F20                     	;# 
   930     0F21                     	;# 
   931     0F22                     	;# 
   932     0F23                     	;# 
   933     0F24                     	;# 
   934     0F25                     	;# 
   935     0F26                     	;# 
   936     0F27                     	;# 
   937     0F28                     	;# 
   938     0F29                     	;# 
   939     0F2A                     	;# 
   940     0F2B                     	;# 
   941     0F2C                     	;# 
   942     0F2D                     	;# 
   943     0F2E                     	;# 
   944     0F2F                     	;# 
   945     0F30                     	;# 
   946     0F31                     	;# 
   947     0F32                     	;# 
   948     0F33                     	;# 
   949     0F34                     	;# 
   950     0F35                     	;# 
   951     0F36                     	;# 
   952     0F37                     	;# 
   953     0FE4                     	;# 
   954     0FE5                     	;# 
   955     0FE6                     	;# 
   956     0FE7                     	;# 
   957     0FE8                     	;# 
   958     0FE9                     	;# 
   959     0FEA                     	;# 
   960     0FEB                     	;# 
   961     0FED                     	;# 
   962     0FEE                     	;# 
   963     0FEF                     	;# 
   964     0000                     	;# 
   965     0001                     	;# 
   966     0002                     	;# 
   967     0003                     	;# 
   968     0004                     	;# 
   969     0005                     	;# 
   970     0006                     	;# 
   971     0007                     	;# 
   972     0008                     	;# 
   973     0009                     	;# 
   974     000A                     	;# 
   975     000B                     	;# 
   976     000C                     	;# 
   977     000D                     	;# 
   978     000E                     	;# 
   979     0010                     	;# 
   980     0011                     	;# 
   981     0012                     	;# 
   982     0013                     	;# 
   983     0014                     	;# 
   984     0015                     	;# 
   985     0016                     	;# 
   986     0016                     	;# 
   987     0017                     	;# 
   988     0018                     	;# 
   989     0019                     	;# 
   990     001A                     	;# 
   991     001A                     	;# 
   992     001B                     	;# 
   993     001B                     	;# 
   994     001C                     	;# 
   995     001D                     	;# 
   996     001E                     	;# 
   997     001F                     	;# 
   998     008C                     	;# 
   999     008D                     	;# 
  1000     008E                     	;# 
  1001     0090                     	;# 
  1002     0091                     	;# 
  1003     0092                     	;# 
  1004     0093                     	;# 
  1005     0094                     	;# 
  1006     0095                     	;# 
  1007     0096                     	;# 
  1008     0098                     	;# 
  1009     0099                     	;# 
  1010     009A                     	;# 
  1011     009B                     	;# 
  1012     009B                     	;# 
  1013     009C                     	;# 
  1014     009D                     	;# 
  1015     009E                     	;# 
  1016     009F                     	;# 
  1017     010C                     	;# 
  1018     010D                     	;# 
  1019     010E                     	;# 
  1020     0111                     	;# 
  1021     0112                     	;# 
  1022     0113                     	;# 
  1023     0114                     	;# 
  1024     0115                     	;# 
  1025     0116                     	;# 
  1026     0117                     	;# 
  1027     0118                     	;# 
  1028     0119                     	;# 
  1029     011C                     	;# 
  1030     018C                     	;# 
  1031     018D                     	;# 
  1032     018E                     	;# 
  1033     0191                     	;# 
  1034     0191                     	;# 
  1035     0192                     	;# 
  1036     0193                     	;# 
  1037     0193                     	;# 
  1038     0194                     	;# 
  1039     0195                     	;# 
  1040     0196                     	;# 
  1041     0197                     	;# 
  1042     0199                     	;# 
  1043     0199                     	;# 
  1044     0199                     	;# 
  1045     019A                     	;# 
  1046     019A                     	;# 
  1047     019A                     	;# 
  1048     019B                     	;# 
  1049     019B                     	;# 
  1050     019B                     	;# 
  1051     019B                     	;# 
  1052     019B                     	;# 
  1053     019C                     	;# 
  1054     019C                     	;# 
  1055     019C                     	;# 
  1056     019D                     	;# 
  1057     019D                     	;# 
  1058     019D                     	;# 
  1059     019E                     	;# 
  1060     019E                     	;# 
  1061     019E                     	;# 
  1062     019F                     	;# 
  1063     019F                     	;# 
  1064     019F                     	;# 
  1065     019F                     	;# 
  1066     019F                     	;# 
  1067     020C                     	;# 
  1068     020D                     	;# 
  1069     020E                     	;# 
  1070     0211                     	;# 
  1071     0211                     	;# 
  1072     0212                     	;# 
  1073     0212                     	;# 
  1074     0213                     	;# 
  1075     0213                     	;# 
  1076     0214                     	;# 
  1077     0214                     	;# 
  1078     0215                     	;# 
  1079     0215                     	;# 
  1080     0215                     	;# 
  1081     0215                     	;# 
  1082     0216                     	;# 
  1083     0216                     	;# 
  1084     0217                     	;# 
  1085     0217                     	;# 
  1086     028C                     	;# 
  1087     028D                     	;# 
  1088     028E                     	;# 
  1089     0291                     	;# 
  1090     0291                     	;# 
  1091     0292                     	;# 
  1092     0293                     	;# 
  1093     0294                     	;# 
  1094     0298                     	;# 
  1095     0298                     	;# 
  1096     0299                     	;# 
  1097     029A                     	;# 
  1098     029B                     	;# 
  1099     029E                     	;# 
  1100     030C                     	;# 
  1101     030D                     	;# 
  1102     030E                     	;# 
  1103     038C                     	;# 
  1104     038D                     	;# 
  1105     038E                     	;# 
  1106     0391                     	;# 
  1107     0392                     	;# 
  1108     0393                     	;# 
  1109     0394                     	;# 
  1110     0395                     	;# 
  1111     0396                     	;# 
  1112     0397                     	;# 
  1113     0398                     	;# 
  1114     0399                     	;# 
  1115     040E                     	;# 
  1116     0413                     	;# 
  1117     0413                     	;# 
  1118     0414                     	;# 
  1119     0414                     	;# 
  1120     0415                     	;# 
  1121     0416                     	;# 
  1122     0417                     	;# 
  1123     0418                     	;# 
  1124     041A                     	;# 
  1125     041A                     	;# 
  1126     041B                     	;# 
  1127     041B                     	;# 
  1128     041C                     	;# 
  1129     041D                     	;# 
  1130     041E                     	;# 
  1131     041F                     	;# 
  1132     0493                     	;# 
  1133     0494                     	;# 
  1134     0495                     	;# 
  1135     0496                     	;# 
  1136     049A                     	;# 
  1137     049B                     	;# 
  1138     049C                     	;# 
  1139     049D                     	;# 
  1140     058C                     	;# 
  1141     058C                     	;# 
  1142     058D                     	;# 
  1143     058E                     	;# 
  1144     058E                     	;# 
  1145     058F                     	;# 
  1146     0590                     	;# 
  1147     0590                     	;# 
  1148     0591                     	;# 
  1149     0592                     	;# 
  1150     0592                     	;# 
  1151     0593                     	;# 
  1152     0594                     	;# 
  1153     0594                     	;# 
  1154     0595                     	;# 
  1155     0596                     	;# 
  1156     0596                     	;# 
  1157     0597                     	;# 
  1158     0598                     	;# 
  1159     0599                     	;# 
  1160     059A                     	;# 
  1161     059B                     	;# 
  1162     059B                     	;# 
  1163     059C                     	;# 
  1164     059D                     	;# 
  1165     060C                     	;# 
  1166     060C                     	;# 
  1167     060D                     	;# 
  1168     060E                     	;# 
  1169     060F                     	;# 
  1170     060F                     	;# 
  1171     0610                     	;# 
  1172     0611                     	;# 
  1173     0612                     	;# 
  1174     0613                     	;# 
  1175     0614                     	;# 
  1176     0617                     	;# 
  1177     0617                     	;# 
  1178     0618                     	;# 
  1179     0619                     	;# 
  1180     061A                     	;# 
  1181     061A                     	;# 
  1182     061B                     	;# 
  1183     061C                     	;# 
  1184     0691                     	;# 
  1185     0692                     	;# 
  1186     0693                     	;# 
  1187     0694                     	;# 
  1188     0695                     	;# 
  1189     0696                     	;# 
  1190     0697                     	;# 
  1191     0699                     	;# 
  1192     069A                     	;# 
  1193     0711                     	;# 
  1194     0712                     	;# 
  1195     0713                     	;# 
  1196     0714                     	;# 
  1197     0715                     	;# 
  1198     0718                     	;# 
  1199     0718                     	;# 
  1200     0719                     	;# 
  1201     071A                     	;# 
  1202     071A                     	;# 
  1203     071B                     	;# 
  1204     071C                     	;# 
  1205     071D                     	;# 
  1206     0791                     	;# 
  1207     0791                     	;# 
  1208     0792                     	;# 
  1209     0793                     	;# 
  1210     0793                     	;# 
  1211     0794                     	;# 
  1212     0795                     	;# 
  1213     0795                     	;# 
  1214     0796                     	;# 
  1215     0797                     	;# 
  1216     0797                     	;# 
  1217     0798                     	;# 
  1218     0799                     	;# 
  1219     079A                     	;# 
  1220     080C                     	;# 
  1221     080C                     	;# 
  1222     080D                     	;# 
  1223     080E                     	;# 
  1224     080E                     	;# 
  1225     080F                     	;# 
  1226     0810                     	;# 
  1227     0810                     	;# 
  1228     0811                     	;# 
  1229     0812                     	;# 
  1230     0812                     	;# 
  1231     0813                     	;# 
  1232     0814                     	;# 
  1233     0815                     	;# 
  1234     0816                     	;# 
  1235     0817                     	;# 
  1236     0818                     	;# 
  1237     0819                     	;# 
  1238     081A                     	;# 
  1239     081A                     	;# 
  1240     081B                     	;# 
  1241     081C                     	;# 
  1242     081C                     	;# 
  1243     081D                     	;# 
  1244     088C                     	;# 
  1245     088D                     	;# 
  1246     088E                     	;# 
  1247     088F                     	;# 
  1248     088F                     	;# 
  1249     0890                     	;# 
  1250     0891                     	;# 
  1251     0892                     	;# 
  1252     0893                     	;# 
  1253     0893                     	;# 
  1254     0894                     	;# 
  1255     0895                     	;# 
  1256     0896                     	;# 
  1257     0897                     	;# 
  1258     0897                     	;# 
  1259     0898                     	;# 
  1260     0899                     	;# 
  1261     0D8C                     	;# 
  1262     0D8C                     	;# 
  1263     0D8D                     	;# 
  1264     0D8E                     	;# 
  1265     0D8F                     	;# 
  1266     0D8F                     	;# 
  1267     0D90                     	;# 
  1268     0D91                     	;# 
  1269     0D92                     	;# 
  1270     0D92                     	;# 
  1271     0D93                     	;# 
  1272     0D94                     	;# 
  1273     0D95                     	;# 
  1274     0D95                     	;# 
  1275     0D96                     	;# 
  1276     0D97                     	;# 
  1277     0D98                     	;# 
  1278     0D99                     	;# 
  1279     0D9A                     	;# 
  1280     0D9B                     	;# 
  1281     0D9C                     	;# 
  1282     0D9D                     	;# 
  1283     0D9E                     	;# 
  1284     0D9E                     	;# 
  1285     0D9F                     	;# 
  1286     0DA0                     	;# 
  1287     0DA1                     	;# 
  1288     0DA1                     	;# 
  1289     0DA2                     	;# 
  1290     0DA3                     	;# 
  1291     0DA4                     	;# 
  1292     0DA4                     	;# 
  1293     0DA5                     	;# 
  1294     0DA6                     	;# 
  1295     0DA7                     	;# 
  1296     0DA7                     	;# 
  1297     0DA8                     	;# 
  1298     0DA9                     	;# 
  1299     0DAA                     	;# 
  1300     0DAB                     	;# 
  1301     0DAC                     	;# 
  1302     0DAD                     	;# 
  1303     0DAE                     	;# 
  1304     0DAF                     	;# 
  1305     0E0F                     	;# 
  1306     0E10                     	;# 
  1307     0E11                     	;# 
  1308     0E12                     	;# 
  1309     0E13                     	;# 
  1310     0E14                     	;# 
  1311     0E15                     	;# 
  1312     0E16                     	;# 
  1313     0E17                     	;# 
  1314     0E18                     	;# 
  1315     0E19                     	;# 
  1316     0E1A                     	;# 
  1317     0E1B                     	;# 
  1318     0E1C                     	;# 
  1319     0E1D                     	;# 
  1320     0E1E                     	;# 
  1321     0E1F                     	;# 
  1322     0E20                     	;# 
  1323     0E21                     	;# 
  1324     0E22                     	;# 
  1325     0E23                     	;# 
  1326     0E24                     	;# 
  1327     0E25                     	;# 
  1328     0E26                     	;# 
  1329     0E27                     	;# 
  1330     0E28                     	;# 
  1331     0E29                     	;# 
  1332     0E2A                     	;# 
  1333     0E2B                     	;# 
  1334     0E2C                     	;# 
  1335     0E2D                     	;# 
  1336     0E2E                     	;# 
  1337     0E90                     	;# 
  1338     0E91                     	;# 
  1339     0E92                     	;# 
  1340     0E94                     	;# 
  1341     0E95                     	;# 
  1342     0E9C                     	;# 
  1343     0E9D                     	;# 
  1344     0E9E                     	;# 
  1345     0E9F                     	;# 
  1346     0EA0                     	;# 
  1347     0EA1                     	;# 
  1348     0EA2                     	;# 
  1349     0EA3                     	;# 
  1350     0EA4                     	;# 
  1351     0EA5                     	;# 
  1352     0EA6                     	;# 
  1353     0EA7                     	;# 
  1354     0F0F                     	;# 
  1355     0F10                     	;# 
  1356     0F11                     	;# 
  1357     0F12                     	;# 
  1358     0F13                     	;# 
  1359     0F14                     	;# 
  1360     0F15                     	;# 
  1361     0F16                     	;# 
  1362     0F17                     	;# 
  1363     0F18                     	;# 
  1364     0F19                     	;# 
  1365     0F1A                     	;# 
  1366     0F1B                     	;# 
  1367     0F1C                     	;# 
  1368     0F1D                     	;# 
  1369     0F1E                     	;# 
  1370     0F1F                     	;# 
  1371     0F20                     	;# 
  1372     0F21                     	;# 
  1373     0F22                     	;# 
  1374     0F23                     	;# 
  1375     0F24                     	;# 
  1376     0F25                     	;# 
  1377     0F26                     	;# 
  1378     0F27                     	;# 
  1379     0F28                     	;# 
  1380     0F29                     	;# 
  1381     0F2A                     	;# 
  1382     0F2B                     	;# 
  1383     0F2C                     	;# 
  1384     0F2D                     	;# 
  1385     0F2E                     	;# 
  1386     0F2F                     	;# 
  1387     0F30                     	;# 
  1388     0F31                     	;# 
  1389     0F32                     	;# 
  1390     0F33                     	;# 
  1391     0F34                     	;# 
  1392     0F35                     	;# 
  1393     0F36                     	;# 
  1394     0F37                     	;# 
  1395     0FE4                     	;# 
  1396     0FE5                     	;# 
  1397     0FE6                     	;# 
  1398     0FE7                     	;# 
  1399     0FE8                     	;# 
  1400     0FE9                     	;# 
  1401     0FEA                     	;# 
  1402     0FEB                     	;# 
  1403     0FED                     	;# 
  1404     0FEE                     	;# 
  1405     0FEF                     	;# 
  1406     0000                     	;# 
  1407     0001                     	;# 
  1408     0002                     	;# 
  1409     0003                     	;# 
  1410     0004                     	;# 
  1411     0005                     	;# 
  1412     0006                     	;# 
  1413     0007                     	;# 
  1414     0008                     	;# 
  1415     0009                     	;# 
  1416     000A                     	;# 
  1417     000B                     	;# 
  1418     000C                     	;# 
  1419     000D                     	;# 
  1420     000E                     	;# 
  1421     0010                     	;# 
  1422     0011                     	;# 
  1423     0012                     	;# 
  1424     0013                     	;# 
  1425     0014                     	;# 
  1426     0015                     	;# 
  1427     0016                     	;# 
  1428     0016                     	;# 
  1429     0017                     	;# 
  1430     0018                     	;# 
  1431     0019                     	;# 
  1432     001A                     	;# 
  1433     001A                     	;# 
  1434     001B                     	;# 
  1435     001B                     	;# 
  1436     001C                     	;# 
  1437     001D                     	;# 
  1438     001E                     	;# 
  1439     001F                     	;# 
  1440     008C                     	;# 
  1441     008D                     	;# 
  1442     008E                     	;# 
  1443     0090                     	;# 
  1444     0091                     	;# 
  1445     0092                     	;# 
  1446     0093                     	;# 
  1447     0094                     	;# 
  1448     0095                     	;# 
  1449     0096                     	;# 
  1450     0098                     	;# 
  1451     0099                     	;# 
  1452     009A                     	;# 
  1453     009B                     	;# 
  1454     009B                     	;# 
  1455     009C                     	;# 
  1456     009D                     	;# 
  1457     009E                     	;# 
  1458     009F                     	;# 
  1459     010C                     	;# 
  1460     010D                     	;# 
  1461     010E                     	;# 
  1462     0111                     	;# 
  1463     0112                     	;# 
  1464     0113                     	;# 
  1465     0114                     	;# 
  1466     0115                     	;# 
  1467     0116                     	;# 
  1468     0117                     	;# 
  1469     0118                     	;# 
  1470     0119                     	;# 
  1471     011C                     	;# 
  1472     018C                     	;# 
  1473     018D                     	;# 
  1474     018E                     	;# 
  1475     0191                     	;# 
  1476     0191                     	;# 
  1477     0192                     	;# 
  1478     0193                     	;# 
  1479     0193                     	;# 
  1480     0194                     	;# 
  1481     0195                     	;# 
  1482     0196                     	;# 
  1483     0197                     	;# 
  1484     0199                     	;# 
  1485     0199                     	;# 
  1486     0199                     	;# 
  1487     019A                     	;# 
  1488     019A                     	;# 
  1489     019A                     	;# 
  1490     019B                     	;# 
  1491     019B                     	;# 
  1492     019B                     	;# 
  1493     019B                     	;# 
  1494     019B                     	;# 
  1495     019C                     	;# 
  1496     019C                     	;# 
  1497     019C                     	;# 
  1498     019D                     	;# 
  1499     019D                     	;# 
  1500     019D                     	;# 
  1501     019E                     	;# 
  1502     019E                     	;# 
  1503     019E                     	;# 
  1504     019F                     	;# 
  1505     019F                     	;# 
  1506     019F                     	;# 
  1507     019F                     	;# 
  1508     019F                     	;# 
  1509     020C                     	;# 
  1510     020D                     	;# 
  1511     020E                     	;# 
  1512     0211                     	;# 
  1513     0211                     	;# 
  1514     0212                     	;# 
  1515     0212                     	;# 
  1516     0213                     	;# 
  1517     0213                     	;# 
  1518     0214                     	;# 
  1519     0214                     	;# 
  1520     0215                     	;# 
  1521     0215                     	;# 
  1522     0215                     	;# 
  1523     0215                     	;# 
  1524     0216                     	;# 
  1525     0216                     	;# 
  1526     0217                     	;# 
  1527     0217                     	;# 
  1528     028C                     	;# 
  1529     028D                     	;# 
  1530     028E                     	;# 
  1531     0291                     	;# 
  1532     0291                     	;# 
  1533     0292                     	;# 
  1534     0293                     	;# 
  1535     0294                     	;# 
  1536     0298                     	;# 
  1537     0298                     	;# 
  1538     0299                     	;# 
  1539     029A                     	;# 
  1540     029B                     	;# 
  1541     029E                     	;# 
  1542     030C                     	;# 
  1543     030D                     	;# 
  1544     030E                     	;# 
  1545     038C                     	;# 
  1546     038D                     	;# 
  1547     038E                     	;# 
  1548     0391                     	;# 
  1549     0392                     	;# 
  1550     0393                     	;# 
  1551     0394                     	;# 
  1552     0395                     	;# 
  1553     0396                     	;# 
  1554     0397                     	;# 
  1555     0398                     	;# 
  1556     0399                     	;# 
  1557     040E                     	;# 
  1558     0413                     	;# 
  1559     0413                     	;# 
  1560     0414                     	;# 
  1561     0414                     	;# 
  1562     0415                     	;# 
  1563     0416                     	;# 
  1564     0417                     	;# 
  1565     0418                     	;# 
  1566     041A                     	;# 
  1567     041A                     	;# 
  1568     041B                     	;# 
  1569     041B                     	;# 
  1570     041C                     	;# 
  1571     041D                     	;# 
  1572     041E                     	;# 
  1573     041F                     	;# 
  1574     0493                     	;# 
  1575     0494                     	;# 
  1576     0495                     	;# 
  1577     0496                     	;# 
  1578     049A                     	;# 
  1579     049B                     	;# 
  1580     049C                     	;# 
  1581     049D                     	;# 
  1582     058C                     	;# 
  1583     058C                     	;# 
  1584     058D                     	;# 
  1585     058E                     	;# 
  1586     058E                     	;# 
  1587     058F                     	;# 
  1588     0590                     	;# 
  1589     0590                     	;# 
  1590     0591                     	;# 
  1591     0592                     	;# 
  1592     0592                     	;# 
  1593     0593                     	;# 
  1594     0594                     	;# 
  1595     0594                     	;# 
  1596     0595                     	;# 
  1597     0596                     	;# 
  1598     0596                     	;# 
  1599     0597                     	;# 
  1600     0598                     	;# 
  1601     0599                     	;# 
  1602     059A                     	;# 
  1603     059B                     	;# 
  1604     059B                     	;# 
  1605     059C                     	;# 
  1606     059D                     	;# 
  1607     060C                     	;# 
  1608     060C                     	;# 
  1609     060D                     	;# 
  1610     060E                     	;# 
  1611     060F                     	;# 
  1612     060F                     	;# 
  1613     0610                     	;# 
  1614     0611                     	;# 
  1615     0612                     	;# 
  1616     0613                     	;# 
  1617     0614                     	;# 
  1618     0617                     	;# 
  1619     0617                     	;# 
  1620     0618                     	;# 
  1621     0619                     	;# 
  1622     061A                     	;# 
  1623     061A                     	;# 
  1624     061B                     	;# 
  1625     061C                     	;# 
  1626     0691                     	;# 
  1627     0692                     	;# 
  1628     0693                     	;# 
  1629     0694                     	;# 
  1630     0695                     	;# 
  1631     0696                     	;# 
  1632     0697                     	;# 
  1633     0699                     	;# 
  1634     069A                     	;# 
  1635     0711                     	;# 
  1636     0712                     	;# 
  1637     0713                     	;# 
  1638     0714                     	;# 
  1639     0715                     	;# 
  1640     0718                     	;# 
  1641     0718                     	;# 
  1642     0719                     	;# 
  1643     071A                     	;# 
  1644     071A                     	;# 
  1645     071B                     	;# 
  1646     071C                     	;# 
  1647     071D                     	;# 
  1648     0791                     	;# 
  1649     0791                     	;# 
  1650     0792                     	;# 
  1651     0793                     	;# 
  1652     0793                     	;# 
  1653     0794                     	;# 
  1654     0795                     	;# 
  1655     0795                     	;# 
  1656     0796                     	;# 
  1657     0797                     	;# 
  1658     0797                     	;# 
  1659     0798                     	;# 
  1660     0799                     	;# 
  1661     079A                     	;# 
  1662     080C                     	;# 
  1663     080C                     	;# 
  1664     080D                     	;# 
  1665     080E                     	;# 
  1666     080E                     	;# 
  1667     080F                     	;# 
  1668     0810                     	;# 
  1669     0810                     	;# 
  1670     0811                     	;# 
  1671     0812                     	;# 
  1672     0812                     	;# 
  1673     0813                     	;# 
  1674     0814                     	;# 
  1675     0815                     	;# 
  1676     0816                     	;# 
  1677     0817                     	;# 
  1678     0818                     	;# 
  1679     0819                     	;# 
  1680     081A                     	;# 
  1681     081A                     	;# 
  1682     081B                     	;# 
  1683     081C                     	;# 
  1684     081C                     	;# 
  1685     081D                     	;# 
  1686     088C                     	;# 
  1687     088D                     	;# 
  1688     088E                     	;# 
  1689     088F                     	;# 
  1690     088F                     	;# 
  1691     0890                     	;# 
  1692     0891                     	;# 
  1693     0892                     	;# 
  1694     0893                     	;# 
  1695     0893                     	;# 
  1696     0894                     	;# 
  1697     0895                     	;# 
  1698     0896                     	;# 
  1699     0897                     	;# 
  1700     0897                     	;# 
  1701     0898                     	;# 
  1702     0899                     	;# 
  1703     0D8C                     	;# 
  1704     0D8C                     	;# 
  1705     0D8D                     	;# 
  1706     0D8E                     	;# 
  1707     0D8F                     	;# 
  1708     0D8F                     	;# 
  1709     0D90                     	;# 
  1710     0D91                     	;# 
  1711     0D92                     	;# 
  1712     0D92                     	;# 
  1713     0D93                     	;# 
  1714     0D94                     	;# 
  1715     0D95                     	;# 
  1716     0D95                     	;# 
  1717     0D96                     	;# 
  1718     0D97                     	;# 
  1719     0D98                     	;# 
  1720     0D99                     	;# 
  1721     0D9A                     	;# 
  1722     0D9B                     	;# 
  1723     0D9C                     	;# 
  1724     0D9D                     	;# 
  1725     0D9E                     	;# 
  1726     0D9E                     	;# 
  1727     0D9F                     	;# 
  1728     0DA0                     	;# 
  1729     0DA1                     	;# 
  1730     0DA1                     	;# 
  1731     0DA2                     	;# 
  1732     0DA3                     	;# 
  1733     0DA4                     	;# 
  1734     0DA4                     	;# 
  1735     0DA5                     	;# 
  1736     0DA6                     	;# 
  1737     0DA7                     	;# 
  1738     0DA7                     	;# 
  1739     0DA8                     	;# 
  1740     0DA9                     	;# 
  1741     0DAA                     	;# 
  1742     0DAB                     	;# 
  1743     0DAC                     	;# 
  1744     0DAD                     	;# 
  1745     0DAE                     	;# 
  1746     0DAF                     	;# 
  1747     0E0F                     	;# 
  1748     0E10                     	;# 
  1749     0E11                     	;# 
  1750     0E12                     	;# 
  1751     0E13                     	;# 
  1752     0E14                     	;# 
  1753     0E15                     	;# 
  1754     0E16                     	;# 
  1755     0E17                     	;# 
  1756     0E18                     	;# 
  1757     0E19                     	;# 
  1758     0E1A                     	;# 
  1759     0E1B                     	;# 
  1760     0E1C                     	;# 
  1761     0E1D                     	;# 
  1762     0E1E                     	;# 
  1763     0E1F                     	;# 
  1764     0E20                     	;# 
  1765     0E21                     	;# 
  1766     0E22                     	;# 
  1767     0E23                     	;# 
  1768     0E24                     	;# 
  1769     0E25                     	;# 
  1770     0E26                     	;# 
  1771     0E27                     	;# 
  1772     0E28                     	;# 
  1773     0E29                     	;# 
  1774     0E2A                     	;# 
  1775     0E2B                     	;# 
  1776     0E2C                     	;# 
  1777     0E2D                     	;# 
  1778     0E2E                     	;# 
  1779     0E90                     	;# 
  1780     0E91                     	;# 
  1781     0E92                     	;# 
  1782     0E94                     	;# 
  1783     0E95                     	;# 
  1784     0E9C                     	;# 
  1785     0E9D                     	;# 
  1786     0E9E                     	;# 
  1787     0E9F                     	;# 
  1788     0EA0                     	;# 
  1789     0EA1                     	;# 
  1790     0EA2                     	;# 
  1791     0EA3                     	;# 
  1792     0EA4                     	;# 
  1793     0EA5                     	;# 
  1794     0EA6                     	;# 
  1795     0EA7                     	;# 
  1796     0F0F                     	;# 
  1797     0F10                     	;# 
  1798     0F11                     	;# 
  1799     0F12                     	;# 
  1800     0F13                     	;# 
  1801     0F14                     	;# 
  1802     0F15                     	;# 
  1803     0F16                     	;# 
  1804     0F17                     	;# 
  1805     0F18                     	;# 
  1806     0F19                     	;# 
  1807     0F1A                     	;# 
  1808     0F1B                     	;# 
  1809     0F1C                     	;# 
  1810     0F1D                     	;# 
  1811     0F1E                     	;# 
  1812     0F1F                     	;# 
  1813     0F20                     	;# 
  1814     0F21                     	;# 
  1815     0F22                     	;# 
  1816     0F23                     	;# 
  1817     0F24                     	;# 
  1818     0F25                     	;# 
  1819     0F26                     	;# 
  1820     0F27                     	;# 
  1821     0F28                     	;# 
  1822     0F29                     	;# 
  1823     0F2A                     	;# 
  1824     0F2B                     	;# 
  1825     0F2C                     	;# 
  1826     0F2D                     	;# 
  1827     0F2E                     	;# 
  1828     0F2F                     	;# 
  1829     0F30                     	;# 
  1830     0F31                     	;# 
  1831     0F32                     	;# 
  1832     0F33                     	;# 
  1833     0F34                     	;# 
  1834     0F35                     	;# 
  1835     0F36                     	;# 
  1836     0F37                     	;# 
  1837     0FE4                     	;# 
  1838     0FE5                     	;# 
  1839     0FE6                     	;# 
  1840     0FE7                     	;# 
  1841     0FE8                     	;# 
  1842     0FE9                     	;# 
  1843     0FEA                     	;# 
  1844     0FEB                     	;# 
  1845     0FED                     	;# 
  1846     0FEE                     	;# 
  1847     0FEF                     	;# 
  1848     0000                     	;# 
  1849     0001                     	;# 
  1850     0002                     	;# 
  1851     0003                     	;# 
  1852     0004                     	;# 
  1853     0005                     	;# 
  1854     0006                     	;# 
  1855     0007                     	;# 
  1856     0008                     	;# 
  1857     0009                     	;# 
  1858     000A                     	;# 
  1859     000B                     	;# 
  1860     000C                     	;# 
  1861     000D                     	;# 
  1862     000E                     	;# 
  1863     0010                     	;# 
  1864     0011                     	;# 
  1865     0012                     	;# 
  1866     0013                     	;# 
  1867     0014                     	;# 
  1868     0015                     	;# 
  1869     0016                     	;# 
  1870     0016                     	;# 
  1871     0017                     	;# 
  1872     0018                     	;# 
  1873     0019                     	;# 
  1874     001A                     	;# 
  1875     001A                     	;# 
  1876     001B                     	;# 
  1877     001B                     	;# 
  1878     001C                     	;# 
  1879     001D                     	;# 
  1880     001E                     	;# 
  1881     001F                     	;# 
  1882     008C                     	;# 
  1883     008D                     	;# 
  1884     008E                     	;# 
  1885     0090                     	;# 
  1886     0091                     	;# 
  1887     0092                     	;# 
  1888     0093                     	;# 
  1889     0094                     	;# 
  1890     0095                     	;# 
  1891     0096                     	;# 
  1892     0098                     	;# 
  1893     0099                     	;# 
  1894     009A                     	;# 
  1895     009B                     	;# 
  1896     009B                     	;# 
  1897     009C                     	;# 
  1898     009D                     	;# 
  1899     009E                     	;# 
  1900     009F                     	;# 
  1901     010C                     	;# 
  1902     010D                     	;# 
  1903     010E                     	;# 
  1904     0111                     	;# 
  1905     0112                     	;# 
  1906     0113                     	;# 
  1907     0114                     	;# 
  1908     0115                     	;# 
  1909     0116                     	;# 
  1910     0117                     	;# 
  1911     0118                     	;# 
  1912     0119                     	;# 
  1913     011C                     	;# 
  1914     018C                     	;# 
  1915     018D                     	;# 
  1916     018E                     	;# 
  1917     0191                     	;# 
  1918     0191                     	;# 
  1919     0192                     	;# 
  1920     0193                     	;# 
  1921     0193                     	;# 
  1922     0194                     	;# 
  1923     0195                     	;# 
  1924     0196                     	;# 
  1925     0197                     	;# 
  1926     0199                     	;# 
  1927     0199                     	;# 
  1928     0199                     	;# 
  1929     019A                     	;# 
  1930     019A                     	;# 
  1931     019A                     	;# 
  1932     019B                     	;# 
  1933     019B                     	;# 
  1934     019B                     	;# 
  1935     019B                     	;# 
  1936     019B                     	;# 
  1937     019C                     	;# 
  1938     019C                     	;# 
  1939     019C                     	;# 
  1940     019D                     	;# 
  1941     019D                     	;# 
  1942     019D                     	;# 
  1943     019E                     	;# 
  1944     019E                     	;# 
  1945     019E                     	;# 
  1946     019F                     	;# 
  1947     019F                     	;# 
  1948     019F                     	;# 
  1949     019F                     	;# 
  1950     019F                     	;# 
  1951     020C                     	;# 
  1952     020D                     	;# 
  1953     020E                     	;# 
  1954     0211                     	;# 
  1955     0211                     	;# 
  1956     0212                     	;# 
  1957     0212                     	;# 
  1958     0213                     	;# 
  1959     0213                     	;# 
  1960     0214                     	;# 
  1961     0214                     	;# 
  1962     0215                     	;# 
  1963     0215                     	;# 
  1964     0215                     	;# 
  1965     0215                     	;# 
  1966     0216                     	;# 
  1967     0216                     	;# 
  1968     0217                     	;# 
  1969     0217                     	;# 
  1970     028C                     	;# 
  1971     028D                     	;# 
  1972     028E                     	;# 
  1973     0291                     	;# 
  1974     0291                     	;# 
  1975     0292                     	;# 
  1976     0293                     	;# 
  1977     0294                     	;# 
  1978     0298                     	;# 
  1979     0298                     	;# 
  1980     0299                     	;# 
  1981     029A                     	;# 
  1982     029B                     	;# 
  1983     029E                     	;# 
  1984     030C                     	;# 
  1985     030D                     	;# 
  1986     030E                     	;# 
  1987     038C                     	;# 
  1988     038D                     	;# 
  1989     038E                     	;# 
  1990     0391                     	;# 
  1991     0392                     	;# 
  1992     0393                     	;# 
  1993     0394                     	;# 
  1994     0395                     	;# 
  1995     0396                     	;# 
  1996     0397                     	;# 
  1997     0398                     	;# 
  1998     0399                     	;# 
  1999     040E                     	;# 
  2000     0413                     	;# 
  2001     0413                     	;# 
  2002     0414                     	;# 
  2003     0414                     	;# 
  2004     0415                     	;# 
  2005     0416                     	;# 
  2006     0417                     	;# 
  2007     0418                     	;# 
  2008     041A                     	;# 
  2009     041A                     	;# 
  2010     041B                     	;# 
  2011     041B                     	;# 
  2012     041C                     	;# 
  2013     041D                     	;# 
  2014     041E                     	;# 
  2015     041F                     	;# 
  2016     0493                     	;# 
  2017     0494                     	;# 
  2018     0495                     	;# 
  2019     0496                     	;# 
  2020     049A                     	;# 
  2021     049B                     	;# 
  2022     049C                     	;# 
  2023     049D                     	;# 
  2024     058C                     	;# 
  2025     058C                     	;# 
  2026     058D                     	;# 
  2027     058E                     	;# 
  2028     058E                     	;# 
  2029     058F                     	;# 
  2030     0590                     	;# 
  2031     0590                     	;# 
  2032     0591                     	;# 
  2033     0592                     	;# 
  2034     0592                     	;# 
  2035     0593                     	;# 
  2036     0594                     	;# 
  2037     0594                     	;# 
  2038     0595                     	;# 
  2039     0596                     	;# 
  2040     0596                     	;# 
  2041     0597                     	;# 
  2042     0598                     	;# 
  2043     0599                     	;# 
  2044     059A                     	;# 
  2045     059B                     	;# 
  2046     059B                     	;# 
  2047     059C                     	;# 
  2048     059D                     	;# 
  2049     060C                     	;# 
  2050     060C                     	;# 
  2051     060D                     	;# 
  2052     060E                     	;# 
  2053     060F                     	;# 
  2054     060F                     	;# 
  2055     0610                     	;# 
  2056     0611                     	;# 
  2057     0612                     	;# 
  2058     0613                     	;# 
  2059     0614                     	;# 
  2060     0617                     	;# 
  2061     0617                     	;# 
  2062     0618                     	;# 
  2063     0619                     	;# 
  2064     061A                     	;# 
  2065     061A                     	;# 
  2066     061B                     	;# 
  2067     061C                     	;# 
  2068     0691                     	;# 
  2069     0692                     	;# 
  2070     0693                     	;# 
  2071     0694                     	;# 
  2072     0695                     	;# 
  2073     0696                     	;# 
  2074     0697                     	;# 
  2075     0699                     	;# 
  2076     069A                     	;# 
  2077     0711                     	;# 
  2078     0712                     	;# 
  2079     0713                     	;# 
  2080     0714                     	;# 
  2081     0715                     	;# 
  2082     0718                     	;# 
  2083     0718                     	;# 
  2084     0719                     	;# 
  2085     071A                     	;# 
  2086     071A                     	;# 
  2087     071B                     	;# 
  2088     071C                     	;# 
  2089     071D                     	;# 
  2090     0791                     	;# 
  2091     0791                     	;# 
  2092     0792                     	;# 
  2093     0793                     	;# 
  2094     0793                     	;# 
  2095     0794                     	;# 
  2096     0795                     	;# 
  2097     0795                     	;# 
  2098     0796                     	;# 
  2099     0797                     	;# 
  2100     0797                     	;# 
  2101     0798                     	;# 
  2102     0799                     	;# 
  2103     079A                     	;# 
  2104     080C                     	;# 
  2105     080C                     	;# 
  2106     080D                     	;# 
  2107     080E                     	;# 
  2108     080E                     	;# 
  2109     080F                     	;# 
  2110     0810                     	;# 
  2111     0810                     	;# 
  2112     0811                     	;# 
  2113     0812                     	;# 
  2114     0812                     	;# 
  2115     0813                     	;# 
  2116     0814                     	;# 
  2117     0815                     	;# 
  2118     0816                     	;# 
  2119     0817                     	;# 
  2120     0818                     	;# 
  2121     0819                     	;# 
  2122     081A                     	;# 
  2123     081A                     	;# 
  2124     081B                     	;# 
  2125     081C                     	;# 
  2126     081C                     	;# 
  2127     081D                     	;# 
  2128     088C                     	;# 
  2129     088D                     	;# 
  2130     088E                     	;# 
  2131     088F                     	;# 
  2132     088F                     	;# 
  2133     0890                     	;# 
  2134     0891                     	;# 
  2135     0892                     	;# 
  2136     0893                     	;# 
  2137     0893                     	;# 
  2138     0894                     	;# 
  2139     0895                     	;# 
  2140     0896                     	;# 
  2141     0897                     	;# 
  2142     0897                     	;# 
  2143     0898                     	;# 
  2144     0899                     	;# 
  2145     0D8C                     	;# 
  2146     0D8C                     	;# 
  2147     0D8D                     	;# 
  2148     0D8E                     	;# 
  2149     0D8F                     	;# 
  2150     0D8F                     	;# 
  2151     0D90                     	;# 
  2152     0D91                     	;# 
  2153     0D92                     	;# 
  2154     0D92                     	;# 
  2155     0D93                     	;# 
  2156     0D94                     	;# 
  2157     0D95                     	;# 
  2158     0D95                     	;# 
  2159     0D96                     	;# 
  2160     0D97                     	;# 
  2161     0D98                     	;# 
  2162     0D99                     	;# 
  2163     0D9A                     	;# 
  2164     0D9B                     	;# 
  2165     0D9C                     	;# 
  2166     0D9D                     	;# 
  2167     0D9E                     	;# 
  2168     0D9E                     	;# 
  2169     0D9F                     	;# 
  2170     0DA0                     	;# 
  2171     0DA1                     	;# 
  2172     0DA1                     	;# 
  2173     0DA2                     	;# 
  2174     0DA3                     	;# 
  2175     0DA4                     	;# 
  2176     0DA4                     	;# 
  2177     0DA5                     	;# 
  2178     0DA6                     	;# 
  2179     0DA7                     	;# 
  2180     0DA7                     	;# 
  2181     0DA8                     	;# 
  2182     0DA9                     	;# 
  2183     0DAA                     	;# 
  2184     0DAB                     	;# 
  2185     0DAC                     	;# 
  2186     0DAD                     	;# 
  2187     0DAE                     	;# 
  2188     0DAF                     	;# 
  2189     0E0F                     	;# 
  2190     0E10                     	;# 
  2191     0E11                     	;# 
  2192     0E12                     	;# 
  2193     0E13                     	;# 
  2194     0E14                     	;# 
  2195     0E15                     	;# 
  2196     0E16                     	;# 
  2197     0E17                     	;# 
  2198     0E18                     	;# 
  2199     0E19                     	;# 
  2200     0E1A                     	;# 
  2201     0E1B                     	;# 
  2202     0E1C                     	;# 
  2203     0E1D                     	;# 
  2204     0E1E                     	;# 
  2205     0E1F                     	;# 
  2206     0E20                     	;# 
  2207     0E21                     	;# 
  2208     0E22                     	;# 
  2209     0E23                     	;# 
  2210     0E24                     	;# 
  2211     0E25                     	;# 
  2212     0E26                     	;# 
  2213     0E27                     	;# 
  2214     0E28                     	;# 
  2215     0E29                     	;# 
  2216     0E2A                     	;# 
  2217     0E2B                     	;# 
  2218     0E2C                     	;# 
  2219     0E2D                     	;# 
  2220     0E2E                     	;# 
  2221     0E90                     	;# 
  2222     0E91                     	;# 
  2223     0E92                     	;# 
  2224     0E94                     	;# 
  2225     0E95                     	;# 
  2226     0E9C                     	;# 
  2227     0E9D                     	;# 
  2228     0E9E                     	;# 
  2229     0E9F                     	;# 
  2230     0EA0                     	;# 
  2231     0EA1                     	;# 
  2232     0EA2                     	;# 
  2233     0EA3                     	;# 
  2234     0EA4                     	;# 
  2235     0EA5                     	;# 
  2236     0EA6                     	;# 
  2237     0EA7                     	;# 
  2238     0F0F                     	;# 
  2239     0F10                     	;# 
  2240     0F11                     	;# 
  2241     0F12                     	;# 
  2242     0F13                     	;# 
  2243     0F14                     	;# 
  2244     0F15                     	;# 
  2245     0F16                     	;# 
  2246     0F17                     	;# 
  2247     0F18                     	;# 
  2248     0F19                     	;# 
  2249     0F1A                     	;# 
  2250     0F1B                     	;# 
  2251     0F1C                     	;# 
  2252     0F1D                     	;# 
  2253     0F1E                     	;# 
  2254     0F1F                     	;# 
  2255     0F20                     	;# 
  2256     0F21                     	;# 
  2257     0F22                     	;# 
  2258     0F23                     	;# 
  2259     0F24                     	;# 
  2260     0F25                     	;# 
  2261     0F26                     	;# 
  2262     0F27                     	;# 
  2263     0F28                     	;# 
  2264     0F29                     	;# 
  2265     0F2A                     	;# 
  2266     0F2B                     	;# 
  2267     0F2C                     	;# 
  2268     0F2D                     	;# 
  2269     0F2E                     	;# 
  2270     0F2F                     	;# 
  2271     0F30                     	;# 
  2272     0F31                     	;# 
  2273     0F32                     	;# 
  2274     0F33                     	;# 
  2275     0F34                     	;# 
  2276     0F35                     	;# 
  2277     0F36                     	;# 
  2278     0F37                     	;# 
  2279     0FE4                     	;# 
  2280     0FE5                     	;# 
  2281     0FE6                     	;# 
  2282     0FE7                     	;# 
  2283     0FE8                     	;# 
  2284     0FE9                     	;# 
  2285     0FEA                     	;# 
  2286     0FEB                     	;# 
  2287     0FED                     	;# 
  2288     0FEE                     	;# 
  2289     0FEF                     	;# 
  2290     0016                     _TMR1	set	22
  2291     001B                     _PR2	set	27
  2292     001A                     _TMR2	set	26
  2293     001C                     _T2CONbits	set	28
  2294     001F                     _T2RSTbits	set	31
  2295     001D                     _T2HLTbits	set	29
  2296     001C                     _T2CON	set	28
  2297     0010                     _PIR1bits	set	16
  2298     001A                     _T2TMR	set	26
  2299     001B                     _T2PR	set	27
  2300     001F                     _T2RST	set	31
  2301     001D                     _T2HLT	set	29
  2302     001E                     _T2CLKCON	set	30
  2303     000E                     _PORTC	set	14
  2304     000D                     _PORTB	set	13
  2305     000C                     _PORTA	set	12
  2306     0019                     _T1GCON	set	25
  2307     0018                     _T1CON	set	24
  2308     000B                     _INTCONbits	set	11
  2309     0015                     _TMR0	set	21
  2310     000E                     _PORTCbits	set	14
  2311     0095                     _OPTION_REGbits	set	149
  2312     0099                     _OSCCON	set	153
  2313     008E                     _TRISC	set	142
  2314     008D                     _TRISB	set	141
  2315     008C                     _TRISA	set	140
  2316     0098                     _OSCTUNE	set	152
  2317     0099                     _OSCCONbits	set	153
  2318     0095                     _OPTION_REG	set	149
  2319     008E                     _TRISCbits	set	142
  2320     010E                     _LATC	set	270
  2321     010D                     _LATB	set	269
  2322     010C                     _LATA	set	268
  2323     0116                     _BORCON	set	278
  2324     010D                     _LATBbits	set	269
  2325     018E                     _ANSELC	set	398
  2326     018D                     _ANSELB	set	397
  2327     018C                     _ANSELA	set	396
  2328     020E                     _WPUC	set	526
  2329     020C                     _WPUA	set	524
  2330     020D                     _WPUB	set	525
  2331     028E                     _ODCONC	set	654
  2332     028D                     _ODCONB	set	653
  2333     028C                     _ODCONA	set	652
  2334     029E                     _CCPTMRSbits	set	670
  2335     030E                     _SLRCONC	set	782
  2336     030D                     _SLRCONB	set	781
  2337     030C                     _SLRCONA	set	780
  2338     038E                     _INLVLC	set	910
  2339     038D                     _INLVLB	set	909
  2340     038C                     _INLVLA	set	908
  2341     0617                     _PWM3DCL	set	1559
  2342     0618                     _PWM3DCH	set	1560
  2343     0619                     _PWM3CON	set	1561
  2344     0E13                     _T1GPPS	set	3603
  2345     0E11                     _T0CKIPPS	set	3601
  2346     0EA6                     _RC6PPS	set	3750
  2347                           
  2348                           	psect	stringtext1
  2349     07C2                     __pstringtext1:
  2350     07C2                     STR_4:
  2351     07C2  3454               	retlw	84	;'T'
  2352     07C3  3465               	retlw	101	;'e'
  2353     07C4  3473               	retlw	115	;'s'
  2354     07C5  3474               	retlw	116	;'t'
  2355     07C6  3469               	retlw	105	;'i'
  2356     07C7  346E               	retlw	110	;'n'
  2357     07C8  3467               	retlw	103	;'g'
  2358     07C9  3420               	retlw	32	;' '
  2359     07CA  344C               	retlw	76	;'L'
  2360     07CB  3443               	retlw	67	;'C'
  2361     07CC  3444               	retlw	68	;'D'
  2362     07CD  3400               	retlw	0
  2363                           
  2364                           	psect	stringtext2
  2365     07CE                     __pstringtext2:
  2366     07CE                     STR_1:
  2367     07CE  3443               	retlw	67	;'C'
  2368     07CF  3475               	retlw	117	;'u'
  2369     07D0  3465               	retlw	101	;'e'
  2370     07D1  346E               	retlw	110	;'n'
  2371     07D2  3474               	retlw	116	;'t'
  2372     07D3  3461               	retlw	97	;'a'
  2373     07D4  3420               	retlw	32	;' '
  2374     07D5  3425               	retlw	37	;'%'
  2375     07D6  3430               	retlw	48	;'0'
  2376     07D7  3433               	retlw	51	;'3'
  2377     07D8  3464               	retlw	100	;'d'
  2378     07D9  3400               	retlw	0
  2379                           
  2380                           	psect	stringtext3
  2381     07FC                     __pstringtext3:
  2382     07FC                     STR_2:
  2383     07FC  3444               	retlw	68	;'D'
  2384     07FD  3445               	retlw	69	;'E'
  2385     07FE  3443               	retlw	67	;'C'
  2386     07FF  343A               	retlw	58	;':'
  2387     0800  3420               	retlw	32	;' '
  2388     0801  3425               	retlw	37	;'%'
  2389     0802  3430               	retlw	48	;'0'
  2390     0803  3433               	retlw	51	;'3'
  2391     0804  3464               	retlw	100	;'d'
  2392     0805  3400               	retlw	0
  2393                           
  2394                           	psect	stringtext4
  2395     0806                     __pstringtext4:
  2396     0806                     STR_5:
  2397     0806  3454               	retlw	84	;'T'
  2398     0807  3468               	retlw	104	;'h'
  2399     0808  3461               	retlw	97	;'a'
  2400     0809  346E               	retlw	110	;'n'
  2401     080A  346B               	retlw	107	;'k'
  2402     080B  3473               	retlw	115	;'s'
  2403     080C  3400               	retlw	0
  2404                           
  2405                           	psect	stringtext5
  2406     1000                     __pstringtext5:
  2407     1000                     STR_6:
  2408     1000  3454               	retlw	84	;'T'
  2409     1001  3468               	retlw	104	;'h'
  2410     1002  3461               	retlw	97	;'a'
  2411     1003  346E               	retlw	110	;'n'
  2412     1004  346B               	retlw	107	;'k'
  2413     1005  3400               	retlw	0
  2414                           
  2415                           	psect	stringtext6
  2416     0000                     __pstringtext6:
  2417     07CE                     
  2418                           	psect	cinit
  2419     0026                     start_initialization:	
  2420                           ; #config settings
  2421                           
  2422     0026                     __initialization:
  2423                           
  2424                           ; Clear objects allocated to BANK0
  2425     0026  3061               	movlw	low __pbssBANK0
  2426     0027  0084               	movwf	4
  2427     0028  3000               	movlw	high __pbssBANK0
  2428     0029  0085               	movwf	5
  2429     002A  300B               	movlw	11
  2430     002B  318F  27F3  3180   	fcall	clear_ram0
  2431                           
  2432                           ; Clear objects allocated to BANK1
  2433     002E  30A0               	movlw	low __pbssBANK1
  2434     002F  0084               	movwf	4
  2435     0030  3000               	movlw	high __pbssBANK1
  2436     0031  0085               	movwf	5
  2437     0032  3048               	movlw	72
  2438     0033  318F  27F3  3180   	fcall	clear_ram0
  2439     0036                     end_of_initialization:	
  2440                           ;End of C runtime variable initialization code
  2441                           
  2442     0036                     __end_of__initialization:
  2443     0036  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2444     0037  0020               	movlb	0
  2445     0038  3180  283A         	ljmp	_main	;jump to C main() function
  2446                           
  2447                           	psect	bssBANK0
  2448     0061                     __pbssBANK0:
  2449     0061                     _counter:
  2450     0061                     	ds	4
  2451     0065                     _width:
  2452     0065                     	ds	2
  2453     0067                     _prec:
  2454     0067                     	ds	2
  2455     0069                     _i:
  2456     0069                     	ds	2
  2457     006B                     _flags:
  2458     006B                     	ds	1
  2459                           
  2460                           	psect	bssBANK1
  2461     00A0                     __pbssBANK1:
  2462     00A0                     _dbuf:
  2463     00A0                     	ds	32
  2464     00C0                     _buffer2:
  2465     00C0                     	ds	20
  2466     00D4                     _buffer1:
  2467     00D4                     	ds	20
  2468                           
  2469                           	psect	clrtext
  2470     0FF3                     clear_ram0:	
  2471                           ;	Called with FSR0 containing the base address, and
  2472                           ;	WREG with the size to clear
  2473                           
  2474     0FF3  0064               	clrwdt	;clear the watchdog before getting into this loop
  2475     0FF4                     clrloop0:
  2476     0FF4  0180               	clrf	0	;clear RAM location pointed to by FSR
  2477     0FF5  3101               	addfsr 0,1
  2478     0FF6  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2479     0FF7  2FF4               	goto	clrloop0	;have we reached the end yet?
  2480     0FF8  3400               	retlw	0	;all done for this memory range, return
  2481                           
  2482                           	psect	cstackCOMMON
  2483     0070                     __pcstackCOMMON:
  2484     0070                     ?_Lcd_Cmd:
  2485     0070                     ??_Lcd_Cmd:	
  2486                           ; 1 bytes @ 0x0
  2487                           
  2488     0070                     ?_Lcd_Chr_CP:	
  2489                           ; 1 bytes @ 0x0
  2490                           
  2491     0070                     ??_Lcd_Chr_CP:	
  2492                           ; 1 bytes @ 0x0
  2493                           
  2494     0070                     ?_SYSTEM_Initialize:	
  2495                           ; 1 bytes @ 0x0
  2496                           
  2497     0070                     ??_SYSTEM_Initialize:	
  2498                           ; 1 bytes @ 0x0
  2499                           
  2500     0070                     ?_PWM3_LoadDutyValue:	
  2501                           ; 1 bytes @ 0x0
  2502                           
  2503     0070                     ?_PIN_MANAGER_Initialize:	
  2504                           ; 1 bytes @ 0x0
  2505                           
  2506     0070                     ??_PIN_MANAGER_Initialize:	
  2507                           ; 1 bytes @ 0x0
  2508                           
  2509     0070                     ?_OSCILLATOR_Initialize:	
  2510                           ; 1 bytes @ 0x0
  2511                           
  2512     0070                     ??_OSCILLATOR_Initialize:	
  2513                           ; 1 bytes @ 0x0
  2514                           
  2515     0070                     ?_putch:	
  2516                           ; 1 bytes @ 0x0
  2517                           
  2518     0070                     ??_putch:	
  2519                           ; 1 bytes @ 0x0
  2520                           
  2521     0070                     ?_Lcd_Init:	
  2522                           ; 1 bytes @ 0x0
  2523                           
  2524     0070                     ?_TMR0_Timer:	
  2525                           ; 1 bytes @ 0x0
  2526                           
  2527     0070                     ??_TMR0_Timer:	
  2528                           ; 1 bytes @ 0x0
  2529                           
  2530     0070                     ?_ISR_TIMER0:	
  2531                           ; 1 bytes @ 0x0
  2532                           
  2533     0070                     ??_ISR_TIMER0:	
  2534                           ; 1 bytes @ 0x0
  2535                           
  2536     0070                     ?_main:	
  2537                           ; 1 bytes @ 0x0
  2538                           
  2539     0070                     ?_PWM3_Initialize:	
  2540                           ; 1 bytes @ 0x0
  2541                           
  2542     0070                     ??_PWM3_Initialize:	
  2543                           ; 1 bytes @ 0x0
  2544                           
  2545     0070                     ?_TMR2_Initialize:	
  2546                           ; 1 bytes @ 0x0
  2547                           
  2548     0070                     ??_TMR2_Initialize:	
  2549                           ; 1 bytes @ 0x0
  2550                           
  2551     0070                     ?_fputc:	
  2552                           ; 1 bytes @ 0x0
  2553                           
  2554     0070                     ?___wmul:	
  2555                           ; 2 bytes @ 0x0
  2556                           
  2557     0070                     ?___awdiv:	
  2558                           ; 2 bytes @ 0x0
  2559                           
  2560     0070                     ?___awmod:	
  2561                           ; 2 bytes @ 0x0
  2562                           
  2563     0070                     putch@c:	
  2564                           ; 2 bytes @ 0x0
  2565                           
  2566     0070                     PWM3_LoadDutyValue@dutyValue:	
  2567                           ; 1 bytes @ 0x0
  2568                           
  2569     0070                     ___wmul@multiplier:	
  2570                           ; 2 bytes @ 0x0
  2571                           
  2572     0070                     ___awdiv@divisor:	
  2573                           ; 2 bytes @ 0x0
  2574                           
  2575     0070                     ___awmod@divisor:	
  2576                           ; 2 bytes @ 0x0
  2577                           
  2578     0070                     fputc@c:	
  2579                           ; 2 bytes @ 0x0
  2580                           
  2581                           
  2582                           ; 2 bytes @ 0x0
  2583     0070                     	ds	2
  2584     0072                     ??_PWM3_LoadDutyValue:
  2585     0072                     Lcd_Chr_CP@data:	
  2586                           ; 1 bytes @ 0x2
  2587                           
  2588     0072                     Lcd_Cmd@data:	
  2589                           ; 1 bytes @ 0x2
  2590                           
  2591     0072                     fputc@fp:	
  2592                           ; 1 bytes @ 0x2
  2593                           
  2594     0072                     ___wmul@multiplicand:	
  2595                           ; 1 bytes @ 0x2
  2596                           
  2597     0072                     ___awdiv@dividend:	
  2598                           ; 2 bytes @ 0x2
  2599                           
  2600     0072                     ___awmod@dividend:	
  2601                           ; 2 bytes @ 0x2
  2602                           
  2603                           
  2604                           ; 2 bytes @ 0x2
  2605     0072                     	ds	1
  2606     0073                     ??_fputc:
  2607     0073                     ??_Lcd_Init:	
  2608                           ; 1 bytes @ 0x3
  2609                           
  2610     0073                     ?_Lcd_Out:	
  2611                           ; 1 bytes @ 0x3
  2612                           
  2613     0073                     ?_Lcd_Out2:	
  2614                           ; 1 bytes @ 0x3
  2615                           
  2616     0073                     Lcd_Out@x:	
  2617                           ; 1 bytes @ 0x3
  2618                           
  2619     0073                     Lcd_Out2@x:	
  2620                           ; 1 bytes @ 0x3
  2621                           
  2622                           
  2623                           ; 1 bytes @ 0x3
  2624     0073                     	ds	1
  2625     0074                     ??___wmul:
  2626     0074                     ??___awdiv:	
  2627                           ; 1 bytes @ 0x4
  2628                           
  2629     0074                     ??___awmod:	
  2630                           ; 1 bytes @ 0x4
  2631                           
  2632     0074                     Lcd_Init@data:	
  2633                           ; 1 bytes @ 0x4
  2634                           
  2635     0074                     Lcd_Out@buffer:	
  2636                           ; 1 bytes @ 0x4
  2637                           
  2638     0074                     Lcd_Out2@buffer:	
  2639                           ; 2 bytes @ 0x4
  2640                           
  2641     0074                     ___wmul@product:	
  2642                           ; 2 bytes @ 0x4
  2643                           
  2644                           
  2645                           ; 2 bytes @ 0x4
  2646     0074                     	ds	1
  2647     0075                     ___awdiv@counter:
  2648     0075                     ___awmod@counter:	
  2649                           ; 1 bytes @ 0x5
  2650                           
  2651                           
  2652                           ; 1 bytes @ 0x5
  2653     0075                     	ds	1
  2654     0076                     ??_Lcd_Out:
  2655     0076                     ??_Lcd_Out2:	
  2656                           ; 1 bytes @ 0x6
  2657                           
  2658     0076                     ?_read_prec_or_width:	
  2659                           ; 1 bytes @ 0x6
  2660                           
  2661     0076                     ___awdiv@sign:	
  2662                           ; 2 bytes @ 0x6
  2663                           
  2664     0076                     ___awmod@sign:	
  2665                           ; 1 bytes @ 0x6
  2666                           
  2667     0076                     read_prec_or_width@ap:	
  2668                           ; 1 bytes @ 0x6
  2669                           
  2670                           
  2671                           ; 1 bytes @ 0x6
  2672     0076                     	ds	1
  2673     0077                     ?_abs:
  2674     0077                     ___awdiv@quotient:	
  2675                           ; 2 bytes @ 0x7
  2676                           
  2677     0077                     abs@a:	
  2678                           ; 2 bytes @ 0x7
  2679                           
  2680                           
  2681                           ; 2 bytes @ 0x7
  2682     0077                     	ds	1
  2683     0078                     ??_read_prec_or_width:
  2684     0078                     ?_fputs:	
  2685                           ; 1 bytes @ 0x8
  2686                           
  2687     0078                     Lcd_Out@y:	
  2688                           ; 2 bytes @ 0x8
  2689                           
  2690     0078                     Lcd_Out2@y:	
  2691                           ; 1 bytes @ 0x8
  2692                           
  2693     0078                     fputs@fp:	
  2694                           ; 1 bytes @ 0x8
  2695                           
  2696                           
  2697                           ; 1 bytes @ 0x8
  2698     0078                     	ds	1
  2699     0079                     ??_fputs:
  2700     0079                     ??_abs:	
  2701                           ; 1 bytes @ 0x9
  2702                           
  2703     0079                     Lcd_Out@data:	
  2704                           ; 1 bytes @ 0x9
  2705                           
  2706     0079                     Lcd_Out2@data:	
  2707                           ; 1 bytes @ 0x9
  2708                           
  2709                           
  2710                           ; 1 bytes @ 0x9
  2711     0079                     	ds	2
  2712     007B                     ?_pad:
  2713     007B                     pad@buf:	
  2714                           ; 1 bytes @ 0xB
  2715                           
  2716                           
  2717                           ; 1 bytes @ 0xB
  2718     007B                     	ds	1
  2719     007C                     pad@p:
  2720                           
  2721                           ; 2 bytes @ 0xC
  2722     007C                     	ds	2
  2723                           
  2724                           	psect	cstackBANK0
  2725     0020                     __pcstackBANK0:
  2726     0020                     read_prec_or_width@c:
  2727     0020                     fputs@c:	
  2728                           ; 1 bytes @ 0x0
  2729                           
  2730                           
  2731                           ; 1 bytes @ 0x0
  2732     0020                     	ds	1
  2733     0021                     read_prec_or_width@n:
  2734     0021                     fputs@i:	
  2735                           ; 2 bytes @ 0x1
  2736                           
  2737                           
  2738                           ; 2 bytes @ 0x1
  2739     0021                     	ds	2
  2740     0023                     read_prec_or_width@fmt:
  2741     0023                     fputs@s:	
  2742                           ; 1 bytes @ 0x3
  2743                           
  2744                           
  2745                           ; 1 bytes @ 0x3
  2746     0023                     	ds	1
  2747     0024                     ??_pad:
  2748                           
  2749                           ; 1 bytes @ 0x4
  2750     0024                     	ds	1
  2751     0025                     pad@i:
  2752                           
  2753                           ; 2 bytes @ 0x5
  2754     0025                     	ds	2
  2755     0027                     pad@w:
  2756                           
  2757                           ; 2 bytes @ 0x7
  2758     0027                     	ds	2
  2759     0029                     pad@fp:
  2760                           
  2761                           ; 1 bytes @ 0x9
  2762     0029                     	ds	1
  2763     002A                     ?_dtoa:
  2764     002A                     dtoa@d:	
  2765                           ; 1 bytes @ 0xA
  2766                           
  2767                           
  2768                           ; 2 bytes @ 0xA
  2769     002A                     	ds	2
  2770     002C                     ??_dtoa:
  2771                           
  2772                           ; 1 bytes @ 0xC
  2773     002C                     	ds	1
  2774     002D                     _dtoa$1038:
  2775                           
  2776                           ; 2 bytes @ 0xD
  2777     002D                     	ds	2
  2778     002F                     dtoa@fp:
  2779                           
  2780                           ; 1 bytes @ 0xF
  2781     002F                     	ds	1
  2782     0030                     dtoa@p:
  2783                           
  2784                           ; 2 bytes @ 0x10
  2785     0030                     	ds	2
  2786     0032                     dtoa@w:
  2787                           
  2788                           ; 2 bytes @ 0x12
  2789     0032                     	ds	2
  2790     0034                     dtoa@i:
  2791                           
  2792                           ; 2 bytes @ 0x14
  2793     0034                     	ds	2
  2794     0036                     dtoa@s:
  2795                           
  2796                           ; 1 bytes @ 0x16
  2797     0036                     	ds	1
  2798     0037                     ?_vfpfcnvrt:
  2799     0037                     vfpfcnvrt@fmt:	
  2800                           ; 1 bytes @ 0x17
  2801                           
  2802                           
  2803                           ; 1 bytes @ 0x17
  2804     0037                     	ds	1
  2805     0038                     vfpfcnvrt@ap:
  2806                           
  2807                           ; 1 bytes @ 0x18
  2808     0038                     	ds	1
  2809     0039                     ??_vfpfcnvrt:
  2810                           
  2811                           ; 1 bytes @ 0x19
  2812     0039                     	ds	4
  2813     003D                     vfpfcnvrt@convarg:
  2814                           
  2815                           ; 4 bytes @ 0x1D
  2816     003D                     	ds	4
  2817     0041                     vfpfcnvrt@done:
  2818                           
  2819                           ; 2 bytes @ 0x21
  2820     0041                     	ds	2
  2821     0043                     vfpfcnvrt@fp:
  2822                           
  2823                           ; 1 bytes @ 0x23
  2824     0043                     	ds	1
  2825     0044                     vfpfcnvrt@cp:
  2826                           
  2827                           ; 2 bytes @ 0x24
  2828     0044                     	ds	2
  2829     0046                     ?_vfprintf:
  2830     0046                     vfprintf@fmt:	
  2831                           ; 2 bytes @ 0x26
  2832                           
  2833                           
  2834                           ; 2 bytes @ 0x26
  2835     0046                     	ds	2
  2836     0048                     vfprintf@ap:
  2837                           
  2838                           ; 1 bytes @ 0x28
  2839     0048                     	ds	1
  2840     0049                     ??_vfprintf:
  2841                           
  2842                           ; 1 bytes @ 0x29
  2843     0049                     	ds	1
  2844     004A                     vfprintf@fp:
  2845                           
  2846                           ; 1 bytes @ 0x2A
  2847     004A                     	ds	1
  2848     004B                     vfprintf@cfmt:
  2849                           
  2850                           ; 2 bytes @ 0x2B
  2851     004B                     	ds	2
  2852     004D                     ?_sprintf:
  2853     004D                     sprintf@fmt:	
  2854                           ; 2 bytes @ 0x2D
  2855                           
  2856                           
  2857                           ; 2 bytes @ 0x2D
  2858     004D                     	ds	2
  2859     004F                     ??_sprintf:
  2860                           
  2861                           ; 1 bytes @ 0x2F
  2862     004F                     	ds	1
  2863     0050                     sprintf@ap:
  2864                           
  2865                           ; 1 bytes @ 0x30
  2866     0050                     	ds	1
  2867     0051                     sprintf@s:
  2868                           
  2869                           ; 1 bytes @ 0x31
  2870     0051                     	ds	1
  2871     0052                     sprintf@f:
  2872                           
  2873                           ; 11 bytes @ 0x32
  2874     0052                     	ds	11
  2875     005D                     ??_main:
  2876                           
  2877                           ; 1 bytes @ 0x3D
  2878     005D                     	ds	2
  2879     005F                     main@DC:
  2880                           
  2881                           ; 2 bytes @ 0x3F
  2882     005F                     	ds	2
  2883                           
  2884                           	psect	maintext
  2885     003A                     __pmaintext:	
  2886 ;;
  2887 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  2888 ;;
  2889 ;; *************** function _main *****************
  2890 ;; Defined at:
  2891 ;;		line 44 in file "main.c"
  2892 ;; Parameters:    Size  Location     Type
  2893 ;;		None
  2894 ;; Auto vars:     Size  Location     Type
  2895 ;;  DC              2   63[BANK0 ] unsigned short 
  2896 ;; Return value:  Size  Location     Type
  2897 ;;                  1    wreg      void 
  2898 ;; Registers used:
  2899 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2900 ;; Tracked objects:
  2901 ;;		On entry : B1F/0
  2902 ;;		On exit  : 0/0
  2903 ;;		Unchanged: 0/0
  2904 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2905 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2906 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2907 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2908 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2909 ;;Total ram usage:        4 bytes
  2910 ;; Hardware stack levels required when called: 9
  2911 ;; This function calls:
  2912 ;;		_Lcd_Cmd
  2913 ;;		_Lcd_Init
  2914 ;;		_Lcd_Out
  2915 ;;		_Lcd_Out2
  2916 ;;		_PWM3_LoadDutyValue
  2917 ;;		_SYSTEM_Initialize
  2918 ;;		_TMR0_Timer
  2919 ;;		_sprintf
  2920 ;; This function is called by:
  2921 ;;		Startup code after reset
  2922 ;; This function uses a non-reentrant model
  2923 ;;
  2924                           
  2925     003A                     _main:	
  2926                           ;psect for function _main
  2927                           
  2928     003A                     l2122:	
  2929                           ;incstack = 0
  2930                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2931                           
  2932                           
  2933                           ;main.c: 45: 
  2934     003A  3187  27B5  3180   	fcall	_SYSTEM_Initialize
  2935     003D                     l2124:
  2936                           
  2937                           ;main.c: 47:     PORTB = 0;
  2938     003D  0021               	movlb	1	; select bank1
  2939     003E  0819               	movf	25,w	;volatile
  2940     003F  3987               	andlw	-121
  2941     0040  3868               	iorlw	104
  2942     0041  0099               	movwf	25	;volatile
  2943     0042                     l2126:
  2944                           
  2945                           ;main.c: 48:     PORTC = 0;
  2946     0042  30FC               	movlw	-4
  2947     0043  0599               	andwf	25,f	;volatile
  2948     0044                     l2128:
  2949                           
  2950                           ;main.c: 49: 
  2951     0044  0198               	clrf	24	;volatile
  2952     0045                     l2130:
  2953                           
  2954                           ;main.c: 52:     INTCONbits.T0IF = 0;
  2955     0045  0023               	movlb	3	; select bank3
  2956     0046  018C               	clrf	12	;volatile
  2957     0047                     l2132:
  2958                           
  2959                           ;main.c: 53:     INTCONbits.TMR0IE = 1;
  2960     0047  018D               	clrf	13	;volatile
  2961     0048                     l2134:
  2962                           
  2963                           ;main.c: 54:     TMR0_Timer();
  2964     0048  018E               	clrf	14	;volatile
  2965     0049                     l2136:
  2966     0049  3024               	movlw	36
  2967     004A  0021               	movlb	1	; select bank1
  2968     004B  008C               	movwf	12	;volatile
  2969     004C                     l2138:
  2970     004C  018D               	clrf	13	;volatile
  2971     004D                     l2140:
  2972     004D  018E               	clrf	14	;volatile
  2973     004E                     l2142:
  2974     004E  0020               	movlb	0	; select bank0
  2975     004F  018C               	clrf	12	;volatile
  2976     0050                     l2144:
  2977     0050  018D               	clrf	13	;volatile
  2978     0051                     l2146:
  2979     0051  018E               	clrf	14	;volatile
  2980     0052                     l2148:
  2981     0052  178B               	bsf	11,7	;volatile
  2982     0053                     l2150:
  2983     0053  110B               	bcf	11,2	;volatile
  2984     0054                     l2152:
  2985     0054  168B               	bsf	11,5	;volatile
  2986     0055                     l2154:
  2987     0055  3187  27DA  3180   	fcall	_TMR0_Timer
  2988     0058                     l2156:
  2989                           
  2990                           ;main.c: 77:     Lcd_Init();
  2991     0058  3182  22EC  3180   	fcall	_Lcd_Init
  2992     005B                     l2158:
  2993                           
  2994                           ;main.c: 78:     Lcd_Cmd(1);
  2995     005B  3001               	movlw	1
  2996     005C  3184  241B  3180   	fcall	_Lcd_Cmd
  2997     005F                     l2160:
  2998                           
  2999                           ;main.c: 79:     Lcd_Cmd(12);
  3000     005F  300C               	movlw	12
  3001     0060  3184  241B  3180   	fcall	_Lcd_Cmd
  3002     0063                     l2162:
  3003                           
  3004                           ;main.c: 80:     _delay((unsigned long)((100)*(4000000/4000.0)));
  3005     0063  3082               	movlw	130
  3006     0064  0020               	movlb	0	; select bank0
  3007     0065  00DD               	movwf	??_main
  3008     0066  30DD               	movlw	221
  3009     0067                     u1507:
  3010     0067  0B89               	decfsz	9,f
  3011     0068  2867               	goto	u1507
  3012     0069  0BDD               	decfsz	??_main,f
  3013     006A  2867               	goto	u1507
  3014     006B  3200               	nop2
  3015     006C                     l2164:
  3016                           
  3017                           ;main.c: 82:     uint16_t DC;;main.c: 83:     DC = 63;
  3018     006C  303F               	movlw	63
  3019     006D  0020               	movlb	0	; select bank0
  3020     006E  00DF               	movwf	main@DC
  3021     006F  3000               	movlw	0
  3022     0070  00E0               	movwf	main@DC+1
  3023     0071                     l2166:
  3024                           
  3025                           ;main.c: 86:         PWM3_LoadDutyValue(DC);
  3026     0071  0020               	movlb	0	; select bank0
  3027     0072  0860               	movf	main@DC+1,w
  3028     0073  00F1               	movwf	PWM3_LoadDutyValue@dutyValue+1
  3029     0074  085F               	movf	main@DC,w
  3030     0075  00F0               	movwf	PWM3_LoadDutyValue@dutyValue
  3031     0076  3187  279F  3180   	fcall	_PWM3_LoadDutyValue
  3032     0079                     l2168:
  3033                           
  3034                           ;main.c: 88:         sprintf((char *)buffer1,"Cuenta %03d");
  3035     0079  30CE               	movlw	low (STR_1| (0+32768))
  3036     007A  0020               	movlb	0	; select bank0
  3037     007B  00CD               	movwf	sprintf@fmt
  3038     007C  3087               	movlw	high (STR_1| (0+32768))
  3039     007D  00CE               	movwf	sprintf@fmt+1
  3040     007E  30D4               	movlw	(low (_buffer1| 0))& (0+255)
  3041     007F  3187  274C  3180   	fcall	_sprintf
  3042     0082                     l2170:
  3043                           
  3044                           ;main.c: 89:         sprintf((char *)buffer2,"DEC: %03d");
  3045     0082  30FC               	movlw	low (STR_2| (0+32768))
  3046     0083  0020               	movlb	0	; select bank0
  3047     0084  00CD               	movwf	sprintf@fmt
  3048     0085  3087               	movlw	high (STR_2| (0+32768))
  3049     0086  00CE               	movwf	sprintf@fmt+1
  3050     0087  30C0               	movlw	(low (_buffer2| 0))& (0+255)
  3051     0088  3187  274C  3180   	fcall	_sprintf
  3052     008B                     l2172:
  3053                           
  3054                           ;main.c: 90:         Lcd_Out2(1,1,(char *)buffer1);
  3055     008B  01F3               	clrf	Lcd_Out2@x
  3056     008C  0AF3               	incf	Lcd_Out2@x,f
  3057     008D  30D4               	movlw	low _buffer1
  3058     008E  00F4               	movwf	Lcd_Out2@buffer
  3059     008F  3000               	movlw	high _buffer1
  3060     0090  00F5               	movwf	Lcd_Out2@buffer+1
  3061     0091  3001               	movlw	1
  3062     0092  3186  2655  3180   	fcall	_Lcd_Out2
  3063     0095                     l2174:
  3064                           
  3065                           ;main.c: 91:         Lcd_Out2(2,1,(char *)buffer2);
  3066     0095  01F3               	clrf	Lcd_Out2@x
  3067     0096  0AF3               	incf	Lcd_Out2@x,f
  3068     0097  30C0               	movlw	low _buffer2
  3069     0098  00F4               	movwf	Lcd_Out2@buffer
  3070     0099  3000               	movlw	high _buffer2
  3071     009A  00F5               	movwf	Lcd_Out2@buffer+1
  3072     009B  3002               	movlw	2
  3073     009C  3186  2655  3180   	fcall	_Lcd_Out2
  3074     009F                     l2176:
  3075                           
  3076                           ;main.c: 92:         _delay((unsigned long)((100)*(4000000/4000.0)));
  3077     009F  3082               	movlw	130
  3078     00A0  0020               	movlb	0	; select bank0
  3079     00A1  00DD               	movwf	??_main
  3080     00A2  30DD               	movlw	221
  3081     00A3                     u1517:
  3082     00A3  0B89               	decfsz	9,f
  3083     00A4  28A3               	goto	u1517
  3084     00A5  0BDD               	decfsz	??_main,f
  3085     00A6  28A3               	goto	u1517
  3086     00A7  3200               	nop2
  3087     00A8                     l2178:
  3088                           
  3089                           ;main.c: 95:         for(i=10; i>0; i--){
  3090     00A8  300A               	movlw	10
  3091     00A9  0020               	movlb	0	; select bank0
  3092     00AA  00E9               	movwf	_i
  3093     00AB  3000               	movlw	0
  3094     00AC  00EA               	movwf	_i+1
  3095     00AD                     l2184:
  3096                           
  3097                           ;main.c: 96:             sprintf((char *)buffer1,"Cuenta %03d");
  3098     00AD  30CE               	movlw	low (STR_1| (0+32768))
  3099     00AE  0020               	movlb	0	; select bank0
  3100     00AF  00CD               	movwf	sprintf@fmt
  3101     00B0  3087               	movlw	high (STR_1| (0+32768))
  3102     00B1  00CE               	movwf	sprintf@fmt+1
  3103     00B2  30D4               	movlw	(low (_buffer1| 0))& (0+255)
  3104     00B3  3187  274C  3180   	fcall	_sprintf
  3105     00B6                     l2186:
  3106                           
  3107                           ;main.c: 97:             Lcd_Out2(1,1,(char *)buffer1);
  3108     00B6  01F3               	clrf	Lcd_Out2@x
  3109     00B7  0AF3               	incf	Lcd_Out2@x,f
  3110     00B8  30D4               	movlw	low _buffer1
  3111     00B9  00F4               	movwf	Lcd_Out2@buffer
  3112     00BA  3000               	movlw	high _buffer1
  3113     00BB  00F5               	movwf	Lcd_Out2@buffer+1
  3114     00BC  3001               	movlw	1
  3115     00BD  3186  2655  3180   	fcall	_Lcd_Out2
  3116     00C0                     l2188:
  3117                           
  3118                           ;main.c: 98:             _delay((unsigned long)((100)*(4000000/4000.0)));
  3119     00C0  3082               	movlw	130
  3120     00C1  0020               	movlb	0	; select bank0
  3121     00C2  00DD               	movwf	??_main
  3122     00C3  30DD               	movlw	221
  3123     00C4                     u1527:
  3124     00C4  0B89               	decfsz	9,f
  3125     00C5  28C4               	goto	u1527
  3126     00C6  0BDD               	decfsz	??_main,f
  3127     00C7  28C4               	goto	u1527
  3128     00C8  3200               	nop2
  3129     00C9                     l2190:
  3130                           
  3131                           ;main.c: 99:         }
  3132     00C9  30FF               	movlw	255
  3133     00CA  0020               	movlb	0	; select bank0
  3134     00CB  07E9               	addwf	_i,f
  3135     00CC  30FF               	movlw	255
  3136     00CD  3DEA               	addwfc	_i+1,f
  3137     00CE                     l2192:
  3138     00CE  086A               	movf	_i+1,w
  3139     00CF  3A80               	xorlw	128
  3140     00D0  00DD               	movwf	??_main
  3141     00D1  3080               	movlw	128
  3142     00D2  025D               	subwf	??_main,w
  3143     00D3  1D03               	skipz
  3144     00D4  28D7               	goto	u1495
  3145     00D5  3001               	movlw	1
  3146     00D6  0269               	subwf	_i,w
  3147     00D7                     u1495:
  3148     00D7  1803               	skipnc
  3149     00D8  28DA               	goto	u1491
  3150     00D9  28DB               	goto	u1490
  3151     00DA                     u1491:
  3152     00DA  28AD               	goto	l2184
  3153     00DB                     u1490:
  3154     00DB                     l2194:
  3155                           
  3156                           ;main.c: 100:         Lcd_Out2(2,1,"Testing LCD");
  3157     00DB  01F3               	clrf	Lcd_Out2@x
  3158     00DC  0AF3               	incf	Lcd_Out2@x,f
  3159     00DD  30C2               	movlw	low (STR_4| (0+32768))
  3160     00DE  00F4               	movwf	Lcd_Out2@buffer
  3161     00DF  3087               	movlw	high (STR_4| (0+32768))
  3162     00E0  00F5               	movwf	Lcd_Out2@buffer+1
  3163     00E1  3002               	movlw	2
  3164     00E2  3186  2655  3180   	fcall	_Lcd_Out2
  3165     00E5                     l2196:
  3166                           
  3167                           ;main.c: 101:         _delay((unsigned long)((600)*(4000000/4000.0)));
  3168     00E5  3004               	movlw	4
  3169     00E6  0020               	movlb	0	; select bank0
  3170     00E7  00DE               	movwf	??_main+1
  3171     00E8  300C               	movlw	12
  3172     00E9  00DD               	movwf	??_main
  3173     00EA  3033               	movlw	51
  3174     00EB                     u1537:
  3175     00EB  0B89               	decfsz	9,f
  3176     00EC  28EB               	goto	u1537
  3177     00ED  0BDD               	decfsz	??_main,f
  3178     00EE  28EB               	goto	u1537
  3179     00EF  0BDE               	decfsz	??_main+1,f
  3180     00F0  28EB               	goto	u1537
  3181     00F1  3200               	nop2
  3182     00F2                     l2198:
  3183                           
  3184                           ;main.c: 102:         Lcd_Cmd(15);
  3185     00F2  300F               	movlw	15
  3186     00F3  3184  241B  3180   	fcall	_Lcd_Cmd
  3187     00F6                     l2200:
  3188                           
  3189                           ;main.c: 103:         _delay((unsigned long)((1000)*(4000000/4000.0)));
  3190     00F6  3006               	movlw	6
  3191     00F7  0020               	movlb	0	; select bank0
  3192     00F8  00DE               	movwf	??_main+1
  3193     00F9  3013               	movlw	19
  3194     00FA  00DD               	movwf	??_main
  3195     00FB  30AD               	movlw	173
  3196     00FC                     u1547:
  3197     00FC  0B89               	decfsz	9,f
  3198     00FD  28FC               	goto	u1547
  3199     00FE  0BDD               	decfsz	??_main,f
  3200     00FF  28FC               	goto	u1547
  3201     0100  0BDE               	decfsz	??_main+1,f
  3202     0101  28FC               	goto	u1547
  3203     0102  3200               	nop2
  3204     0103                     l2202:
  3205                           
  3206                           ;main.c: 104:         Lcd_Cmd(14);
  3207     0103  300E               	movlw	14
  3208     0104  3184  241B  3180   	fcall	_Lcd_Cmd
  3209     0107                     l2204:
  3210                           
  3211                           ;main.c: 105:         _delay((unsigned long)((1000)*(4000000/4000.0)));
  3212     0107  3006               	movlw	6
  3213     0108  0020               	movlb	0	; select bank0
  3214     0109  00DE               	movwf	??_main+1
  3215     010A  3013               	movlw	19
  3216     010B  00DD               	movwf	??_main
  3217     010C  30AD               	movlw	173
  3218     010D                     u1557:
  3219     010D  0B89               	decfsz	9,f
  3220     010E  290D               	goto	u1557
  3221     010F  0BDD               	decfsz	??_main,f
  3222     0110  290D               	goto	u1557
  3223     0111  0BDE               	decfsz	??_main+1,f
  3224     0112  290D               	goto	u1557
  3225     0113  3200               	nop2
  3226     0114                     l2206:
  3227                           
  3228                           ;main.c: 106:         Lcd_Cmd(12);
  3229     0114  300C               	movlw	12
  3230     0115  3184  241B  3180   	fcall	_Lcd_Cmd
  3231     0118                     l2208:
  3232                           
  3233                           ;main.c: 107:         _delay((unsigned long)((1000)*(4000000/4000.0)));
  3234     0118  3006               	movlw	6
  3235     0119  0020               	movlb	0	; select bank0
  3236     011A  00DE               	movwf	??_main+1
  3237     011B  3013               	movlw	19
  3238     011C  00DD               	movwf	??_main
  3239     011D  30AD               	movlw	173
  3240     011E                     u1567:
  3241     011E  0B89               	decfsz	9,f
  3242     011F  291E               	goto	u1567
  3243     0120  0BDD               	decfsz	??_main,f
  3244     0121  291E               	goto	u1567
  3245     0122  0BDE               	decfsz	??_main+1,f
  3246     0123  291E               	goto	u1567
  3247     0124  3200               	nop2
  3248     0125                     l2210:
  3249                           
  3250                           ;main.c: 108:         Lcd_Cmd(1);
  3251     0125  3001               	movlw	1
  3252     0126  3184  241B  3180   	fcall	_Lcd_Cmd
  3253     0129                     l2212:
  3254                           
  3255                           ;main.c: 109:         _delay((unsigned long)((1000)*(4000000/4000.0)));
  3256     0129  3006               	movlw	6
  3257     012A  0020               	movlb	0	; select bank0
  3258     012B  00DE               	movwf	??_main+1
  3259     012C  3013               	movlw	19
  3260     012D  00DD               	movwf	??_main
  3261     012E  30AD               	movlw	173
  3262     012F                     u1577:
  3263     012F  0B89               	decfsz	9,f
  3264     0130  292F               	goto	u1577
  3265     0131  0BDD               	decfsz	??_main,f
  3266     0132  292F               	goto	u1577
  3267     0133  0BDE               	decfsz	??_main+1,f
  3268     0134  292F               	goto	u1577
  3269     0135  3200               	nop2
  3270     0136                     l2214:
  3271                           
  3272                           ;main.c: 110:         Lcd_Out(1, 4, "Thanks");
  3273     0136  3004               	movlw	4
  3274     0137  00F3               	movwf	Lcd_Out@x
  3275     0138  3006               	movlw	low (STR_5| (0+32768))
  3276     0139  00F4               	movwf	Lcd_Out@buffer
  3277     013A  3088               	movlw	high (STR_5| (0+32768))
  3278     013B  00F5               	movwf	Lcd_Out@buffer+1
  3279     013C  3001               	movlw	1
  3280     013D  3186  2698  3180   	fcall	_Lcd_Out
  3281     0140                     l2216:
  3282                           
  3283                           ;main.c: 111:         Lcd_Out(2, 4, "Thank");
  3284     0140  3004               	movlw	4
  3285     0141  00F3               	movwf	Lcd_Out@x
  3286     0142  3000               	movlw	low (STR_6| (0+32768))
  3287     0143  00F4               	movwf	Lcd_Out@buffer
  3288     0144  3090               	movlw	high (STR_6| (0+32768))
  3289     0145  00F5               	movwf	Lcd_Out@buffer+1
  3290     0146  3002               	movlw	2
  3291     0147  3186  2698  3180   	fcall	_Lcd_Out
  3292     014A  2871               	goto	l2166
  3293     014B  3180  2824         	ljmp	start
  3294     014D                     __end_of_main:
  3295                           
  3296                           	psect	text1
  3297     074C                     __ptext1:	
  3298 ;; *************** function _sprintf *****************
  3299 ;; Defined at:
  3300 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_sprintf.c"
  3301 ;; Parameters:    Size  Location     Type
  3302 ;;  s               1    wreg     PTR unsigned char 
  3303 ;;		 -> buffer2(20), buffer1(20), 
  3304 ;;  fmt             2   45[BANK0 ] PTR const unsigned char 
  3305 ;;		 -> STR_3(12), STR_2(10), STR_1(12), 
  3306 ;; Auto vars:     Size  Location     Type
  3307 ;;  s               1   49[BANK0 ] PTR unsigned char 
  3308 ;;		 -> buffer2(20), buffer1(20), 
  3309 ;;  f              11   50[BANK0 ] struct _IO_FILE
  3310 ;;  ret             2    0        int 
  3311 ;;  ap              1   48[BANK0 ] PTR void [1]
  3312 ;;		 -> ?_sprintf(2), 
  3313 ;; Return value:  Size  Location     Type
  3314 ;;                  2   45[BANK0 ] int 
  3315 ;; Registers used:
  3316 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3317 ;; Tracked objects:
  3318 ;;		On entry : 0/0
  3319 ;;		On exit  : 0/0
  3320 ;;		Unchanged: 0/0
  3321 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3322 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3323 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3324 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3325 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3326 ;;Total ram usage:       16 bytes
  3327 ;; Hardware stack levels used: 1
  3328 ;; Hardware stack levels required when called: 8
  3329 ;; This function calls:
  3330 ;;		_vfprintf
  3331 ;; This function is called by:
  3332 ;;		_main
  3333 ;; This function uses a non-reentrant model
  3334 ;;
  3335                           
  3336     074C                     _sprintf:	
  3337                           ;psect for function _sprintf
  3338                           
  3339                           
  3340                           ;incstack = 0
  3341                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3342                           ;sprintf@s stored from wreg
  3343     074C  0020               	movlb	0	; select bank0
  3344     074D  00D1               	movwf	sprintf@s
  3345     074E                     l2098:
  3346     074E  304F               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  3347     074F  00D0               	movwf	sprintf@ap
  3348     0750  0851               	movf	sprintf@s,w
  3349     0751  00D2               	movwf	sprintf@f
  3350     0752                     l2100:
  3351     0752  01D4               	clrf	sprintf@f+2
  3352     0753  01D5               	clrf	sprintf@f+3
  3353     0754                     l2102:
  3354     0754  01DB               	clrf	sprintf@f+9
  3355     0755  01DC               	clrf	sprintf@f+10
  3356     0756                     l2104:
  3357     0756  084E               	movf	sprintf@fmt+1,w
  3358     0757  00C7               	movwf	vfprintf@fmt+1
  3359     0758  084D               	movf	sprintf@fmt,w
  3360     0759  00C6               	movwf	vfprintf@fmt
  3361     075A  3050               	movlw	(low (sprintf@ap| 0))& (0+255)
  3362     075B  00C8               	movwf	vfprintf@ap
  3363     075C  3052               	movlw	(low (sprintf@f| 0))& (0+255)
  3364     075D  3187  2769  3187   	fcall	_vfprintf
  3365     0760                     l2106:
  3366     0760  0020               	movlb	0	; select bank0
  3367     0761  0854               	movf	sprintf@f+2,w
  3368     0762  0751               	addwf	sprintf@s,w
  3369     0763  00CF               	movwf	??_sprintf
  3370     0764  084F               	movf	??_sprintf,w
  3371     0765  0086               	movwf	6
  3372     0766  0187               	clrf	7
  3373     0767  0181               	clrf	1
  3374     0768                     l807:
  3375     0768  0008               	return
  3376     0769                     __end_of_sprintf:
  3377                           
  3378                           	psect	text2
  3379     0769                     __ptext2:	
  3380 ;; *************** function _vfprintf *****************
  3381 ;; Defined at:
  3382 ;;		line 1546 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  3383 ;; Parameters:    Size  Location     Type
  3384 ;;  fp              1    wreg     PTR struct _IO_FILE
  3385 ;;		 -> sprintf@f(11), 
  3386 ;;  fmt             2   38[BANK0 ] PTR const unsigned char 
  3387 ;;		 -> STR_3(12), STR_2(10), STR_1(12), 
  3388 ;;  ap              1   40[BANK0 ] PTR PTR void 
  3389 ;;		 -> sprintf@ap(1), 
  3390 ;; Auto vars:     Size  Location     Type
  3391 ;;  fp              1   42[BANK0 ] PTR struct _IO_FILE
  3392 ;;		 -> sprintf@f(11), 
  3393 ;;  cfmt            2   43[BANK0 ] PTR unsigned char 
  3394 ;;		 -> STR_3(12), STR_2(10), STR_1(12), 
  3395 ;; Return value:  Size  Location     Type
  3396 ;;                  2   38[BANK0 ] int 
  3397 ;; Registers used:
  3398 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3399 ;; Tracked objects:
  3400 ;;		On entry : 0/0
  3401 ;;		On exit  : 0/0
  3402 ;;		Unchanged: 0/0
  3403 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3404 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3405 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3406 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3407 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3408 ;;Total ram usage:        7 bytes
  3409 ;; Hardware stack levels used: 1
  3410 ;; Hardware stack levels required when called: 7
  3411 ;; This function calls:
  3412 ;;		_vfpfcnvrt
  3413 ;; This function is called by:
  3414 ;;		_sprintf
  3415 ;; This function uses a non-reentrant model
  3416 ;;
  3417                           
  3418     0769                     _vfprintf:	
  3419                           ;psect for function _vfprintf
  3420                           
  3421                           
  3422                           ;incstack = 0
  3423                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3424                           ;vfprintf@fp stored from wreg
  3425     0769  0020               	movlb	0	; select bank0
  3426     076A  00CA               	movwf	vfprintf@fp
  3427     076B                     l2000:
  3428                           
  3429                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1546: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.41\pic\source
      +                          s\c99\common\doprnt.c: 1547: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\comm
      +                          on\doprnt.c: 1549:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\
      +                          common\doprnt.c: 1551:     cfmt = (char *)fmt;
  3430     076B  0847               	movf	vfprintf@fmt+1,w
  3431     076C  00CC               	movwf	vfprintf@cfmt+1
  3432     076D  0846               	movf	vfprintf@fmt,w
  3433     076E  00CB               	movwf	vfprintf@cfmt
  3434                           
  3435                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1555:     while (
      +                          *cfmt) {
  3436     076F  2F78               	goto	l2004
  3437     0770                     l2002:
  3438                           
  3439                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1559:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  3440     0770  304B               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  3441     0771  00B7               	movwf	vfpfcnvrt@fmt
  3442     0772  0848               	movf	vfprintf@ap,w
  3443     0773  00B8               	movwf	vfpfcnvrt@ap
  3444     0774  084A               	movf	vfprintf@fp,w
  3445     0775  3182  2221  3187   	fcall	_vfpfcnvrt
  3446     0778                     l2004:
  3447                           
  3448                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1555:     while (
      +                          *cfmt) {
  3449     0778  0020               	movlb	0	; select bank0
  3450     0779  084B               	movf	vfprintf@cfmt,w
  3451     077A  0084               	movwf	4
  3452     077B  084C               	movf	vfprintf@cfmt+1,w
  3453     077C  0085               	movwf	5
  3454     077D  0012               	moviw fsr0++
  3455     077E  1D03               	btfss	3,2
  3456     077F  2F81               	goto	u1411
  3457     0780  2F82               	goto	u1410
  3458     0781                     u1411:
  3459     0781  2F70               	goto	l2002
  3460     0782                     u1410:
  3461     0782                     l2006:
  3462                           
  3463                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1564:  return 0;
  3464     0782  01C6               	clrf	?_vfprintf
  3465     0783  01C7               	clrf	?_vfprintf+1
  3466     0784                     l886:
  3467     0784  0008               	return
  3468     0785                     __end_of_vfprintf:
  3469                           
  3470                           	psect	text3
  3471     0221                     __ptext3:	
  3472 ;; *************** function _vfpfcnvrt *****************
  3473 ;; Defined at:
  3474 ;;		line 1048 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  3475 ;; Parameters:    Size  Location     Type
  3476 ;;  fp              1    wreg     PTR struct _IO_FILE
  3477 ;;		 -> sprintf@f(11), 
  3478 ;;  fmt             1   23[BANK0 ] PTR PTR unsigned char 
  3479 ;;		 -> vfprintf@cfmt(2), 
  3480 ;;  ap              1   24[BANK0 ] PTR PTR void 
  3481 ;;		 -> sprintf@ap(1), 
  3482 ;; Auto vars:     Size  Location     Type
  3483 ;;  fp              1   35[BANK0 ] PTR struct _IO_FILE
  3484 ;;		 -> sprintf@f(11), 
  3485 ;;  convarg         4   29[BANK0 ] struct .
  3486 ;;  cp              2   36[BANK0 ] PTR unsigned char 
  3487 ;;		 -> STR_3(12), STR_2(10), STR_1(12), 
  3488 ;;  done            2   33[BANK0 ] int 
  3489 ;;  i               2    0        int 
  3490 ;;  c               1    0        unsigned char 
  3491 ;; Return value:  Size  Location     Type
  3492 ;;                  1    wreg      void 
  3493 ;; Registers used:
  3494 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3495 ;; Tracked objects:
  3496 ;;		On entry : 0/0
  3497 ;;		On exit  : 0/0
  3498 ;;		Unchanged: 0/0
  3499 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3500 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3501 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3502 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3503 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3504 ;;Total ram usage:       15 bytes
  3505 ;; Hardware stack levels used: 1
  3506 ;; Hardware stack levels required when called: 6
  3507 ;; This function calls:
  3508 ;;		_dtoa
  3509 ;;		_fputc
  3510 ;;		_read_prec_or_width
  3511 ;; This function is called by:
  3512 ;;		_vfprintf
  3513 ;; This function uses a non-reentrant model
  3514 ;;
  3515                           
  3516     0221                     _vfpfcnvrt:	
  3517                           ;psect for function _vfpfcnvrt
  3518                           
  3519                           
  3520                           ;incstack = 0
  3521                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3522                           ;vfpfcnvrt@fp stored from wreg
  3523     0221  0020               	movlb	0	; select bank0
  3524     0222  00C3               	movwf	vfpfcnvrt@fp
  3525     0223                     l1834:
  3526                           
  3527                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1048: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1049: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\dopr
      +                          nt.c: 1050:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common
      +                          \doprnt.c: 1051:     int done, i;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1059:  } convarg;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1062:     if ((*fmt)[0] == '%') {
  3528     0223  0837               	movf	vfpfcnvrt@fmt,w
  3529     0224  0086               	movwf	6
  3530     0225  0187               	clrf	7
  3531     0226  3F40               	moviw [0]fsr1
  3532     0227  00B9               	movwf	??_vfpfcnvrt
  3533     0228  3F41               	moviw [1]fsr1
  3534     0229  00BA               	movwf	??_vfpfcnvrt+1
  3535     022A  0839               	movf	??_vfpfcnvrt,w
  3536     022B  0084               	movwf	4
  3537     022C  083A               	movf	??_vfpfcnvrt+1,w
  3538     022D  0085               	movwf	5
  3539     022E  0012               	moviw fsr0++
  3540     022F  3A25               	xorlw	37
  3541     0230  1D03               	btfss	3,2
  3542     0231  2A33               	goto	u1241
  3543     0232  2A34               	goto	u1240
  3544     0233                     u1241:
  3545     0233  2AD3               	goto	l1880
  3546     0234                     u1240:
  3547     0234                     l1836:
  3548                           
  3549                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1063:         ++*
      +                          fmt;
  3550     0234  0837               	movf	vfpfcnvrt@fmt,w
  3551     0235  0086               	movwf	6
  3552     0236  0187               	clrf	7
  3553     0237  3001               	movlw	1
  3554     0238  0781               	addwf	1,f
  3555     0239  3141               	addfsr 1,1
  3556     023A  1803               	skipnc
  3557     023B  0A81               	incf	1,f
  3558     023C                     l1838:
  3559                           
  3560                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1065:         fla
      +                          gs = width = 0;
  3561     023C  01E5               	clrf	_width
  3562     023D  01E6               	clrf	_width+1
  3563     023E  1003               	clrc
  3564     023F  3000               	movlw	0
  3565     0240  1803               	btfsc	3,0
  3566     0241  3001               	movlw	1
  3567     0242  00EB               	movwf	_flags
  3568     0243                     l1840:
  3569                           
  3570                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1066:         pre
      +                          c = -1;
  3571     0243  30FF               	movlw	255
  3572     0244  00E7               	movwf	_prec
  3573     0245  30FF               	movlw	255
  3574     0246  00E8               	movwf	_prec+1
  3575     0247                     l1842:
  3576                           
  3577                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1070:         don
      +                          e = 0;
  3578     0247  01C1               	clrf	vfpfcnvrt@done
  3579     0248  01C2               	clrf	vfpfcnvrt@done+1
  3580                           
  3581                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1071:         whi
      +                          le (!done) {
  3582     0249  2A71               	goto	l1852
  3583     024A                     l872:	
  3584                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1080:            
      +                               case '0' :
  3585                           
  3586                           
  3587                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1081:            
      +                                   flags |= (1 << 1);
  3588     024A  14EB               	bsf	_flags,1
  3589     024B                     l1844:
  3590                           
  3591                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1082:            
      +                                   ++*fmt;
  3592     024B  0837               	movf	vfpfcnvrt@fmt,w
  3593     024C  0086               	movwf	6
  3594     024D  0187               	clrf	7
  3595     024E  3001               	movlw	1
  3596     024F  0781               	addwf	1,f
  3597     0250  3141               	addfsr 1,1
  3598     0251  1803               	skipnc
  3599     0252  0A81               	incf	1,f
  3600                           
  3601                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1083:            
      +                                   break;
  3602     0253  2A71               	goto	l1852
  3603     0254                     l1846:
  3604                           
  3605                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1104:            
      +                                   done = 1;
  3606     0254  3001               	movlw	1
  3607     0255  00C1               	movwf	vfpfcnvrt@done
  3608     0256  3000               	movlw	0
  3609     0257  00C2               	movwf	vfpfcnvrt@done+1
  3610                           
  3611                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1105:            
      +                                   break;
  3612     0258  2A71               	goto	l1852
  3613     0259                     l1850:
  3614     0259  0837               	movf	vfpfcnvrt@fmt,w
  3615     025A  0086               	movwf	6
  3616     025B  0187               	clrf	7
  3617     025C  3F40               	moviw [0]fsr1
  3618     025D  00B9               	movwf	??_vfpfcnvrt
  3619     025E  3F41               	moviw [1]fsr1
  3620     025F  00BA               	movwf	??_vfpfcnvrt+1
  3621     0260  0839               	movf	??_vfpfcnvrt,w
  3622     0261  0084               	movwf	4
  3623     0262  083A               	movf	??_vfpfcnvrt+1,w
  3624     0263  0085               	movwf	5
  3625     0264  0800               	movf	0,w	;code access
  3626     0265  00BB               	movwf	??_vfpfcnvrt+2
  3627     0266  01BC               	clrf	??_vfpfcnvrt+3
  3628                           
  3629                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3630                           ; Switch size 1, requested type "simple"
  3631                           ; Number of cases is 1, Range of values is 0 to 0
  3632                           ; switch strategies available:
  3633                           ; Name         Instructions Cycles
  3634                           ; simple_byte            4     3 (average)
  3635                           ; direct_byte            8     6 (fixed)
  3636                           ; jumptable            260     6 (fixed)
  3637                           ;	Chosen strategy is simple_byte
  3638     0267  083C               	movf	??_vfpfcnvrt+3,w
  3639     0268  3A00               	xorlw	0	; case 0
  3640     0269  1903               	skipnz
  3641     026A  2A6C               	goto	l2278
  3642     026B  2A54               	goto	l1846
  3643     026C                     l2278:
  3644                           
  3645                           ; Switch size 1, requested type "simple"
  3646                           ; Number of cases is 1, Range of values is 48 to 48
  3647                           ; switch strategies available:
  3648                           ; Name         Instructions Cycles
  3649                           ; simple_byte            4     3 (average)
  3650                           ; direct_byte           11     9 (fixed)
  3651                           ; jumptable            263     9 (fixed)
  3652                           ;	Chosen strategy is simple_byte
  3653     026C  083B               	movf	??_vfpfcnvrt+2,w
  3654     026D  3A30               	xorlw	48	; case 48
  3655     026E  1903               	skipnz
  3656     026F  2A4A               	goto	l872
  3657     0270  2A54               	goto	l1846
  3658     0271                     l1852:
  3659                           
  3660                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1071:         whi
      +                          le (!done) {
  3661     0271  0841               	movf	vfpfcnvrt@done,w
  3662     0272  0442               	iorwf	vfpfcnvrt@done+1,w
  3663     0273  1903               	btfsc	3,2
  3664     0274  2A76               	goto	u1251
  3665     0275  2A77               	goto	u1250
  3666     0276                     u1251:
  3667     0276  2A59               	goto	l1850
  3668     0277                     u1250:
  3669     0277                     l1854:
  3670                           
  3671                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1117:   width = r
      +                          ead_prec_or_width(fmt, ap);
  3672     0277  0838               	movf	vfpfcnvrt@ap,w
  3673     0278  00F6               	movwf	read_prec_or_width@ap
  3674     0279  0837               	movf	vfpfcnvrt@fmt,w
  3675     027A  3184  24AE  3182   	fcall	_read_prec_or_width
  3676     027D  0877               	movf	?_read_prec_or_width+1,w
  3677     027E  0020               	movlb	0	; select bank0
  3678     027F  00E6               	movwf	_width+1
  3679     0280  0876               	movf	?_read_prec_or_width,w
  3680     0281  00E5               	movwf	_width
  3681     0282                     l1856:
  3682                           
  3683                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1118:   if (width
      +                           < 0) {
  3684     0282  1FE6               	btfss	_width+1,7
  3685     0283  2A85               	goto	u1261
  3686     0284  2A86               	goto	u1260
  3687     0285                     u1261:
  3688     0285  2A8C               	goto	l1862
  3689     0286                     u1260:
  3690     0286                     l1858:
  3691                           
  3692                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1119:    flags |=
      +                           (1 << 0);
  3693     0286  146B               	bsf	_flags,0
  3694     0287                     l1860:
  3695                           
  3696                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1120:    width = 
      +                          -width;
  3697     0287  09E5               	comf	_width,f
  3698     0288  09E6               	comf	_width+1,f
  3699     0289  0AE5               	incf	_width,f
  3700     028A  1903               	skipnz
  3701     028B  0AE6               	incf	_width+1,f
  3702     028C                     l1862:
  3703                           
  3704                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1143:   cp = *fmt
      +                          ;
  3705     028C  0837               	movf	vfpfcnvrt@fmt,w
  3706     028D  0086               	movwf	6
  3707     028E  0187               	clrf	7
  3708     028F  3F40               	moviw [0]fsr1
  3709     0290  00C4               	movwf	vfpfcnvrt@cp
  3710     0291  3F41               	moviw [1]fsr1
  3711     0292  00C5               	movwf	vfpfcnvrt@cp+1
  3712     0293                     l1864:
  3713                           
  3714                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1213:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  3715     0293  0844               	movf	vfpfcnvrt@cp,w
  3716     0294  0084               	movwf	4
  3717     0295  0845               	movf	vfpfcnvrt@cp+1,w
  3718     0296  0085               	movwf	5
  3719     0297  0012               	moviw fsr0++
  3720     0298  3A64               	xorlw	100
  3721     0299  1903               	btfsc	3,2
  3722     029A  2A9C               	goto	u1271
  3723     029B  2A9D               	goto	u1270
  3724     029C                     u1271:
  3725     029C  2AA7               	goto	l1868
  3726     029D                     u1270:
  3727     029D                     l1866:
  3728     029D  0844               	movf	vfpfcnvrt@cp,w
  3729     029E  0084               	movwf	4
  3730     029F  0845               	movf	vfpfcnvrt@cp+1,w
  3731     02A0  0085               	movwf	5
  3732     02A1  0012               	moviw fsr0++
  3733     02A2  3A69               	xorlw	105
  3734     02A3  1D03               	btfss	3,2
  3735     02A4  2AA6               	goto	u1281
  3736     02A5  2AA7               	goto	u1280
  3737     02A6                     u1281:
  3738     02A6  2AC9               	goto	l1876
  3739     02A7                     u1280:
  3740     02A7                     l1868:
  3741                           
  3742                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1256:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  3743     02A7  0838               	movf	vfpfcnvrt@ap,w
  3744     02A8  0086               	movwf	6
  3745     02A9  0187               	clrf	7
  3746     02AA  0801               	movf	1,w
  3747     02AB  0084               	movwf	4
  3748     02AC  0185               	clrf	5
  3749     02AD  3002               	movlw	2
  3750     02AE  0781               	addwf	1,f
  3751     02AF  3F00               	moviw [0]fsr0
  3752     02B0  00BD               	movwf	vfpfcnvrt@convarg
  3753     02B1  3F01               	moviw [1]fsr0
  3754     02B2  00BE               	movwf	vfpfcnvrt@convarg+1
  3755     02B3                     l1870:
  3756                           
  3757                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1258:    *fmt = c
      +                          p+1;
  3758     02B3  0844               	movf	vfpfcnvrt@cp,w
  3759     02B4  3E01               	addlw	1
  3760     02B5  00B9               	movwf	??_vfpfcnvrt
  3761     02B6  3000               	movlw	0
  3762     02B7  3D45               	addwfc	vfpfcnvrt@cp+1,w
  3763     02B8  00BA               	movwf	??_vfpfcnvrt+1
  3764     02B9  0837               	movf	vfpfcnvrt@fmt,w
  3765     02BA  0086               	movwf	6
  3766     02BB  0187               	clrf	7
  3767     02BC  0839               	movf	??_vfpfcnvrt,w
  3768     02BD  3FC0               	movwi [0]fsr1
  3769     02BE  083A               	movf	??_vfpfcnvrt+1,w
  3770     02BF  3FC1               	movwi [1]fsr1
  3771     02C0                     l1872:
  3772                           
  3773                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1259:    return (
      +                          void) dtoa(fp, convarg.sint);;	Return value of _vfpfcnvrt is never used
  3774     02C0  083E               	movf	vfpfcnvrt@convarg+1,w
  3775     02C1  00AB               	movwf	dtoa@d+1
  3776     02C2  083D               	movf	vfpfcnvrt@convarg,w
  3777     02C3  00AA               	movwf	dtoa@d
  3778     02C4  0843               	movf	vfpfcnvrt@fp,w
  3779     02C5  3181  214D  3182   	fcall	_dtoa
  3780     02C8  2AEB               	goto	l880
  3781     02C9                     l1876:
  3782                           
  3783                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1535:         ++*
      +                          fmt;
  3784     02C9  0020               	movlb	0	; select bank0
  3785     02CA  0837               	movf	vfpfcnvrt@fmt,w
  3786     02CB  0086               	movwf	6
  3787     02CC  0187               	clrf	7
  3788     02CD  3001               	movlw	1
  3789     02CE  0781               	addwf	1,f
  3790     02CF  3141               	addfsr 1,1
  3791     02D0  1803               	skipnc
  3792     02D1  0A81               	incf	1,f
  3793     02D2  2AEB               	goto	l880
  3794     02D3                     l1880:
  3795                           
  3796                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1540:     fputc((
      +                          int)(*fmt)[0], fp);
  3797     02D3  0837               	movf	vfpfcnvrt@fmt,w
  3798     02D4  0086               	movwf	6
  3799     02D5  0187               	clrf	7
  3800     02D6  3F40               	moviw [0]fsr1
  3801     02D7  00B9               	movwf	??_vfpfcnvrt
  3802     02D8  3F41               	moviw [1]fsr1
  3803     02D9  00BA               	movwf	??_vfpfcnvrt+1
  3804     02DA  0839               	movf	??_vfpfcnvrt,w
  3805     02DB  0084               	movwf	4
  3806     02DC  083A               	movf	??_vfpfcnvrt+1,w
  3807     02DD  0085               	movwf	5
  3808     02DE  0800               	movf	0,w	;code access
  3809     02DF  00BB               	movwf	??_vfpfcnvrt+2
  3810     02E0  01BC               	clrf	??_vfpfcnvrt+3
  3811     02E1  083B               	movf	??_vfpfcnvrt+2,w
  3812     02E2  00F0               	movwf	fputc@c
  3813     02E3  083C               	movf	??_vfpfcnvrt+3,w
  3814     02E4  00F1               	movwf	fputc@c+1
  3815     02E5  0843               	movf	vfpfcnvrt@fp,w
  3816     02E6  00F2               	movwf	fputc@fp
  3817     02E7  3185  25C0  3182   	fcall	_fputc
  3818     02EA  2AC9               	goto	l1876
  3819     02EB                     l880:
  3820     02EB  0008               	return
  3821     02EC                     __end_of_vfpfcnvrt:
  3822                           
  3823                           	psect	text4
  3824     04AE                     __ptext4:	
  3825 ;; *************** function _read_prec_or_width *****************
  3826 ;; Defined at:
  3827 ;;		line 1029 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  3828 ;; Parameters:    Size  Location     Type
  3829 ;;  fmt             1    wreg     PTR PTR const unsigned c
  3830 ;;		 -> vfprintf@cfmt(2), 
  3831 ;;  ap              1    6[COMMON] PTR PTR void [1]
  3832 ;;		 -> sprintf@ap(1), 
  3833 ;; Auto vars:     Size  Location     Type
  3834 ;;  fmt             1    3[BANK0 ] PTR PTR const unsigned c
  3835 ;;		 -> vfprintf@cfmt(2), 
  3836 ;;  c               1    0[BANK0 ] unsigned char 
  3837 ;;  n               2    1[BANK0 ] int 
  3838 ;; Return value:  Size  Location     Type
  3839 ;;                  2    6[COMMON] int 
  3840 ;; Registers used:
  3841 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3842 ;; Tracked objects:
  3843 ;;		On entry : 0/0
  3844 ;;		On exit  : 0/0
  3845 ;;		Unchanged: 0/0
  3846 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3847 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3848 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3849 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3850 ;;      Totals:         5       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3851 ;;Total ram usage:        9 bytes
  3852 ;; Hardware stack levels used: 1
  3853 ;; Hardware stack levels required when called: 2
  3854 ;; This function calls:
  3855 ;;		___wmul
  3856 ;; This function is called by:
  3857 ;;		_vfpfcnvrt
  3858 ;; This function uses a non-reentrant model
  3859 ;;
  3860                           
  3861     04AE                     _read_prec_or_width:	
  3862                           ;psect for function _read_prec_or_width
  3863                           
  3864                           
  3865                           ;incstack = 0
  3866                           ; Regs used in _read_prec_or_width: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3867                           ;read_prec_or_width@fmt stored from wreg
  3868     04AE  0020               	movlb	0	; select bank0
  3869     04AF  00A3               	movwf	read_prec_or_width@fmt
  3870     04B0                     l1816:
  3871                           
  3872                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1030:     int n =
      +                           0;
  3873     04B0  01A1               	clrf	read_prec_or_width@n
  3874     04B1  01A2               	clrf	read_prec_or_width@n+1
  3875     04B2                     l1818:
  3876                           
  3877                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1031:     if ((*f
      +                          mt)[0] == '*') {
  3878     04B2  0823               	movf	read_prec_or_width@fmt,w
  3879     04B3  0086               	movwf	6
  3880     04B4  0187               	clrf	7
  3881     04B5  3F40               	moviw [0]fsr1
  3882     04B6  00F8               	movwf	??_read_prec_or_width
  3883     04B7  3F41               	moviw [1]fsr1
  3884     04B8  00F9               	movwf	??_read_prec_or_width+1
  3885     04B9  0878               	movf	??_read_prec_or_width,w
  3886     04BA  0084               	movwf	4
  3887     04BB  0879               	movf	??_read_prec_or_width+1,w
  3888     04BC  0085               	movwf	5
  3889     04BD  0012               	moviw fsr0++
  3890     04BE  3A2A               	xorlw	42
  3891     04BF  1D03               	btfss	3,2
  3892     04C0  2CC2               	goto	u1221
  3893     04C1  2CC3               	goto	u1220
  3894     04C2                     u1221:
  3895     04C2  2CF5               	goto	l1828
  3896     04C3                     u1220:
  3897     04C3                     l1820:
  3898                           
  3899                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1032:         ++*
      +                          fmt;
  3900     04C3  0823               	movf	read_prec_or_width@fmt,w
  3901     04C4  0086               	movwf	6
  3902     04C5  0187               	clrf	7
  3903     04C6  3001               	movlw	1
  3904     04C7  0781               	addwf	1,f
  3905     04C8  3141               	addfsr 1,1
  3906     04C9  1803               	skipnc
  3907     04CA  0A81               	incf	1,f
  3908     04CB                     l1822:
  3909                           
  3910                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1033:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
  3911     04CB  0876               	movf	read_prec_or_width@ap,w
  3912     04CC  0086               	movwf	6
  3913     04CD  0187               	clrf	7
  3914     04CE  0801               	movf	1,w
  3915     04CF  0084               	movwf	4
  3916     04D0  0185               	clrf	5
  3917     04D1  3002               	movlw	2
  3918     04D2  0781               	addwf	1,f
  3919     04D3  3F00               	moviw [0]fsr0
  3920     04D4  00A1               	movwf	read_prec_or_width@n
  3921     04D5  3F01               	moviw [1]fsr0
  3922     04D6  00A2               	movwf	read_prec_or_width@n+1
  3923                           
  3924                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1034:     } else 
      +                          {
  3925     04D7  2D09               	goto	l1830
  3926     04D8                     l1824:
  3927                           
  3928                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1037:            
      +                           n = n * 10 + c;
  3929     04D8  0820               	movf	read_prec_or_width@c,w
  3930     04D9  00F8               	movwf	??_read_prec_or_width
  3931     04DA  01F9               	clrf	??_read_prec_or_width+1
  3932     04DB  0822               	movf	read_prec_or_width@n+1,w
  3933     04DC  00F1               	movwf	___wmul@multiplier+1
  3934     04DD  0821               	movf	read_prec_or_width@n,w
  3935     04DE  00F0               	movwf	___wmul@multiplier
  3936     04DF  300A               	movlw	10
  3937     04E0  00F2               	movwf	___wmul@multiplicand
  3938     04E1  3000               	movlw	0
  3939     04E2  00F3               	movwf	___wmul@multiplicand+1
  3940     04E3  3187  272D  3184   	fcall	___wmul
  3941     04E6  0878               	movf	??_read_prec_or_width,w
  3942     04E7  0770               	addwf	?___wmul,w
  3943     04E8  0020               	movlb	0	; select bank0
  3944     04E9  00A1               	movwf	read_prec_or_width@n
  3945     04EA  0879               	movf	??_read_prec_or_width+1,w
  3946     04EB  3D71               	addwfc	?___wmul+1,w
  3947     04EC  00A2               	movwf	read_prec_or_width@n+1
  3948     04ED                     l1826:
  3949                           
  3950                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1038:            
      +                           ++*fmt;
  3951     04ED  0823               	movf	read_prec_or_width@fmt,w
  3952     04EE  0086               	movwf	6
  3953     04EF  0187               	clrf	7
  3954     04F0  3001               	movlw	1
  3955     04F1  0781               	addwf	1,f
  3956     04F2  3141               	addfsr 1,1
  3957     04F3  1803               	skipnc
  3958     04F4  0A81               	incf	1,f
  3959     04F5                     l1828:
  3960                           
  3961                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1036:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  3962     04F5  0823               	movf	read_prec_or_width@fmt,w
  3963     04F6  0086               	movwf	6
  3964     04F7  0187               	clrf	7
  3965     04F8  3F40               	moviw [0]fsr1
  3966     04F9  00F8               	movwf	??_read_prec_or_width
  3967     04FA  3F41               	moviw [1]fsr1
  3968     04FB  00F9               	movwf	??_read_prec_or_width+1
  3969     04FC  0878               	movf	??_read_prec_or_width,w
  3970     04FD  0084               	movwf	4
  3971     04FE  0879               	movf	??_read_prec_or_width+1,w
  3972     04FF  0085               	movwf	5
  3973     0500  0800               	movf	0,w	;code access
  3974     0501  3ED0               	addlw	208
  3975     0502  00A0               	movwf	read_prec_or_width@c
  3976     0503  300A               	movlw	10
  3977     0504  0220               	subwf	read_prec_or_width@c,w
  3978     0505  1C03               	skipc
  3979     0506  2D08               	goto	u1231
  3980     0507  2D09               	goto	u1230
  3981     0508                     u1231:
  3982     0508  2CD8               	goto	l1824
  3983     0509                     u1230:
  3984     0509                     l1830:
  3985                           
  3986                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1041:     return 
      +                          n;
  3987     0509  0822               	movf	read_prec_or_width@n+1,w
  3988     050A  00F7               	movwf	?_read_prec_or_width+1
  3989     050B  0821               	movf	read_prec_or_width@n,w
  3990     050C  00F6               	movwf	?_read_prec_or_width
  3991     050D                     l865:
  3992     050D  0008               	return
  3993     050E                     __end_of_read_prec_or_width:
  3994                           
  3995                           	psect	text5
  3996     072D                     __ptext5:	
  3997 ;; *************** function ___wmul *****************
  3998 ;; Defined at:
  3999 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\Umul16.c"
  4000 ;; Parameters:    Size  Location     Type
  4001 ;;  multiplier      2    0[COMMON] unsigned int 
  4002 ;;  multiplicand    2    2[COMMON] unsigned int 
  4003 ;; Auto vars:     Size  Location     Type
  4004 ;;  product         2    4[COMMON] unsigned int 
  4005 ;; Return value:  Size  Location     Type
  4006 ;;                  2    0[COMMON] unsigned int 
  4007 ;; Registers used:
  4008 ;;		wreg, status,2, status,0
  4009 ;; Tracked objects:
  4010 ;;		On entry : 0/0
  4011 ;;		On exit  : 0/0
  4012 ;;		Unchanged: 0/0
  4013 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4014 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4015 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4017 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4018 ;;Total ram usage:        6 bytes
  4019 ;; Hardware stack levels used: 1
  4020 ;; Hardware stack levels required when called: 1
  4021 ;; This function calls:
  4022 ;;		Nothing
  4023 ;; This function is called by:
  4024 ;;		_read_prec_or_width
  4025 ;; This function uses a non-reentrant model
  4026 ;;
  4027                           
  4028     072D                     ___wmul:	
  4029                           ;psect for function ___wmul
  4030                           
  4031     072D                     l1640:	
  4032                           ;incstack = 0
  4033                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4034                           
  4035     072D  01F4               	clrf	___wmul@product
  4036     072E  01F5               	clrf	___wmul@product+1
  4037     072F                     l1642:
  4038     072F  1C70               	btfss	___wmul@multiplier,0
  4039     0730  2F32               	goto	u811
  4040     0731  2F33               	goto	u810
  4041     0732                     u811:
  4042     0732  2F37               	goto	l344
  4043     0733                     u810:
  4044     0733                     l1644:
  4045     0733  0872               	movf	___wmul@multiplicand,w
  4046     0734  07F4               	addwf	___wmul@product,f
  4047     0735  0873               	movf	___wmul@multiplicand+1,w
  4048     0736  3DF5               	addwfc	___wmul@product+1,f
  4049     0737                     l344:
  4050     0737  3001               	movlw	1
  4051     0738                     u825:
  4052     0738  35F2               	lslf	___wmul@multiplicand,f
  4053     0739  0DF3               	rlf	___wmul@multiplicand+1,f
  4054     073A  0B89               	decfsz	9,f
  4055     073B  2F38               	goto	u825
  4056     073C                     l1646:
  4057     073C  3001               	movlw	1
  4058     073D                     u835:
  4059     073D  36F1               	lsrf	___wmul@multiplier+1,f
  4060     073E  0CF0               	rrf	___wmul@multiplier,f
  4061     073F  0B89               	decfsz	9,f
  4062     0740  2F3D               	goto	u835
  4063     0741                     l1648:
  4064     0741  0870               	movf	___wmul@multiplier,w
  4065     0742  0471               	iorwf	___wmul@multiplier+1,w
  4066     0743  1D03               	btfss	3,2
  4067     0744  2F46               	goto	u841
  4068     0745  2F47               	goto	u840
  4069     0746                     u841:
  4070     0746  2F2F               	goto	l1642
  4071     0747                     u840:
  4072     0747                     l1650:
  4073     0747  0875               	movf	___wmul@product+1,w
  4074     0748  00F1               	movwf	?___wmul+1
  4075     0749  0874               	movf	___wmul@product,w
  4076     074A  00F0               	movwf	?___wmul
  4077     074B                     l346:
  4078     074B  0008               	return
  4079     074C                     __end_of___wmul:
  4080                           
  4081                           	psect	text6
  4082     014D                     __ptext6:	
  4083 ;; *************** function _dtoa *****************
  4084 ;; Defined at:
  4085 ;;		line 470 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  4086 ;; Parameters:    Size  Location     Type
  4087 ;;  fp              1    wreg     PTR struct _IO_FILE
  4088 ;;		 -> sprintf@f(11), 
  4089 ;;  d               2   10[BANK0 ] int 
  4090 ;; Auto vars:     Size  Location     Type
  4091 ;;  fp              1   15[BANK0 ] PTR struct _IO_FILE
  4092 ;;		 -> sprintf@f(11), 
  4093 ;;  i               2   20[BANK0 ] int 
  4094 ;;  w               2   18[BANK0 ] int 
  4095 ;;  p               2   16[BANK0 ] int 
  4096 ;;  s               1   22[BANK0 ] unsigned char 
  4097 ;; Return value:  Size  Location     Type
  4098 ;;                  1    wreg      void 
  4099 ;; Registers used:
  4100 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4101 ;; Tracked objects:
  4102 ;;		On entry : 0/0
  4103 ;;		On exit  : 0/0
  4104 ;;		Unchanged: 0/0
  4105 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4106 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4107 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4108 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4109 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4110 ;;Total ram usage:       13 bytes
  4111 ;; Hardware stack levels used: 1
  4112 ;; Hardware stack levels required when called: 5
  4113 ;; This function calls:
  4114 ;;		___awdiv
  4115 ;;		___awmod
  4116 ;;		_abs
  4117 ;;		_pad
  4118 ;; This function is called by:
  4119 ;;		_vfpfcnvrt
  4120 ;; This function uses a non-reentrant model
  4121 ;;
  4122                           
  4123     014D                     _dtoa:	
  4124                           ;psect for function _dtoa
  4125                           
  4126                           
  4127                           ;incstack = 0
  4128                           ; Regs used in _dtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4129                           ;dtoa@fp stored from wreg
  4130     014D  0020               	movlb	0	; select bank0
  4131     014E  00AF               	movwf	dtoa@fp
  4132     014F                     l1758:
  4133                           
  4134                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 470: static void 
      +                          dtoa(FILE *fp, vfpf_sint_t d);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\commo
      +                          n\doprnt.c: 471: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c:
      +                           472:  char s;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 473
      +                          :     int i, p, w;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c:
      +                           476:     s = d < 0 ? 1 : 0;
  4135     014F  1BAB               	btfsc	dtoa@d+1,7
  4136     0150  2952               	goto	u1091
  4137     0151  2954               	goto	u1090
  4138     0152                     u1091:
  4139     0152  3001               	movlw	1
  4140     0153  2955               	goto	u1100
  4141     0154                     u1090:
  4142     0154  3000               	movlw	0
  4143     0155                     u1100:
  4144     0155  00B6               	movwf	dtoa@s
  4145     0156                     l1760:
  4146                           
  4147                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 477:     if (s) {
  4148     0156  0836               	movf	dtoa@s,w
  4149     0157  1903               	btfsc	3,2
  4150     0158  295A               	goto	u1111
  4151     0159  295B               	goto	u1110
  4152     015A                     u1111:
  4153     015A  2960               	goto	l1764
  4154     015B                     u1110:
  4155     015B                     l1762:
  4156                           
  4157                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 478:         d = 
      +                          -d;
  4158     015B  09AA               	comf	dtoa@d,f
  4159     015C  09AB               	comf	dtoa@d+1,f
  4160     015D  0AAA               	incf	dtoa@d,f
  4161     015E  1903               	skipnz
  4162     015F  0AAB               	incf	dtoa@d+1,f
  4163     0160                     l1764:
  4164                           
  4165                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 483:     if (!(pr
      +                          ec < 0)) {
  4166     0160  1BE8               	btfsc	_prec+1,7
  4167     0161  2963               	goto	u1121
  4168     0162  2964               	goto	u1120
  4169     0163                     u1121:
  4170     0163  2968               	goto	l1768
  4171     0164                     u1120:
  4172     0164                     l1766:
  4173                           
  4174                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 484:         flag
      +                          s &= ~(1 << 1);
  4175     0164  30FD               	movlw	253
  4176     0165  00AC               	movwf	??_dtoa
  4177     0166  082C               	movf	??_dtoa,w
  4178     0167  05EB               	andwf	_flags,f
  4179     0168                     l1768:
  4180                           
  4181                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 487:     p = (0 <
      +                          = prec) ? prec : 1;
  4182     0168  1FE8               	btfss	_prec+1,7
  4183     0169  296B               	goto	u1131
  4184     016A  296C               	goto	u1130
  4185     016B                     u1131:
  4186     016B  2971               	goto	l1772
  4187     016C                     u1130:
  4188     016C                     l1770:
  4189     016C  3001               	movlw	1
  4190     016D  00B0               	movwf	dtoa@p
  4191     016E  3000               	movlw	0
  4192     016F  00B1               	movwf	dtoa@p+1
  4193     0170  2975               	goto	l843
  4194     0171                     l1772:
  4195     0171  0868               	movf	_prec+1,w
  4196     0172  00B1               	movwf	dtoa@p+1
  4197     0173  0867               	movf	_prec,w
  4198     0174  00B0               	movwf	dtoa@p
  4199     0175                     l843:
  4200                           
  4201                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 488:     w = widt
      +                          h;
  4202     0175  0866               	movf	_width+1,w
  4203     0176  00B3               	movwf	dtoa@w+1
  4204     0177  0865               	movf	_width,w
  4205     0178  00B2               	movwf	dtoa@w
  4206     0179                     l1774:
  4207                           
  4208                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 489:     if (s
  4209     0179  0836               	movf	dtoa@s,w
  4210     017A  1903               	btfsc	3,2
  4211     017B  297D               	goto	u1141
  4212     017C  297E               	goto	u1140
  4213     017D                     u1141:
  4214     017D  2992               	goto	l844
  4215     017E                     u1140:
  4216     017E                     l1776:
  4217                           
  4218                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 493:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 494:         --w;
  4219     017E  30FF               	movlw	255
  4220     017F  07B2               	addwf	dtoa@w,f
  4221     0180  30FF               	movlw	255
  4222     0181  3DB3               	addwfc	dtoa@w+1,f
  4223     0182                     l1778:
  4224                           
  4225                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 495:   s = s ? '-
      +                          ' : '+';
  4226     0182  0836               	movf	dtoa@s,w
  4227     0183  1D03               	btfss	3,2
  4228     0184  2986               	goto	u1151
  4229     0185  2987               	goto	u1150
  4230     0186                     u1151:
  4231     0186  298C               	goto	l1782
  4232     0187                     u1150:
  4233     0187                     l1780:
  4234     0187  302B               	movlw	43
  4235     0188  00AD               	movwf	_dtoa$1038
  4236     0189  3000               	movlw	0
  4237     018A  00AE               	movwf	_dtoa$1038+1
  4238     018B  2990               	goto	l848
  4239     018C                     l1782:
  4240     018C  302D               	movlw	45
  4241     018D  00AD               	movwf	_dtoa$1038
  4242     018E  3000               	movlw	0
  4243     018F  00AE               	movwf	_dtoa$1038+1
  4244     0190                     l848:
  4245     0190  082D               	movf	_dtoa$1038,w
  4246     0191  00B6               	movwf	dtoa@s
  4247     0192                     l844:	
  4248                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 496:     }
  4249                           
  4250                           
  4251                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 505:     i = size
      +                          of(dbuf) - 1;
  4252     0192  301F               	movlw	31
  4253     0193  00B4               	movwf	dtoa@i
  4254     0194  3000               	movlw	0
  4255     0195  00B5               	movwf	dtoa@i+1
  4256     0196                     l1784:
  4257                           
  4258                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 506:     dbuf[i] 
      +                          = '\0';
  4259     0196  0021               	movlb	1	; select bank1
  4260     0197  01BF               	clrf	(_dbuf^(0+128)+31)
  4261                           
  4262                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 507:     while (!
      +                          (i < 1) && (d || (0 < p)
  4263     0198  29D0               	goto	l1796
  4264     0199                     l1786:
  4265                           
  4266                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 511:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 512:         --i;
  4267     0199  30FF               	movlw	255
  4268     019A  0020               	movlb	0	; select bank0
  4269     019B  07B4               	addwf	dtoa@i,f
  4270     019C  30FF               	movlw	255
  4271     019D  3DB5               	addwfc	dtoa@i+1,f
  4272     019E                     l1788:
  4273                           
  4274                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 513:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
  4275     019E  0834               	movf	dtoa@i,w
  4276     019F  3EA0               	addlw	(low (_dbuf| 0))& (0+255)
  4277     01A0  0086               	movwf	6
  4278     01A1  0187               	clrf	7
  4279     01A2  300A               	movlw	10
  4280     01A3  00F0               	movwf	___awmod@divisor
  4281     01A4  3000               	movlw	0
  4282     01A5  00F1               	movwf	___awmod@divisor+1
  4283     01A6  082B               	movf	dtoa@d+1,w
  4284     01A7  00F3               	movwf	___awmod@dividend+1
  4285     01A8  082A               	movf	dtoa@d,w
  4286     01A9  00F2               	movwf	___awmod@dividend
  4287     01AA  3185  256D  3181   	fcall	___awmod
  4288     01AD  0871               	movf	?___awmod+1,w
  4289     01AE  00F8               	movwf	abs@a+1
  4290     01AF  0870               	movf	?___awmod,w
  4291     01B0  00F7               	movwf	abs@a
  4292     01B1  3187  2785  3181   	fcall	_abs
  4293     01B4  0877               	movf	?_abs,w
  4294     01B5  3E30               	addlw	48
  4295     01B6  0081               	movwf	1
  4296     01B7                     l1790:
  4297                           
  4298                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 514:         --p;
  4299     01B7  30FF               	movlw	255
  4300     01B8  0020               	movlb	0	; select bank0
  4301     01B9  07B0               	addwf	dtoa@p,f
  4302     01BA  30FF               	movlw	255
  4303     01BB  3DB1               	addwfc	dtoa@p+1,f
  4304     01BC                     l1792:
  4305                           
  4306                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 515:         --w;
  4307     01BC  30FF               	movlw	255
  4308     01BD  07B2               	addwf	dtoa@w,f
  4309     01BE  30FF               	movlw	255
  4310     01BF  3DB3               	addwfc	dtoa@w+1,f
  4311     01C0                     l1794:
  4312                           
  4313                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 516:         d = 
      +                          d / 10;
  4314     01C0  300A               	movlw	10
  4315     01C1  00F0               	movwf	___awdiv@divisor
  4316     01C2  3000               	movlw	0
  4317     01C3  00F1               	movwf	___awdiv@divisor+1
  4318     01C4  082B               	movf	dtoa@d+1,w
  4319     01C5  00F3               	movwf	___awdiv@dividend+1
  4320     01C6  082A               	movf	dtoa@d,w
  4321     01C7  00F2               	movwf	___awdiv@dividend
  4322     01C8  3185  250E  3181   	fcall	___awdiv
  4323     01CB  0871               	movf	?___awdiv+1,w
  4324     01CC  0020               	movlb	0	; select bank0
  4325     01CD  00AB               	movwf	dtoa@d+1
  4326     01CE  0870               	movf	?___awdiv,w
  4327     01CF  00AA               	movwf	dtoa@d
  4328     01D0                     l1796:
  4329                           
  4330                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 507:     while (!
      +                          (i < 1) && (d || (0 < p)
  4331     01D0  0020               	movlb	0	; select bank0
  4332     01D1  0835               	movf	dtoa@i+1,w
  4333     01D2  3A80               	xorlw	128
  4334     01D3  00AC               	movwf	??_dtoa
  4335     01D4  3080               	movlw	128
  4336     01D5  022C               	subwf	??_dtoa,w
  4337     01D6  1D03               	skipz
  4338     01D7  29DA               	goto	u1165
  4339     01D8  3001               	movlw	1
  4340     01D9  0234               	subwf	dtoa@i,w
  4341     01DA                     u1165:
  4342     01DA  1C03               	skipc
  4343     01DB  29DD               	goto	u1161
  4344     01DC  29DE               	goto	u1160
  4345     01DD                     u1161:
  4346     01DD  2A05               	goto	l1806
  4347     01DE                     u1160:
  4348     01DE                     l1798:
  4349     01DE  0020               	movlb	0	; select bank0
  4350     01DF  082A               	movf	dtoa@d,w
  4351     01E0  042B               	iorwf	dtoa@d+1,w
  4352     01E1  1D03               	btfss	3,2
  4353     01E2  29E4               	goto	u1171
  4354     01E3  29E5               	goto	u1170
  4355     01E4                     u1171:
  4356     01E4  2999               	goto	l1786
  4357     01E5                     u1170:
  4358     01E5                     l1800:
  4359     01E5  0831               	movf	dtoa@p+1,w
  4360     01E6  3A80               	xorlw	128
  4361     01E7  00AC               	movwf	??_dtoa
  4362     01E8  3080               	movlw	128
  4363     01E9  022C               	subwf	??_dtoa,w
  4364     01EA  1D03               	skipz
  4365     01EB  29EE               	goto	u1185
  4366     01EC  3001               	movlw	1
  4367     01ED  0230               	subwf	dtoa@p,w
  4368     01EE                     u1185:
  4369     01EE  1803               	skipnc
  4370     01EF  29F1               	goto	u1181
  4371     01F0  29F2               	goto	u1180
  4372     01F1                     u1181:
  4373     01F1  2999               	goto	l1786
  4374     01F2                     u1180:
  4375     01F2                     l1802:
  4376     01F2  0020               	movlb	0	; select bank0
  4377     01F3  0833               	movf	dtoa@w+1,w
  4378     01F4  3A80               	xorlw	128
  4379     01F5  00AC               	movwf	??_dtoa
  4380     01F6  3080               	movlw	128
  4381     01F7  022C               	subwf	??_dtoa,w
  4382     01F8  1D03               	skipz
  4383     01F9  29FC               	goto	u1195
  4384     01FA  3001               	movlw	1
  4385     01FB  0232               	subwf	dtoa@w,w
  4386     01FC                     u1195:
  4387     01FC  1C03               	skipc
  4388     01FD  29FF               	goto	u1191
  4389     01FE  2A00               	goto	u1190
  4390     01FF                     u1191:
  4391     01FF  2A05               	goto	l1806
  4392     0200                     u1190:
  4393     0200                     l1804:
  4394     0200  0020               	movlb	0	; select bank0
  4395     0201  18EB               	btfsc	_flags,1
  4396     0202  2A04               	goto	u1201
  4397     0203  2A05               	goto	u1200
  4398     0204                     u1201:
  4399     0204  2999               	goto	l1786
  4400     0205                     u1200:
  4401     0205                     l1806:
  4402                           
  4403                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 520:     if (s !=
      +                           0) {
  4404     0205  0020               	movlb	0	; select bank0
  4405     0206  0836               	movf	dtoa@s,w
  4406     0207  1903               	btfsc	3,2
  4407     0208  2A0A               	goto	u1211
  4408     0209  2A0B               	goto	u1210
  4409     020A                     u1211:
  4410     020A  2A15               	goto	l1812
  4411     020B                     u1210:
  4412     020B                     l1808:
  4413                           
  4414                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 521:         --i;
  4415     020B  30FF               	movlw	255
  4416     020C  07B4               	addwf	dtoa@i,f
  4417     020D  30FF               	movlw	255
  4418     020E  3DB5               	addwfc	dtoa@i+1,f
  4419     020F                     l1810:
  4420                           
  4421                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 522:         dbuf
      +                          [i] = s;
  4422     020F  0834               	movf	dtoa@i,w
  4423     0210  3EA0               	addlw	(low (_dbuf| 0))& (0+255)
  4424     0211  0086               	movwf	6
  4425     0212  0187               	clrf	7
  4426     0213  0836               	movf	dtoa@s,w
  4427     0214  0081               	movwf	1
  4428     0215                     l1812:
  4429                           
  4430                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 526:     return (
      +                          void) pad(fp, &dbuf[i], w);
  4431     0215  0834               	movf	dtoa@i,w
  4432     0216  3EA0               	addlw	(low (_dbuf| 0))& (0+255)
  4433     0217  00FB               	movwf	pad@buf
  4434     0218  0833               	movf	dtoa@w+1,w
  4435     0219  00FD               	movwf	pad@p+1
  4436     021A  0832               	movf	dtoa@w,w
  4437     021B  00FC               	movwf	pad@p
  4438     021C  082F               	movf	dtoa@fp,w
  4439     021D  3186  2610  3181   	fcall	_pad
  4440     0220                     l857:
  4441     0220  0008               	return
  4442     0221                     __end_of_dtoa:
  4443                           
  4444                           	psect	text7
  4445     0610                     __ptext7:	
  4446 ;; *************** function _pad *****************
  4447 ;; Defined at:
  4448 ;;		line 152 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  4449 ;; Parameters:    Size  Location     Type
  4450 ;;  fp              1    wreg     PTR struct _IO_FILE
  4451 ;;		 -> sprintf@f(11), 
  4452 ;;  buf             1   11[COMMON] PTR unsigned char 
  4453 ;;		 -> dbuf(32), 
  4454 ;;  p               2   12[COMMON] int 
  4455 ;; Auto vars:     Size  Location     Type
  4456 ;;  fp              1    9[BANK0 ] PTR struct _IO_FILE
  4457 ;;		 -> sprintf@f(11), 
  4458 ;;  w               2    7[BANK0 ] int 
  4459 ;;  i               2    5[BANK0 ] int 
  4460 ;; Return value:  Size  Location     Type
  4461 ;;                  1    wreg      void 
  4462 ;; Registers used:
  4463 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4464 ;; Tracked objects:
  4465 ;;		On entry : 0/0
  4466 ;;		On exit  : 0/0
  4467 ;;		Unchanged: 0/0
  4468 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4469 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4470 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4471 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4472 ;;      Totals:         3       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4473 ;;Total ram usage:        9 bytes
  4474 ;; Hardware stack levels used: 1
  4475 ;; Hardware stack levels required when called: 4
  4476 ;; This function calls:
  4477 ;;		_fputc
  4478 ;;		_fputs
  4479 ;; This function is called by:
  4480 ;;		_dtoa
  4481 ;; This function uses a non-reentrant model
  4482 ;;
  4483                           
  4484     0610                     _pad:	
  4485                           ;psect for function _pad
  4486                           
  4487                           
  4488                           ;incstack = 0
  4489                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4490                           ;pad@fp stored from wreg
  4491     0610  0020               	movlb	0	; select bank0
  4492     0611  00A9               	movwf	pad@fp
  4493     0612                     l1736:
  4494                           
  4495                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 152: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\com
      +                          mon\doprnt.c: 153: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.
      +                          c: 154:     int i, w;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt
      +                          .c: 158:     if (flags & (1 << 0)) {
  4496     0612  1C6B               	btfss	_flags,0
  4497     0613  2E15               	goto	u1041
  4498     0614  2E16               	goto	u1040
  4499     0615                     u1041:
  4500     0615  2E1C               	goto	l1740
  4501     0616                     u1040:
  4502     0616                     l1738:
  4503                           
  4504                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 159:         fput
      +                          s((const char *)buf, fp);
  4505     0616  0829               	movf	pad@fp,w
  4506     0617  00F8               	movwf	fputs@fp
  4507     0618  087B               	movf	pad@buf,w
  4508     0619  3187  2709  3186   	fcall	_fputs
  4509     061C                     l1740:
  4510                           
  4511                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 164:     w = (p <
      +                           0) ? 0 : p;
  4512     061C  1BFD               	btfsc	pad@p+1,7
  4513     061D  2E1F               	goto	u1051
  4514     061E  2E20               	goto	u1050
  4515     061F                     u1051:
  4516     061F  2E26               	goto	l1744
  4517     0620                     u1050:
  4518     0620                     l1742:
  4519     0620  087D               	movf	pad@p+1,w
  4520     0621  0020               	movlb	0	; select bank0
  4521     0622  00A8               	movwf	pad@w+1
  4522     0623  087C               	movf	pad@p,w
  4523     0624  00A7               	movwf	pad@w
  4524     0625  2E29               	goto	l830
  4525     0626                     l1744:
  4526     0626  0020               	movlb	0	; select bank0
  4527     0627  01A7               	clrf	pad@w
  4528     0628  01A8               	clrf	pad@w+1
  4529     0629                     l830:
  4530                           
  4531                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 165:     i = 0;
  4532     0629  01A5               	clrf	pad@i
  4533     062A  01A6               	clrf	pad@i+1
  4534                           
  4535                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 166:     while (i
      +                           < w) {
  4536     062B  2E3B               	goto	l1750
  4537     062C                     l1746:
  4538                           
  4539                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 167:         fput
      +                          c(' ', fp);
  4540     062C  3020               	movlw	32
  4541     062D  00F0               	movwf	fputc@c
  4542     062E  3000               	movlw	0
  4543     062F  00F1               	movwf	fputc@c+1
  4544     0630  0020               	movlb	0	; select bank0
  4545     0631  0829               	movf	pad@fp,w
  4546     0632  00F2               	movwf	fputc@fp
  4547     0633  3185  25C0  3186   	fcall	_fputc
  4548     0636                     l1748:
  4549                           
  4550                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 168:         ++i;
  4551     0636  3001               	movlw	1
  4552     0637  0020               	movlb	0	; select bank0
  4553     0638  07A5               	addwf	pad@i,f
  4554     0639  3000               	movlw	0
  4555     063A  3DA6               	addwfc	pad@i+1,f
  4556     063B                     l1750:
  4557                           
  4558                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 166:     while (i
      +                           < w) {
  4559     063B  0826               	movf	pad@i+1,w
  4560     063C  3A80               	xorlw	128
  4561     063D  00A4               	movwf	??_pad
  4562     063E  0828               	movf	pad@w+1,w
  4563     063F  3A80               	xorlw	128
  4564     0640  0224               	subwf	??_pad,w
  4565     0641  1D03               	skipz
  4566     0642  2E45               	goto	u1065
  4567     0643  0827               	movf	pad@w,w
  4568     0644  0225               	subwf	pad@i,w
  4569     0645                     u1065:
  4570     0645  1C03               	skipc
  4571     0646  2E48               	goto	u1061
  4572     0647  2E49               	goto	u1060
  4573     0648                     u1061:
  4574     0648  2E2C               	goto	l1746
  4575     0649                     u1060:
  4576     0649                     l833:
  4577                           
  4578                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 173:     if (!(fl
      +                          ags & (1 << 0))) {
  4579     0649  0020               	movlb	0	; select bank0
  4580     064A  186B               	btfsc	_flags,0
  4581     064B  2E4D               	goto	u1071
  4582     064C  2E4E               	goto	u1070
  4583     064D                     u1071:
  4584     064D  2E54               	goto	l835
  4585     064E                     u1070:
  4586     064E                     l1752:
  4587                           
  4588                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 175:         fput
      +                          s((const char *)buf, fp);
  4589     064E  0829               	movf	pad@fp,w
  4590     064F  00F8               	movwf	fputs@fp
  4591     0650  087B               	movf	pad@buf,w
  4592     0651  3187  2709  3186   	fcall	_fputs
  4593     0654                     l835:
  4594     0654  0008               	return
  4595     0655                     __end_of_pad:
  4596                           
  4597                           	psect	text8
  4598     0709                     __ptext8:	
  4599 ;; *************** function _fputs *****************
  4600 ;; Defined at:
  4601 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_fputs.c"
  4602 ;; Parameters:    Size  Location     Type
  4603 ;;  s               1    wreg     PTR const unsigned char 
  4604 ;;		 -> dbuf(32), 
  4605 ;;  fp              1    8[COMMON] PTR struct _IO_FILE
  4606 ;;		 -> sprintf@f(11), 
  4607 ;; Auto vars:     Size  Location     Type
  4608 ;;  s               1    3[BANK0 ] PTR const unsigned char 
  4609 ;;		 -> dbuf(32), 
  4610 ;;  i               2    1[BANK0 ] int 
  4611 ;;  c               1    0[BANK0 ] unsigned char 
  4612 ;; Return value:  Size  Location     Type
  4613 ;;                  2    8[COMMON] int 
  4614 ;; Registers used:
  4615 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4616 ;; Tracked objects:
  4617 ;;		On entry : 0/0
  4618 ;;		On exit  : 0/0
  4619 ;;		Unchanged: 0/0
  4620 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4621 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4622 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4623 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4624 ;;      Totals:         3       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4625 ;;Total ram usage:        7 bytes
  4626 ;; Hardware stack levels used: 1
  4627 ;; Hardware stack levels required when called: 3
  4628 ;; This function calls:
  4629 ;;		_fputc
  4630 ;; This function is called by:
  4631 ;;		_pad
  4632 ;; This function uses a non-reentrant model
  4633 ;;
  4634                           
  4635     0709                     _fputs:	
  4636                           ;psect for function _fputs
  4637                           
  4638                           
  4639                           ;incstack = 0
  4640                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4641                           ;fputs@s stored from wreg
  4642     0709  0020               	movlb	0	; select bank0
  4643     070A  00A3               	movwf	fputs@s
  4644     070B                     l1632:
  4645     070B  01A1               	clrf	fputs@i
  4646     070C  01A2               	clrf	fputs@i+1
  4647     070D  2F1F               	goto	l1638
  4648     070E                     l1634:
  4649     070E  0820               	movf	fputs@c,w
  4650     070F  00F9               	movwf	??_fputs
  4651     0710  01FA               	clrf	??_fputs+1
  4652     0711  0879               	movf	??_fputs,w
  4653     0712  00F0               	movwf	fputc@c
  4654     0713  087A               	movf	??_fputs+1,w
  4655     0714  00F1               	movwf	fputc@c+1
  4656     0715  0878               	movf	fputs@fp,w
  4657     0716  00F2               	movwf	fputc@fp
  4658     0717  3185  25C0  3187   	fcall	_fputc
  4659     071A                     l1636:
  4660     071A  3001               	movlw	1
  4661     071B  0020               	movlb	0	; select bank0
  4662     071C  07A1               	addwf	fputs@i,f
  4663     071D  3000               	movlw	0
  4664     071E  3DA2               	addwfc	fputs@i+1,f
  4665     071F                     l1638:
  4666     071F  0821               	movf	fputs@i,w
  4667     0720  0723               	addwf	fputs@s,w
  4668     0721  00F9               	movwf	??_fputs
  4669     0722  0879               	movf	??_fputs,w
  4670     0723  0086               	movwf	6
  4671     0724  0187               	clrf	7
  4672     0725  0801               	movf	1,w
  4673     0726  00A0               	movwf	fputs@c
  4674     0727  0820               	movf	fputs@c,w
  4675     0728  1D03               	btfss	3,2
  4676     0729  2F2B               	goto	u801
  4677     072A  2F2C               	goto	u800
  4678     072B                     u801:
  4679     072B  2F0E               	goto	l1634
  4680     072C                     u800:
  4681     072C                     l913:
  4682     072C  0008               	return
  4683     072D                     __end_of_fputs:
  4684                           
  4685                           	psect	text9
  4686     05C0                     __ptext9:	
  4687 ;; *************** function _fputc *****************
  4688 ;; Defined at:
  4689 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_fputc.c"
  4690 ;; Parameters:    Size  Location     Type
  4691 ;;  c               2    0[COMMON] int 
  4692 ;;  fp              1    2[COMMON] PTR struct _IO_FILE
  4693 ;;		 -> sprintf@f(11), 
  4694 ;; Auto vars:     Size  Location     Type
  4695 ;;		None
  4696 ;; Return value:  Size  Location     Type
  4697 ;;                  2    0[COMMON] int 
  4698 ;; Registers used:
  4699 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4700 ;; Tracked objects:
  4701 ;;		On entry : 0/0
  4702 ;;		On exit  : 0/0
  4703 ;;		Unchanged: 0/0
  4704 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4705 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4706 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4707 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4708 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4709 ;;Total ram usage:        8 bytes
  4710 ;; Hardware stack levels used: 1
  4711 ;; Hardware stack levels required when called: 2
  4712 ;; This function calls:
  4713 ;;		_putch
  4714 ;; This function is called by:
  4715 ;;		_pad
  4716 ;;		_vfpfcnvrt
  4717 ;;		_fputs
  4718 ;; This function uses a non-reentrant model
  4719 ;;
  4720                           
  4721     05C0                     _fputc:	
  4722                           ;psect for function _fputc
  4723                           
  4724     05C0                     l1616:	
  4725                           ;incstack = 0
  4726                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4727                           
  4728     05C0  0872               	movf	fputc@fp,w
  4729     05C1  1903               	btfsc	3,2
  4730     05C2  2DC4               	goto	u761
  4731     05C3  2DC5               	goto	u760
  4732     05C4                     u761:
  4733     05C4  2DCA               	goto	l1620
  4734     05C5                     u760:
  4735     05C5                     l1618:
  4736     05C5  0872               	movf	fputc@fp,w
  4737     05C6  1D03               	btfss	3,2
  4738     05C7  2DC9               	goto	u771
  4739     05C8  2DCA               	goto	u770
  4740     05C9                     u771:
  4741     05C9  2DCF               	goto	l1622
  4742     05CA                     u770:
  4743     05CA                     l1620:
  4744     05CA  0870               	movf	fputc@c,w
  4745     05CB  3180  2003  3185   	fcall	_putch
  4746     05CE  2E0F               	goto	l905
  4747     05CF                     l1622:
  4748     05CF  0872               	movf	fputc@fp,w
  4749     05D0  3E09               	addlw	9
  4750     05D1  0086               	movwf	6
  4751     05D2  0187               	clrf	7
  4752     05D3  0016               	moviw fsr1++
  4753     05D4  0401               	iorwf	1,w
  4754     05D5  1903               	btfsc	3,2
  4755     05D6  2DD8               	goto	u781
  4756     05D7  2DD9               	goto	u780
  4757     05D8                     u781:
  4758     05D8  2DF7               	goto	l1626
  4759     05D9                     u780:
  4760     05D9                     l1624:
  4761     05D9  0872               	movf	fputc@fp,w
  4762     05DA  3E09               	addlw	9
  4763     05DB  0086               	movwf	6
  4764     05DC  0187               	clrf	7
  4765     05DD  3F40               	moviw [0]fsr1
  4766     05DE  00F3               	movwf	??_fputc
  4767     05DF  3F41               	moviw [1]fsr1
  4768     05E0  00F4               	movwf	??_fputc+1
  4769     05E1  0872               	movf	fputc@fp,w
  4770     05E2  3E02               	addlw	2
  4771     05E3  0086               	movwf	6
  4772     05E4  0187               	clrf	7
  4773     05E5  3F40               	moviw [0]fsr1
  4774     05E6  00F5               	movwf	??_fputc+2
  4775     05E7  3F41               	moviw [1]fsr1
  4776     05E8  00F6               	movwf	??_fputc+3
  4777     05E9  0876               	movf	??_fputc+3,w
  4778     05EA  3A80               	xorlw	128
  4779     05EB  00F7               	movwf	??_fputc+4
  4780     05EC  0874               	movf	??_fputc+1,w
  4781     05ED  3A80               	xorlw	128
  4782     05EE  0277               	subwf	??_fputc+4,w
  4783     05EF  1D03               	skipz
  4784     05F0  2DF3               	goto	u795
  4785     05F1  0873               	movf	??_fputc,w
  4786     05F2  0275               	subwf	??_fputc+2,w
  4787     05F3                     u795:
  4788     05F3  1803               	skipnc
  4789     05F4  2DF6               	goto	u791
  4790     05F5  2DF7               	goto	u790
  4791     05F6                     u791:
  4792     05F6  2E0F               	goto	l905
  4793     05F7                     u790:
  4794     05F7                     l1626:
  4795     05F7  0872               	movf	fputc@fp,w
  4796     05F8  0086               	movwf	6
  4797     05F9  0187               	clrf	7
  4798     05FA  0872               	movf	fputc@fp,w
  4799     05FB  3E02               	addlw	2
  4800     05FC  0084               	movwf	4
  4801     05FD  0185               	clrf	5
  4802     05FE  0800               	movf	0,w
  4803     05FF  0701               	addwf	1,w
  4804     0600  00F3               	movwf	??_fputc
  4805     0601  0873               	movf	??_fputc,w
  4806     0602  0086               	movwf	6
  4807     0603  0187               	clrf	7
  4808     0604  0870               	movf	fputc@c,w
  4809     0605  0081               	movwf	1
  4810     0606                     l1628:
  4811     0606  0872               	movf	fputc@fp,w
  4812     0607  3E02               	addlw	2
  4813     0608  0086               	movwf	6
  4814     0609  0187               	clrf	7
  4815     060A  3001               	movlw	1
  4816     060B  0781               	addwf	1,f
  4817     060C  3141               	addfsr 1,1
  4818     060D  1803               	skipnc
  4819     060E  0A81               	incf	1,f
  4820     060F                     l905:
  4821     060F  0008               	return
  4822     0610                     __end_of_fputc:
  4823                           
  4824                           	psect	text10
  4825     0003                     __ptext10:	
  4826 ;; *************** function _putch *****************
  4827 ;; Defined at:
  4828 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\putch.c"
  4829 ;; Parameters:    Size  Location     Type
  4830 ;;  c               1    wreg     unsigned char 
  4831 ;; Auto vars:     Size  Location     Type
  4832 ;;  c               1    0[COMMON] unsigned char 
  4833 ;; Return value:  Size  Location     Type
  4834 ;;                  1    wreg      void 
  4835 ;; Registers used:
  4836 ;;		wreg
  4837 ;; Tracked objects:
  4838 ;;		On entry : 0/0
  4839 ;;		On exit  : 0/0
  4840 ;;		Unchanged: 0/0
  4841 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4842 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4843 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4844 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4845 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4846 ;;Total ram usage:        0 bytes
  4847 ;; Hardware stack levels used: 1
  4848 ;; Hardware stack levels required when called: 1
  4849 ;; This function calls:
  4850 ;;		Nothing
  4851 ;; This function is called by:
  4852 ;;		_fputc
  4853 ;; This function uses a non-reentrant model
  4854 ;;
  4855                           
  4856     0003                     _putch:	
  4857                           ;psect for function _putch
  4858                           
  4859     0003                     l916:	
  4860                           ;incstack = 0
  4861                           ; Regs used in _putch: [wreg]
  4862                           
  4863     0003  0008               	return
  4864     0004                     __end_of_putch:
  4865                           
  4866                           	psect	text11
  4867     0785                     __ptext11:	
  4868 ;; *************** function _abs *****************
  4869 ;; Defined at:
  4870 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\abs.c"
  4871 ;; Parameters:    Size  Location     Type
  4872 ;;  a               2    7[COMMON] int 
  4873 ;; Auto vars:     Size  Location     Type
  4874 ;;		None
  4875 ;; Return value:  Size  Location     Type
  4876 ;;                  2    7[COMMON] int 
  4877 ;; Registers used:
  4878 ;;		wreg, status,2, status,0
  4879 ;; Tracked objects:
  4880 ;;		On entry : 0/0
  4881 ;;		On exit  : 0/0
  4882 ;;		Unchanged: 0/0
  4883 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4884 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4885 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4886 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4887 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4888 ;;Total ram usage:        4 bytes
  4889 ;; Hardware stack levels used: 1
  4890 ;; Hardware stack levels required when called: 1
  4891 ;; This function calls:
  4892 ;;		Nothing
  4893 ;; This function is called by:
  4894 ;;		_dtoa
  4895 ;; This function uses a non-reentrant model
  4896 ;;
  4897                           
  4898     0785                     _abs:	
  4899                           ;psect for function _abs
  4900                           
  4901     0785                     l1754:	
  4902                           ;incstack = 0
  4903                           ; Regs used in _abs: [wreg+status,2+status,0]
  4904                           
  4905     0785  0878               	movf	abs@a+1,w
  4906     0786  3A80               	xorlw	128
  4907     0787  00F9               	movwf	??_abs
  4908     0788  3080               	movlw	128
  4909     0789  0279               	subwf	??_abs,w
  4910     078A  1D03               	skipz
  4911     078B  2F8E               	goto	u1085
  4912     078C  3001               	movlw	1
  4913     078D  0277               	subwf	abs@a,w
  4914     078E                     u1085:
  4915     078E  1803               	skipnc
  4916     078F  2F91               	goto	u1081
  4917     0790  2F92               	goto	u1080
  4918     0791                     u1081:
  4919     0791  2F9E               	goto	l890
  4920     0792                     u1080:
  4921     0792                     l1756:
  4922     0792  0977               	comf	abs@a,w
  4923     0793  00F9               	movwf	??_abs
  4924     0794  0978               	comf	abs@a+1,w
  4925     0795  00FA               	movwf	??_abs+1
  4926     0796  0AF9               	incf	??_abs,f
  4927     0797  1903               	skipnz
  4928     0798  0AFA               	incf	??_abs+1,f
  4929     0799  0879               	movf	??_abs,w
  4930     079A  00F7               	movwf	?_abs
  4931     079B  087A               	movf	??_abs+1,w
  4932     079C  00F8               	movwf	?_abs+1
  4933     079D  2F9E               	goto	l893
  4934     079E                     l890:
  4935     079E                     l893:
  4936     079E  0008               	return
  4937     079F                     __end_of_abs:
  4938                           
  4939                           	psect	text12
  4940     056D                     __ptext12:	
  4941 ;; *************** function ___awmod *****************
  4942 ;; Defined at:
  4943 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awmod.c"
  4944 ;; Parameters:    Size  Location     Type
  4945 ;;  divisor         2    0[COMMON] int 
  4946 ;;  dividend        2    2[COMMON] int 
  4947 ;; Auto vars:     Size  Location     Type
  4948 ;;  sign            1    6[COMMON] unsigned char 
  4949 ;;  counter         1    5[COMMON] unsigned char 
  4950 ;; Return value:  Size  Location     Type
  4951 ;;                  2    0[COMMON] int 
  4952 ;; Registers used:
  4953 ;;		wreg, status,2, status,0
  4954 ;; Tracked objects:
  4955 ;;		On entry : 0/0
  4956 ;;		On exit  : 0/0
  4957 ;;		Unchanged: 0/0
  4958 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4959 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4960 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4961 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4962 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4963 ;;Total ram usage:        7 bytes
  4964 ;; Hardware stack levels used: 1
  4965 ;; Hardware stack levels required when called: 1
  4966 ;; This function calls:
  4967 ;;		Nothing
  4968 ;; This function is called by:
  4969 ;;		_dtoa
  4970 ;; This function uses a non-reentrant model
  4971 ;;
  4972                           
  4973     056D                     ___awmod:	
  4974                           ;psect for function ___awmod
  4975                           
  4976     056D                     l1698:	
  4977                           ;incstack = 0
  4978                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  4979                           
  4980     056D  01F6               	clrf	___awmod@sign
  4981     056E                     l1700:
  4982     056E  1FF3               	btfss	___awmod@dividend+1,7
  4983     056F  2D71               	goto	u951
  4984     0570  2D72               	goto	u950
  4985     0571                     u951:
  4986     0571  2D79               	goto	l1706
  4987     0572                     u950:
  4988     0572                     l1702:
  4989     0572  09F2               	comf	___awmod@dividend,f
  4990     0573  09F3               	comf	___awmod@dividend+1,f
  4991     0574  0AF2               	incf	___awmod@dividend,f
  4992     0575  1903               	skipnz
  4993     0576  0AF3               	incf	___awmod@dividend+1,f
  4994     0577                     l1704:
  4995     0577  01F6               	clrf	___awmod@sign
  4996     0578  0AF6               	incf	___awmod@sign,f
  4997     0579                     l1706:
  4998     0579  1FF1               	btfss	___awmod@divisor+1,7
  4999     057A  2D7C               	goto	u961
  5000     057B  2D7D               	goto	u960
  5001     057C                     u961:
  5002     057C  2D82               	goto	l1710
  5003     057D                     u960:
  5004     057D                     l1708:
  5005     057D  09F0               	comf	___awmod@divisor,f
  5006     057E  09F1               	comf	___awmod@divisor+1,f
  5007     057F  0AF0               	incf	___awmod@divisor,f
  5008     0580  1903               	skipnz
  5009     0581  0AF1               	incf	___awmod@divisor+1,f
  5010     0582                     l1710:
  5011     0582  0870               	movf	___awmod@divisor,w
  5012     0583  0471               	iorwf	___awmod@divisor+1,w
  5013     0584  1903               	btfsc	3,2
  5014     0585  2D87               	goto	u971
  5015     0586  2D88               	goto	u970
  5016     0587                     u971:
  5017     0587  2DB1               	goto	l1728
  5018     0588                     u970:
  5019     0588                     l1712:
  5020     0588  01F5               	clrf	___awmod@counter
  5021     0589  0AF5               	incf	___awmod@counter,f
  5022     058A  2D94               	goto	l1718
  5023     058B                     l1714:
  5024     058B  3001               	movlw	1
  5025     058C                     u985:
  5026     058C  35F0               	lslf	___awmod@divisor,f
  5027     058D  0DF1               	rlf	___awmod@divisor+1,f
  5028     058E  0B89               	decfsz	9,f
  5029     058F  2D8C               	goto	u985
  5030     0590                     l1716:
  5031     0590  3001               	movlw	1
  5032     0591  00F4               	movwf	??___awmod
  5033     0592  0874               	movf	??___awmod,w
  5034     0593  07F5               	addwf	___awmod@counter,f
  5035     0594                     l1718:
  5036     0594  1FF1               	btfss	___awmod@divisor+1,7
  5037     0595  2D97               	goto	u991
  5038     0596  2D98               	goto	u990
  5039     0597                     u991:
  5040     0597  2D8B               	goto	l1714
  5041     0598                     u990:
  5042     0598                     l1720:
  5043     0598  0871               	movf	___awmod@divisor+1,w
  5044     0599  0273               	subwf	___awmod@dividend+1,w
  5045     059A  1D03               	skipz
  5046     059B  2D9E               	goto	u1005
  5047     059C  0870               	movf	___awmod@divisor,w
  5048     059D  0272               	subwf	___awmod@dividend,w
  5049     059E                     u1005:
  5050     059E  1C03               	skipc
  5051     059F  2DA1               	goto	u1001
  5052     05A0  2DA2               	goto	u1000
  5053     05A1                     u1001:
  5054     05A1  2DA6               	goto	l1724
  5055     05A2                     u1000:
  5056     05A2                     l1722:
  5057     05A2  0870               	movf	___awmod@divisor,w
  5058     05A3  02F2               	subwf	___awmod@dividend,f
  5059     05A4  0871               	movf	___awmod@divisor+1,w
  5060     05A5  3BF3               	subwfb	___awmod@dividend+1,f
  5061     05A6                     l1724:
  5062     05A6  3001               	movlw	1
  5063     05A7                     u1015:
  5064     05A7  36F1               	lsrf	___awmod@divisor+1,f
  5065     05A8  0CF0               	rrf	___awmod@divisor,f
  5066     05A9  0B89               	decfsz	9,f
  5067     05AA  2DA7               	goto	u1015
  5068     05AB                     l1726:
  5069     05AB  3001               	movlw	1
  5070     05AC  02F5               	subwf	___awmod@counter,f
  5071     05AD  1D03               	btfss	3,2
  5072     05AE  2DB0               	goto	u1021
  5073     05AF  2DB1               	goto	u1020
  5074     05B0                     u1021:
  5075     05B0  2D98               	goto	l1720
  5076     05B1                     u1020:
  5077     05B1                     l1728:
  5078     05B1  0876               	movf	___awmod@sign,w
  5079     05B2  1903               	btfsc	3,2
  5080     05B3  2DB5               	goto	u1031
  5081     05B4  2DB6               	goto	u1030
  5082     05B5                     u1031:
  5083     05B5  2DBB               	goto	l1732
  5084     05B6                     u1030:
  5085     05B6                     l1730:
  5086     05B6  09F2               	comf	___awmod@dividend,f
  5087     05B7  09F3               	comf	___awmod@dividend+1,f
  5088     05B8  0AF2               	incf	___awmod@dividend,f
  5089     05B9  1903               	skipnz
  5090     05BA  0AF3               	incf	___awmod@dividend+1,f
  5091     05BB                     l1732:
  5092     05BB  0873               	movf	___awmod@dividend+1,w
  5093     05BC  00F1               	movwf	?___awmod+1
  5094     05BD  0872               	movf	___awmod@dividend,w
  5095     05BE  00F0               	movwf	?___awmod
  5096     05BF                     l510:
  5097     05BF  0008               	return
  5098     05C0                     __end_of___awmod:
  5099                           
  5100                           	psect	text13
  5101     050E                     __ptext13:	
  5102 ;; *************** function ___awdiv *****************
  5103 ;; Defined at:
  5104 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awdiv.c"
  5105 ;; Parameters:    Size  Location     Type
  5106 ;;  divisor         2    0[COMMON] int 
  5107 ;;  dividend        2    2[COMMON] int 
  5108 ;; Auto vars:     Size  Location     Type
  5109 ;;  quotient        2    7[COMMON] int 
  5110 ;;  sign            1    6[COMMON] unsigned char 
  5111 ;;  counter         1    5[COMMON] unsigned char 
  5112 ;; Return value:  Size  Location     Type
  5113 ;;                  2    0[COMMON] int 
  5114 ;; Registers used:
  5115 ;;		wreg, status,2, status,0
  5116 ;; Tracked objects:
  5117 ;;		On entry : 0/0
  5118 ;;		On exit  : 0/0
  5119 ;;		Unchanged: 0/0
  5120 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5121 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5122 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5123 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5124 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5125 ;;Total ram usage:        9 bytes
  5126 ;; Hardware stack levels used: 1
  5127 ;; Hardware stack levels required when called: 1
  5128 ;; This function calls:
  5129 ;;		Nothing
  5130 ;; This function is called by:
  5131 ;;		_dtoa
  5132 ;; This function uses a non-reentrant model
  5133 ;;
  5134                           
  5135     050E                     ___awdiv:	
  5136                           ;psect for function ___awdiv
  5137                           
  5138     050E                     l1654:	
  5139                           ;incstack = 0
  5140                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  5141                           
  5142     050E  01F6               	clrf	___awdiv@sign
  5143     050F                     l1656:
  5144     050F  1FF1               	btfss	___awdiv@divisor+1,7
  5145     0510  2D12               	goto	u851
  5146     0511  2D13               	goto	u850
  5147     0512                     u851:
  5148     0512  2D1A               	goto	l1662
  5149     0513                     u850:
  5150     0513                     l1658:
  5151     0513  09F0               	comf	___awdiv@divisor,f
  5152     0514  09F1               	comf	___awdiv@divisor+1,f
  5153     0515  0AF0               	incf	___awdiv@divisor,f
  5154     0516  1903               	skipnz
  5155     0517  0AF1               	incf	___awdiv@divisor+1,f
  5156     0518                     l1660:
  5157     0518  01F6               	clrf	___awdiv@sign
  5158     0519  0AF6               	incf	___awdiv@sign,f
  5159     051A                     l1662:
  5160     051A  1FF3               	btfss	___awdiv@dividend+1,7
  5161     051B  2D1D               	goto	u861
  5162     051C  2D1E               	goto	u860
  5163     051D                     u861:
  5164     051D  2D27               	goto	l1668
  5165     051E                     u860:
  5166     051E                     l1664:
  5167     051E  09F2               	comf	___awdiv@dividend,f
  5168     051F  09F3               	comf	___awdiv@dividend+1,f
  5169     0520  0AF2               	incf	___awdiv@dividend,f
  5170     0521  1903               	skipnz
  5171     0522  0AF3               	incf	___awdiv@dividend+1,f
  5172     0523                     l1666:
  5173     0523  3001               	movlw	1
  5174     0524  00F4               	movwf	??___awdiv
  5175     0525  0874               	movf	??___awdiv,w
  5176     0526  06F6               	xorwf	___awdiv@sign,f
  5177     0527                     l1668:
  5178     0527  01F7               	clrf	___awdiv@quotient
  5179     0528  01F8               	clrf	___awdiv@quotient+1
  5180     0529                     l1670:
  5181     0529  0870               	movf	___awdiv@divisor,w
  5182     052A  0471               	iorwf	___awdiv@divisor+1,w
  5183     052B  1903               	btfsc	3,2
  5184     052C  2D2E               	goto	u871
  5185     052D  2D2F               	goto	u870
  5186     052E                     u871:
  5187     052E  2D5E               	goto	l1690
  5188     052F                     u870:
  5189     052F                     l1672:
  5190     052F  01F5               	clrf	___awdiv@counter
  5191     0530  0AF5               	incf	___awdiv@counter,f
  5192     0531  2D3B               	goto	l1678
  5193     0532                     l1674:
  5194     0532  3001               	movlw	1
  5195     0533                     u885:
  5196     0533  35F0               	lslf	___awdiv@divisor,f
  5197     0534  0DF1               	rlf	___awdiv@divisor+1,f
  5198     0535  0B89               	decfsz	9,f
  5199     0536  2D33               	goto	u885
  5200     0537                     l1676:
  5201     0537  3001               	movlw	1
  5202     0538  00F4               	movwf	??___awdiv
  5203     0539  0874               	movf	??___awdiv,w
  5204     053A  07F5               	addwf	___awdiv@counter,f
  5205     053B                     l1678:
  5206     053B  1FF1               	btfss	___awdiv@divisor+1,7
  5207     053C  2D3E               	goto	u891
  5208     053D  2D3F               	goto	u890
  5209     053E                     u891:
  5210     053E  2D32               	goto	l1674
  5211     053F                     u890:
  5212     053F                     l1680:
  5213     053F  3001               	movlw	1
  5214     0540                     u905:
  5215     0540  35F7               	lslf	___awdiv@quotient,f
  5216     0541  0DF8               	rlf	___awdiv@quotient+1,f
  5217     0542  0B89               	decfsz	9,f
  5218     0543  2D40               	goto	u905
  5219     0544  0871               	movf	___awdiv@divisor+1,w
  5220     0545  0273               	subwf	___awdiv@dividend+1,w
  5221     0546  1D03               	skipz
  5222     0547  2D4A               	goto	u915
  5223     0548  0870               	movf	___awdiv@divisor,w
  5224     0549  0272               	subwf	___awdiv@dividend,w
  5225     054A                     u915:
  5226     054A  1C03               	skipc
  5227     054B  2D4D               	goto	u911
  5228     054C  2D4E               	goto	u910
  5229     054D                     u911:
  5230     054D  2D53               	goto	l1686
  5231     054E                     u910:
  5232     054E                     l1682:
  5233     054E  0870               	movf	___awdiv@divisor,w
  5234     054F  02F2               	subwf	___awdiv@dividend,f
  5235     0550  0871               	movf	___awdiv@divisor+1,w
  5236     0551  3BF3               	subwfb	___awdiv@dividend+1,f
  5237     0552                     l1684:
  5238     0552  1477               	bsf	___awdiv@quotient,0
  5239     0553                     l1686:
  5240     0553  3001               	movlw	1
  5241     0554                     u925:
  5242     0554  36F1               	lsrf	___awdiv@divisor+1,f
  5243     0555  0CF0               	rrf	___awdiv@divisor,f
  5244     0556  0B89               	decfsz	9,f
  5245     0557  2D54               	goto	u925
  5246     0558                     l1688:
  5247     0558  3001               	movlw	1
  5248     0559  02F5               	subwf	___awdiv@counter,f
  5249     055A  1D03               	btfss	3,2
  5250     055B  2D5D               	goto	u931
  5251     055C  2D5E               	goto	u930
  5252     055D                     u931:
  5253     055D  2D3F               	goto	l1680
  5254     055E                     u930:
  5255     055E                     l1690:
  5256     055E  0876               	movf	___awdiv@sign,w
  5257     055F  1903               	btfsc	3,2
  5258     0560  2D62               	goto	u941
  5259     0561  2D63               	goto	u940
  5260     0562                     u941:
  5261     0562  2D68               	goto	l1694
  5262     0563                     u940:
  5263     0563                     l1692:
  5264     0563  09F7               	comf	___awdiv@quotient,f
  5265     0564  09F8               	comf	___awdiv@quotient+1,f
  5266     0565  0AF7               	incf	___awdiv@quotient,f
  5267     0566  1903               	skipnz
  5268     0567  0AF8               	incf	___awdiv@quotient+1,f
  5269     0568                     l1694:
  5270     0568  0878               	movf	___awdiv@quotient+1,w
  5271     0569  00F1               	movwf	?___awdiv+1
  5272     056A  0877               	movf	___awdiv@quotient,w
  5273     056B  00F0               	movwf	?___awdiv
  5274     056C                     l497:
  5275     056C  0008               	return
  5276     056D                     __end_of___awdiv:
  5277                           
  5278                           	psect	text14
  5279     07DA                     __ptext14:	
  5280 ;; *************** function _TMR0_Timer *****************
  5281 ;; Defined at:
  5282 ;;		line 19 in file "main.c"
  5283 ;; Parameters:    Size  Location     Type
  5284 ;;		None
  5285 ;; Auto vars:     Size  Location     Type
  5286 ;;		None
  5287 ;; Return value:  Size  Location     Type
  5288 ;;                  1    wreg      void 
  5289 ;; Registers used:
  5290 ;;		wreg
  5291 ;; Tracked objects:
  5292 ;;		On entry : 0/0
  5293 ;;		On exit  : 0/0
  5294 ;;		Unchanged: 0/0
  5295 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5296 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5297 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5298 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5299 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5300 ;;Total ram usage:        0 bytes
  5301 ;; Hardware stack levels used: 1
  5302 ;; Hardware stack levels required when called: 1
  5303 ;; This function calls:
  5304 ;;		Nothing
  5305 ;; This function is called by:
  5306 ;;		_main
  5307 ;; This function uses a non-reentrant model
  5308 ;;
  5309                           
  5310     07DA                     _TMR0_Timer:	
  5311                           ;psect for function _TMR0_Timer
  5312                           
  5313     07DA                     l2088:	
  5314                           ;incstack = 0
  5315                           ; Regs used in _TMR0_Timer: [wreg]
  5316                           
  5317                           
  5318                           ;main.c: 20:     if(INTCONbits.TMR0IF ==1){
  5319     07DA  3002               	movlw	2
  5320     07DB  003C               	movlb	28	; select bank28
  5321     07DC  0091               	movwf	17	;volatile
  5322                           
  5323                           ;main.c: 21:         LATBbits.LATB4 = ! LATBbits.LATB4;
  5324     07DD  3027               	movlw	39
  5325     07DE  0021               	movlb	1	; select bank1
  5326     07DF  0095               	movwf	21	;volatile
  5327                           
  5328                           ;main.c: 22:         counter = TMR1;
  5329     07E0  30E1               	movlw	225
  5330     07E1  0020               	movlb	0	; select bank0
  5331     07E2  0095               	movwf	21	;volatile
  5332     07E3                     l2090:
  5333                           
  5334                           ;main.c: 23:         TMR0 = 0x7D;
  5335     07E3  110B               	bcf	11,2	;volatile
  5336     07E4                     l2092:
  5337                           
  5338                           ;main.c: 24:         TMR1 = 0;
  5339     07E4  168B               	bsf	11,5	;volatile
  5340     07E5                     l104:
  5341     07E5  0008               	return
  5342     07E6                     __end_of_TMR0_Timer:
  5343                           
  5344                           	psect	text15
  5345     07B5                     __ptext15:	
  5346 ;; *************** function _SYSTEM_Initialize *****************
  5347 ;; Defined at:
  5348 ;;		line 50 in file "mcc_generated_files/mcc.c"
  5349 ;; Parameters:    Size  Location     Type
  5350 ;;		None
  5351 ;; Auto vars:     Size  Location     Type
  5352 ;;		None
  5353 ;; Return value:  Size  Location     Type
  5354 ;;                  1    wreg      void 
  5355 ;; Registers used:
  5356 ;;		wreg, status,2, status,0, pclath, cstack
  5357 ;; Tracked objects:
  5358 ;;		On entry : 0/0
  5359 ;;		On exit  : 0/0
  5360 ;;		Unchanged: 0/0
  5361 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5362 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5363 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5365 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5366 ;;Total ram usage:        0 bytes
  5367 ;; Hardware stack levels used: 1
  5368 ;; Hardware stack levels required when called: 2
  5369 ;; This function calls:
  5370 ;;		_OSCILLATOR_Initialize
  5371 ;;		_PIN_MANAGER_Initialize
  5372 ;;		_PWM3_Initialize
  5373 ;;		_TMR2_Initialize
  5374 ;; This function is called by:
  5375 ;;		_main
  5376 ;; This function uses a non-reentrant model
  5377 ;;
  5378                           
  5379     07B5                     _SYSTEM_Initialize:	
  5380                           ;psect for function _SYSTEM_Initialize
  5381                           
  5382     07B5                     l2094:	
  5383                           ;incstack = 0
  5384                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5385                           
  5386                           
  5387                           ;mcc_generated_files/mcc.c: 52:     PIN_MANAGER_Initialize();
  5388     07B5  3186  26DB  3187   	fcall	_PIN_MANAGER_Initialize
  5389                           
  5390                           ;mcc_generated_files/mcc.c: 53:     OSCILLATOR_Initialize();
  5391     07B8  318F  27F9  3187   	fcall	_OSCILLATOR_Initialize
  5392                           
  5393                           ;mcc_generated_files/mcc.c: 54:     PWM3_Initialize();
  5394     07BB  3187  27F1  3187   	fcall	_PWM3_Initialize
  5395                           
  5396                           ;mcc_generated_files/mcc.c: 55:     TMR2_Initialize();
  5397     07BE  3187  27E6  3187   	fcall	_TMR2_Initialize
  5398     07C1                     l221:
  5399     07C1  0008               	return
  5400     07C2                     __end_of_SYSTEM_Initialize:
  5401                           
  5402                           	psect	text16
  5403     07E6                     __ptext16:	
  5404 ;; *************** function _TMR2_Initialize *****************
  5405 ;; Defined at:
  5406 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  5407 ;; Parameters:    Size  Location     Type
  5408 ;;		None
  5409 ;; Auto vars:     Size  Location     Type
  5410 ;;		None
  5411 ;; Return value:  Size  Location     Type
  5412 ;;                  1    wreg      void 
  5413 ;; Registers used:
  5414 ;;		wreg, status,2
  5415 ;; Tracked objects:
  5416 ;;		On entry : 0/0
  5417 ;;		On exit  : 0/0
  5418 ;;		Unchanged: 0/0
  5419 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5420 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5421 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5422 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5423 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5424 ;;Total ram usage:        0 bytes
  5425 ;; Hardware stack levels used: 1
  5426 ;; Hardware stack levels required when called: 1
  5427 ;; This function calls:
  5428 ;;		Nothing
  5429 ;; This function is called by:
  5430 ;;		_SYSTEM_Initialize
  5431 ;; This function uses a non-reentrant model
  5432 ;;
  5433                           
  5434     07E6                     _TMR2_Initialize:	
  5435                           ;psect for function _TMR2_Initialize
  5436                           
  5437     07E6                     l1956:	
  5438                           ;incstack = 0
  5439                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
  5440                           
  5441                           
  5442                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x00;
  5443     07E6  0020               	movlb	0	; select bank0
  5444     07E7  019E               	clrf	30	;volatile
  5445                           
  5446                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
  5447     07E8  019D               	clrf	29	;volatile
  5448                           
  5449                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
  5450     07E9  019F               	clrf	31	;volatile
  5451     07EA                     l1958:
  5452                           
  5453                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0x1F;
  5454     07EA  301F               	movlw	31
  5455     07EB  009B               	movwf	27	;volatile
  5456     07EC                     l1960:
  5457                           
  5458                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
  5459     07EC  019A               	clrf	26	;volatile
  5460     07ED                     l1962:
  5461                           
  5462                           ;mcc_generated_files/tmr2.c: 82:     PIR1bits.TMR2IF = 0;
  5463     07ED  1090               	bcf	16,1	;volatile
  5464                           
  5465                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0x80;
  5466     07EE  3080               	movlw	128
  5467     07EF  009C               	movwf	28	;volatile
  5468     07F0                     l164:
  5469     07F0  0008               	return
  5470     07F1                     __end_of_TMR2_Initialize:
  5471                           
  5472                           	psect	text17
  5473     07F1                     __ptext17:	
  5474 ;; *************** function _PWM3_Initialize *****************
  5475 ;; Defined at:
  5476 ;;		line 58 in file "mcc_generated_files/pwm3.c"
  5477 ;; Parameters:    Size  Location     Type
  5478 ;;		None
  5479 ;; Auto vars:     Size  Location     Type
  5480 ;;		None
  5481 ;; Return value:  Size  Location     Type
  5482 ;;                  1    wreg      void 
  5483 ;; Registers used:
  5484 ;;		wreg, status,2, status,0
  5485 ;; Tracked objects:
  5486 ;;		On entry : 0/0
  5487 ;;		On exit  : 0/0
  5488 ;;		Unchanged: 0/0
  5489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5490 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5491 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5492 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5493 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5494 ;;Total ram usage:        0 bytes
  5495 ;; Hardware stack levels used: 1
  5496 ;; Hardware stack levels required when called: 1
  5497 ;; This function calls:
  5498 ;;		Nothing
  5499 ;; This function is called by:
  5500 ;;		_SYSTEM_Initialize
  5501 ;; This function uses a non-reentrant model
  5502 ;;
  5503                           
  5504     07F1                     _PWM3_Initialize:	
  5505                           ;psect for function _PWM3_Initialize
  5506                           
  5507     07F1                     l1952:	
  5508                           ;incstack = 0
  5509                           ; Regs used in _PWM3_Initialize: [wreg+status,2+status,0]
  5510                           
  5511                           
  5512                           ;mcc_generated_files/pwm3.c: 62:     PWM3CON = 0x80;
  5513     07F1  3080               	movlw	128
  5514     07F2  002C               	movlb	12	; select bank12
  5515     07F3  0099               	movwf	25	;volatile
  5516                           
  5517                           ;mcc_generated_files/pwm3.c: 65:     PWM3DCH = 0x0F;
  5518     07F4  300F               	movlw	15
  5519     07F5  0098               	movwf	24	;volatile
  5520                           
  5521                           ;mcc_generated_files/pwm3.c: 68:     PWM3DCL = 0xC0;
  5522     07F6  30C0               	movlw	192
  5523     07F7  0097               	movwf	23	;volatile
  5524     07F8                     l1954:
  5525                           
  5526                           ;mcc_generated_files/pwm3.c: 71:     CCPTMRSbits.P3TSEL = 0;
  5527     07F8  30CF               	movlw	-49
  5528     07F9  0025               	movlb	5	; select bank5
  5529     07FA  059E               	andwf	30,f	;volatile
  5530     07FB                     l134:
  5531     07FB  0008               	return
  5532     07FC                     __end_of_PWM3_Initialize:
  5533                           
  5534                           	psect	text18
  5535     06DB                     __ptext18:	
  5536 ;; *************** function _PIN_MANAGER_Initialize *****************
  5537 ;; Defined at:
  5538 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  5539 ;; Parameters:    Size  Location     Type
  5540 ;;		None
  5541 ;; Auto vars:     Size  Location     Type
  5542 ;;		None
  5543 ;; Return value:  Size  Location     Type
  5544 ;;                  1    wreg      void 
  5545 ;; Registers used:
  5546 ;;		wreg, status,2
  5547 ;; Tracked objects:
  5548 ;;		On entry : 0/0
  5549 ;;		On exit  : 0/0
  5550 ;;		Unchanged: 0/0
  5551 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5552 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5553 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5554 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5555 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5556 ;;Total ram usage:        0 bytes
  5557 ;; Hardware stack levels used: 1
  5558 ;; Hardware stack levels required when called: 1
  5559 ;; This function calls:
  5560 ;;		Nothing
  5561 ;; This function is called by:
  5562 ;;		_SYSTEM_Initialize
  5563 ;; This function uses a non-reentrant model
  5564 ;;
  5565                           
  5566     06DB                     _PIN_MANAGER_Initialize:	
  5567                           ;psect for function _PIN_MANAGER_Initialize
  5568                           
  5569     06DB                     l1964:	
  5570                           ;incstack = 0
  5571                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  5572                           
  5573                           
  5574                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  5575     06DB  0022               	movlb	2	; select bank2
  5576     06DC  018C               	clrf	12	;volatile
  5577                           
  5578                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  5579     06DD  018D               	clrf	13	;volatile
  5580                           
  5581                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  5582     06DE  018E               	clrf	14	;volatile
  5583     06DF                     l1966:
  5584                           
  5585                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0x37;
  5586     06DF  3037               	movlw	55
  5587     06E0  0021               	movlb	1	; select bank1
  5588     06E1  008C               	movwf	12	;volatile
  5589     06E2                     l1968:
  5590                           
  5591                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xF0;
  5592     06E2  30F0               	movlw	240
  5593     06E3  008D               	movwf	13	;volatile
  5594     06E4                     l1970:
  5595                           
  5596                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xBF;
  5597     06E4  30BF               	movlw	191
  5598     06E5  008E               	movwf	14	;volatile
  5599     06E6                     l1972:
  5600                           
  5601                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0xCF;
  5602     06E6  30CF               	movlw	207
  5603     06E7  0023               	movlb	3	; select bank3
  5604     06E8  008E               	movwf	14	;volatile
  5605     06E9                     l1974:
  5606                           
  5607                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0xF0;
  5608     06E9  30F0               	movlw	240
  5609     06EA  008D               	movwf	13	;volatile
  5610     06EB                     l1976:
  5611                           
  5612                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x17;
  5613     06EB  3017               	movlw	23
  5614     06EC  008C               	movwf	12	;volatile
  5615                           
  5616                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  5617     06ED  0024               	movlb	4	; select bank4
  5618     06EE  018D               	clrf	13	;volatile
  5619                           
  5620                           ;mcc_generated_files/pin_manager.c: 82:     WPUA = 0x00;
  5621     06EF  018C               	clrf	12	;volatile
  5622                           
  5623                           ;mcc_generated_files/pin_manager.c: 83:     WPUC = 0x00;
  5624     06F0  018E               	clrf	14	;volatile
  5625     06F1                     l1978:
  5626                           
  5627                           ;mcc_generated_files/pin_manager.c: 84:     OPTION_REGbits.nWPUEN = 1;
  5628     06F1  0021               	movlb	1	; select bank1
  5629     06F2  1795               	bsf	21,7	;volatile
  5630                           
  5631                           ;mcc_generated_files/pin_manager.c: 89:     ODCONA = 0x00;
  5632     06F3  0025               	movlb	5	; select bank5
  5633     06F4  018C               	clrf	12	;volatile
  5634                           
  5635                           ;mcc_generated_files/pin_manager.c: 90:     ODCONB = 0x00;
  5636     06F5  018D               	clrf	13	;volatile
  5637                           
  5638                           ;mcc_generated_files/pin_manager.c: 91:     ODCONC = 0x00;
  5639     06F6  018E               	clrf	14	;volatile
  5640     06F7                     l1980:
  5641                           
  5642                           ;mcc_generated_files/pin_manager.c: 96:     SLRCONA = 0x37;
  5643     06F7  3037               	movlw	55
  5644     06F8  0026               	movlb	6	; select bank6
  5645     06F9  008C               	movwf	12	;volatile
  5646     06FA                     l1982:
  5647                           
  5648                           ;mcc_generated_files/pin_manager.c: 97:     SLRCONB = 0xF0;
  5649     06FA  30F0               	movlw	240
  5650     06FB  008D               	movwf	13	;volatile
  5651     06FC                     l1984:
  5652                           
  5653                           ;mcc_generated_files/pin_manager.c: 98:     SLRCONC = 0xFF;
  5654     06FC  30FF               	movlw	255
  5655     06FD  008E               	movwf	14	;volatile
  5656     06FE                     l1986:
  5657                           
  5658                           ;mcc_generated_files/pin_manager.c: 103:     INLVLA = 0x3F;
  5659     06FE  303F               	movlw	63
  5660     06FF  0027               	movlb	7	; select bank7
  5661     0700  008C               	movwf	12	;volatile
  5662     0701                     l1988:
  5663                           
  5664                           ;mcc_generated_files/pin_manager.c: 104:     INLVLB = 0xF0;
  5665     0701  30F0               	movlw	240
  5666     0702  008D               	movwf	13	;volatile
  5667     0703                     l1990:
  5668                           
  5669                           ;mcc_generated_files/pin_manager.c: 105:     INLVLC = 0xFF;
  5670     0703  30FF               	movlw	255
  5671     0704  008E               	movwf	14	;volatile
  5672     0705                     l1992:
  5673                           
  5674                           ;mcc_generated_files/pin_manager.c: 114:     RC6PPS = 0x0E;
  5675     0705  300E               	movlw	14
  5676     0706  003D               	movlb	29	; select bank29
  5677     0707  00A6               	movwf	38	;volatile
  5678     0708                     l273:
  5679     0708  0008               	return
  5680     0709                     __end_of_PIN_MANAGER_Initialize:
  5681                           
  5682                           	psect	text19
  5683     0FF9                     __ptext19:	
  5684 ;; *************** function _OSCILLATOR_Initialize *****************
  5685 ;; Defined at:
  5686 ;;		line 58 in file "mcc_generated_files/mcc.c"
  5687 ;; Parameters:    Size  Location     Type
  5688 ;;		None
  5689 ;; Auto vars:     Size  Location     Type
  5690 ;;		None
  5691 ;; Return value:  Size  Location     Type
  5692 ;;                  1    wreg      void 
  5693 ;; Registers used:
  5694 ;;		wreg, status,2
  5695 ;; Tracked objects:
  5696 ;;		On entry : 0/0
  5697 ;;		On exit  : 0/0
  5698 ;;		Unchanged: 0/0
  5699 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5700 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5701 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5702 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5703 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5704 ;;Total ram usage:        0 bytes
  5705 ;; Hardware stack levels used: 1
  5706 ;; Hardware stack levels required when called: 1
  5707 ;; This function calls:
  5708 ;;		Nothing
  5709 ;; This function is called by:
  5710 ;;		_SYSTEM_Initialize
  5711 ;; This function uses a non-reentrant model
  5712 ;;
  5713                           
  5714     0FF9                     _OSCILLATOR_Initialize:	
  5715                           ;psect for function _OSCILLATOR_Initialize
  5716                           
  5717     0FF9                     l1994:	
  5718                           ;incstack = 0
  5719                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  5720                           
  5721                           
  5722                           ;mcc_generated_files/mcc.c: 61:     OSCCON = 0x68;
  5723     0FF9  3068               	movlw	104
  5724     0FFA  0021               	movlb	1	; select bank1
  5725     0FFB  0099               	movwf	25	;volatile
  5726     0FFC                     l1996:
  5727                           
  5728                           ;mcc_generated_files/mcc.c: 63:     OSCTUNE = 0x00;
  5729     0FFC  0198               	clrf	24	;volatile
  5730     0FFD                     l1998:
  5731                           
  5732                           ;mcc_generated_files/mcc.c: 65:     BORCON = 0x00;
  5733     0FFD  0022               	movlb	2	; select bank2
  5734     0FFE  0196               	clrf	22	;volatile
  5735     0FFF                     l224:
  5736     0FFF  0008               	return
  5737     1000                     __end_of_OSCILLATOR_Initialize:
  5738                           
  5739                           	psect	text20
  5740     079F                     __ptext20:	
  5741 ;; *************** function _PWM3_LoadDutyValue *****************
  5742 ;; Defined at:
  5743 ;;		line 74 in file "mcc_generated_files/pwm3.c"
  5744 ;; Parameters:    Size  Location     Type
  5745 ;;  dutyValue       2    0[COMMON] unsigned short 
  5746 ;; Auto vars:     Size  Location     Type
  5747 ;;		None
  5748 ;; Return value:  Size  Location     Type
  5749 ;;                  1    wreg      void 
  5750 ;; Registers used:
  5751 ;;		wreg, status,2, status,0
  5752 ;; Tracked objects:
  5753 ;;		On entry : 0/0
  5754 ;;		On exit  : 0/0
  5755 ;;		Unchanged: 0/0
  5756 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5757 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5758 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5759 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5760 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5761 ;;Total ram usage:        4 bytes
  5762 ;; Hardware stack levels used: 1
  5763 ;; Hardware stack levels required when called: 1
  5764 ;; This function calls:
  5765 ;;		Nothing
  5766 ;; This function is called by:
  5767 ;;		_main
  5768 ;; This function uses a non-reentrant model
  5769 ;;
  5770                           
  5771     079F                     _PWM3_LoadDutyValue:	
  5772                           ;psect for function _PWM3_LoadDutyValue
  5773                           
  5774     079F                     l2096:	
  5775                           ;incstack = 0
  5776                           ; Regs used in _PWM3_LoadDutyValue: [wreg+status,2+status,0]
  5777                           
  5778                           
  5779                           ;mcc_generated_files/pwm3.c: 74:  void PWM3_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm3.c: 75:  {;mcc_generated_files/pwm3.c: 77:      PWM3DCH = (dutyValue & 0x0
      +                          3FC)>>2;
  5780     079F  0871               	movf	PWM3_LoadDutyValue@dutyValue+1,w
  5781     07A0  00F3               	movwf	??_PWM3_LoadDutyValue+1
  5782     07A1  0870               	movf	PWM3_LoadDutyValue@dutyValue,w
  5783     07A2  00F2               	movwf	??_PWM3_LoadDutyValue
  5784     07A3  36F3               	lsrf	??_PWM3_LoadDutyValue+1,f
  5785     07A4  0CF2               	rrf	??_PWM3_LoadDutyValue,f
  5786     07A5  36F3               	lsrf	??_PWM3_LoadDutyValue+1,f
  5787     07A6  0CF2               	rrf	??_PWM3_LoadDutyValue,f
  5788     07A7  0872               	movf	??_PWM3_LoadDutyValue,w
  5789     07A8  002C               	movlb	12	; select bank12
  5790     07A9  0098               	movwf	24	;volatile
  5791                           
  5792                           ;mcc_generated_files/pwm3.c: 80:      PWM3DCL = (dutyValue & 0x0003)<<6;
  5793     07AA  0870               	movf	PWM3_LoadDutyValue@dutyValue,w
  5794     07AB  3903               	andlw	3
  5795     07AC  00F2               	movwf	??_PWM3_LoadDutyValue
  5796     07AD  3005               	movlw	5
  5797     07AE                     u1455:
  5798     07AE  35F2               	lslf	??_PWM3_LoadDutyValue,f
  5799     07AF  3EFF               	addlw	-1
  5800     07B0  1D03               	skipz
  5801     07B1  2FAE               	goto	u1455
  5802     07B2  3572               	lslf	??_PWM3_LoadDutyValue,w
  5803     07B3  0097               	movwf	23	;volatile
  5804     07B4                     l137:
  5805     07B4  0008               	return
  5806     07B5                     __end_of_PWM3_LoadDutyValue:
  5807                           
  5808                           	psect	text21
  5809     0655                     __ptext21:	
  5810 ;; *************** function _Lcd_Out2 *****************
  5811 ;; Defined at:
  5812 ;;		line 115 in file "./flex_lcd.h"
  5813 ;; Parameters:    Size  Location     Type
  5814 ;;  y               1    wreg     unsigned char 
  5815 ;;  x               1    3[COMMON] unsigned char 
  5816 ;;  buffer          2    4[COMMON] PTR unsigned char 
  5817 ;;		 -> STR_4(12), buffer2(20), buffer1(20), 
  5818 ;; Auto vars:     Size  Location     Type
  5819 ;;  y               1    8[COMMON] unsigned char 
  5820 ;;  data            1    9[COMMON] unsigned char 
  5821 ;; Return value:  Size  Location     Type
  5822 ;;                  1    wreg      void 
  5823 ;; Registers used:
  5824 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5825 ;; Tracked objects:
  5826 ;;		On entry : 0/0
  5827 ;;		On exit  : 0/0
  5828 ;;		Unchanged: 0/0
  5829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5830 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5831 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5832 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5833 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5834 ;;Total ram usage:        7 bytes
  5835 ;; Hardware stack levels used: 1
  5836 ;; Hardware stack levels required when called: 2
  5837 ;; This function calls:
  5838 ;;		_Lcd_Chr_CP
  5839 ;;		_Lcd_Cmd
  5840 ;; This function is called by:
  5841 ;;		_main
  5842 ;; This function uses a non-reentrant model
  5843 ;;
  5844                           
  5845     0655                     _Lcd_Out2:	
  5846                           ;psect for function _Lcd_Out2
  5847                           
  5848                           
  5849                           ;incstack = 0
  5850                           ; Regs used in _Lcd_Out2: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5851                           ;Lcd_Out2@y stored from wreg
  5852     0655  00F8               	movwf	Lcd_Out2@y
  5853     0656                     l2062:
  5854                           
  5855                           ;./flex_lcd.h: 115: void Lcd_Out2(unsigned char y, unsigned char x, char *buffer);./flex
      +                          _lcd.h: 116: {;./flex_lcd.h: 117: unsigned char data;;./flex_lcd.h: 118: switch (y)
  5856     0656  2E67               	goto	l2074
  5857     0657                     l2064:
  5858     0657  0873               	movf	Lcd_Out2@x,w
  5859     0658  3E80               	addlw	128
  5860     0659  00F9               	movwf	Lcd_Out2@data
  5861     065A  2E7D               	goto	l2076
  5862     065B                     l2066:
  5863     065B  0873               	movf	Lcd_Out2@x,w
  5864     065C  3EC0               	addlw	192
  5865     065D  00F9               	movwf	Lcd_Out2@data
  5866     065E  2E7D               	goto	l2076
  5867     065F                     l2068:
  5868     065F  0873               	movf	Lcd_Out2@x,w
  5869     0660  3E94               	addlw	148
  5870     0661  00F9               	movwf	Lcd_Out2@data
  5871     0662  2E7D               	goto	l2076
  5872     0663                     l2070:
  5873     0663  0873               	movf	Lcd_Out2@x,w
  5874     0664  3ED4               	addlw	212
  5875     0665  00F9               	movwf	Lcd_Out2@data
  5876     0666  2E7D               	goto	l2076
  5877     0667                     l2074:
  5878     0667  0878               	movf	Lcd_Out2@y,w
  5879     0668  00F6               	movwf	??_Lcd_Out2
  5880     0669  01F7               	clrf	??_Lcd_Out2+1
  5881                           
  5882                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5883                           ; Switch size 1, requested type "simple"
  5884                           ; Number of cases is 1, Range of values is 0 to 0
  5885                           ; switch strategies available:
  5886                           ; Name         Instructions Cycles
  5887                           ; simple_byte            4     3 (average)
  5888                           ; direct_byte            8     6 (fixed)
  5889                           ; jumptable            260     6 (fixed)
  5890                           ;	Chosen strategy is simple_byte
  5891     066A  0877               	movf	??_Lcd_Out2+1,w
  5892     066B  3A00               	xorlw	0	; case 0
  5893     066C  1903               	skipnz
  5894     066D  2E6F               	goto	l2280
  5895     066E  2E7D               	goto	l2076
  5896     066F                     l2280:
  5897                           
  5898                           ; Switch size 1, requested type "simple"
  5899                           ; Number of cases is 4, Range of values is 1 to 4
  5900                           ; switch strategies available:
  5901                           ; Name         Instructions Cycles
  5902                           ; simple_byte           13     7 (average)
  5903                           ; direct_byte           17     9 (fixed)
  5904                           ; jumptable            263     9 (fixed)
  5905                           ;	Chosen strategy is simple_byte
  5906     066F  0876               	movf	??_Lcd_Out2,w
  5907     0670  3A01               	xorlw	1	; case 1
  5908     0671  1903               	skipnz
  5909     0672  2E57               	goto	l2064
  5910     0673  3A03               	xorlw	3	; case 2
  5911     0674  1903               	skipnz
  5912     0675  2E5B               	goto	l2066
  5913     0676  3A01               	xorlw	1	; case 3
  5914     0677  1903               	skipnz
  5915     0678  2E5F               	goto	l2068
  5916     0679  3A07               	xorlw	7	; case 4
  5917     067A  1903               	skipnz
  5918     067B  2E63               	goto	l2070
  5919     067C  2E7D               	goto	l2076
  5920     067D                     l2076:
  5921                           
  5922                           ;./flex_lcd.h: 126: Lcd_Cmd(data);
  5923     067D  0879               	movf	Lcd_Out2@data,w
  5924     067E  3184  241B  3186   	fcall	_Lcd_Cmd
  5925                           
  5926                           ;./flex_lcd.h: 127: while(*buffer)
  5927     0681  2E8E               	goto	l2082
  5928     0682                     l2078:
  5929                           
  5930                           ;./flex_lcd.h: 128: {;./flex_lcd.h: 129:     Lcd_Chr_CP(*buffer);
  5931     0682  0874               	movf	Lcd_Out2@buffer,w
  5932     0683  0084               	movwf	4
  5933     0684  0875               	movf	Lcd_Out2@buffer+1,w
  5934     0685  0085               	movwf	5
  5935     0686  0800               	movf	0,w	;code access
  5936     0687  3183  2385  3186   	fcall	_Lcd_Chr_CP
  5937     068A                     l2080:
  5938                           
  5939                           ;./flex_lcd.h: 130:     buffer++;
  5940     068A  3001               	movlw	1
  5941     068B  07F4               	addwf	Lcd_Out2@buffer,f
  5942     068C  3000               	movlw	0
  5943     068D  3DF5               	addwfc	Lcd_Out2@buffer+1,f
  5944     068E                     l2082:
  5945                           
  5946                           ;./flex_lcd.h: 127: while(*buffer)
  5947     068E  0874               	movf	Lcd_Out2@buffer,w
  5948     068F  0084               	movwf	4
  5949     0690  0875               	movf	Lcd_Out2@buffer+1,w
  5950     0691  0085               	movwf	5
  5951     0692  0012               	moviw fsr0++
  5952     0693  1D03               	btfss	3,2
  5953     0694  2E96               	goto	u1441
  5954     0695  2E97               	goto	u1440
  5955     0696                     u1441:
  5956     0696  2E82               	goto	l2078
  5957     0697                     u1440:
  5958     0697                     l87:
  5959     0697  0008               	return
  5960     0698                     __end_of_Lcd_Out2:
  5961                           
  5962                           	psect	text22
  5963     0698                     __ptext22:	
  5964 ;; *************** function _Lcd_Out *****************
  5965 ;; Defined at:
  5966 ;;		line 94 in file "./flex_lcd.h"
  5967 ;; Parameters:    Size  Location     Type
  5968 ;;  y               1    wreg     unsigned char 
  5969 ;;  x               1    3[COMMON] unsigned char 
  5970 ;;  buffer          2    4[COMMON] PTR const unsigned char 
  5971 ;;		 -> STR_6(6), STR_5(7), 
  5972 ;; Auto vars:     Size  Location     Type
  5973 ;;  y               1    8[COMMON] unsigned char 
  5974 ;;  data            1    9[COMMON] unsigned char 
  5975 ;; Return value:  Size  Location     Type
  5976 ;;                  1    wreg      void 
  5977 ;; Registers used:
  5978 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5979 ;; Tracked objects:
  5980 ;;		On entry : 0/0
  5981 ;;		On exit  : 0/0
  5982 ;;		Unchanged: 0/0
  5983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5984 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5985 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5986 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5987 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5988 ;;Total ram usage:        7 bytes
  5989 ;; Hardware stack levels used: 1
  5990 ;; Hardware stack levels required when called: 2
  5991 ;; This function calls:
  5992 ;;		_Lcd_Chr_CP
  5993 ;;		_Lcd_Cmd
  5994 ;; This function is called by:
  5995 ;;		_main
  5996 ;; This function uses a non-reentrant model
  5997 ;;
  5998                           
  5999     0698                     _Lcd_Out:	
  6000                           ;psect for function _Lcd_Out
  6001                           
  6002                           
  6003                           ;incstack = 0
  6004                           ; Regs used in _Lcd_Out: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6005                           ;Lcd_Out@y stored from wreg
  6006     0698  00F8               	movwf	Lcd_Out@y
  6007     0699                     l2036:
  6008                           
  6009                           ;./flex_lcd.h: 94: void Lcd_Out(unsigned char y, unsigned char x, const char *buffer);./
      +                          flex_lcd.h: 95: {;./flex_lcd.h: 96: unsigned char data;;./flex_lcd.h: 97: switch (y)
  6010     0699  2EAA               	goto	l2048
  6011     069A                     l2038:
  6012     069A  0873               	movf	Lcd_Out@x,w
  6013     069B  3E80               	addlw	128
  6014     069C  00F9               	movwf	Lcd_Out@data
  6015     069D  2EC0               	goto	l2050
  6016     069E                     l2040:
  6017     069E  0873               	movf	Lcd_Out@x,w
  6018     069F  3EC0               	addlw	192
  6019     06A0  00F9               	movwf	Lcd_Out@data
  6020     06A1  2EC0               	goto	l2050
  6021     06A2                     l2042:
  6022     06A2  0873               	movf	Lcd_Out@x,w
  6023     06A3  3E94               	addlw	148
  6024     06A4  00F9               	movwf	Lcd_Out@data
  6025     06A5  2EC0               	goto	l2050
  6026     06A6                     l2044:
  6027     06A6  0873               	movf	Lcd_Out@x,w
  6028     06A7  3ED4               	addlw	212
  6029     06A8  00F9               	movwf	Lcd_Out@data
  6030     06A9  2EC0               	goto	l2050
  6031     06AA                     l2048:
  6032     06AA  0878               	movf	Lcd_Out@y,w
  6033     06AB  00F6               	movwf	??_Lcd_Out
  6034     06AC  01F7               	clrf	??_Lcd_Out+1
  6035                           
  6036                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6037                           ; Switch size 1, requested type "simple"
  6038                           ; Number of cases is 1, Range of values is 0 to 0
  6039                           ; switch strategies available:
  6040                           ; Name         Instructions Cycles
  6041                           ; simple_byte            4     3 (average)
  6042                           ; direct_byte            8     6 (fixed)
  6043                           ; jumptable            260     6 (fixed)
  6044                           ;	Chosen strategy is simple_byte
  6045     06AD  0877               	movf	??_Lcd_Out+1,w
  6046     06AE  3A00               	xorlw	0	; case 0
  6047     06AF  1903               	skipnz
  6048     06B0  2EB2               	goto	l2282
  6049     06B1  2EC0               	goto	l2050
  6050     06B2                     l2282:
  6051                           
  6052                           ; Switch size 1, requested type "simple"
  6053                           ; Number of cases is 4, Range of values is 1 to 4
  6054                           ; switch strategies available:
  6055                           ; Name         Instructions Cycles
  6056                           ; simple_byte           13     7 (average)
  6057                           ; direct_byte           17     9 (fixed)
  6058                           ; jumptable            263     9 (fixed)
  6059                           ;	Chosen strategy is simple_byte
  6060     06B2  0876               	movf	??_Lcd_Out,w
  6061     06B3  3A01               	xorlw	1	; case 1
  6062     06B4  1903               	skipnz
  6063     06B5  2E9A               	goto	l2038
  6064     06B6  3A03               	xorlw	3	; case 2
  6065     06B7  1903               	skipnz
  6066     06B8  2E9E               	goto	l2040
  6067     06B9  3A01               	xorlw	1	; case 3
  6068     06BA  1903               	skipnz
  6069     06BB  2EA2               	goto	l2042
  6070     06BC  3A07               	xorlw	7	; case 4
  6071     06BD  1903               	skipnz
  6072     06BE  2EA6               	goto	l2044
  6073     06BF  2EC0               	goto	l2050
  6074     06C0                     l2050:
  6075                           
  6076                           ;./flex_lcd.h: 105: Lcd_Cmd(data);
  6077     06C0  0879               	movf	Lcd_Out@data,w
  6078     06C1  3184  241B  3186   	fcall	_Lcd_Cmd
  6079                           
  6080                           ;./flex_lcd.h: 106: while(*buffer)
  6081     06C4  2ED1               	goto	l2056
  6082     06C5                     l2052:
  6083                           
  6084                           ;./flex_lcd.h: 107: {;./flex_lcd.h: 108:     Lcd_Chr_CP(*buffer);
  6085     06C5  0874               	movf	Lcd_Out@buffer,w
  6086     06C6  0084               	movwf	4
  6087     06C7  0875               	movf	Lcd_Out@buffer+1,w
  6088     06C8  0085               	movwf	5
  6089     06C9  0800               	movf	0,w	;code access
  6090     06CA  3183  2385  3186   	fcall	_Lcd_Chr_CP
  6091     06CD                     l2054:
  6092                           
  6093                           ;./flex_lcd.h: 109:     buffer++;
  6094     06CD  3001               	movlw	1
  6095     06CE  07F4               	addwf	Lcd_Out@buffer,f
  6096     06CF  3000               	movlw	0
  6097     06D0  3DF5               	addwfc	Lcd_Out@buffer+1,f
  6098     06D1                     l2056:
  6099                           
  6100                           ;./flex_lcd.h: 106: while(*buffer)
  6101     06D1  0874               	movf	Lcd_Out@buffer,w
  6102     06D2  0084               	movwf	4
  6103     06D3  0875               	movf	Lcd_Out@buffer+1,w
  6104     06D4  0085               	movwf	5
  6105     06D5  0012               	moviw fsr0++
  6106     06D6  1D03               	btfss	3,2
  6107     06D7  2ED9               	goto	u1431
  6108     06D8  2EDA               	goto	u1430
  6109     06D9                     u1431:
  6110     06D9  2EC5               	goto	l2052
  6111     06DA                     u1430:
  6112     06DA                     l74:
  6113     06DA  0008               	return
  6114     06DB                     __end_of_Lcd_Out:
  6115                           
  6116                           	psect	text23
  6117     0385                     __ptext23:	
  6118 ;; *************** function _Lcd_Chr_CP *****************
  6119 ;; Defined at:
  6120 ;;		line 136 in file "./flex_lcd.h"
  6121 ;; Parameters:    Size  Location     Type
  6122 ;;  data            1    wreg     unsigned char 
  6123 ;; Auto vars:     Size  Location     Type
  6124 ;;  data            1    2[COMMON] unsigned char 
  6125 ;; Return value:  Size  Location     Type
  6126 ;;                  1    wreg      void 
  6127 ;; Registers used:
  6128 ;;		wreg, status,2, status,0
  6129 ;; Tracked objects:
  6130 ;;		On entry : 0/0
  6131 ;;		On exit  : 0/0
  6132 ;;		Unchanged: 0/0
  6133 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6134 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6135 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6136 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6137 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6138 ;;Total ram usage:        3 bytes
  6139 ;; Hardware stack levels used: 1
  6140 ;; Hardware stack levels required when called: 1
  6141 ;; This function calls:
  6142 ;;		Nothing
  6143 ;; This function is called by:
  6144 ;;		_Lcd_Out
  6145 ;;		_Lcd_Out2
  6146 ;; This function uses a non-reentrant model
  6147 ;;
  6148                           
  6149     0385                     _Lcd_Chr_CP:	
  6150                           ;psect for function _Lcd_Chr_CP
  6151                           
  6152                           
  6153                           ;incstack = 0
  6154                           ; Regs used in _Lcd_Chr_CP: [wreg+status,2+status,0]
  6155                           ;Lcd_Chr_CP@data stored from wreg
  6156     0385  00F2               	movwf	Lcd_Chr_CP@data
  6157     0386                     l1920:
  6158                           
  6159                           ;./flex_lcd.h: 137: PORTCbits.RC4 = 0; PORTCbits.RC5 = 1;
  6160     0386  0020               	movlb	0	; select bank0
  6161     0387  120E               	bcf	14,4	;volatile
  6162     0388  168E               	bsf	14,5	;volatile
  6163     0389                     l1922:
  6164                           
  6165                           ;./flex_lcd.h: 138: PORTCbits.RC0 = (data & 0b10000000)>>7; PORTCbits.RC1 = (data & 0b01
      +                          000000)>>6;
  6166     0389  0872               	movf	Lcd_Chr_CP@data,w
  6167     038A  00F0               	movwf	??_Lcd_Chr_CP
  6168     038B  3007               	movlw	7
  6169     038C                     u1355:
  6170     038C  36F0               	lsrf	??_Lcd_Chr_CP,f
  6171     038D  0B89               	decfsz	9,f
  6172     038E  2B8C               	goto	u1355
  6173     038F  3001               	movlw	1
  6174     0390  0570               	andwf	??_Lcd_Chr_CP,w
  6175     0391  00F1               	movwf	??_Lcd_Chr_CP+1
  6176     0392  080E               	movf	14,w	;volatile
  6177     0393  0671               	xorwf	??_Lcd_Chr_CP+1,w
  6178     0394  39FE               	andlw	-2
  6179     0395  0671               	xorwf	??_Lcd_Chr_CP+1,w
  6180     0396  008E               	movwf	14	;volatile
  6181     0397  0872               	movf	Lcd_Chr_CP@data,w
  6182     0398  00F0               	movwf	??_Lcd_Chr_CP
  6183     0399  3006               	movlw	6
  6184     039A                     u1365:
  6185     039A  36F0               	lsrf	??_Lcd_Chr_CP,f
  6186     039B  0B89               	decfsz	9,f
  6187     039C  2B9A               	goto	u1365
  6188     039D  0870               	movf	??_Lcd_Chr_CP,w
  6189     039E  3901               	andlw	1
  6190     039F  00F1               	movwf	??_Lcd_Chr_CP+1
  6191     03A0  0DF1               	rlf	??_Lcd_Chr_CP+1,f
  6192     03A1  080E               	movf	14,w	;volatile
  6193     03A2  0671               	xorwf	??_Lcd_Chr_CP+1,w
  6194     03A3  39FD               	andlw	-3
  6195     03A4  0671               	xorwf	??_Lcd_Chr_CP+1,w
  6196     03A5  008E               	movwf	14	;volatile
  6197                           
  6198                           ;./flex_lcd.h: 139: PORTCbits.RC2 = (data & 0b00100000)>>5; PORTCbits.RC3 = (data & 0b00
      +                          010000)>>4;
  6199     03A6  0872               	movf	Lcd_Chr_CP@data,w
  6200     03A7  00F0               	movwf	??_Lcd_Chr_CP
  6201     03A8  3005               	movlw	5
  6202     03A9                     u1375:
  6203     03A9  36F0               	lsrf	??_Lcd_Chr_CP,f
  6204     03AA  0B89               	decfsz	9,f
  6205     03AB  2BA9               	goto	u1375
  6206     03AC  0870               	movf	??_Lcd_Chr_CP,w
  6207     03AD  3901               	andlw	1
  6208     03AE  00F1               	movwf	??_Lcd_Chr_CP+1
  6209     03AF  0DF1               	rlf	??_Lcd_Chr_CP+1,f
  6210     03B0  0DF1               	rlf	??_Lcd_Chr_CP+1,f
  6211     03B1  080E               	movf	14,w	;volatile
  6212     03B2  0671               	xorwf	??_Lcd_Chr_CP+1,w
  6213     03B3  39FB               	andlw	-5
  6214     03B4  0671               	xorwf	??_Lcd_Chr_CP+1,w
  6215     03B5  008E               	movwf	14	;volatile
  6216     03B6  0872               	movf	Lcd_Chr_CP@data,w
  6217     03B7  00F0               	movwf	??_Lcd_Chr_CP
  6218     03B8  3004               	movlw	4
  6219     03B9                     u1385:
  6220     03B9  36F0               	lsrf	??_Lcd_Chr_CP,f
  6221     03BA  0B89               	decfsz	9,f
  6222     03BB  2BB9               	goto	u1385
  6223     03BC  0870               	movf	??_Lcd_Chr_CP,w
  6224     03BD  3901               	andlw	1
  6225     03BE  00F1               	movwf	??_Lcd_Chr_CP+1
  6226     03BF  0DF1               	rlf	??_Lcd_Chr_CP+1,f
  6227     03C0  0DF1               	rlf	??_Lcd_Chr_CP+1,f
  6228     03C1  0DF1               	rlf	??_Lcd_Chr_CP+1,f
  6229     03C2  080E               	movf	14,w	;volatile
  6230     03C3  0671               	xorwf	??_Lcd_Chr_CP+1,w
  6231     03C4  39F7               	andlw	-9
  6232     03C5  0671               	xorwf	??_Lcd_Chr_CP+1,w
  6233     03C6  008E               	movwf	14	;volatile
  6234     03C7                     l1924:
  6235                           
  6236                           ;./flex_lcd.h: 140: _delay(10);
  6237     03C7  3003               	movlw	3
  6238     03C8                     u1587:
  6239     03C8  0B89               	decfsz	9,f
  6240     03C9  2BC8               	goto	u1587
  6241     03CA  0000               	nop
  6242     03CB                     l1926:
  6243                           
  6244                           ;./flex_lcd.h: 141: PORTCbits.RC4 = 1; _delay((unsigned long)((5)*(4000000/4000000.0)));
      +                           PORTCbits.RC4 = 0;
  6245     03CB  0020               	movlb	0	; select bank0
  6246     03CC  160E               	bsf	14,4	;volatile
  6247     03CD                     l1928:
  6248     03CD  3200               	nop2	;2 cycle nop
  6249     03CE  3200               	nop2	;2 cycle nop
  6250     03CF  0000               	nop
  6251     03D0                     l1930:
  6252     03D0  0020               	movlb	0	; select bank0
  6253     03D1  120E               	bcf	14,4	;volatile
  6254     03D2                     l1932:
  6255                           
  6256                           ;./flex_lcd.h: 142: PORTCbits.RC0 = (data & 0b00001000)>>3; PORTCbits.RC1 = (data & 0b00
      +                          000100)>>2;
  6257     03D2  0872               	movf	Lcd_Chr_CP@data,w
  6258     03D3  00F0               	movwf	??_Lcd_Chr_CP
  6259     03D4  3003               	movlw	3
  6260     03D5                     u1395:
  6261     03D5  36F0               	lsrf	??_Lcd_Chr_CP,f
  6262     03D6  0B89               	decfsz	9,f
  6263     03D7  2BD5               	goto	u1395
  6264     03D8  3001               	movlw	1
  6265     03D9  0570               	andwf	??_Lcd_Chr_CP,w
  6266     03DA  00F1               	movwf	??_Lcd_Chr_CP+1
  6267     03DB  080E               	movf	14,w	;volatile
  6268     03DC  0671               	xorwf	??_Lcd_Chr_CP+1,w
  6269     03DD  39FE               	andlw	-2
  6270     03DE  0671               	xorwf	??_Lcd_Chr_CP+1,w
  6271     03DF  008E               	movwf	14	;volatile
  6272     03E0                     l1934:
  6273     03E0  0872               	movf	Lcd_Chr_CP@data,w
  6274     03E1  00F0               	movwf	??_Lcd_Chr_CP
  6275     03E2  3002               	movlw	2
  6276     03E3                     u1405:
  6277     03E3  36F0               	lsrf	??_Lcd_Chr_CP,f
  6278     03E4  0B89               	decfsz	9,f
  6279     03E5  2BE3               	goto	u1405
  6280     03E6  0870               	movf	??_Lcd_Chr_CP,w
  6281     03E7  3901               	andlw	1
  6282     03E8  00F1               	movwf	??_Lcd_Chr_CP+1
  6283     03E9  0DF1               	rlf	??_Lcd_Chr_CP+1,f
  6284     03EA  080E               	movf	14,w	;volatile
  6285     03EB  0671               	xorwf	??_Lcd_Chr_CP+1,w
  6286     03EC  39FD               	andlw	-3
  6287     03ED  0671               	xorwf	??_Lcd_Chr_CP+1,w
  6288     03EE  008E               	movwf	14	;volatile
  6289     03EF                     l1936:
  6290                           
  6291                           ;./flex_lcd.h: 143: PORTCbits.RC2 = (data & 0b00000010)>>1; PORTCbits.RC3 = (data & 0b00
      +                          000001);
  6292     03EF  3672               	lsrf	Lcd_Chr_CP@data,w
  6293     03F0  3901               	andlw	1
  6294     03F1  00F0               	movwf	??_Lcd_Chr_CP
  6295     03F2  0DF0               	rlf	??_Lcd_Chr_CP,f
  6296     03F3  0DF0               	rlf	??_Lcd_Chr_CP,f
  6297     03F4  080E               	movf	14,w	;volatile
  6298     03F5  0670               	xorwf	??_Lcd_Chr_CP,w
  6299     03F6  39FB               	andlw	-5
  6300     03F7  0670               	xorwf	??_Lcd_Chr_CP,w
  6301     03F8  008E               	movwf	14	;volatile
  6302     03F9                     l1938:
  6303     03F9  0872               	movf	Lcd_Chr_CP@data,w
  6304     03FA  3901               	andlw	1
  6305     03FB  00F0               	movwf	??_Lcd_Chr_CP
  6306     03FC  0DF0               	rlf	??_Lcd_Chr_CP,f
  6307     03FD  0DF0               	rlf	??_Lcd_Chr_CP,f
  6308     03FE  0DF0               	rlf	??_Lcd_Chr_CP,f
  6309     03FF  080E               	movf	14,w	;volatile
  6310     0400  0670               	xorwf	??_Lcd_Chr_CP,w
  6311     0401  39F7               	andlw	-9
  6312     0402  0670               	xorwf	??_Lcd_Chr_CP,w
  6313     0403  008E               	movwf	14	;volatile
  6314     0404                     l1940:
  6315                           
  6316                           ;./flex_lcd.h: 144: _delay(10);
  6317     0404  3003               	movlw	3
  6318     0405                     u1597:
  6319     0405  0B89               	decfsz	9,f
  6320     0406  2C05               	goto	u1597
  6321     0407  0000               	nop
  6322     0408                     l1942:
  6323                           
  6324                           ;./flex_lcd.h: 145: PORTCbits.RC4 = 1; _delay((unsigned long)((5)*(4000000/4000000.0)));
      +                           PORTCbits.RC4 = 0;
  6325     0408  0020               	movlb	0	; select bank0
  6326     0409  160E               	bsf	14,4	;volatile
  6327     040A                     l1944:
  6328     040A  3200               	nop2	;2 cycle nop
  6329     040B  3200               	nop2	;2 cycle nop
  6330     040C  0000               	nop
  6331     040D                     l1946:
  6332     040D  0020               	movlb	0	; select bank0
  6333     040E  120E               	bcf	14,4	;volatile
  6334     040F                     l1948:
  6335                           
  6336                           ;./flex_lcd.h: 146: _delay((unsigned long)((5)*(4000000/4000000.0))); _delay((unsigned l
      +                          ong)((5500)*(4000000/4000000.0)));
  6337     040F  3200               	nop2	;2 cycle nop
  6338     0410  3200               	nop2	;2 cycle nop
  6339     0411  0000               	nop
  6340     0412                     l1950:
  6341     0412  3008               	movlw	8
  6342     0413  00F0               	movwf	??_Lcd_Chr_CP
  6343     0414  3023               	movlw	35
  6344     0415                     u1607:
  6345     0415  0B89               	decfsz	9,f
  6346     0416  2C15               	goto	u1607
  6347     0417  0BF0               	decfsz	??_Lcd_Chr_CP,f
  6348     0418  2C15               	goto	u1607
  6349     0419  0000               	nop
  6350     041A                     l90:
  6351     041A  0008               	return
  6352     041B                     __end_of_Lcd_Chr_CP:
  6353                           
  6354                           	psect	text24
  6355     02EC                     __ptext24:	
  6356 ;; *************** function _Lcd_Init *****************
  6357 ;; Defined at:
  6358 ;;		line 52 in file "./flex_lcd.h"
  6359 ;; Parameters:    Size  Location     Type
  6360 ;;		None
  6361 ;; Auto vars:     Size  Location     Type
  6362 ;;  data            1    4[COMMON] unsigned char 
  6363 ;; Return value:  Size  Location     Type
  6364 ;;                  1    wreg      void 
  6365 ;; Registers used:
  6366 ;;		wreg, status,2, status,0, pclath, cstack
  6367 ;; Tracked objects:
  6368 ;;		On entry : 0/0
  6369 ;;		On exit  : 0/0
  6370 ;;		Unchanged: 0/0
  6371 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6372 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6373 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6374 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6375 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6376 ;;Total ram usage:        2 bytes
  6377 ;; Hardware stack levels used: 1
  6378 ;; Hardware stack levels required when called: 2
  6379 ;; This function calls:
  6380 ;;		_Lcd_Cmd
  6381 ;; This function is called by:
  6382 ;;		_main
  6383 ;; This function uses a non-reentrant model
  6384 ;;
  6385                           
  6386     02EC                     _Lcd_Init:	
  6387                           ;psect for function _Lcd_Init
  6388                           
  6389     02EC                     l2010:	
  6390                           ;incstack = 0
  6391                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  6392                           
  6393                           
  6394                           ;./flex_lcd.h: 53: unsigned char data;;./flex_lcd.h: 54: TRISCbits.TRISC0 = 0;
  6395     02EC  0021               	movlb	1	; select bank1
  6396     02ED  100E               	bcf	14,0	;volatile
  6397                           
  6398                           ;./flex_lcd.h: 55: TRISCbits.TRISC1 = 0;
  6399     02EE  108E               	bcf	14,1	;volatile
  6400                           
  6401                           ;./flex_lcd.h: 56: TRISCbits.TRISC2 = 0;
  6402     02EF  110E               	bcf	14,2	;volatile
  6403                           
  6404                           ;./flex_lcd.h: 57: TRISCbits.TRISC3 = 0;
  6405     02F0  118E               	bcf	14,3	;volatile
  6406                           
  6407                           ;./flex_lcd.h: 58: TRISCbits.TRISC4 = 0;
  6408     02F1  120E               	bcf	14,4	;volatile
  6409                           
  6410                           ;./flex_lcd.h: 59: TRISCbits.TRISC5 = 0;
  6411     02F2  128E               	bcf	14,5	;volatile
  6412                           
  6413                           ;./flex_lcd.h: 60: PORTCbits.RC0 = 0;
  6414     02F3  0020               	movlb	0	; select bank0
  6415     02F4  100E               	bcf	14,0	;volatile
  6416                           
  6417                           ;./flex_lcd.h: 61: PORTCbits.RC1 = 0;
  6418     02F5  108E               	bcf	14,1	;volatile
  6419                           
  6420                           ;./flex_lcd.h: 62: PORTCbits.RC2 = 0;
  6421     02F6  110E               	bcf	14,2	;volatile
  6422                           
  6423                           ;./flex_lcd.h: 63: PORTCbits.RC3 = 0;
  6424     02F7  118E               	bcf	14,3	;volatile
  6425                           
  6426                           ;./flex_lcd.h: 64: PORTCbits.RC4 = 0;
  6427     02F8  120E               	bcf	14,4	;volatile
  6428                           
  6429                           ;./flex_lcd.h: 65: PORTCbits.RC5 = 0;
  6430     02F9  128E               	bcf	14,5	;volatile
  6431     02FA                     l2012:
  6432                           
  6433                           ;./flex_lcd.h: 66: _delay((unsigned long)((5500)*(4000000/4000000.0)));
  6434     02FA  3008               	movlw	8
  6435     02FB  00F3               	movwf	??_Lcd_Init
  6436     02FC  3023               	movlw	35
  6437     02FD                     u1617:
  6438     02FD  0B89               	decfsz	9,f
  6439     02FE  2AFD               	goto	u1617
  6440     02FF  0BF3               	decfsz	??_Lcd_Init,f
  6441     0300  2AFD               	goto	u1617
  6442     0301  0000               	nop
  6443                           
  6444                           ;./flex_lcd.h: 67: _delay((unsigned long)((5500)*(4000000/4000000.0)));
  6445     0302  3008               	movlw	8
  6446     0303  00F3               	movwf	??_Lcd_Init
  6447     0304  3023               	movlw	35
  6448     0305                     u1627:
  6449     0305  0B89               	decfsz	9,f
  6450     0306  2B05               	goto	u1627
  6451     0307  0BF3               	decfsz	??_Lcd_Init,f
  6452     0308  2B05               	goto	u1627
  6453     0309  0000               	nop
  6454                           
  6455                           ;./flex_lcd.h: 68: _delay((unsigned long)((5500)*(4000000/4000000.0)));
  6456     030A  3008               	movlw	8
  6457     030B  00F3               	movwf	??_Lcd_Init
  6458     030C  3023               	movlw	35
  6459     030D                     u1637:
  6460     030D  0B89               	decfsz	9,f
  6461     030E  2B0D               	goto	u1637
  6462     030F  0BF3               	decfsz	??_Lcd_Init,f
  6463     0310  2B0D               	goto	u1637
  6464     0311  0000               	nop
  6465                           
  6466                           ;./flex_lcd.h: 69: _delay((unsigned long)((5500)*(4000000/4000000.0)));
  6467     0312  3008               	movlw	8
  6468     0313  00F3               	movwf	??_Lcd_Init
  6469     0314  3023               	movlw	35
  6470     0315                     u1647:
  6471     0315  0B89               	decfsz	9,f
  6472     0316  2B15               	goto	u1647
  6473     0317  0BF3               	decfsz	??_Lcd_Init,f
  6474     0318  2B15               	goto	u1647
  6475     0319  0000               	nop
  6476                           
  6477                           ;./flex_lcd.h: 70: _delay((unsigned long)((5500)*(4000000/4000000.0)));
  6478     031A  3008               	movlw	8
  6479     031B  00F3               	movwf	??_Lcd_Init
  6480     031C  3023               	movlw	35
  6481     031D                     u1657:
  6482     031D  0B89               	decfsz	9,f
  6483     031E  2B1D               	goto	u1657
  6484     031F  0BF3               	decfsz	??_Lcd_Init,f
  6485     0320  2B1D               	goto	u1657
  6486     0321  0000               	nop
  6487                           
  6488                           ;./flex_lcd.h: 71: _delay((unsigned long)((5500)*(4000000/4000000.0)));
  6489     0322  3008               	movlw	8
  6490     0323  00F3               	movwf	??_Lcd_Init
  6491     0324  3023               	movlw	35
  6492     0325                     u1667:
  6493     0325  0B89               	decfsz	9,f
  6494     0326  2B25               	goto	u1667
  6495     0327  0BF3               	decfsz	??_Lcd_Init,f
  6496     0328  2B25               	goto	u1667
  6497     0329  0000               	nop
  6498     032A                     l2014:
  6499                           
  6500                           ;./flex_lcd.h: 72: for(data = 1; data < 4; data ++)
  6501     032A  01F4               	clrf	Lcd_Init@data
  6502     032B  0AF4               	incf	Lcd_Init@data,f
  6503     032C                     l59:
  6504                           
  6505                           ;./flex_lcd.h: 73: {;./flex_lcd.h: 74:     PORTCbits.RC0 = 0; PORTCbits.RC1 = 0; PORTCbi
      +                          ts.RC2 = 1; PORTCbits.RC3 = 1; PORTCbits.RC4 = 0;
  6506     032C  0020               	movlb	0	; select bank0
  6507     032D  100E               	bcf	14,0	;volatile
  6508     032E  108E               	bcf	14,1	;volatile
  6509     032F  150E               	bsf	14,2	;volatile
  6510     0330  158E               	bsf	14,3	;volatile
  6511     0331  120E               	bcf	14,4	;volatile
  6512                           
  6513                           ;./flex_lcd.h: 75:     PORTCbits.RC5 = 0; PORTCbits.RC0 = 0; PORTCbits.RC1 = 0; PORTCbit
      +                          s.RC2 = 1; PORTCbits.RC3 = 1;
  6514     0332  128E               	bcf	14,5	;volatile
  6515     0333  100E               	bcf	14,0	;volatile
  6516     0334  108E               	bcf	14,1	;volatile
  6517     0335  150E               	bsf	14,2	;volatile
  6518     0336  158E               	bsf	14,3	;volatile
  6519                           
  6520                           ;./flex_lcd.h: 76:     PORTCbits.RC4 = 1; PORTCbits.RC5 = 0;
  6521     0337  160E               	bsf	14,4	;volatile
  6522     0338  128E               	bcf	14,5	;volatile
  6523                           
  6524                           ;./flex_lcd.h: 77:     _delay((unsigned long)((5)*(4000000/4000000.0)));
  6525     0339  3200               	nop2	;2 cycle nop
  6526     033A  3200               	nop2	;2 cycle nop
  6527     033B  0000               	nop
  6528                           
  6529                           ;./flex_lcd.h: 78:     PORTCbits.RC0 = 0; PORTCbits.RC1 = 0; PORTCbits.RC2 = 1; PORTCbit
      +                          s.RC3 = 1; PORTCbits.RC4 = 0;
  6530     033C  0020               	movlb	0	; select bank0
  6531     033D  100E               	bcf	14,0	;volatile
  6532     033E  108E               	bcf	14,1	;volatile
  6533     033F  150E               	bsf	14,2	;volatile
  6534     0340  158E               	bsf	14,3	;volatile
  6535     0341  120E               	bcf	14,4	;volatile
  6536                           
  6537                           ;./flex_lcd.h: 79:     PORTCbits.RC5 = 0;
  6538     0342  128E               	bcf	14,5	;volatile
  6539     0343                     l2018:
  6540                           
  6541                           ;./flex_lcd.h: 80:     _delay((unsigned long)((5500)*(4000000/4000000.0)));
  6542     0343  3008               	movlw	8
  6543     0344  00F3               	movwf	??_Lcd_Init
  6544     0345  3023               	movlw	35
  6545     0346                     u1677:
  6546     0346  0B89               	decfsz	9,f
  6547     0347  2B46               	goto	u1677
  6548     0348  0BF3               	decfsz	??_Lcd_Init,f
  6549     0349  2B46               	goto	u1677
  6550     034A  0000               	nop
  6551     034B                     l2020:
  6552                           
  6553                           ;./flex_lcd.h: 81: }
  6554     034B  3001               	movlw	1
  6555     034C  00F3               	movwf	??_Lcd_Init
  6556     034D  0873               	movf	??_Lcd_Init,w
  6557     034E  07F4               	addwf	Lcd_Init@data,f
  6558     034F                     l2022:
  6559     034F  3004               	movlw	4
  6560     0350  0274               	subwf	Lcd_Init@data,w
  6561     0351  1C03               	skipc
  6562     0352  2B54               	goto	u1421
  6563     0353  2B55               	goto	u1420
  6564     0354                     u1421:
  6565     0354  2B2C               	goto	l59
  6566     0355                     u1420:
  6567     0355                     l60:
  6568                           
  6569                           ;./flex_lcd.h: 82: PORTCbits.RC0 = 0; PORTCbits.RC1 = 0; PORTCbits.RC2 = 1; PORTCbits.RC
      +                          3 = 0; PORTCbits.RC4 = 0; PORTCbits.RC5 = 0;
  6570     0355  0020               	movlb	0	; select bank0
  6571     0356  100E               	bcf	14,0	;volatile
  6572     0357  108E               	bcf	14,1	;volatile
  6573     0358  150E               	bsf	14,2	;volatile
  6574     0359  118E               	bcf	14,3	;volatile
  6575     035A  120E               	bcf	14,4	;volatile
  6576     035B  128E               	bcf	14,5	;volatile
  6577                           
  6578                           ;./flex_lcd.h: 83: PORTCbits.RC0 = 0; PORTCbits.RC1 = 0; PORTCbits.RC2 = 1; PORTCbits.RC
      +                          3 = 0; PORTCbits.RC4 = 1; PORTCbits.RC5 = 0;
  6579     035C  100E               	bcf	14,0	;volatile
  6580     035D  108E               	bcf	14,1	;volatile
  6581     035E  150E               	bsf	14,2	;volatile
  6582     035F  118E               	bcf	14,3	;volatile
  6583     0360  160E               	bsf	14,4	;volatile
  6584     0361  128E               	bcf	14,5	;volatile
  6585                           
  6586                           ;./flex_lcd.h: 84: _delay((unsigned long)((5)*(4000000/4000000.0)));
  6587     0362  3200               	nop2	;2 cycle nop
  6588     0363  3200               	nop2	;2 cycle nop
  6589     0364  0000               	nop
  6590                           
  6591                           ;./flex_lcd.h: 85: PORTCbits.RC0 = 0; PORTCbits.RC1 = 0; PORTCbits.RC2 = 1; PORTCbits.RC
      +                          3 = 0; PORTCbits.RC4 = 0; PORTCbits.RC5 = 0;
  6592     0365  0020               	movlb	0	; select bank0
  6593     0366  100E               	bcf	14,0	;volatile
  6594     0367  108E               	bcf	14,1	;volatile
  6595     0368  150E               	bsf	14,2	;volatile
  6596     0369  118E               	bcf	14,3	;volatile
  6597     036A  120E               	bcf	14,4	;volatile
  6598     036B  128E               	bcf	14,5	;volatile
  6599     036C                     l2024:
  6600                           
  6601                           ;./flex_lcd.h: 86: _delay((unsigned long)((5500)*(4000000/4000000.0)));
  6602     036C  3008               	movlw	8
  6603     036D  00F3               	movwf	??_Lcd_Init
  6604     036E  3023               	movlw	35
  6605     036F                     u1687:
  6606     036F  0B89               	decfsz	9,f
  6607     0370  2B6F               	goto	u1687
  6608     0371  0BF3               	decfsz	??_Lcd_Init,f
  6609     0372  2B6F               	goto	u1687
  6610     0373  0000               	nop
  6611     0374                     l2026:
  6612     0374  3028               	movlw	40
  6613     0375  3184  241B  3182   	fcall	_Lcd_Cmd
  6614     0378                     l2028:
  6615     0378  3010               	movlw	16
  6616     0379  3184  241B  3182   	fcall	_Lcd_Cmd
  6617     037C                     l2030:
  6618     037C  3001               	movlw	1
  6619     037D  3184  241B  3182   	fcall	_Lcd_Cmd
  6620     0380                     l2032:
  6621     0380                     l2034:
  6622     0380  300F               	movlw	15
  6623     0381  3184  241B  3182   	fcall	_Lcd_Cmd
  6624     0384                     l61:
  6625     0384  0008               	return
  6626     0385                     __end_of_Lcd_Init:
  6627                           
  6628                           	psect	text25
  6629     041B                     __ptext25:	
  6630 ;; *************** function _Lcd_Cmd *****************
  6631 ;; Defined at:
  6632 ;;		line 150 in file "./flex_lcd.h"
  6633 ;; Parameters:    Size  Location     Type
  6634 ;;  data            1    wreg     unsigned char 
  6635 ;; Auto vars:     Size  Location     Type
  6636 ;;  data            1    2[COMMON] unsigned char 
  6637 ;; Return value:  Size  Location     Type
  6638 ;;                  1    wreg      void 
  6639 ;; Registers used:
  6640 ;;		wreg, status,2, status,0
  6641 ;; Tracked objects:
  6642 ;;		On entry : 0/0
  6643 ;;		On exit  : 0/0
  6644 ;;		Unchanged: 0/0
  6645 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6646 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6647 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6648 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6649 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6650 ;;Total ram usage:        3 bytes
  6651 ;; Hardware stack levels used: 1
  6652 ;; Hardware stack levels required when called: 1
  6653 ;; This function calls:
  6654 ;;		Nothing
  6655 ;; This function is called by:
  6656 ;;		_Lcd_Init
  6657 ;;		_Lcd_Out
  6658 ;;		_Lcd_Out2
  6659 ;;		_main
  6660 ;; This function uses a non-reentrant model
  6661 ;;
  6662                           
  6663     041B                     _Lcd_Cmd:	
  6664                           ;psect for function _Lcd_Cmd
  6665                           
  6666                           
  6667                           ;incstack = 0
  6668                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0]
  6669                           ;Lcd_Cmd@data stored from wreg
  6670     041B  00F2               	movwf	Lcd_Cmd@data
  6671     041C                     l1890:
  6672                           
  6673                           ;./flex_lcd.h: 151: PORTCbits.RC4 = 0; PORTCbits.RC5 = 0;
  6674     041C  0020               	movlb	0	; select bank0
  6675     041D  120E               	bcf	14,4	;volatile
  6676     041E  128E               	bcf	14,5	;volatile
  6677     041F                     l1892:
  6678                           
  6679                           ;./flex_lcd.h: 152: PORTCbits.RC0 = (data & 0b10000000)>>7; PORTCbits.RC1 = (data & 0b01
      +                          000000)>>6;
  6680     041F  0872               	movf	Lcd_Cmd@data,w
  6681     0420  00F0               	movwf	??_Lcd_Cmd
  6682     0421  3007               	movlw	7
  6683     0422                     u1295:
  6684     0422  36F0               	lsrf	??_Lcd_Cmd,f
  6685     0423  0B89               	decfsz	9,f
  6686     0424  2C22               	goto	u1295
  6687     0425  3001               	movlw	1
  6688     0426  0570               	andwf	??_Lcd_Cmd,w
  6689     0427  00F1               	movwf	??_Lcd_Cmd+1
  6690     0428  080E               	movf	14,w	;volatile
  6691     0429  0671               	xorwf	??_Lcd_Cmd+1,w
  6692     042A  39FE               	andlw	-2
  6693     042B  0671               	xorwf	??_Lcd_Cmd+1,w
  6694     042C  008E               	movwf	14	;volatile
  6695     042D  0872               	movf	Lcd_Cmd@data,w
  6696     042E  00F0               	movwf	??_Lcd_Cmd
  6697     042F  3006               	movlw	6
  6698     0430                     u1305:
  6699     0430  36F0               	lsrf	??_Lcd_Cmd,f
  6700     0431  0B89               	decfsz	9,f
  6701     0432  2C30               	goto	u1305
  6702     0433  0870               	movf	??_Lcd_Cmd,w
  6703     0434  3901               	andlw	1
  6704     0435  00F1               	movwf	??_Lcd_Cmd+1
  6705     0436  0DF1               	rlf	??_Lcd_Cmd+1,f
  6706     0437  080E               	movf	14,w	;volatile
  6707     0438  0671               	xorwf	??_Lcd_Cmd+1,w
  6708     0439  39FD               	andlw	-3
  6709     043A  0671               	xorwf	??_Lcd_Cmd+1,w
  6710     043B  008E               	movwf	14	;volatile
  6711                           
  6712                           ;./flex_lcd.h: 153: PORTCbits.RC2 = (data & 0b00100000)>>5; PORTCbits.RC3 = (data & 0b00
      +                          010000)>>4;
  6713     043C  0872               	movf	Lcd_Cmd@data,w
  6714     043D  00F0               	movwf	??_Lcd_Cmd
  6715     043E  3005               	movlw	5
  6716     043F                     u1315:
  6717     043F  36F0               	lsrf	??_Lcd_Cmd,f
  6718     0440  0B89               	decfsz	9,f
  6719     0441  2C3F               	goto	u1315
  6720     0442  0870               	movf	??_Lcd_Cmd,w
  6721     0443  3901               	andlw	1
  6722     0444  00F1               	movwf	??_Lcd_Cmd+1
  6723     0445  0DF1               	rlf	??_Lcd_Cmd+1,f
  6724     0446  0DF1               	rlf	??_Lcd_Cmd+1,f
  6725     0447  080E               	movf	14,w	;volatile
  6726     0448  0671               	xorwf	??_Lcd_Cmd+1,w
  6727     0449  39FB               	andlw	-5
  6728     044A  0671               	xorwf	??_Lcd_Cmd+1,w
  6729     044B  008E               	movwf	14	;volatile
  6730     044C  0872               	movf	Lcd_Cmd@data,w
  6731     044D  00F0               	movwf	??_Lcd_Cmd
  6732     044E  3004               	movlw	4
  6733     044F                     u1325:
  6734     044F  36F0               	lsrf	??_Lcd_Cmd,f
  6735     0450  0B89               	decfsz	9,f
  6736     0451  2C4F               	goto	u1325
  6737     0452  0870               	movf	??_Lcd_Cmd,w
  6738     0453  3901               	andlw	1
  6739     0454  00F1               	movwf	??_Lcd_Cmd+1
  6740     0455  0DF1               	rlf	??_Lcd_Cmd+1,f
  6741     0456  0DF1               	rlf	??_Lcd_Cmd+1,f
  6742     0457  0DF1               	rlf	??_Lcd_Cmd+1,f
  6743     0458  080E               	movf	14,w	;volatile
  6744     0459  0671               	xorwf	??_Lcd_Cmd+1,w
  6745     045A  39F7               	andlw	-9
  6746     045B  0671               	xorwf	??_Lcd_Cmd+1,w
  6747     045C  008E               	movwf	14	;volatile
  6748     045D                     l1894:
  6749                           
  6750                           ;./flex_lcd.h: 154: _delay(10);
  6751     045D  3003               	movlw	3
  6752     045E                     u1697:
  6753     045E  0B89               	decfsz	9,f
  6754     045F  2C5E               	goto	u1697
  6755     0460  0000               	nop
  6756     0461                     l1896:
  6757                           
  6758                           ;./flex_lcd.h: 155: PORTCbits.RC4 = 1; _delay((unsigned long)((5)*(4000000/4000000.0)));
      +                           PORTCbits.RC4 = 0;
  6759     0461  0020               	movlb	0	; select bank0
  6760     0462  160E               	bsf	14,4	;volatile
  6761     0463                     l1898:
  6762     0463  3200               	nop2	;2 cycle nop
  6763     0464  3200               	nop2	;2 cycle nop
  6764     0465  0000               	nop
  6765     0466                     l1900:
  6766     0466  0020               	movlb	0	; select bank0
  6767     0467  120E               	bcf	14,4	;volatile
  6768     0468                     l1902:
  6769                           
  6770                           ;./flex_lcd.h: 156: PORTCbits.RC0 = (data & 0b00001000)>>3; PORTCbits.RC1 = (data & 0b00
      +                          000100)>>2;
  6771     0468  0872               	movf	Lcd_Cmd@data,w
  6772     0469  00F0               	movwf	??_Lcd_Cmd
  6773     046A  3003               	movlw	3
  6774     046B                     u1335:
  6775     046B  36F0               	lsrf	??_Lcd_Cmd,f
  6776     046C  0B89               	decfsz	9,f
  6777     046D  2C6B               	goto	u1335
  6778     046E  3001               	movlw	1
  6779     046F  0570               	andwf	??_Lcd_Cmd,w
  6780     0470  00F1               	movwf	??_Lcd_Cmd+1
  6781     0471  080E               	movf	14,w	;volatile
  6782     0472  0671               	xorwf	??_Lcd_Cmd+1,w
  6783     0473  39FE               	andlw	-2
  6784     0474  0671               	xorwf	??_Lcd_Cmd+1,w
  6785     0475  008E               	movwf	14	;volatile
  6786     0476                     l1904:
  6787     0476  0872               	movf	Lcd_Cmd@data,w
  6788     0477  00F0               	movwf	??_Lcd_Cmd
  6789     0478  3002               	movlw	2
  6790     0479                     u1345:
  6791     0479  36F0               	lsrf	??_Lcd_Cmd,f
  6792     047A  0B89               	decfsz	9,f
  6793     047B  2C79               	goto	u1345
  6794     047C  0870               	movf	??_Lcd_Cmd,w
  6795     047D  3901               	andlw	1
  6796     047E  00F1               	movwf	??_Lcd_Cmd+1
  6797     047F  0DF1               	rlf	??_Lcd_Cmd+1,f
  6798     0480  080E               	movf	14,w	;volatile
  6799     0481  0671               	xorwf	??_Lcd_Cmd+1,w
  6800     0482  39FD               	andlw	-3
  6801     0483  0671               	xorwf	??_Lcd_Cmd+1,w
  6802     0484  008E               	movwf	14	;volatile
  6803     0485                     l1906:
  6804                           
  6805                           ;./flex_lcd.h: 157: PORTCbits.RC2 = (data & 0b00000010)>>1; PORTCbits.RC3 = (data & 0b00
      +                          000001);
  6806     0485  3672               	lsrf	Lcd_Cmd@data,w
  6807     0486  3901               	andlw	1
  6808     0487  00F0               	movwf	??_Lcd_Cmd
  6809     0488  0DF0               	rlf	??_Lcd_Cmd,f
  6810     0489  0DF0               	rlf	??_Lcd_Cmd,f
  6811     048A  080E               	movf	14,w	;volatile
  6812     048B  0670               	xorwf	??_Lcd_Cmd,w
  6813     048C  39FB               	andlw	-5
  6814     048D  0670               	xorwf	??_Lcd_Cmd,w
  6815     048E  008E               	movwf	14	;volatile
  6816     048F                     l1908:
  6817     048F  0872               	movf	Lcd_Cmd@data,w
  6818     0490  3901               	andlw	1
  6819     0491  00F0               	movwf	??_Lcd_Cmd
  6820     0492  0DF0               	rlf	??_Lcd_Cmd,f
  6821     0493  0DF0               	rlf	??_Lcd_Cmd,f
  6822     0494  0DF0               	rlf	??_Lcd_Cmd,f
  6823     0495  080E               	movf	14,w	;volatile
  6824     0496  0670               	xorwf	??_Lcd_Cmd,w
  6825     0497  39F7               	andlw	-9
  6826     0498  0670               	xorwf	??_Lcd_Cmd,w
  6827     0499  008E               	movwf	14	;volatile
  6828     049A                     l1910:
  6829                           
  6830                           ;./flex_lcd.h: 158: _delay(10);
  6831     049A  3003               	movlw	3
  6832     049B                     u1707:
  6833     049B  0B89               	decfsz	9,f
  6834     049C  2C9B               	goto	u1707
  6835     049D  0000               	nop
  6836     049E                     l1912:
  6837                           
  6838                           ;./flex_lcd.h: 159: PORTCbits.RC4 = 1; _delay((unsigned long)((5)*(4000000/4000000.0)));
      +                           PORTCbits.RC4 = 0;
  6839     049E  0020               	movlb	0	; select bank0
  6840     049F  160E               	bsf	14,4	;volatile
  6841     04A0                     l1914:
  6842     04A0  3200               	nop2	;2 cycle nop
  6843     04A1  3200               	nop2	;2 cycle nop
  6844     04A2  0000               	nop
  6845     04A3                     l1916:
  6846     04A3  0020               	movlb	0	; select bank0
  6847     04A4  120E               	bcf	14,4	;volatile
  6848     04A5                     l1918:
  6849                           
  6850                           ;./flex_lcd.h: 160: _delay((unsigned long)((5500)*(4000000/4000000.0)));
  6851     04A5  3008               	movlw	8
  6852     04A6  00F0               	movwf	??_Lcd_Cmd
  6853     04A7  3023               	movlw	35
  6854     04A8                     u1717:
  6855     04A8  0B89               	decfsz	9,f
  6856     04A9  2CA8               	goto	u1717
  6857     04AA  0BF0               	decfsz	??_Lcd_Cmd,f
  6858     04AB  2CA8               	goto	u1717
  6859     04AC  0000               	nop
  6860     04AD                     l93:
  6861     04AD  0008               	return
  6862     04AE                     __end_of_Lcd_Cmd:
  6863                           
  6864                           	psect	intentry
  6865     0004                     __pintentry:	
  6866 ;; *************** function _ISR_TIMER0 *****************
  6867 ;; Defined at:
  6868 ;;		line 33 in file "main.c"
  6869 ;; Parameters:    Size  Location     Type
  6870 ;;		None
  6871 ;; Auto vars:     Size  Location     Type
  6872 ;;		None
  6873 ;; Return value:  Size  Location     Type
  6874 ;;                  1    wreg      void 
  6875 ;; Registers used:
  6876 ;;		wreg, status,2, status,0
  6877 ;; Tracked objects:
  6878 ;;		On entry : 0/0
  6879 ;;		On exit  : 0/0
  6880 ;;		Unchanged: 0/0
  6881 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6882 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6883 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6884 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6885 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6886 ;;Total ram usage:        0 bytes
  6887 ;; Hardware stack levels used: 1
  6888 ;; This function calls:
  6889 ;;		Nothing
  6890 ;; This function is called by:
  6891 ;;		Interrupt level 1
  6892 ;; This function uses a non-reentrant model
  6893 ;;
  6894                           
  6895     0004                     _ISR_TIMER0:
  6896                           
  6897                           ;incstack = 0
  6898     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  6899                           
  6900                           ; Regs used in _ISR_TIMER0: [wreg+status,2+status,0]
  6901     0005  3180               	pagesel	$
  6902     0006                     i1l2110:
  6903                           
  6904                           ;main.c: 34:     OSCCONbits.SCS = 0b00;
  6905     0006  1D0B               	btfss	11,2	;volatile
  6906     0007  2809               	goto	u146_21
  6907     0008  280A               	goto	u146_20
  6908     0009                     u146_21:
  6909     0009  2822               	goto	i1l113
  6910     000A                     u146_20:
  6911     000A                     i1l2112:
  6912                           
  6913                           ;main.c: 35:     OSCTUNE = 0;
  6914     000A  1003               	clrc
  6915     000B  0022               	movlb	2	; select bank2
  6916     000C  1E0D               	btfss	13,4	;volatile
  6917     000D  1403               	setc
  6918     000E  1803               	btfsc	3,0
  6919     000F  2811               	goto	u147_21
  6920     0010  2814               	goto	u147_20
  6921     0011                     u147_21:
  6922     0011  0022               	movlb	2	; select bank2
  6923     0012  160D               	bsf	13,4	;volatile
  6924     0013  2816               	goto	u148_24
  6925     0014                     u147_20:
  6926     0014  0022               	movlb	2	; select bank2
  6927     0015  120D               	bcf	13,4	;volatile
  6928     0016                     u148_24:
  6929     0016                     i1l2114:
  6930                           
  6931                           ;main.c: 36: 
  6932     0016  0020               	movlb	0	; select bank0
  6933     0017  0816               	movf	22,w	;volatile
  6934     0018  00E1               	movwf	_counter
  6935     0019  0817               	movf	23,w	;volatile
  6936     001A  00E2               	movwf	_counter+1
  6937     001B  01E3               	clrf	_counter+2
  6938     001C  01E4               	clrf	_counter+3
  6939     001D                     i1l2116:
  6940                           
  6941                           ;main.c: 37: 
  6942     001D  307D               	movlw	125
  6943     001E  0095               	movwf	21	;volatile
  6944     001F                     i1l2118:
  6945                           
  6946                           ;main.c: 38:     ANSELA = 0b00000000;
  6947     001F  0196               	clrf	22	;volatile
  6948     0020  0197               	clrf	23	;volatile
  6949     0021                     i1l2120:
  6950                           
  6951                           ;main.c: 39:     ANSELB = 0b00000000;
  6952     0021  110B               	bcf	11,2	;volatile
  6953     0022                     i1l113:
  6954     0022  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  6955     0023  0009               	retfie
  6956     0024                     __end_of_ISR_TIMER0:
  6957     007E                     btemp	set	126	;btemp
  6958     007E                     int$flags	set	126
  6959     007E                     wtemp0	set	126
  6960                           
  6961                           	psect	config
  6962                           
  6963                           ;Config register CONFIG1 @ 0x8007
  6964                           ;	Oscillator Selection Bits
  6965                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  6966                           ;	Power-up Timer Enable
  6967                           ;	PWRTE = ON, PWRT enabled
  6968                           ;	MCLR Pin Function Select
  6969                           ;	MCLRE = OFF, MCLR/VPP pin function is digital input
  6970                           ;	Flash Program Memory Code Protection
  6971                           ;	CP = OFF, Program memory code protection is disabled
  6972                           ;	Brown-out Reset Enable
  6973                           ;	BOREN = ON, Brown-out Reset enabled
  6974                           ;	Clock Out Enable
  6975                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  6976                           ;	Internal/External Switch Over
  6977                           ;	IESO = ON, Internal External Switch Over mode is enabled
  6978                           ;	Fail-Safe Clock Monitor Enable
  6979                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  6980     8007                     	org	32775
  6981     8007  3F9C               	dw	16284
  6982                           
  6983                           ;Config register CONFIG2 @ 0x8008
  6984                           ;	Flash Memory Self-Write Protection
  6985                           ;	WRT = OFF, Write protection off
  6986                           ;	Peripheral Pin Select one-way control
  6987                           ;	PPS1WAY = ON, The PPSLOCK bit cannot be cleared once it is set by software
  6988                           ;	Zero Cross Detect Disable Bit
  6989                           ;	ZCD = OFF, ZCD disable.  ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
  6990                           ;	PLL Enable Bit
  6991                           ;	PLLEN = OFF, 4x PLL is enabled when software sets the SPLLEN bit
  6992                           ;	Stack Overflow/Underflow Reset Enable
  6993                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  6994                           ;	Brown-out Reset Voltage Selection
  6995                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  6996                           ;	Low-Power Brown Out Reset
  6997                           ;	LPBOR = OFF, Low-Power BOR is disabled
  6998                           ;	Low-Voltage Programming Enable
  6999                           ;	LVP = ON, Low-voltage programming enabled
  7000     8008                     	org	32776
  7001     8008  3EFF               	dw	16127
  7002                           
  7003                           ;Config register CONFIG3 @ 0x8009
  7004                           ;	WDT Period Select
  7005                           ;	WDTCPS = WDTCPS1F, Software Control (WDTPS)
  7006                           ;	Watchdog Timer Enable
  7007                           ;	WDTE = OFF, WDT disabled
  7008                           ;	WDT Window Select
  7009                           ;	WDTCWS = WDTCWSSW, Software WDT window size control (WDTWS bits)
  7010                           ;	WDT Input Clock Selector
  7011                           ;	WDTCCS = SWC, Software control, controlled by WDTCS bits
  7012     8009                     	org	32777
  7013     8009  3F9F               	dw	16287

Data Sizes:
    Strings     47
    Constant    0
    Data        0
    BSS         83
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     65      76
    BANK1            80      0      72
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_3(CODE[12]), STR_2(CODE[10]), STR_1(CODE[12]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 12
		 -> STR_3(CODE[12]), STR_2(CODE[10]), STR_1(CODE[12]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 12
		 -> STR_3(CODE[12]), STR_2(CODE[10]), STR_1(CODE[12]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    S1016$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_3(CODE[12]), STR_2(CODE[10]), STR_1(CODE[12]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 20
		 -> buffer2(BANK1[20]), buffer1(BANK1[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S957$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S957$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    Lcd_Out2@buffer	PTR unsigned char  size(2) Largest target is 20
		 -> STR_4(CODE[12]), buffer2(BANK1[20]), buffer1(BANK1[20]), 

    Lcd_Out@buffer	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_6(CODE[6]), STR_5(CODE[7]), 


Critical Paths under _main in COMMON

    _read_prec_or_width->___wmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___awmod
    _Lcd_Out2->_Lcd_Chr_CP
    _Lcd_Out2->_Lcd_Cmd
    _Lcd_Out->_Lcd_Chr_CP
    _Lcd_Out->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd

Critical Paths under _ISR_TIMER0 in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs

Critical Paths under _ISR_TIMER0 in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR_TIMER0 in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_TIMER0 in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR_TIMER0 in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR_TIMER0 in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR_TIMER0 in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR_TIMER0 in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR_TIMER0 in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR_TIMER0 in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR_TIMER0 in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR_TIMER0 in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR_TIMER0 in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR_TIMER0 in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    8949
                                             61 BANK0      4     4      0
                            _Lcd_Cmd
                           _Lcd_Init
                            _Lcd_Out
                           _Lcd_Out2
                 _PWM3_LoadDutyValue
                  _SYSTEM_Initialize
                         _TMR0_Timer
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             18    16      2    6338
                                             45 BANK0     16    14      2
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             7     4      3    5810
                                             38 BANK0      7     4      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           18    16      2    5494
                                             23 BANK0     15    13      2
                               _dtoa
                              _fputc
                 _read_prec_or_width
 ---------------------------------------------------------------------------------
 (4) _read_prec_or_width                                   9     7      2     533
                                              6 COMMON     5     3      2
                                              0 BANK0      4     4      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     244
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                13    11      2    3672
                                             10 BANK0     13    11      2
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                  9     6      3    2066
                                             11 COMMON     3     0      3
                                              4 BANK0      6     6      0
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     6      1     997
                                              8 COMMON     3     2      1
                                              0 BANK0      4     4      0
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3     682
                                              0 COMMON     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                              7 COMMON     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              7     3      4     448
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              9     5      4     452
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _TMR0_Timer                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _PWM3_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM3_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM3_LoadDutyValue                                   4     2      2     120
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _Lcd_Out2                                             7     4      3    1141
                                              3 COMMON     7     4      3
                         _Lcd_Chr_CP
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Out                                              7     4      3     837
                                              3 COMMON     7     4      3
                         _Lcd_Chr_CP
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Chr_CP                                           3     3      0     176
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     314
                                              3 COMMON     2     2      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     176
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _ISR_TIMER0                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Cmd
   _Lcd_Init
     _Lcd_Cmd
   _Lcd_Out
     _Lcd_Chr_CP
     _Lcd_Cmd
   _Lcd_Out2
     _Lcd_Chr_CP
     _Lcd_Cmd
   _PWM3_LoadDutyValue
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM3_Initialize
     _TMR2_Initialize
   _TMR0_Timer
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___awdiv
           ___awmod
           _abs
             ___awmod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
         _fputc
         _read_prec_or_width
           ___wmul

 _ISR_TIMER0 (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     41      4C       5       95.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      48       7       90.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      A2      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      A2      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Wed May 31 18:03:50 2023

                             _i 0069                              l60 0355                              l61 0384  
                            l90 041A                              l74 06DA                              l59 032C  
                            l93 04AD                              l87 0697                    ___awdiv@sign 0076  
           ___wmul@multiplicand 0072                             l104 07E5                             l221 07C1  
                           l134 07FB                             l224 0FFF                             l137 07B4  
                           l164 07F0                             l510 05BF                             l344 0737  
                           l273 0708                             l346 074B                             l830 0629  
                           l807 0768                             l497 056C                             l905 060F  
                           l913 072C                             l833 0649                             l835 0654  
                           l843 0175                             l916 0003                             l844 0192  
                           l848 0190                             l880 02EB                             l872 024A  
                           l857 0220                             l865 050D                             l890 079E  
                           l893 079E                             l886 0784                             _PR2 001B  
                           u800 072C                             u801 072B                             u810 0733  
                           u811 0732                             u910 054E                             u911 054D  
                           u760 05C5                             u840 0747                             u905 0540  
                           u761 05C4                             u841 0746                             u825 0738  
                           u930 055E                             u850 0513                             u770 05CA  
                           u931 055D                             u915 054A                             u851 0512  
                           u771 05C9                             u835 073D                             u940 0563  
                           u860 051E                             u780 05D9                             u941 0562  
                           u925 0554                             u861 051D                             u781 05D8  
                           u870 052F                             u950 0572                             u790 05F7  
                           u871 052E                             u951 0571                             u791 05F6  
                           u960 057D                             u961 057C                             u890 053F  
                           u970 0588                             u891 053E                             u971 0587  
                           u795 05F3                             u885 0533                             u990 0598  
                           u991 0597                             u985 058C                             _abs 0785  
                           _pad 0610                    ___awmod@sign 0076                 _TMR2_Initialize 07E6  
                           wreg 0009                            l2000 076B                            l2010 02EC  
                          l2002 0770                            ?_abs 0077                            l2020 034B  
                          l2012 02FA                            l2004 0778                            l2100 0752  
                          l2030 037C                            l2022 034F                            l2014 032A  
                          l2006 0782                            l2102 0754                            l2032 0380  
                          l2024 036C                            l2040 069E                            l2104 0756  
                          l2200 00F6                            l2034 0380                            l2026 0374  
                          l2018 0343                            l2042 06A2                            l2050 06C0  
                          l2106 0760                            l2210 0125                            l2202 0103  
                          l2130 0045                            l2122 003A                            l2028 0378  
                          l2052 06C5                            l2044 06A6                            l2036 0699  
                          l2212 0129                            l2204 0107                            l2140 004D  
                          l2132 0047                            l2124 003D                            l2054 06CD  
                          l2038 069A                            l2070 0663                            l2062 0656  
                          l2214 0136                            l2206 0114                            l2150 0053  
                          l2142 004E                            l2134 0048                            l2126 0042  
                          l2056 06D1                            l2048 06AA                            l2080 068A  
                          l2064 0657                            l2216 0140                            l2208 0118  
                          l2160 005F                            l2152 0054                            l2144 0050  
                          l2136 0049                            l2128 0044                            l2082 068E  
                          l2066 065B                            l2074 0667                            l2090 07E3  
                          l2170 0082                            l2162 0063                            l2154 0055  
                          l2146 0051                            l2138 004C                            l2068 065F  
                          l2076 067D                            l2092 07E4                            l1700 056E  
                          l1620 05CA                            l2172 008B                            l2164 006C  
                          l2156 0058                            l2148 0052                            l2078 0682  
                          l2094 07B5                            l1710 0582                            l1702 0572  
                          l1622 05CF                            l2190 00C9                            l2174 0095  
                          l2166 0071                            l2158 005B                            l2280 066F  
                          l2096 079F                            l2088 07DA                            l1720 0598  
                          l1712 0588                            l1704 0577                            l1624 05D9  
                          l1616 05C0                            l1632 070B                            l1800 01E5  
                          l1640 072D                            l2192 00CE                            l2184 00AD  
                          l2176 009F                            l2168 0079                            l2282 06B2  
                          l1730 05B6                            l1722 05A2                            l1714 058B  
                          l1706 0579                            l1626 05F7                            l1618 05C5  
                          l1634 070E                            l1810 020F                            l1802 01F2  
                          l1650 0747                            l1642 072F                            l2098 074E  
                          l2194 00DB                            l2186 00B6                            l2178 00A8  
                          l1900 0466                            l1660 0518                            l1732 05BB  
                          l1724 05A6                            l1716 0590                            l1708 057D  
                          l1628 0606                            l1636 071A                            l1740 061C  
                          l1812 0215                            l1804 0200                            l1644 0733  
                          l1820 04C3                            l2196 00E5                            l2188 00C0  
                          l1910 049A                            l1902 0468                            l1670 0529  
                          l1662 051A                            l1654 050E                            l1726 05AB  
                          l1718 0594                            l1638 071F                            l1750 063B  
                          l1742 0620                            l1806 0205                            l1646 073C  
                          l1830 0509                            l1822 04CB                            l2278 026C  
                          l2198 00F2                            l1912 049E                            l1904 0476  
                          l1920 0386                            l1680 053F                            l1672 052F  
                          l1664 051E                            l1656 050F                            l1728 05B1  
                          l1752 064E                            l1744 0626                            l1736 0612  
                          l1808 020B                            l1760 0156                            l1648 0741  
                          l1824 04D8                            l1816 04B0                            l1840 0243  
                          l1914 04A0                            l1906 0485                            l1930 03D0  
                          l1922 0389                            l1682 054E                            l1674 0532  
                          l1690 055E                            l1666 0523                            l1658 0513  
                          l1754 0785                            l1746 062C                            l1738 0616  
                          l1770 016C                            l1762 015B                            l1826 04ED  
                          l1818 04B2                            l1850 0259                            l1842 0247  
                          l1834 0223                            l1916 04A3                            l1908 048F  
                          l1940 0404                            l1932 03D2                            l1924 03C7  
                          l1692 0563                            l1684 0552                            l1676 0537  
                          l1668 0527                            l1756 0792                            l1748 0636  
                          l1780 0187                            l1772 0171                            l1764 0160  
                          l1828 04F5                            l1860 0287                            l1844 024B  
                          l1852 0271                            l1836 0234                            l1918 04A5  
                          l1950 0412                            l1942 0408                            l1934 03E0  
                          l1926 03CB                            l1694 0568                            l1686 0553  
                          l1678 053B                            l1790 01B7                            l1782 018C  
                          l1774 0179                            l1766 0164                            l1758 014F  
                          l1870 02B3                            l1862 028C                            l1854 0277  
                          l1846 0254                            l1838 023C                            l1944 040A  
                          l1936 03EF                            l1928 03CD                            l1952 07F1  
                          l1960 07EC                            l1688 0558                            l1792 01BC  
                          l1784 0196                            l1776 017E                            l1768 0168  
                          l1872 02C0                            l1864 0293                            l1856 0282  
                          l1880 02D3                            l1890 041C                            l1946 040D  
                          l1938 03F9                            l1970 06E4                            l1954 07F8  
                          l1962 07ED                            l1698 056D                            l1794 01C0  
                          l1786 0199                            l1778 0182                            l1866 029D  
                          l1858 0286                            l1892 041F                            l1948 040F  
                          l1980 06F7                            l1972 06E6                            l1964 06DB  
                          l1956 07E6                            l1788 019E                            l1796 01D0  
                          l1876 02C9                            l1868 02A7                            l1894 045D  
                          l1990 0703                            l1982 06FA                            l1974 06E9  
                          l1966 06DF                            l1958 07EA                            l1798 01DE  
                          ?_pad 007B                            l1896 0461                            l1992 0705  
                          l1984 06FC                            l1976 06EB                            l1968 06E2  
                          l1898 0463                            l1994 0FF9                            l1986 06FE  
                          l1978 06F1                            l1996 0FFC                            l1988 0701  
                          l1998 0FFD                            STR_1 07CE                            STR_2 07FC  
                          STR_3 07CE                            STR_4 07C2                            STR_5 0806  
                          STR_6 1000                            u1000 05A2                            u1001 05A1  
                          u1020 05B1                            u1100 0155                            u1021 05B0  
                          u1005 059E                            u1030 05B6                            u1110 015B  
                          u1031 05B5                            u1015 05A7                            u1111 015A  
                          u1040 0616                            u1200 0205                            u1120 0164  
                          u1041 0615                            u1201 0204                            u1121 0163  
                          u1050 0620                            u1210 020B                            u1130 016C  
                          u1051 061F                            u1211 020A                            u1131 016B  
                          u1060 0649                            u1140 017E                            u1220 04C3  
                          u1061 0648                            u1141 017D                            u1221 04C2  
                          u1070 064E                            u1150 0187                            u1230 0509  
                          u1071 064D                            u1151 0186                            u1231 0508  
                          u1080 0792                            u1160 01DE                            u1240 0234  
                          u1305 0430                            u1081 0791                            u1065 0645  
                          u1161 01DD                            u1241 0233                            u1170 01E5  
                          u1090 0154                            u1250 0277                            u1410 0782  
                          u1315 043F                            u1171 01E4                            u1091 0152  
                          u1251 0276                            u1411 0781                            u1420 0355  
                          u1180 01F2                            u1260 0286                            u1325 044F  
                          u1421 0354                            u1405 03E3                            u1085 078E  
                          u1181 01F1                            u1165 01DA                            u1261 0285  
                          _LATA 010C                            u1430 06DA                            u1190 0200  
                          u1270 029D                            _LATB 010D                            u1335 046B  
                          u1431 06D9                            u1191 01FF                            u1271 029C  
                          _LATC 010E                            u1440 0697                            u1280 02A7  
                          u1345 0479                            u1441 0696                            u1185 01EE  
                          u1281 02A6                            u1355 038C                            u1195 01FC  
                          u1507 0067                            u1365 039A                            u1517 00A3  
                          u1295 0422                            u1607 0415                            u1375 03A9  
                          u1455 07AE                            u1527 00C4                            u1617 02FD  
                          u1385 03B9                            u1537 00EB                            u1490 00DB  
                          _T2PR 001B                            u1707 049B                            u1627 0305  
                          u1395 03D5                            u1547 00FC                            u1491 00DA  
                          u1717 04A8                            u1637 030D                            u1557 010D  
                          u1647 0315                            u1567 011E                            u1495 00D7  
                          u1657 031D                            u1577 012F                            u1667 0325  
                          u1587 03C8                            u1677 0346                            u1597 0405  
                          u1687 036F                            u1697 045E                            _TMR0 0015  
                          _TMR1 0016                            _TMR2 001A                            _WPUA 020C  
                          _WPUB 020D                            _WPUC 020E                            abs@a 0077  
                          _dbuf 00A0                            _main 003A                            _dtoa 014D  
                          _prec 0067                            pad@i 0025                            pad@p 007C  
                          fsr0h 0005                            fsr1h 0007                            indf0 0000  
                          fsr0l 0004                            indf1 0001                            fsr1l 0006  
                          pad@w 0027                            btemp 007E                            start 0024  
               __end_of_Lcd_Cmd 04AE                 __end_of_Lcd_Out 06DB                     ?_ISR_TIMER0 0070  
                    _Lcd_Chr_CP 0385                           ??_abs 0079                           ??_pad 0024  
                Lcd_Out2@buffer 0074   __end_of_OSCILLATOR_Initialize 1000                           ?_main 0070  
                         ?_dtoa 002A                 __end_of___awdiv 056D                 __end_of___awmod 05C0  
               ___awdiv@divisor 0070                           _T1CON 0018                           _T2CON 001C  
                         _T2HLT 001D                           i1l113 0022                           _T2TMR 001A  
                         _T2RST 001F                 ___awdiv@counter 0075                    vfpfcnvrt@fmt 0037  
                         _PORTA 000C                           _PORTB 000D                           _PORTC 000E  
                         _TRISA 008C                           _TRISB 008D                           _TRISC 008E  
                   ?_TMR0_Timer 0070                           _flags 006B             read_prec_or_width@c 0020  
           read_prec_or_width@n 0021                           _fputc 05C0                           _fputs 0709  
                         pad@fp 0029                           _width 0065                           _putch 0003  
                         dtoa@d 002A                           dtoa@i 0034                           dtoa@p 0030  
                         dtoa@s 0036                           dtoa@w 0032         __end_of_PWM3_Initialize 07FC  
                         status 0003                           wtemp0 007E                 __end_of_sprintf 0769  
              __end_of_Lcd_Init 0385                __end_of_Lcd_Out2 0698                 __initialization 0026  
                  __end_of_main 014D                    __end_of_dtoa 0221         __end_of_TMR2_Initialize 07F1  
                        ??_main 005D                          ??_dtoa 002C      __end_of_read_prec_or_width 050E  
                        ?_fputc 0070                          ?_fputs 0078                ___awdiv@dividend 0072  
                        _ANSELA 018C                          ?_putch 0070                          _ANSELB 018D  
                        _ANSELC 018E                          _BORCON 0116                          _T1GCON 0019  
                        _T1GPPS 0E13                          i1l2110 0006                          i1l2120 0021  
                        i1l2112 000A                          i1l2114 0016                          i1l2116 001D  
                        i1l2118 001F                          _ODCONA 028C                          _ODCONB 028D  
                        _RC6PPS 0EA6                          _ODCONC 028E                          _INLVLA 038C  
                        _INLVLB 038D                          _INLVLC 038E                          u146_20 000A  
                        u146_21 0009                          u147_20 0014                          u147_21 0011  
                        u148_24 0016                          _OSCCON 0099                       ??_Lcd_Cmd 0070  
                 vfpfcnvrt@done 0041                       ??_Lcd_Out 0076                    vfprintf@cfmt 004B  
                   ?_Lcd_Chr_CP 0070                          ___wmul 072D                       ??___awdiv 0074  
                     ??___awmod 0074            read_prec_or_width@ap 0076                ___awdiv@quotient 0077  
               ___awmod@divisor 0070                 ___awmod@counter 0075                          main@DC 005F  
                        pad@buf 007B                          dtoa@fp 002F                          fputc@c 0070  
                        fputs@c 0020                          fputs@i 0021                          fputs@s 0023  
                        putch@c 0070                __end_of_vfprintf 0785                       ??_sprintf 004F  
              ?_PWM3_Initialize 0070               _SYSTEM_Initialize 07B5         __end_of__initialization 0036  
            ?_SYSTEM_Initialize 0070                  __pcstackCOMMON 0070             ??_SYSTEM_Initialize 0070  
                 __end_of_fputc 0610                   __end_of_fputs 072D                   __end_of_putch 0004  
              ?_TMR2_Initialize 0070                  _OPTION_REGbits 0095                       ?_Lcd_Init 0070  
                     ?_Lcd_Out2 0073                         ??_fputc 0073       __end_of_SYSTEM_Initialize 07C2  
                       ??_fputs 0079                         ??_putch 0070                      __pbssBANK0 0061  
                    __pbssBANK1 00A0                    ??_ISR_TIMER0 0070                      __pmaintext 003A  
                       ?___wmul 0070                      __pintentry 0004                    ??_TMR0_Timer 0070  
                       _OSCTUNE 0098                         _PWM3DCH 0618                         _PWM3DCL 0617  
                       _PWM3CON 0619                      ??_Lcd_Init 0073                      ??_Lcd_Out2 0076  
                       _SLRCONA 030C                         _SLRCONB 030D                         _SLRCONC 030E  
            __end_of_ISR_TIMER0 0024                         _Lcd_Cmd 041B                         _Lcd_Out 0698  
                       ___awdiv 050E                         ___awmod 056D                       ?_vfprintf 0046  
            __end_of_TMR0_Timer 07E6                         __ptext1 074C                         __ptext2 0769  
                       __ptext3 0221                         __ptext4 04AE                         __ptext5 072D  
                       __ptext6 014D                         __ptext7 0610                         __ptext8 0709  
                       __ptext9 05C0                         _buffer1 00D4                         _buffer2 00C0  
                       _counter 0061           _OSCILLATOR_Initialize 0FF9                       _T2CONbits 001C  
         read_prec_or_width@fmt 0023                ___awmod@dividend 0072        ??_PIN_MANAGER_Initialize 0070  
                     _T2HLTbits 001D                         _sprintf 074C                         clrloop0 0FF4  
          end_of_initialization 0036                       _T2RSTbits 001F                         fputc@fp 0072  
                       fputs@fp 0078              _read_prec_or_width 04AE               __end_of_vfpfcnvrt 02EC  
                  ??_Lcd_Chr_CP 0070                       Lcd_Out2@x 0073                       Lcd_Out2@y 0078  
           ?_read_prec_or_width 0076                vfpfcnvrt@convarg 003D                      ??_vfprintf 0049  
                     _PORTCbits 000E                       _TRISCbits 008E            ??_read_prec_or_width 0078  
            __end_of_Lcd_Chr_CP 041B      __end_of_PWM3_LoadDutyValue 07B5                     vfpfcnvrt@ap 0038  
                   vfpfcnvrt@cp 0044                     vfpfcnvrt@fp 0043                  __end_of___wmul 074C  
        ?_OSCILLATOR_Initialize 0070             start_initialization 0026                     __end_of_abs 079F  
                   __end_of_pad 0655                   Lcd_Out@buffer 0074                     vfprintf@fmt 0046  
                      ??___wmul 0074                     _CCPTMRSbits 029E                       ___latbits 0002  
                 __pcstackBANK0 0020                        ?_Lcd_Cmd 0070                        ?_Lcd_Out 0073  
        _PIN_MANAGER_Initialize 06DB                       _dtoa$1038 002D                        ?___awdiv 0070  
                      ?___awmod 0070                        _T0CKIPPS 0E11                        ?_sprintf 004D  
                      _T2CLKCON 001E                  ___wmul@product 0074                        _LATBbits 010D  
                     clear_ram0 0FF3                        _PIR1bits 0010                        Lcd_Out@x 0073  
                      Lcd_Out@y 0078                       _vfpfcnvrt 0221               ??_PWM3_Initialize 0070  
                  Lcd_Init@data 0074               ___wmul@multiplier 0070                    Lcd_Out2@data 0079  
                      _Lcd_Init 02EC                        _Lcd_Out2 0655               ??_TMR2_Initialize 0070  
                    vfprintf@ap 0048                      vfprintf@fp 004A         ??_OSCILLATOR_Initialize 0070  
                    ?_vfpfcnvrt 0037              _PWM3_LoadDutyValue 079F                      sprintf@fmt 004D  
                Lcd_Chr_CP@data 0072                        __ptext10 0003                        __ptext11 0785  
                      __ptext20 079F                        __ptext12 056D                        __ptext21 0655  
                      __ptext13 050E                        __ptext22 0698                        __ptext14 07DA  
                      __ptext23 0385                        __ptext15 07B5                        __ptext24 02EC  
                      __ptext16 07E6                        __ptext25 041B                        __ptext17 07F1  
                      __ptext18 06DB                        __ptext19 0FF9             ?_PWM3_LoadDutyValue 0070  
                   Lcd_Cmd@data 0072            ??_PWM3_LoadDutyValue 0072                        int$flags 007E  
                      _vfprintf 0769                     Lcd_Out@data 0079                      _INTCONbits 000B  
                      intlevel1 0000                       sprintf@ap 0050         ?_PIN_MANAGER_Initialize 0070  
                    _OSCCONbits 0099                      _ISR_TIMER0 0004     PWM3_LoadDutyValue@dutyValue 0070  
                   ??_vfpfcnvrt 0039                   __pstringtext1 07C2                   __pstringtext2 07CE  
                 __pstringtext3 07FC                   __pstringtext4 0806                   __pstringtext5 1000  
                 __pstringtext6 0000                      _OPTION_REG 0095                        sprintf@f 0052  
                      sprintf@s 0051                      _TMR0_Timer 07DA  __end_of_PIN_MANAGER_Initialize 0709  
               _PWM3_Initialize 07F1  
